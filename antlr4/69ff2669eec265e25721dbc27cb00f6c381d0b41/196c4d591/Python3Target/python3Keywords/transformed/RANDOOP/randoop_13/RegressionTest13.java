import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest13 {

    public static boolean debug = false;

    @Test
    public void test06501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06501");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!", "" };
        python3Target0.targetCharValueEscape = strArray4;
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        java.lang.String str9 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator6, "\"\"", false);
        int int10 = python3Target0.getSerializedATNSegmentLimit();
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = python3Target0.getCodeGenerator();
        java.lang.String[] strArray12 = python3Target0.targetCharValueEscape;
        java.lang.String[] strArray13 = org.antlr.v4.codegen.target.Python3Target.python3Keywords;
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray13;
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray13;
        python3Target0.targetCharValueEscape = strArray13;
        java.lang.String str17 = python3Target0.language;
        org.antlr.v4.tool.Grammar grammar18 = null;
        org.stringtemplate.v4.ST sT19 = null;
        python3Target0.genRecognizerHeaderFile(grammar18, sT19, "\\\"\\\"\\\"\\\"\\\"\\\"4.5.2.1\\\"\\\"\\\"\\\"\\\"\\\"");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 29 + "'", int10 == 29);
        org.junit.Assert.assertNull(codeGenerator11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNull(str17);
    }

    @Test
    public void test06502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06502");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "", true);
        org.antlr.v4.tool.Grammar grammar7 = null;
        org.stringtemplate.v4.ST sT8 = null;
        python3Target0.genRecognizerHeaderFile(grammar7, sT8, "\"\"\"\"");
        python3Target0.language = "\"\"\"4.5.2.1\"\"\"";
        java.lang.String str13 = python3Target0.getVersion();
        org.antlr.v4.tool.Grammar grammar14 = null;
        org.stringtemplate.v4.ST sT15 = null;
        python3Target0.genRecognizerHeaderFile(grammar14, sT15, "\"\"\\\"\\\"0\\\"\\\"\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator18 = null;
        python3Target0.gen = codeGenerator18;
        boolean boolean20 = python3Target0.templatesExist();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"" + "'", str6, "\"\"");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "4.5.2.1" + "'", str13, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test06503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06503");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        boolean boolean2 = python3Target0.wantsBaseVisitor();
        java.lang.String str3 = python3Target0.getLanguage();
        int int4 = python3Target0.getInlineTestSetWordSize();
        java.lang.String[] strArray5 = python3Target0.targetCharValueEscape;
        int int6 = python3Target0.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup7 = python3Target0.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target0.getCodeGenerator();
        boolean boolean9 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.tool.Grammar grammar10 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str12 = python3Target0.getTokenTypeAsTargetLabel(grammar10, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 64 + "'", int6 == 64);
        org.junit.Assert.assertNull(sTGroup7);
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test06504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06504");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        java.lang.String str3 = python3Target0.getLanguage();
        java.lang.String str5 = python3Target0.getTargetStringLiteralFromString("");
        java.lang.String str6 = python3Target0.getVersion();
        org.stringtemplate.v4.STGroup sTGroup7 = null;
        python3Target0.templates = sTGroup7;
        java.util.Set<java.lang.String> strSet9 = python3Target0.getBadWords();
        java.lang.String str12 = python3Target0.getTargetStringLiteralFromString("", true);
        python3Target0.addBadWords();
        org.antlr.v4.codegen.target.Python3Target python3Target14 = new org.antlr.v4.codegen.target.Python3Target();
        int int15 = python3Target14.getInlineTestSetWordSize();
        java.lang.String str16 = python3Target14.language;
        java.lang.String str17 = python3Target14.getLanguage();
        java.lang.String str19 = python3Target14.getTargetStringLiteralFromString("");
        java.lang.String str20 = python3Target14.getVersion();
        org.antlr.v4.codegen.target.Python3Target python3Target21 = new org.antlr.v4.codegen.target.Python3Target();
        int int22 = python3Target21.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup23 = python3Target21.templates;
        org.antlr.v4.tool.Grammar grammar24 = null;
        int[] intArray25 = new int[] {};
        java.lang.String[] strArray26 = python3Target21.getTokenTypesAsTargetLabels(grammar24, intArray25);
        python3Target14.targetCharValueEscape = strArray26;
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray26;
        python3Target0.targetCharValueEscape = strArray26;
        java.lang.String str32 = python3Target0.getTargetStringLiteralFromString("\\\"#\\\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator33 = null;
        java.lang.String str36 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator33, "0", false);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\"\"" + "'", str5, "\"\"");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "4.5.2.1" + "'", str6, "4.5.2.1");
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"\"" + "'", str12, "\"\"");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 64 + "'", int15 == 64);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "\"\"" + "'", str19, "\"\"");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "4.5.2.1" + "'", str20, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 64 + "'", int22 == 64);
        org.junit.Assert.assertNull(sTGroup23);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]");
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "\\\"#\\\"" + "'", str32, "\\\"#\\\"");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
    }

    @Test
    public void test06505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06505");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        boolean boolean2 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.gen;
        java.lang.String str4 = python3Target0.getVersion();
        java.lang.String[] strArray5 = python3Target0.targetCharValueEscape;
        org.antlr.v4.tool.Grammar grammar6 = null;
        org.stringtemplate.v4.ST sT7 = null;
        python3Target0.genRecognizerHeaderFile(grammar6, sT7, "");
        python3Target0.addBadWords();
        boolean boolean11 = python3Target0.templatesExist();
        java.lang.String str13 = python3Target0.getTargetStringLiteralFromString("");
        java.lang.String str14 = python3Target0.getLanguage();
        org.antlr.v4.tool.Grammar grammar15 = null;
        org.stringtemplate.v4.ST sT16 = null;
        // The following exception was thrown during execution in test generation
        try {
            python3Target0.genListenerFile(grammar15, sT16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "4.5.2.1" + "'", str4, "4.5.2.1");
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"\"" + "'", str13, "\"\"");
        org.junit.Assert.assertNull(str14);
    }

    @Test
    public void test06506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06506");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        org.stringtemplate.v4.STGroup sTGroup3 = python3Target0.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = python3Target0.gen;
        java.util.Set<java.lang.String> strSet5 = python3Target0.badWords;
        org.stringtemplate.v4.STGroup sTGroup6 = null;
        python3Target0.templates = sTGroup6;
        java.util.Set<java.lang.String> strSet8 = python3Target0.badWords;
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = python3Target0.gen;
        boolean boolean10 = python3Target0.supportsOverloadedMethods();
        java.lang.String[] strArray11 = python3Target0.targetCharValueEscape;
        java.lang.String[] strArray12 = python3Target0.targetCharValueEscape;
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray12;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(sTGroup3);
        org.junit.Assert.assertNull(codeGenerator4);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNull(codeGenerator9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(strArray12);
    }

    @Test
    public void test06507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06507");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = python3Target0.gen;
        java.lang.String str8 = python3Target0.language;
        boolean boolean9 = python3Target0.wantsBaseListener();
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        python3Target0.gen = codeGenerator10;
        python3Target0.language = "_";
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"" + "'", str6, "\"\"");
        org.junit.Assert.assertNull(codeGenerator7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test06508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06508");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str2 = python3Target0.getTargetStringLiteralFromString("\"\"");
        int int3 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str5 = python3Target0.encodeIntAsCharEscape(0);
        java.lang.String str7 = python3Target0.getTargetStringLiteralFromString("");
        java.util.Set<java.lang.String> strSet8 = python3Target0.getBadWords();
        java.lang.String str9 = python3Target0.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        java.lang.String str13 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator10, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = python3Target0.gen;
        boolean boolean15 = python3Target0.supportsOverloadedMethods();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "\"\"\"\"" + "'", str2, "\"\"\"\"");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 64 + "'", int3 == 64);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\\0" + "'", str5, "\\0");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"\"" + "'", str7, "\"\"");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"\"" + "'", str13, "\"\"");
        org.junit.Assert.assertNull(codeGenerator14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test06509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06509");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        java.lang.String str3 = python3Target0.getVersion();
        int int4 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromString("@");
        org.antlr.v4.codegen.target.Python3Target python3Target7 = new org.antlr.v4.codegen.target.Python3Target();
        int int8 = python3Target7.getInlineTestSetWordSize();
        java.lang.String str9 = python3Target7.language;
        java.lang.String str10 = python3Target7.getVersion();
        int int11 = python3Target7.getInlineTestSetWordSize();
        java.lang.String str12 = python3Target7.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = python3Target7.gen;
        python3Target7.addBadWords();
        python3Target7.language = "\\0";
        java.lang.String[] strArray17 = python3Target7.targetCharValueEscape;
        python3Target0.targetCharValueEscape = strArray17;
        org.antlr.v4.tool.Grammar grammar19 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target20 = new org.antlr.v4.codegen.target.Python3Target();
        int int21 = python3Target20.getInlineTestSetWordSize();
        java.lang.String str22 = python3Target20.language;
        org.antlr.v4.codegen.CodeGenerator codeGenerator23 = null;
        java.lang.String str26 = python3Target20.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator23, "", true);
        org.antlr.v4.tool.Grammar grammar27 = null;
        org.stringtemplate.v4.ST sT28 = null;
        python3Target20.genRecognizerHeaderFile(grammar27, sT28, "\"\"\"\"");
        org.stringtemplate.v4.STGroup sTGroup31 = null;
        python3Target20.templates = sTGroup31;
        org.stringtemplate.v4.STGroup sTGroup33 = null;
        python3Target20.templates = sTGroup33;
        org.antlr.v4.tool.Grammar grammar35 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target36 = new org.antlr.v4.codegen.target.Python3Target();
        int int37 = python3Target36.getInlineTestSetWordSize();
        java.lang.String str38 = python3Target36.language;
        java.lang.String str39 = python3Target36.getVersion();
        int int40 = python3Target36.getInlineTestSetWordSize();
        java.lang.String str41 = python3Target36.getLanguage();
        java.lang.String str44 = python3Target36.getTargetStringLiteralFromString("4.5.2.1", true);
        java.util.Set<java.lang.String> strSet45 = python3Target36.badWords;
        int int46 = python3Target36.getSerializedATNSegmentLimit();
        java.lang.String str47 = python3Target36.getVersion();
        org.antlr.v4.tool.Grammar grammar48 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target49 = new org.antlr.v4.codegen.target.Python3Target();
        int int50 = python3Target49.getInlineTestSetWordSize();
        java.lang.String str51 = python3Target49.language;
        java.lang.String str52 = python3Target49.getVersion();
        int int53 = python3Target49.getInlineTestSetWordSize();
        java.lang.String str54 = python3Target49.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator55 = python3Target49.gen;
        org.antlr.v4.tool.Grammar grammar56 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target57 = new org.antlr.v4.codegen.target.Python3Target();
        int int58 = python3Target57.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup59 = python3Target57.templates;
        org.antlr.v4.tool.Grammar grammar60 = null;
        int[] intArray61 = new int[] {};
        java.lang.String[] strArray62 = python3Target57.getTokenTypesAsTargetLabels(grammar60, intArray61);
        java.lang.String[] strArray63 = python3Target49.getTokenTypesAsTargetLabels(grammar56, intArray61);
        java.lang.String[] strArray64 = python3Target36.getTokenTypesAsTargetLabels(grammar48, intArray61);
        java.lang.String[] strArray65 = python3Target20.getTokenTypesAsTargetLabels(grammar35, intArray61);
        java.lang.String[] strArray66 = python3Target0.getTokenTypesAsTargetLabels(grammar19, intArray61);
        java.lang.String[] strArray67 = python3Target0.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup68 = python3Target0.templates;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str70 = python3Target0.getElementName("\"\\\"12\\\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "4.5.2.1" + "'", str3, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"@\"" + "'", str6, "\"@\"");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 64 + "'", int8 == 64);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "4.5.2.1" + "'", str10, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 64 + "'", int11 == 64);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(codeGenerator13);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 64 + "'", int21 == 64);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\"\"" + "'", str26, "\"\"");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 64 + "'", int37 == 64);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "4.5.2.1" + "'", str39, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 64 + "'", int40 == 64);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "\"4.5.2.1\"" + "'", str44, "\"4.5.2.1\"");
        org.junit.Assert.assertNotNull(strSet45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 29 + "'", int46 == 29);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "4.5.2.1" + "'", str47, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 64 + "'", int50 == 64);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "4.5.2.1" + "'", str52, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 64 + "'", int53 == 64);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNull(codeGenerator55);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 64 + "'", int58 == 64);
        org.junit.Assert.assertNull(sTGroup59);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[]");
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertNull(sTGroup68);
    }

    @Test
    public void test06510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06510");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        java.lang.String str3 = python3Target0.getLanguage();
        java.lang.String str5 = python3Target0.getTargetStringLiteralFromString("");
        java.lang.String str6 = python3Target0.getVersion();
        org.stringtemplate.v4.STGroup sTGroup7 = null;
        python3Target0.templates = sTGroup7;
        python3Target0.language = "\"\"\"i\"\"\"";
        java.lang.String str11 = python3Target0.language;
        python3Target0.language = "\"\"\"\"\"\"\"4.5.2.1\"\"\"\"\"\"\"";
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\"\"" + "'", str5, "\"\"");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "4.5.2.1" + "'", str6, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"\"\"i\"\"\"" + "'", str11, "\"\"\"i\"\"\"");
    }

    @Test
    public void test06511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06511");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = python3Target0.gen;
        java.lang.String str8 = python3Target0.language;
        java.lang.String str9 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = python3Target0.getCodeGenerator();
        java.util.Set<java.lang.String> strSet11 = python3Target0.badWords;
        org.antlr.v4.tool.Grammar grammar12 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target13 = new org.antlr.v4.codegen.target.Python3Target();
        int int14 = python3Target13.getInlineTestSetWordSize();
        boolean boolean15 = python3Target13.wantsBaseVisitor();
        java.lang.String str16 = python3Target13.getLanguage();
        int int17 = python3Target13.getInlineTestSetWordSize();
        python3Target13.addBadWords();
        org.antlr.v4.tool.Grammar grammar19 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target20 = new org.antlr.v4.codegen.target.Python3Target();
        int int21 = python3Target20.getInlineTestSetWordSize();
        java.lang.String str22 = python3Target20.language;
        java.lang.String str23 = python3Target20.getLanguage();
        java.lang.String str25 = python3Target20.getTargetStringLiteralFromString("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator26 = null;
        java.lang.String str29 = python3Target20.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator26, "hi!", true);
        int int30 = python3Target20.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar31 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target32 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str33 = python3Target32.language;
        org.antlr.v4.codegen.target.Python3Target python3Target34 = new org.antlr.v4.codegen.target.Python3Target();
        org.stringtemplate.v4.STGroup sTGroup35 = null;
        python3Target34.templates = sTGroup35;
        java.lang.String[] strArray40 = new java.lang.String[] { "", "\\0", "" };
        java.util.LinkedHashSet<java.lang.String> strSet41 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet41, strArray40);
        python3Target34.badWords = strSet41;
        python3Target32.badWords = strSet41;
        org.antlr.v4.tool.Grammar grammar45 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target46 = new org.antlr.v4.codegen.target.Python3Target();
        int int47 = python3Target46.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup48 = python3Target46.templates;
        org.antlr.v4.tool.Grammar grammar49 = null;
        int[] intArray50 = new int[] {};
        java.lang.String[] strArray51 = python3Target46.getTokenTypesAsTargetLabels(grammar49, intArray50);
        java.lang.String[] strArray52 = python3Target32.getTokenTypesAsTargetLabels(grammar45, intArray50);
        java.lang.String[] strArray53 = python3Target20.getTokenTypesAsTargetLabels(grammar31, intArray50);
        java.lang.String[] strArray54 = python3Target13.getTokenTypesAsTargetLabels(grammar19, intArray50);
        java.lang.String[] strArray55 = python3Target0.getTokenTypesAsTargetLabels(grammar12, intArray50);
        boolean boolean56 = python3Target0.wantsBaseListener();
        java.lang.String str58 = python3Target0.getTargetStringLiteralFromString("\"\"\"\"\"\"4.5.2.1\"\"\"\"\"\"");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str60 = python3Target0.getElementListName("\"\"\"\\\"\\\"\\\"4.5.2.1\\\"\\\"\\\"\"\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"" + "'", str6, "\"\"");
        org.junit.Assert.assertNull(codeGenerator7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "4.5.2.1" + "'", str9, "4.5.2.1");
        org.junit.Assert.assertNull(codeGenerator10);
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 64 + "'", int14 == 64);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 64 + "'", int17 == 64);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 64 + "'", int21 == 64);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "\"\"" + "'", str25, "\"\"");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "\"i\"" + "'", str29, "\"i\"");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 29 + "'", int30 == 29);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 64 + "'", int47 == 64);
        org.junit.Assert.assertNull(sTGroup48);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[]");
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "\"\"\"\"\"\"\"4.5.2.1\"\"\"\"\"\"\"" + "'", str58, "\"\"\"\"\"\"\"4.5.2.1\"\"\"\"\"\"\"");
    }

    @Test
    public void test06512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06512");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        boolean boolean2 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.gen;
        boolean boolean4 = python3Target0.wantsBaseVisitor();
        boolean boolean5 = python3Target0.supportsOverloadedMethods();
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromString("\\0", false);
        boolean boolean9 = python3Target0.templatesExist();
        python3Target0.addBadWords();
        org.antlr.v4.tool.Grammar grammar11 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target12 = new org.antlr.v4.codegen.target.Python3Target();
        int int13 = python3Target12.getInlineTestSetWordSize();
        java.lang.String str14 = python3Target12.language;
        java.lang.String str15 = python3Target12.getVersion();
        int int16 = python3Target12.getInlineTestSetWordSize();
        java.lang.String str17 = python3Target12.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator18 = python3Target12.gen;
        org.antlr.v4.tool.Grammar grammar19 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target20 = new org.antlr.v4.codegen.target.Python3Target();
        int int21 = python3Target20.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup22 = python3Target20.templates;
        org.antlr.v4.tool.Grammar grammar23 = null;
        int[] intArray24 = new int[] {};
        java.lang.String[] strArray25 = python3Target20.getTokenTypesAsTargetLabels(grammar23, intArray24);
        java.lang.String[] strArray26 = python3Target12.getTokenTypesAsTargetLabels(grammar19, intArray24);
        java.lang.String[] strArray27 = python3Target0.getTokenTypesAsTargetLabels(grammar11, intArray24);
        java.util.Set<java.lang.String> strSet28 = python3Target0.getBadWords();
        org.stringtemplate.v4.STGroup sTGroup29 = python3Target0.templates;
        java.lang.String str30 = python3Target0.language;
        org.antlr.v4.codegen.CodeGenerator codeGenerator31 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target32 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator31);
        org.antlr.v4.codegen.target.Python3Target python3Target33 = new org.antlr.v4.codegen.target.Python3Target();
        int int34 = python3Target33.getInlineTestSetWordSize();
        java.lang.String str35 = python3Target33.language;
        org.stringtemplate.v4.STGroup sTGroup36 = python3Target33.templates;
        java.lang.String str38 = python3Target33.getTargetStringLiteralFromString("\"hi!\"");
        java.lang.String str40 = python3Target33.getTargetStringLiteralFromString("");
        org.antlr.v4.codegen.target.Python3Target python3Target41 = new org.antlr.v4.codegen.target.Python3Target();
        int int42 = python3Target41.getInlineTestSetWordSize();
        java.lang.String str43 = python3Target41.language;
        java.lang.String str44 = python3Target41.getLanguage();
        java.lang.String str46 = python3Target41.getTargetStringLiteralFromString("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator47 = null;
        java.lang.String str50 = python3Target41.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator47, "hi!", true);
        int int51 = python3Target41.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar52 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target53 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str54 = python3Target53.language;
        org.antlr.v4.codegen.target.Python3Target python3Target55 = new org.antlr.v4.codegen.target.Python3Target();
        org.stringtemplate.v4.STGroup sTGroup56 = null;
        python3Target55.templates = sTGroup56;
        java.lang.String[] strArray61 = new java.lang.String[] { "", "\\0", "" };
        java.util.LinkedHashSet<java.lang.String> strSet62 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet62, strArray61);
        python3Target55.badWords = strSet62;
        python3Target53.badWords = strSet62;
        org.antlr.v4.tool.Grammar grammar66 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target67 = new org.antlr.v4.codegen.target.Python3Target();
        int int68 = python3Target67.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup69 = python3Target67.templates;
        org.antlr.v4.tool.Grammar grammar70 = null;
        int[] intArray71 = new int[] {};
        java.lang.String[] strArray72 = python3Target67.getTokenTypesAsTargetLabels(grammar70, intArray71);
        java.lang.String[] strArray73 = python3Target53.getTokenTypesAsTargetLabels(grammar66, intArray71);
        java.lang.String[] strArray74 = python3Target41.getTokenTypesAsTargetLabels(grammar52, intArray71);
        java.util.Set<java.lang.String> strSet75 = python3Target41.badWords;
        python3Target33.badWords = strSet75;
        python3Target32.badWords = strSet75;
        java.lang.String str79 = python3Target32.getListLabel("\"\"\"\"\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator80 = python3Target32.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator81 = null;
        python3Target32.gen = codeGenerator81;
        org.stringtemplate.v4.STGroup sTGroup83 = python3Target32.getTemplates();
        python3Target0.templates = sTGroup83;
        boolean boolean85 = python3Target0.wantsBaseListener();
        org.antlr.v4.tool.Grammar grammar86 = null;
        org.stringtemplate.v4.ST sT87 = null;
        // The following exception was thrown during execution in test generation
        try {
            python3Target0.genListenerFile(grammar86, sT87);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\\0" + "'", str8, "\\0");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 64 + "'", int13 == 64);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "4.5.2.1" + "'", str15, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 64 + "'", int16 == 64);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(codeGenerator18);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 64 + "'", int21 == 64);
        org.junit.Assert.assertNull(sTGroup22);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[]");
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertNull(sTGroup29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 64 + "'", int34 == 64);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(sTGroup36);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "\"\"hi!\"\"" + "'", str38, "\"\"hi!\"\"");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "\"\"" + "'", str40, "\"\"");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 64 + "'", int42 == 64);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "\"\"" + "'", str46, "\"\"");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "\"i\"" + "'", str50, "\"i\"");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 29 + "'", int51 == 29);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 64 + "'", int68 == 64);
        org.junit.Assert.assertNull(sTGroup69);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[]");
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertNotNull(strSet75);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "\"\"\"\"\"\"" + "'", str79, "\"\"\"\"\"\"");
        org.junit.Assert.assertNull(codeGenerator80);
        org.junit.Assert.assertNotNull(sTGroup83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
    }

    @Test
    public void test06513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06513");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        boolean boolean2 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.gen;
        int int4 = python3Target0.getInlineTestSetWordSize();
        org.antlr.v4.tool.Grammar grammar5 = null;
        org.stringtemplate.v4.ST sT6 = null;
        python3Target0.genRecognizerHeaderFile(grammar5, sT6, "\\35");
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = python3Target0.gen;
        java.lang.String str10 = python3Target0.getLanguage();
        int int11 = python3Target0.getSerializedATNSegmentLimit();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str13 = python3Target0.getListLabel("\"\"\\0\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertNull(codeGenerator9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 29 + "'", int11 == 29);
    }

    @Test
    public void test06514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06514");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "", true);
        org.antlr.v4.tool.Grammar grammar7 = null;
        org.stringtemplate.v4.ST sT8 = null;
        python3Target0.genRecognizerHeaderFile(grammar7, sT8, "");
        org.antlr.v4.tool.Grammar grammar11 = null;
        org.stringtemplate.v4.ST sT12 = null;
        python3Target0.genRecognizerHeaderFile(grammar11, sT12, "\"i\"");
        int int15 = python3Target0.getSerializedATNSegmentLimit();
        python3Target0.language = "";
        java.lang.String[] strArray18 = python3Target0.targetCharValueEscape;
        boolean boolean19 = python3Target0.wantsBaseVisitor();
        org.antlr.v4.codegen.CodeGenerator codeGenerator20 = python3Target0.getCodeGenerator();
        java.lang.String str23 = python3Target0.getTargetStringLiteralFromString("\\\".5.2.\\\"", false);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"" + "'", str6, "\"\"");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 29 + "'", int15 == 29);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(codeGenerator20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "\\\".5.2.\\\"" + "'", str23, "\\\".5.2.\\\"");
    }

    @Test
    public void test06515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06515");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        java.lang.String str3 = python3Target0.getVersion();
        python3Target0.language = "@";
        org.antlr.v4.tool.Grammar grammar6 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target7 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str9 = python3Target7.encodeIntAsCharEscape(100);
        org.antlr.v4.tool.Grammar grammar10 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target11 = new org.antlr.v4.codegen.target.Python3Target();
        int int12 = python3Target11.getInlineTestSetWordSize();
        java.lang.String str13 = python3Target11.language;
        java.lang.String str14 = python3Target11.getVersion();
        int int15 = python3Target11.getInlineTestSetWordSize();
        java.lang.String str16 = python3Target11.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = python3Target11.gen;
        org.antlr.v4.tool.Grammar grammar18 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target19 = new org.antlr.v4.codegen.target.Python3Target();
        int int20 = python3Target19.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup21 = python3Target19.templates;
        org.antlr.v4.tool.Grammar grammar22 = null;
        int[] intArray23 = new int[] {};
        java.lang.String[] strArray24 = python3Target19.getTokenTypesAsTargetLabels(grammar22, intArray23);
        java.lang.String[] strArray25 = python3Target11.getTokenTypesAsTargetLabels(grammar18, intArray23);
        java.lang.String[] strArray26 = python3Target7.getTokenTypesAsTargetLabels(grammar10, intArray23);
        java.lang.String[] strArray27 = python3Target0.getTokenTypesAsTargetLabels(grammar6, intArray23);
        org.stringtemplate.v4.STGroup sTGroup28 = null;
        python3Target0.templates = sTGroup28;
        org.stringtemplate.v4.STGroup sTGroup30 = python3Target0.templates;
        org.antlr.v4.tool.ast.GrammarAST grammarAST31 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean32 = python3Target0.visibleGrammarSymbolCausesIssueInGeneratedCode(grammarAST31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "4.5.2.1" + "'", str3, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "d" + "'", str9, "d");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 64 + "'", int12 == 64);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "4.5.2.1" + "'", str14, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 64 + "'", int15 == 64);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(codeGenerator17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 64 + "'", int20 == 64);
        org.junit.Assert.assertNull(sTGroup21);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[]");
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNull(sTGroup30);
    }

    @Test
    public void test06516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06516");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        boolean boolean2 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.gen;
        boolean boolean4 = python3Target0.wantsBaseVisitor();
        org.antlr.v4.codegen.target.Python3Target python3Target5 = new org.antlr.v4.codegen.target.Python3Target();
        int int6 = python3Target5.getInlineTestSetWordSize();
        java.lang.String str7 = python3Target5.language;
        java.lang.String str8 = python3Target5.getVersion();
        org.stringtemplate.v4.STGroup sTGroup9 = null;
        python3Target5.templates = sTGroup9;
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = null;
        java.lang.String str14 = python3Target5.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator11, "d", false);
        java.util.Set<java.lang.String> strSet15 = python3Target5.getBadWords();
        python3Target0.badWords = strSet15;
        python3Target0.language = "\".5.2.\"";
        org.antlr.v4.codegen.CodeGenerator codeGenerator19 = python3Target0.getCodeGenerator();
        int int20 = python3Target0.getInlineTestSetWordSize();
        // The following exception was thrown during execution in test generation
        try {
            org.stringtemplate.v4.STGroup sTGroup21 = python3Target0.loadTemplates();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 64 + "'", int6 == 64);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "4.5.2.1" + "'", str8, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertNull(codeGenerator19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 64 + "'", int20 == 64);
    }

    @Test
    public void test06517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06517");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        java.lang.String str3 = python3Target0.getVersion();
        int int4 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str5 = python3Target0.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = python3Target0.gen;
        org.antlr.v4.tool.Grammar grammar7 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target8 = new org.antlr.v4.codegen.target.Python3Target();
        int int9 = python3Target8.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup10 = python3Target8.templates;
        org.antlr.v4.tool.Grammar grammar11 = null;
        int[] intArray12 = new int[] {};
        java.lang.String[] strArray13 = python3Target8.getTokenTypesAsTargetLabels(grammar11, intArray12);
        java.lang.String[] strArray14 = python3Target0.getTokenTypesAsTargetLabels(grammar7, intArray12);
        java.lang.String str17 = python3Target0.getTargetStringLiteralFromString("", false);
        python3Target0.language = "\"@\"";
        java.lang.String str21 = python3Target0.encodeIntAsCharEscape(0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "4.5.2.1" + "'", str3, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(codeGenerator6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 64 + "'", int9 == 64);
        org.junit.Assert.assertNull(sTGroup10);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[]");
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "\\0" + "'", str21, "\\0");
    }

    @Test
    public void test06518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06518");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        java.lang.String str3 = python3Target0.getVersion();
        int int4 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str5 = python3Target0.getLanguage();
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromString("4.5.2.1", true);
        boolean boolean9 = python3Target0.supportsOverloadedMethods();
        java.lang.String[] strArray10 = python3Target0.targetCharValueEscape;
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = python3Target0.gen;
        java.lang.String str12 = python3Target0.getLanguage();
        python3Target0.language = "\"\\\"4.5.2.1\\\"\"";
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "4.5.2.1" + "'", str3, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"4.5.2.1\"" + "'", str8, "\"4.5.2.1\"");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNull(codeGenerator11);
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test06519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06519");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        org.stringtemplate.v4.STGroup sTGroup1 = null;
        python3Target0.templates = sTGroup1;
        java.util.Set<java.lang.String> strSet3 = null;
        python3Target0.badWords = strSet3;
        boolean boolean5 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup6 = null;
        python3Target0.templates = sTGroup6;
        python3Target0.language = "\"\\\"i\\\"\"";
        org.stringtemplate.v4.STGroup sTGroup10 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar11 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target12 = new org.antlr.v4.codegen.target.Python3Target();
        int int13 = python3Target12.getInlineTestSetWordSize();
        java.lang.String str14 = python3Target12.language;
        org.antlr.v4.codegen.CodeGenerator codeGenerator15 = null;
        java.lang.String str18 = python3Target12.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator15, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator19 = python3Target12.gen;
        java.lang.String str20 = python3Target12.getLanguage();
        boolean boolean21 = python3Target12.supportsOverloadedMethods();
        org.antlr.v4.tool.Grammar grammar22 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target23 = new org.antlr.v4.codegen.target.Python3Target();
        int int24 = python3Target23.getInlineTestSetWordSize();
        java.lang.String str25 = python3Target23.language;
        java.lang.String str26 = python3Target23.getVersion();
        int int27 = python3Target23.getInlineTestSetWordSize();
        java.lang.String str28 = python3Target23.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator29 = python3Target23.gen;
        python3Target23.addBadWords();
        python3Target23.language = "\\0";
        boolean boolean33 = python3Target23.wantsBaseVisitor();
        org.antlr.v4.codegen.CodeGenerator codeGenerator34 = python3Target23.getCodeGenerator();
        int int35 = python3Target23.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar36 = null;
        org.stringtemplate.v4.ST sT37 = null;
        python3Target23.genRecognizerHeaderFile(grammar36, sT37, "\"\"\"4.5.2.1\"\"\"");
        java.util.Set<java.lang.String> strSet40 = python3Target23.badWords;
        org.antlr.v4.tool.Grammar grammar41 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target42 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str44 = python3Target42.encodeIntAsCharEscape(100);
        org.antlr.v4.tool.Grammar grammar45 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target46 = new org.antlr.v4.codegen.target.Python3Target();
        int int47 = python3Target46.getInlineTestSetWordSize();
        java.lang.String str48 = python3Target46.language;
        java.lang.String str49 = python3Target46.getVersion();
        int int50 = python3Target46.getInlineTestSetWordSize();
        java.lang.String str51 = python3Target46.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator52 = python3Target46.gen;
        org.antlr.v4.tool.Grammar grammar53 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target54 = new org.antlr.v4.codegen.target.Python3Target();
        int int55 = python3Target54.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup56 = python3Target54.templates;
        org.antlr.v4.tool.Grammar grammar57 = null;
        int[] intArray58 = new int[] {};
        java.lang.String[] strArray59 = python3Target54.getTokenTypesAsTargetLabels(grammar57, intArray58);
        java.lang.String[] strArray60 = python3Target46.getTokenTypesAsTargetLabels(grammar53, intArray58);
        java.lang.String[] strArray61 = python3Target42.getTokenTypesAsTargetLabels(grammar45, intArray58);
        java.lang.String[] strArray62 = python3Target23.getTokenTypesAsTargetLabels(grammar41, intArray58);
        java.lang.String[] strArray63 = python3Target12.getTokenTypesAsTargetLabels(grammar22, intArray58);
        java.lang.String[] strArray64 = python3Target0.getTokenTypesAsTargetLabels(grammar11, intArray58);
        boolean boolean65 = python3Target0.wantsBaseListener();
        org.antlr.v4.tool.ast.GrammarAST grammarAST66 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str67 = python3Target0.getLoopLabel(grammarAST66);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(sTGroup10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 64 + "'", int13 == 64);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "\"\"" + "'", str18, "\"\"");
        org.junit.Assert.assertNull(codeGenerator19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 64 + "'", int24 == 64);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "4.5.2.1" + "'", str26, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 64 + "'", int27 == 64);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(codeGenerator29);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(codeGenerator34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 29 + "'", int35 == 29);
        org.junit.Assert.assertNotNull(strSet40);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "d" + "'", str44, "d");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 64 + "'", int47 == 64);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "4.5.2.1" + "'", str49, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 64 + "'", int50 == 64);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNull(codeGenerator52);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 64 + "'", int55 == 64);
        org.junit.Assert.assertNull(sTGroup56);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[]");
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
    }

    @Test
    public void test06520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06520");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup4 = null;
        python3Target0.templates = sTGroup4;
        boolean boolean6 = python3Target0.wantsBaseListener();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test06521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06521");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        boolean boolean2 = python3Target0.wantsBaseVisitor();
        java.lang.String str3 = python3Target0.getLanguage();
        int int4 = python3Target0.getInlineTestSetWordSize();
        python3Target0.addBadWords();
        org.antlr.v4.tool.Grammar grammar6 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target7 = new org.antlr.v4.codegen.target.Python3Target();
        int int8 = python3Target7.getInlineTestSetWordSize();
        java.lang.String str9 = python3Target7.language;
        java.lang.String str10 = python3Target7.getLanguage();
        java.lang.String str12 = python3Target7.getTargetStringLiteralFromString("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = null;
        java.lang.String str16 = python3Target7.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator13, "hi!", true);
        int int17 = python3Target7.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar18 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target19 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str20 = python3Target19.language;
        org.antlr.v4.codegen.target.Python3Target python3Target21 = new org.antlr.v4.codegen.target.Python3Target();
        org.stringtemplate.v4.STGroup sTGroup22 = null;
        python3Target21.templates = sTGroup22;
        java.lang.String[] strArray27 = new java.lang.String[] { "", "\\0", "" };
        java.util.LinkedHashSet<java.lang.String> strSet28 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet28, strArray27);
        python3Target21.badWords = strSet28;
        python3Target19.badWords = strSet28;
        org.antlr.v4.tool.Grammar grammar32 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target33 = new org.antlr.v4.codegen.target.Python3Target();
        int int34 = python3Target33.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup35 = python3Target33.templates;
        org.antlr.v4.tool.Grammar grammar36 = null;
        int[] intArray37 = new int[] {};
        java.lang.String[] strArray38 = python3Target33.getTokenTypesAsTargetLabels(grammar36, intArray37);
        java.lang.String[] strArray39 = python3Target19.getTokenTypesAsTargetLabels(grammar32, intArray37);
        java.lang.String[] strArray40 = python3Target7.getTokenTypesAsTargetLabels(grammar18, intArray37);
        java.lang.String[] strArray41 = python3Target0.getTokenTypesAsTargetLabels(grammar6, intArray37);
        org.antlr.v4.codegen.CodeGenerator codeGenerator42 = python3Target0.getCodeGenerator();
        python3Target0.addBadWords();
        boolean boolean44 = python3Target0.supportsOverloadedMethods();
        int int45 = python3Target0.getInlineTestSetWordSize();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str47 = python3Target0.getElementListName("\"\\\"\\\"\\\"64\\\"\\\"\\\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 64 + "'", int8 == 64);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"\"" + "'", str12, "\"\"");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\"i\"" + "'", str16, "\"i\"");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 29 + "'", int17 == 29);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 64 + "'", int34 == 64);
        org.junit.Assert.assertNull(sTGroup35);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[]");
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNull(codeGenerator42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 64 + "'", int45 == 64);
    }

    @Test
    public void test06522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06522");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str2 = python3Target0.getTargetStringLiteralFromString("\"\"");
        int int3 = python3Target0.getInlineTestSetWordSize();
        org.antlr.v4.tool.Grammar grammar4 = null;
        org.stringtemplate.v4.ST sT5 = null;
        python3Target0.genRecognizerHeaderFile(grammar4, sT5, "\"\"\"\"\"4.5.2.1\"\"\"\"\"");
        java.lang.String str9 = python3Target0.encodeIntAsCharEscape((int) (byte) 1);
        java.lang.String str10 = python3Target0.language;
        org.antlr.v4.tool.Grammar grammar11 = null;
        org.stringtemplate.v4.ST sT12 = null;
        python3Target0.genRecognizerHeaderFile(grammar11, sT12, "\\64");
        org.antlr.v4.codegen.CodeGenerator codeGenerator15 = null;
        java.lang.String str18 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator15, "\"\"#\"\"", false);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str20 = python3Target0.getListLabel("\"3\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "\"\"\"\"" + "'", str2, "\"\"\"\"");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 64 + "'", int3 == 64);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\\1" + "'", str9, "\\1");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "\\\"#\\\"" + "'", str18, "\\\"#\\\"");
    }

    @Test
    public void test06523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06523");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        org.stringtemplate.v4.STGroup sTGroup3 = python3Target0.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = python3Target0.gen;
        boolean boolean5 = python3Target0.wantsBaseListener();
        org.antlr.v4.tool.Grammar grammar6 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target7 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str8 = python3Target7.language;
        org.antlr.v4.codegen.target.Python3Target python3Target9 = new org.antlr.v4.codegen.target.Python3Target();
        org.stringtemplate.v4.STGroup sTGroup10 = null;
        python3Target9.templates = sTGroup10;
        java.lang.String[] strArray15 = new java.lang.String[] { "", "\\0", "" };
        java.util.LinkedHashSet<java.lang.String> strSet16 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet16, strArray15);
        python3Target9.badWords = strSet16;
        python3Target7.badWords = strSet16;
        org.antlr.v4.tool.Grammar grammar20 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target21 = new org.antlr.v4.codegen.target.Python3Target();
        int int22 = python3Target21.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup23 = python3Target21.templates;
        org.antlr.v4.tool.Grammar grammar24 = null;
        int[] intArray25 = new int[] {};
        java.lang.String[] strArray26 = python3Target21.getTokenTypesAsTargetLabels(grammar24, intArray25);
        java.lang.String[] strArray27 = python3Target7.getTokenTypesAsTargetLabels(grammar20, intArray25);
        java.lang.String[] strArray28 = python3Target0.getTokenTypesAsTargetLabels(grammar6, intArray25);
        java.lang.String str30 = python3Target0.getTargetStringLiteralFromString("\"\"\\\"hi!\\\"\"\"");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str32 = python3Target0.getElementName("12");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(sTGroup3);
        org.junit.Assert.assertNull(codeGenerator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 64 + "'", int22 == 64);
        org.junit.Assert.assertNull(sTGroup23);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]");
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "\"\"\"\\\"hi!\\\"\"\"\"" + "'", str30, "\"\"\"\\\"hi!\\\"\"\"\"");
    }

    @Test
    public void test06524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06524");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "", true);
        java.lang.String str8 = python3Target0.encodeIntAsCharEscape((int) (short) 100);
        java.util.Set<java.lang.String> strSet9 = python3Target0.badWords;
        python3Target0.language = "@";
        java.lang.String str12 = python3Target0.getVersion();
        org.stringtemplate.v4.STGroup sTGroup13 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar14 = null;
        org.stringtemplate.v4.ST sT15 = null;
        // The following exception was thrown during execution in test generation
        try {
            python3Target0.genListenerFile(grammar14, sT15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"" + "'", str6, "\"\"");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "d" + "'", str8, "d");
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "4.5.2.1" + "'", str12, "4.5.2.1");
        org.junit.Assert.assertNull(sTGroup13);
    }

    @Test
    public void test06525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06525");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        java.lang.String str3 = python3Target0.getVersion();
        int int4 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str5 = python3Target0.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = python3Target0.gen;
        python3Target0.addBadWords();
        java.util.Set<java.lang.String> strSet8 = python3Target0.getBadWords();
        java.util.Set<java.lang.String> strSet9 = python3Target0.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = python3Target0.getCodeGenerator();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "4.5.2.1" + "'", str3, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(codeGenerator6);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertNull(codeGenerator10);
    }

    @Test
    public void test06526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06526");
        org.antlr.v4.codegen.target.Python3Target.PythonStringRenderer pythonStringRenderer0 = new org.antlr.v4.codegen.target.Python3Target.PythonStringRenderer();
        java.lang.Object obj1 = null;
        java.util.Locale locale3 = null;
        java.lang.String str4 = pythonStringRenderer0.toString(obj1, "d", locale3);
        java.util.Locale locale7 = null;
        java.lang.String str8 = pythonStringRenderer0.toString((java.lang.Object) "\".5.2.\"", "@", locale7);
        org.antlr.v4.codegen.target.Python3Target python3Target9 = new org.antlr.v4.codegen.target.Python3Target();
        int int10 = python3Target9.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup11 = python3Target9.templates;
        java.util.Locale locale13 = null;
        java.lang.String str14 = pythonStringRenderer0.toString((java.lang.Object) sTGroup11, "\"\"\"hi!\"\"\"", locale13);
        java.lang.Object obj15 = null;
        java.util.Locale locale17 = null;
        java.lang.String str18 = pythonStringRenderer0.toString(obj15, "\"\"\"\"4.5.2.1\"\"\"\"", locale17);
        org.antlr.v4.codegen.target.Python3Target python3Target19 = new org.antlr.v4.codegen.target.Python3Target();
        int int20 = python3Target19.getInlineTestSetWordSize();
        java.lang.String str21 = python3Target19.language;
        org.antlr.v4.codegen.CodeGenerator codeGenerator22 = null;
        java.lang.String str25 = python3Target19.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator22, "", true);
        org.antlr.v4.tool.Grammar grammar26 = null;
        org.stringtemplate.v4.ST sT27 = null;
        python3Target19.genRecognizerHeaderFile(grammar26, sT27, "");
        java.util.Locale locale31 = null;
        java.lang.String str32 = pythonStringRenderer0.toString((java.lang.Object) sT27, "\"\"hi!\"\"", locale31);
        org.antlr.v4.codegen.target.Python3Target python3Target33 = new org.antlr.v4.codegen.target.Python3Target();
        int int34 = python3Target33.getInlineTestSetWordSize();
        java.lang.String str35 = python3Target33.language;
        org.antlr.v4.codegen.CodeGenerator codeGenerator36 = null;
        java.lang.String str39 = python3Target33.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator36, "", true);
        org.antlr.v4.tool.Grammar grammar40 = null;
        org.stringtemplate.v4.ST sT41 = null;
        python3Target33.genRecognizerHeaderFile(grammar40, sT41, "");
        org.antlr.v4.tool.Grammar grammar44 = null;
        org.stringtemplate.v4.ST sT45 = null;
        python3Target33.genRecognizerHeaderFile(grammar44, sT45, "\"i\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator48 = python3Target33.gen;
        java.lang.String str50 = python3Target33.getTargetStringLiteralFromString("\"\"\"\"4.5.2.1\"\"\"\"");
        java.util.Locale locale52 = null;
        java.lang.String str53 = pythonStringRenderer0.toString((java.lang.Object) "\"\"\"\"4.5.2.1\"\"\"\"", "\"\"\"\"i\"\"\"\"", locale52);
        org.antlr.v4.codegen.target.Python3Target python3Target54 = new org.antlr.v4.codegen.target.Python3Target();
        int int55 = python3Target54.getInlineTestSetWordSize();
        java.lang.String str56 = python3Target54.language;
        java.lang.String str57 = python3Target54.getVersion();
        int int58 = python3Target54.getInlineTestSetWordSize();
        java.lang.String str59 = python3Target54.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator60 = python3Target54.gen;
        org.antlr.v4.tool.Grammar grammar61 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target62 = new org.antlr.v4.codegen.target.Python3Target();
        int int63 = python3Target62.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup64 = python3Target62.templates;
        org.antlr.v4.tool.Grammar grammar65 = null;
        int[] intArray66 = new int[] {};
        java.lang.String[] strArray67 = python3Target62.getTokenTypesAsTargetLabels(grammar65, intArray66);
        java.lang.String[] strArray68 = python3Target54.getTokenTypesAsTargetLabels(grammar61, intArray66);
        java.lang.String str69 = python3Target54.getLanguage();
        java.lang.String str70 = python3Target54.getLanguage();
        java.lang.String str72 = python3Target54.getTargetStringLiteralFromString("\"i\"");
        org.antlr.v4.tool.Grammar grammar73 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target74 = new org.antlr.v4.codegen.target.Python3Target();
        int int75 = python3Target74.getInlineTestSetWordSize();
        java.lang.String[] strArray78 = new java.lang.String[] { "hi!", "" };
        python3Target74.targetCharValueEscape = strArray78;
        java.util.Set<java.lang.String> strSet80 = python3Target74.badWords;
        org.stringtemplate.v4.STGroup sTGroup81 = python3Target74.templates;
        org.antlr.v4.tool.Grammar grammar82 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target83 = new org.antlr.v4.codegen.target.Python3Target();
        int int84 = python3Target83.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup85 = python3Target83.templates;
        org.antlr.v4.tool.Grammar grammar86 = null;
        int[] intArray87 = new int[] {};
        java.lang.String[] strArray88 = python3Target83.getTokenTypesAsTargetLabels(grammar86, intArray87);
        java.lang.String[] strArray89 = python3Target74.getTokenTypesAsTargetLabels(grammar82, intArray87);
        java.lang.String[] strArray90 = python3Target54.getTokenTypesAsTargetLabels(grammar73, intArray87);
        int int91 = python3Target54.getSerializedATNSegmentLimit();
        org.antlr.v4.codegen.CodeGenerator codeGenerator92 = python3Target54.getCodeGenerator();
        boolean boolean93 = python3Target54.wantsBaseListener();
        java.lang.String str94 = python3Target54.getVersion();
        java.util.Locale locale96 = null;
        java.lang.String str97 = pythonStringRenderer0.toString((java.lang.Object) str94, "\"\\\"\\\"\\\"\\\"4.5.2.1\\\"\\\"\\\"\\\"\"", locale96);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "d" + "'", str4, "d");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "@" + "'", str8, "@");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 64 + "'", int10 == 64);
        org.junit.Assert.assertNull(sTGroup11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\"\"\"hi!\"\"\"" + "'", str14, "\"\"\"hi!\"\"\"");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "\"\"\"\"4.5.2.1\"\"\"\"" + "'", str18, "\"\"\"\"4.5.2.1\"\"\"\"");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 64 + "'", int20 == 64);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "\"\"" + "'", str25, "\"\"");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "\"\"hi!\"\"" + "'", str32, "\"\"hi!\"\"");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 64 + "'", int34 == 64);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "\"\"" + "'", str39, "\"\"");
        org.junit.Assert.assertNull(codeGenerator48);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "\"\"\"\"\"4.5.2.1\"\"\"\"\"" + "'", str50, "\"\"\"\"\"4.5.2.1\"\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "\"\"\"\"i\"\"\"\"" + "'", str53, "\"\"\"\"i\"\"\"\"");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 64 + "'", int55 == 64);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "4.5.2.1" + "'", str57, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 64 + "'", int58 == 64);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNull(codeGenerator60);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 64 + "'", int63 == 64);
        org.junit.Assert.assertNull(sTGroup64);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[]");
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "\"\"i\"\"" + "'", str72, "\"\"i\"\"");
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 64 + "'", int75 == 64);
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertNotNull(strSet80);
        org.junit.Assert.assertNull(sTGroup81);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 64 + "'", int84 == 64);
        org.junit.Assert.assertNull(sTGroup85);
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[]");
        org.junit.Assert.assertNotNull(strArray88);
        org.junit.Assert.assertNotNull(strArray89);
        org.junit.Assert.assertNotNull(strArray90);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 29 + "'", int91 == 29);
        org.junit.Assert.assertNull(codeGenerator92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "4.5.2.1" + "'", str94, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str97 + "' != '" + "\"\\\"\\\"\\\"\\\"4.5.2.1\\\"\\\"\\\"\\\"\"" + "'", str97, "\"\\\"\\\"\\\"\\\"4.5.2.1\\\"\\\"\\\"\\\"\"");
    }

    @Test
    public void test06527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06527");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        org.stringtemplate.v4.STGroup sTGroup3 = python3Target0.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = python3Target0.gen;
        java.util.Set<java.lang.String> strSet5 = python3Target0.badWords;
        org.stringtemplate.v4.STGroup sTGroup6 = null;
        python3Target0.templates = sTGroup6;
        java.util.Set<java.lang.String> strSet8 = python3Target0.badWords;
        java.lang.String str9 = python3Target0.getLanguage();
        org.antlr.v4.tool.Grammar grammar10 = null;
        org.stringtemplate.v4.ST sT11 = null;
        // The following exception was thrown during execution in test generation
        try {
            python3Target0.genListenerFile(grammar10, sT11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(sTGroup3);
        org.junit.Assert.assertNull(codeGenerator4);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test06528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06528");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        boolean boolean2 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.gen;
        boolean boolean4 = python3Target0.wantsBaseVisitor();
        boolean boolean5 = python3Target0.supportsOverloadedMethods();
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromString("\\0", false);
        boolean boolean9 = python3Target0.templatesExist();
        python3Target0.addBadWords();
        org.antlr.v4.tool.Grammar grammar11 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target12 = new org.antlr.v4.codegen.target.Python3Target();
        int int13 = python3Target12.getInlineTestSetWordSize();
        java.lang.String str14 = python3Target12.language;
        java.lang.String str15 = python3Target12.getVersion();
        int int16 = python3Target12.getInlineTestSetWordSize();
        java.lang.String str17 = python3Target12.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator18 = python3Target12.gen;
        org.antlr.v4.tool.Grammar grammar19 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target20 = new org.antlr.v4.codegen.target.Python3Target();
        int int21 = python3Target20.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup22 = python3Target20.templates;
        org.antlr.v4.tool.Grammar grammar23 = null;
        int[] intArray24 = new int[] {};
        java.lang.String[] strArray25 = python3Target20.getTokenTypesAsTargetLabels(grammar23, intArray24);
        java.lang.String[] strArray26 = python3Target12.getTokenTypesAsTargetLabels(grammar19, intArray24);
        java.lang.String[] strArray27 = python3Target0.getTokenTypesAsTargetLabels(grammar11, intArray24);
        java.lang.String str28 = python3Target0.getLanguage();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str30 = python3Target0.getElementName("\"Python3\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\\0" + "'", str8, "\\0");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 64 + "'", int13 == 64);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "4.5.2.1" + "'", str15, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 64 + "'", int16 == 64);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(codeGenerator18);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 64 + "'", int21 == 64);
        org.junit.Assert.assertNull(sTGroup22);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[]");
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNull(str28);
    }

    @Test
    public void test06529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06529");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!", "" };
        python3Target0.targetCharValueEscape = strArray4;
        java.util.Set<java.lang.String> strSet6 = python3Target0.badWords;
        org.antlr.v4.tool.Grammar grammar7 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target8 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray10 = new java.lang.String[] { "" };
        java.util.LinkedHashSet<java.lang.String> strSet11 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet11, strArray10);
        python3Target8.badWords = strSet11;
        org.stringtemplate.v4.STGroup sTGroup14 = python3Target8.templates;
        boolean boolean15 = python3Target8.templatesExist();
        org.antlr.v4.tool.Grammar grammar16 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target17 = new org.antlr.v4.codegen.target.Python3Target();
        int int18 = python3Target17.getInlineTestSetWordSize();
        java.lang.String str19 = python3Target17.language;
        org.stringtemplate.v4.STGroup sTGroup20 = python3Target17.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator21 = python3Target17.gen;
        boolean boolean22 = python3Target17.wantsBaseListener();
        org.antlr.v4.tool.Grammar grammar23 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target24 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str25 = python3Target24.language;
        org.antlr.v4.codegen.target.Python3Target python3Target26 = new org.antlr.v4.codegen.target.Python3Target();
        org.stringtemplate.v4.STGroup sTGroup27 = null;
        python3Target26.templates = sTGroup27;
        java.lang.String[] strArray32 = new java.lang.String[] { "", "\\0", "" };
        java.util.LinkedHashSet<java.lang.String> strSet33 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet33, strArray32);
        python3Target26.badWords = strSet33;
        python3Target24.badWords = strSet33;
        org.antlr.v4.tool.Grammar grammar37 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target38 = new org.antlr.v4.codegen.target.Python3Target();
        int int39 = python3Target38.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup40 = python3Target38.templates;
        org.antlr.v4.tool.Grammar grammar41 = null;
        int[] intArray42 = new int[] {};
        java.lang.String[] strArray43 = python3Target38.getTokenTypesAsTargetLabels(grammar41, intArray42);
        java.lang.String[] strArray44 = python3Target24.getTokenTypesAsTargetLabels(grammar37, intArray42);
        java.lang.String[] strArray45 = python3Target17.getTokenTypesAsTargetLabels(grammar23, intArray42);
        java.lang.String[] strArray46 = python3Target8.getTokenTypesAsTargetLabels(grammar16, intArray42);
        java.lang.String[] strArray47 = python3Target0.getTokenTypesAsTargetLabels(grammar7, intArray42);
        int int48 = python3Target0.getInlineTestSetWordSize();
        int int49 = python3Target0.getInlineTestSetWordSize();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str51 = python3Target0.getImplicitSetLabel("\"\\\"\\\"\\\"\\\"64\\\"\\\"\\\"\\\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(sTGroup14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 64 + "'", int18 == 64);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(sTGroup20);
        org.junit.Assert.assertNull(codeGenerator21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 64 + "'", int39 == 64);
        org.junit.Assert.assertNull(sTGroup40);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[]");
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 64 + "'", int48 == 64);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 64 + "'", int49 == 64);
    }

    @Test
    public void test06530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06530");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.getCodeGenerator();
        java.util.Set<java.lang.String> strSet4 = python3Target0.getBadWords();
        org.stringtemplate.v4.STGroup sTGroup5 = null;
        python3Target0.templates = sTGroup5;
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = python3Target0.getCodeGenerator();
        boolean boolean8 = python3Target0.wantsBaseListener();
        org.antlr.v4.codegen.target.Python3Target python3Target9 = new org.antlr.v4.codegen.target.Python3Target();
        org.stringtemplate.v4.STGroup sTGroup10 = null;
        python3Target9.templates = sTGroup10;
        java.lang.String[] strArray15 = new java.lang.String[] { "", "\\0", "" };
        java.util.LinkedHashSet<java.lang.String> strSet16 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet16, strArray15);
        python3Target9.badWords = strSet16;
        python3Target9.addBadWords();
        org.antlr.v4.codegen.target.Python3Target python3Target20 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean21 = python3Target20.wantsBaseVisitor();
        org.antlr.v4.codegen.CodeGenerator codeGenerator22 = null;
        python3Target20.gen = codeGenerator22;
        org.antlr.v4.codegen.CodeGenerator codeGenerator24 = python3Target20.gen;
        java.util.Set<java.lang.String> strSet25 = python3Target20.badWords;
        org.antlr.v4.codegen.target.Python3Target python3Target26 = new org.antlr.v4.codegen.target.Python3Target();
        int int27 = python3Target26.getInlineTestSetWordSize();
        java.lang.String str28 = python3Target26.language;
        java.lang.String str29 = python3Target26.getVersion();
        int int30 = python3Target26.getInlineTestSetWordSize();
        java.lang.String str31 = python3Target26.getLanguage();
        java.lang.String str34 = python3Target26.getTargetStringLiteralFromString("4.5.2.1", true);
        boolean boolean35 = python3Target26.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet36 = python3Target26.badWords;
        org.antlr.v4.tool.Grammar grammar37 = null;
        org.stringtemplate.v4.ST sT38 = null;
        python3Target26.genRecognizerHeaderFile(grammar37, sT38, "\"4.5.2.1\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator41 = null;
        java.lang.String str44 = python3Target26.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator41, "i", true);
        org.antlr.v4.codegen.target.Python3Target python3Target45 = new org.antlr.v4.codegen.target.Python3Target();
        org.stringtemplate.v4.STGroup sTGroup46 = null;
        python3Target45.templates = sTGroup46;
        java.lang.String[] strArray51 = new java.lang.String[] { "", "\\0", "" };
        java.util.LinkedHashSet<java.lang.String> strSet52 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet52, strArray51);
        python3Target45.badWords = strSet52;
        python3Target26.badWords = strSet52;
        python3Target20.badWords = strSet52;
        python3Target9.badWords = strSet52;
        java.lang.String str58 = python3Target9.language;
        boolean boolean59 = python3Target9.wantsBaseVisitor();
        java.util.Set<java.lang.String> strSet60 = python3Target9.badWords;
        python3Target0.badWords = strSet60;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNull(codeGenerator7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(codeGenerator24);
        org.junit.Assert.assertNotNull(strSet25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 64 + "'", int27 == 64);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "4.5.2.1" + "'", str29, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 64 + "'", int30 == 64);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "\"4.5.2.1\"" + "'", str34, "\"4.5.2.1\"");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strSet36);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "\"\"" + "'", str44, "\"\"");
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(strSet60);
    }

    @Test
    public void test06531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06531");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        java.lang.String str3 = python3Target0.getVersion();
        int int4 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str5 = python3Target0.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = python3Target0.gen;
        org.antlr.v4.tool.Grammar grammar7 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target8 = new org.antlr.v4.codegen.target.Python3Target();
        int int9 = python3Target8.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup10 = python3Target8.templates;
        org.antlr.v4.tool.Grammar grammar11 = null;
        int[] intArray12 = new int[] {};
        java.lang.String[] strArray13 = python3Target8.getTokenTypesAsTargetLabels(grammar11, intArray12);
        java.lang.String[] strArray14 = python3Target0.getTokenTypesAsTargetLabels(grammar7, intArray12);
        java.lang.String str16 = python3Target0.encodeIntAsCharEscape((int) (byte) 100);
        java.lang.String str17 = python3Target0.getLanguage();
        java.lang.String str18 = python3Target0.language;
        org.antlr.v4.tool.ast.GrammarAST grammarAST19 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str20 = python3Target0.getLoopCounter(grammarAST19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "4.5.2.1" + "'", str3, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(codeGenerator6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 64 + "'", int9 == 64);
        org.junit.Assert.assertNull(sTGroup10);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[]");
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "d" + "'", str16, "d");
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str18);
    }

    @Test
    public void test06532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06532");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        boolean boolean2 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.gen;
        boolean boolean4 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.codegen.target.Python3Target python3Target5 = new org.antlr.v4.codegen.target.Python3Target();
        int int6 = python3Target5.getInlineTestSetWordSize();
        java.lang.String str7 = python3Target5.language;
        java.lang.String str8 = python3Target5.getVersion();
        int int9 = python3Target5.getInlineTestSetWordSize();
        java.lang.String str10 = python3Target5.getLanguage();
        java.lang.String str13 = python3Target5.getTargetStringLiteralFromString("4.5.2.1", true);
        java.util.Set<java.lang.String> strSet14 = python3Target5.badWords;
        int int15 = python3Target5.getSerializedATNSegmentLimit();
        java.lang.String str16 = python3Target5.getVersion();
        java.lang.String[] strArray17 = new java.lang.String[] {};
        python3Target5.targetCharValueEscape = strArray17;
        org.antlr.v4.codegen.CodeGenerator codeGenerator19 = null;
        java.lang.String str22 = python3Target5.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator19, "\"\"i\"\"", true);
        java.lang.String[] strArray23 = python3Target5.targetCharValueEscape;
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray23;
        python3Target0.targetCharValueEscape = strArray23;
        python3Target0.language = "\"\\\"\\\"\\\"\\\"0\\\"\\\"\\\"\\\"\"";
        // The following exception was thrown during execution in test generation
        try {
            org.stringtemplate.v4.STGroup sTGroup28 = python3Target0.getTemplates();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 64 + "'", int6 == 64);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "4.5.2.1" + "'", str8, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 64 + "'", int9 == 64);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"4.5.2.1\"" + "'", str13, "\"4.5.2.1\"");
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 29 + "'", int15 == 29);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "4.5.2.1" + "'", str16, "4.5.2.1");
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "\"\\\"i\\\"\"" + "'", str22, "\"\\\"i\\\"\"");
        org.junit.Assert.assertNotNull(strArray23);
    }

    @Test
    public void test06533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06533");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.LinkedHashSet<java.lang.String> strSet3 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet3, strArray2);
        python3Target0.badWords = strSet3;
        org.stringtemplate.v4.STGroup sTGroup6 = python3Target0.templates;
        int int7 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str9 = python3Target0.encodeIntAsCharEscape((int) (byte) 10);
        org.stringtemplate.v4.STGroup sTGroup10 = python3Target0.templates;
        int int11 = python3Target0.getInlineTestSetWordSize();
        org.antlr.v4.tool.Grammar grammar12 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str14 = python3Target0.getTokenTypeAsTargetLabel(grammar12, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(sTGroup6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 64 + "'", int7 == 64);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\\12" + "'", str9, "\\12");
        org.junit.Assert.assertNull(sTGroup10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 64 + "'", int11 == 64);
    }

    @Test
    public void test06534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06534");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        org.stringtemplate.v4.STGroup sTGroup1 = null;
        python3Target0.templates = sTGroup1;
        java.lang.String[] strArray6 = new java.lang.String[] { "", "\\0", "" };
        java.util.LinkedHashSet<java.lang.String> strSet7 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet7, strArray6);
        python3Target0.badWords = strSet7;
        python3Target0.addBadWords();
        boolean boolean11 = python3Target0.supportsOverloadedMethods();
        python3Target0.addBadWords();
        java.lang.String str13 = python3Target0.getVersion();
        org.antlr.v4.tool.Grammar grammar14 = null;
        org.stringtemplate.v4.ST sT15 = null;
        python3Target0.genRecognizerHeaderFile(grammar14, sT15, "\\\"1\\\"");
        python3Target0.addBadWords();
        java.lang.String str19 = python3Target0.language;
        java.util.Set<java.lang.String> strSet20 = python3Target0.getBadWords();
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "4.5.2.1" + "'", str13, "4.5.2.1");
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(strSet20);
    }

    @Test
    public void test06535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06535");
        org.antlr.v4.codegen.target.Python3Target.PythonStringRenderer pythonStringRenderer0 = new org.antlr.v4.codegen.target.Python3Target.PythonStringRenderer();
        java.lang.Object obj1 = null;
        java.util.Locale locale3 = null;
        java.lang.String str4 = pythonStringRenderer0.toString(obj1, "d", locale3);
        java.util.Locale locale7 = null;
        java.lang.String str8 = pythonStringRenderer0.toString((java.lang.Object) "\".5.2.\"", "@", locale7);
        java.lang.Object obj9 = null;
        java.util.Locale locale11 = null;
        java.lang.String str12 = pythonStringRenderer0.toString(obj9, "\"\"1\"\"", locale11);
        org.antlr.v4.codegen.target.Python3Target python3Target13 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str15 = python3Target13.getTargetStringLiteralFromString("\"\"");
        int int16 = python3Target13.getInlineTestSetWordSize();
        boolean boolean17 = python3Target13.supportsOverloadedMethods();
        java.lang.String str19 = python3Target13.encodeIntAsCharEscape(10);
        java.util.Locale locale21 = null;
        java.lang.String str22 = pythonStringRenderer0.toString((java.lang.Object) str19, "\"\"hi!\"\"", locale21);
        org.antlr.v4.codegen.target.Python3Target python3Target23 = new org.antlr.v4.codegen.target.Python3Target();
        int int24 = python3Target23.getInlineTestSetWordSize();
        boolean boolean25 = python3Target23.wantsBaseVisitor();
        java.lang.String str26 = python3Target23.getLanguage();
        int int27 = python3Target23.getInlineTestSetWordSize();
        python3Target23.addBadWords();
        java.lang.String str30 = python3Target23.getTargetStringLiteralFromString("\"\"hi!\"\"");
        java.lang.String str31 = python3Target23.language;
        java.lang.String str32 = python3Target23.language;
        org.antlr.v4.codegen.target.Python3Target python3Target33 = new org.antlr.v4.codegen.target.Python3Target();
        int int34 = python3Target33.getInlineTestSetWordSize();
        java.lang.String str35 = python3Target33.language;
        java.lang.String str36 = python3Target33.getLanguage();
        java.lang.String str38 = python3Target33.getTargetStringLiteralFromString("");
        java.lang.String str39 = python3Target33.getVersion();
        org.antlr.v4.codegen.target.Python3Target python3Target40 = new org.antlr.v4.codegen.target.Python3Target();
        int int41 = python3Target40.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup42 = python3Target40.templates;
        org.antlr.v4.tool.Grammar grammar43 = null;
        int[] intArray44 = new int[] {};
        java.lang.String[] strArray45 = python3Target40.getTokenTypesAsTargetLabels(grammar43, intArray44);
        python3Target33.targetCharValueEscape = strArray45;
        org.antlr.v4.codegen.target.Python3Target python3Target47 = new org.antlr.v4.codegen.target.Python3Target();
        int int48 = python3Target47.getInlineTestSetWordSize();
        java.lang.String str49 = python3Target47.language;
        org.antlr.v4.codegen.CodeGenerator codeGenerator50 = python3Target47.getCodeGenerator();
        java.util.Set<java.lang.String> strSet51 = python3Target47.getBadWords();
        java.lang.String[] strArray52 = python3Target47.targetCharValueEscape;
        python3Target33.targetCharValueEscape = strArray52;
        java.lang.String str54 = python3Target33.getVersion();
        org.antlr.v4.codegen.target.Python3Target python3Target55 = new org.antlr.v4.codegen.target.Python3Target();
        org.stringtemplate.v4.STGroup sTGroup56 = null;
        python3Target55.templates = sTGroup56;
        java.lang.String[] strArray61 = new java.lang.String[] { "", "\\0", "" };
        java.util.LinkedHashSet<java.lang.String> strSet62 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet62, strArray61);
        python3Target55.badWords = strSet62;
        java.lang.String str67 = python3Target55.getTargetStringLiteralFromString("hi!", true);
        java.util.Set<java.lang.String> strSet68 = python3Target55.badWords;
        python3Target33.badWords = strSet68;
        java.lang.String str71 = python3Target33.getTargetStringLiteralFromString("\"\"");
        java.lang.String str74 = python3Target33.getTargetStringLiteralFromString("\"\"\"\\1\"\"\"", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator75 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target76 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator75);
        int int77 = python3Target76.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup78 = python3Target76.loadTemplates();
        python3Target33.templates = sTGroup78;
        python3Target23.templates = sTGroup78;
        java.util.Locale locale82 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str83 = pythonStringRenderer0.toString((java.lang.Object) python3Target23, "\"\"\"\"\"\"\"\\\"\\\"\"\"\"\"\"\"\"", locale82);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: org.antlr.v4.codegen.target.Python3Target cannot be cast to java.lang.String");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "d" + "'", str4, "d");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "@" + "'", str8, "@");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"\"1\"\"" + "'", str12, "\"\"1\"\"");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\"\"\"\"" + "'", str15, "\"\"\"\"");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 64 + "'", int16 == 64);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "\\12" + "'", str19, "\\12");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "\"\"hi!\"\"" + "'", str22, "\"\"hi!\"\"");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 64 + "'", int24 == 64);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 64 + "'", int27 == 64);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "\"\"\"hi!\"\"\"" + "'", str30, "\"\"\"hi!\"\"\"");
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 64 + "'", int34 == 64);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "\"\"" + "'", str38, "\"\"");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "4.5.2.1" + "'", str39, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 64 + "'", int41 == 64);
        org.junit.Assert.assertNull(sTGroup42);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[]");
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 64 + "'", int48 == 64);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNull(codeGenerator50);
        org.junit.Assert.assertNotNull(strSet51);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "4.5.2.1" + "'", str54, "4.5.2.1");
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "\"hi!\"" + "'", str67, "\"hi!\"");
        org.junit.Assert.assertNotNull(strSet68);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "\"\"\"\"" + "'", str71, "\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "\"\"\"\"\\1\"\"\"\"" + "'", str74, "\"\"\"\"\\1\"\"\"\"");
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 64 + "'", int77 == 64);
        org.junit.Assert.assertNotNull(sTGroup78);
    }

    @Test
    public void test06536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06536");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        org.stringtemplate.v4.STGroup sTGroup1 = null;
        python3Target0.templates = sTGroup1;
        java.util.Set<java.lang.String> strSet3 = null;
        python3Target0.badWords = strSet3;
        boolean boolean5 = python3Target0.wantsBaseListener();
        java.util.Set<java.lang.String> strSet6 = python3Target0.badWords;
        boolean boolean7 = python3Target0.templatesExist();
        org.antlr.v4.tool.Grammar grammar8 = null;
        org.stringtemplate.v4.ST sT9 = null;
        // The following exception was thrown during execution in test generation
        try {
            python3Target0.genFile(grammar8, sT9, "_tset\\1");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(strSet6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test06537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06537");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        org.stringtemplate.v4.STGroup sTGroup1 = null;
        python3Target0.templates = sTGroup1;
        java.lang.String[] strArray6 = new java.lang.String[] { "", "\\0", "" };
        java.util.LinkedHashSet<java.lang.String> strSet7 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet7, strArray6);
        python3Target0.badWords = strSet7;
        java.lang.String str10 = python3Target0.getLanguage();
        java.lang.String str11 = python3Target0.getLanguage();
        org.antlr.v4.tool.ast.GrammarAST grammarAST12 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean13 = python3Target0.visibleGrammarSymbolCausesIssueInGeneratedCode(grammarAST12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test06538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06538");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        java.lang.String str3 = python3Target0.getVersion();
        int int4 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str5 = python3Target0.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = python3Target0.gen;
        org.antlr.v4.tool.Grammar grammar7 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target8 = new org.antlr.v4.codegen.target.Python3Target();
        int int9 = python3Target8.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup10 = python3Target8.templates;
        org.antlr.v4.tool.Grammar grammar11 = null;
        int[] intArray12 = new int[] {};
        java.lang.String[] strArray13 = python3Target8.getTokenTypesAsTargetLabels(grammar11, intArray12);
        java.lang.String[] strArray14 = python3Target0.getTokenTypesAsTargetLabels(grammar7, intArray12);
        java.lang.String str17 = python3Target0.getTargetStringLiteralFromString("", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator18 = null;
        java.lang.String str21 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator18, "\"i\"", true);
        org.stringtemplate.v4.STGroup sTGroup22 = null;
        python3Target0.templates = sTGroup22;
        int int24 = python3Target0.getInlineTestSetWordSize();
        python3Target0.addBadWords();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str27 = python3Target0.getListLabel("\"\\\"1\\\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "4.5.2.1" + "'", str3, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(codeGenerator6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 64 + "'", int9 == 64);
        org.junit.Assert.assertNull(sTGroup10);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[]");
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "\"i\"" + "'", str21, "\"i\"");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 64 + "'", int24 == 64);
    }

    @Test
    public void test06539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06539");
        java.lang.String str1 = org.stringtemplate.v4.StringRenderer.escapeHTML("\"\"\"\"\"12\"\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "\"\"\"\"\"12\"\"\"\"\"" + "'", str1, "\"\"\"\"\"12\"\"\"\"\"");
    }

    @Test
    public void test06540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06540");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        java.lang.String str3 = python3Target0.getVersion();
        int int4 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str5 = python3Target0.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        python3Target0.gen = codeGenerator6;
        java.lang.String str8 = python3Target0.language;
        org.antlr.v4.tool.Rule rule9 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str10 = python3Target0.getRuleFunctionContextStructName(rule9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "4.5.2.1" + "'", str3, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test06541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06541");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        java.lang.String str3 = python3Target0.getLanguage();
        java.lang.String str5 = python3Target0.getTargetStringLiteralFromString("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        java.lang.String str9 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator6, "hi!", true);
        int int10 = python3Target0.getSerializedATNSegmentLimit();
        boolean boolean11 = python3Target0.templatesExist();
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = python3Target0.getCodeGenerator();
        java.lang.String[] strArray13 = python3Target0.targetCharValueEscape;
        org.antlr.v4.tool.Grammar grammar14 = null;
        org.stringtemplate.v4.ST sT15 = null;
        // The following exception was thrown during execution in test generation
        try {
            python3Target0.genListenerFile(grammar14, sT15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\"\"" + "'", str5, "\"\"");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"i\"" + "'", str9, "\"i\"");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 29 + "'", int10 == 29);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(codeGenerator12);
        org.junit.Assert.assertNotNull(strArray13);
    }

    @Test
    public void test06542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06542");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        java.lang.String str3 = python3Target0.getVersion();
        int int4 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str5 = python3Target0.getLanguage();
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromString("hi!", false);
        python3Target0.language = "\"\"i\"\"";
        java.lang.String str12 = python3Target0.getTargetStringLiteralFromString("\"4.5.2.1\"");
        org.stringtemplate.v4.STGroup sTGroup13 = null;
        python3Target0.templates = sTGroup13;
        java.lang.String str15 = python3Target0.getVersion();
        java.lang.String[] strArray16 = python3Target0.targetCharValueEscape;
        java.lang.String str19 = python3Target0.getTargetStringLiteralFromString("\"\"\"\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator20 = python3Target0.gen;
        java.lang.String[] strArray21 = python3Target0.targetCharValueEscape;
        boolean boolean22 = python3Target0.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet23 = python3Target0.getBadWords();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "4.5.2.1" + "'", str3, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"\"4.5.2.1\"\"" + "'", str12, "\"\"4.5.2.1\"\"");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "4.5.2.1" + "'", str15, "4.5.2.1");
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "\"\"\"\"" + "'", str19, "\"\"\"\"");
        org.junit.Assert.assertNull(codeGenerator20);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strSet23);
    }

    @Test
    public void test06543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06543");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        java.lang.String str3 = python3Target0.getLanguage();
        java.lang.String str5 = python3Target0.getTargetStringLiteralFromString("");
        java.lang.String str6 = python3Target0.getVersion();
        org.antlr.v4.codegen.target.Python3Target python3Target7 = new org.antlr.v4.codegen.target.Python3Target();
        int int8 = python3Target7.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup9 = python3Target7.templates;
        org.antlr.v4.tool.Grammar grammar10 = null;
        int[] intArray11 = new int[] {};
        java.lang.String[] strArray12 = python3Target7.getTokenTypesAsTargetLabels(grammar10, intArray11);
        python3Target0.targetCharValueEscape = strArray12;
        java.lang.String str15 = python3Target0.encodeIntAsCharEscape((int) ' ');
        java.lang.String str16 = python3Target0.language;
        python3Target0.language = "";
        org.antlr.v4.codegen.CodeGenerator codeGenerator19 = null;
        java.lang.String str22 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator19, "4.5.2.1", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator23 = null;
        java.lang.String str26 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator23, "\"\"\"12\"\"\"", false);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str28 = python3Target0.getImplicitTokenLabel("\"\\\".5.2.\\\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\"\"" + "'", str5, "\"\"");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "4.5.2.1" + "'", str6, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 64 + "'", int8 == 64);
        org.junit.Assert.assertNull(sTGroup9);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[]");
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + " " + "'", str15, " ");
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + ".5.2." + "'", str22, ".5.2.");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\\\"\\\"12\\\"\\\"" + "'", str26, "\\\"\\\"12\\\"\\\"");
    }

    @Test
    public void test06544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06544");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        org.stringtemplate.v4.STGroup sTGroup3 = python3Target0.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = python3Target0.gen;
        boolean boolean5 = python3Target0.wantsBaseListener();
        org.antlr.v4.tool.Grammar grammar6 = null;
        org.stringtemplate.v4.ST sT7 = null;
        python3Target0.genRecognizerHeaderFile(grammar6, sT7, "\"4.5.2.1\"");
        boolean boolean10 = python3Target0.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet11 = python3Target0.badWords;
        java.lang.String str13 = python3Target0.getTargetStringLiteralFromString("\"\"\\\"\\\"0\\\"\\\"\"\"");
        java.lang.String str15 = python3Target0.encodeIntAsCharEscape(10);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(sTGroup3);
        org.junit.Assert.assertNull(codeGenerator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"\"\"\\\"\\\"0\\\"\\\"\"\"\"" + "'", str13, "\"\"\"\\\"\\\"0\\\"\\\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\\12" + "'", str15, "\\12");
    }

    @Test
    public void test06545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06545");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup4 = null;
        python3Target0.templates = sTGroup4;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str7 = python3Target0.getListLabel("\"\"\\\"\\\"\\\"4.5.2.1\\\"\\\"\\\"\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(codeGenerator3);
    }

    @Test
    public void test06546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06546");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "", true);
        org.antlr.v4.tool.Grammar grammar7 = null;
        org.stringtemplate.v4.ST sT8 = null;
        python3Target0.genRecognizerHeaderFile(grammar7, sT8, "");
        org.antlr.v4.tool.Grammar grammar11 = null;
        org.stringtemplate.v4.ST sT12 = null;
        python3Target0.genRecognizerHeaderFile(grammar11, sT12, "\"i\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator15 = python3Target0.gen;
        org.antlr.v4.codegen.CodeGenerator codeGenerator16 = null;
        python3Target0.gen = codeGenerator16;
        org.stringtemplate.v4.STGroup sTGroup18 = null;
        python3Target0.templates = sTGroup18;
        org.antlr.v4.codegen.CodeGenerator codeGenerator20 = python3Target0.getCodeGenerator();
        java.lang.String str23 = python3Target0.getTargetStringLiteralFromString("4.5.2.1", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator24 = python3Target0.gen;
        org.antlr.v4.codegen.target.Python3Target python3Target25 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str27 = python3Target25.getTargetStringLiteralFromString("\"\"");
        java.lang.String[] strArray28 = python3Target25.targetCharValueEscape;
        python3Target0.targetCharValueEscape = strArray28;
        java.lang.String str32 = python3Target0.getTargetStringLiteralFromString("\"\"\"\\\"\\\"\\\"i\\\"\\\"\\\"\"\"\"", true);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"" + "'", str6, "\"\"");
        org.junit.Assert.assertNull(codeGenerator15);
        org.junit.Assert.assertNull(codeGenerator20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "\"4.5.2.1\"" + "'", str23, "\"4.5.2.1\"");
        org.junit.Assert.assertNull(codeGenerator24);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "\"\"\"\"" + "'", str27, "\"\"\"\"");
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "\"\"\"\"\\\"\\\"\\\"i\\\"\\\"\\\"\"\"\"\"" + "'", str32, "\"\"\"\"\\\"\\\"\\\"i\\\"\\\"\\\"\"\"\"\"");
    }

    @Test
    public void test06547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06547");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str2 = python3Target0.getTargetStringLiteralFromString("\"\"");
        int int3 = python3Target0.getInlineTestSetWordSize();
        boolean boolean4 = python3Target0.supportsOverloadedMethods();
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromString("\"i\"");
        python3Target0.addBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = null;
        python3Target0.gen = codeGenerator8;
        java.lang.String str10 = python3Target0.getVersion();
        org.antlr.v4.tool.Grammar grammar11 = null;
        org.stringtemplate.v4.ST sT12 = null;
        // The following exception was thrown during execution in test generation
        try {
            python3Target0.genFile(grammar11, sT12, "\"\"\"\"\"\\12\"\"\"\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "\"\"\"\"" + "'", str2, "\"\"\"\"");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 64 + "'", int3 == 64);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"i\"\"" + "'", str6, "\"\"i\"\"");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "4.5.2.1" + "'", str10, "4.5.2.1");
    }

    @Test
    public void test06548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06548");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "", true);
        org.antlr.v4.tool.Grammar grammar7 = null;
        org.stringtemplate.v4.ST sT8 = null;
        python3Target0.genRecognizerHeaderFile(grammar7, sT8, "\"\"\"\"");
        org.stringtemplate.v4.STGroup sTGroup11 = null;
        python3Target0.templates = sTGroup11;
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = null;
        java.lang.String str16 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator13, "\"\"", true);
        java.lang.String str17 = python3Target0.getLanguage();
        java.util.Set<java.lang.String> strSet18 = python3Target0.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator19 = python3Target0.getCodeGenerator();
        boolean boolean20 = python3Target0.wantsBaseVisitor();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"" + "'", str6, "\"\"");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\"\"" + "'", str16, "\"\"");
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(strSet18);
        org.junit.Assert.assertNull(codeGenerator19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test06549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06549");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str2 = python3Target0.getTargetStringLiteralFromString("\"\"");
        int int3 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str5 = python3Target0.encodeIntAsCharEscape(0);
        java.lang.String str7 = python3Target0.getTargetStringLiteralFromString("");
        int int8 = python3Target0.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = null;
        java.lang.String str12 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator9, "\\12", false);
        org.antlr.v4.tool.Grammar grammar13 = null;
        org.stringtemplate.v4.ST sT14 = null;
        python3Target0.genRecognizerHeaderFile(grammar13, sT14, "d");
        int int17 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str18 = python3Target0.getVersion();
        java.lang.String[] strArray19 = python3Target0.targetCharValueEscape;
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "\"\"\"\"" + "'", str2, "\"\"\"\"");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 64 + "'", int3 == 64);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\\0" + "'", str5, "\\0");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"\"" + "'", str7, "\"\"");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 64 + "'", int8 == 64);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "1" + "'", str12, "1");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 64 + "'", int17 == 64);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "4.5.2.1" + "'", str18, "4.5.2.1");
        org.junit.Assert.assertNotNull(strArray19);
    }

    @Test
    public void test06550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06550");
        org.antlr.v4.codegen.target.Python3Target.PythonStringRenderer pythonStringRenderer0 = new org.antlr.v4.codegen.target.Python3Target.PythonStringRenderer();
        java.lang.Object obj1 = null;
        java.util.Locale locale3 = null;
        java.lang.String str4 = pythonStringRenderer0.toString(obj1, "d", locale3);
        java.util.Locale locale7 = null;
        java.lang.String str8 = pythonStringRenderer0.toString((java.lang.Object) "\".5.2.\"", "@", locale7);
        org.antlr.v4.codegen.target.Python3Target python3Target9 = new org.antlr.v4.codegen.target.Python3Target();
        int int10 = python3Target9.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup11 = python3Target9.templates;
        java.util.Locale locale13 = null;
        java.lang.String str14 = pythonStringRenderer0.toString((java.lang.Object) sTGroup11, "\"\"\"hi!\"\"\"", locale13);
        org.antlr.v4.codegen.target.Python3Target python3Target15 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean16 = python3Target15.wantsBaseVisitor();
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = null;
        python3Target15.gen = codeGenerator17;
        org.antlr.v4.codegen.CodeGenerator codeGenerator19 = null;
        python3Target15.gen = codeGenerator19;
        boolean boolean21 = python3Target15.wantsBaseVisitor();
        java.lang.String[] strArray22 = python3Target15.targetCharValueEscape;
        java.util.Locale locale24 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str25 = pythonStringRenderer0.toString((java.lang.Object) python3Target15, "5.2", locale24);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: org.antlr.v4.codegen.target.Python3Target cannot be cast to java.lang.String");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "d" + "'", str4, "d");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "@" + "'", str8, "@");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 64 + "'", int10 == 64);
        org.junit.Assert.assertNull(sTGroup11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\"\"\"hi!\"\"\"" + "'", str14, "\"\"\"hi!\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(strArray22);
    }

    @Test
    public void test06551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06551");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        org.stringtemplate.v4.STGroup sTGroup1 = null;
        python3Target0.templates = sTGroup1;
        java.util.Set<java.lang.String> strSet3 = null;
        python3Target0.badWords = strSet3;
        boolean boolean5 = python3Target0.wantsBaseListener();
        java.lang.String[] strArray6 = python3Target0.targetCharValueEscape;
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromString("\"\\\"hi!\\\"\"");
        python3Target0.language = "\\35";
        boolean boolean11 = python3Target0.wantsBaseListener();
        python3Target0.language = "\"\"\"\\\"\\\"4.5.2.1\\\"\\\"\"\"\"";
        org.antlr.v4.codegen.target.Python3Target python3Target14 = new org.antlr.v4.codegen.target.Python3Target();
        int int15 = python3Target14.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup16 = python3Target14.templates;
        org.antlr.v4.codegen.target.Python3Target python3Target17 = new org.antlr.v4.codegen.target.Python3Target();
        int int18 = python3Target17.getInlineTestSetWordSize();
        java.lang.String[] strArray21 = new java.lang.String[] { "hi!", "" };
        python3Target17.targetCharValueEscape = strArray21;
        python3Target14.targetCharValueEscape = strArray21;
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray21;
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray21;
        python3Target0.targetCharValueEscape = strArray21;
        org.antlr.v4.tool.Grammar grammar27 = null;
        org.stringtemplate.v4.ST sT28 = null;
        python3Target0.genRecognizerHeaderFile(grammar27, sT28, "\"\"\"\\\"4.5.2.1\\\"\"\"\"");
        org.antlr.v4.tool.ast.GrammarAST grammarAST31 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str32 = python3Target0.getLoopLabel(grammarAST31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\"\\\"hi!\\\"\"\"" + "'", str8, "\"\"\\\"hi!\\\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 64 + "'", int15 == 64);
        org.junit.Assert.assertNull(sTGroup16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 64 + "'", int18 == 64);
        org.junit.Assert.assertNotNull(strArray21);
    }

    @Test
    public void test06552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06552");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        java.lang.String str3 = python3Target0.getVersion();
        int int4 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str5 = python3Target0.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = python3Target0.gen;
        org.antlr.v4.tool.Grammar grammar7 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target8 = new org.antlr.v4.codegen.target.Python3Target();
        int int9 = python3Target8.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup10 = python3Target8.templates;
        org.antlr.v4.tool.Grammar grammar11 = null;
        int[] intArray12 = new int[] {};
        java.lang.String[] strArray13 = python3Target8.getTokenTypesAsTargetLabels(grammar11, intArray12);
        java.lang.String[] strArray14 = python3Target0.getTokenTypesAsTargetLabels(grammar7, intArray12);
        java.lang.String str15 = python3Target0.getLanguage();
        java.lang.String str16 = python3Target0.getLanguage();
        java.lang.String str18 = python3Target0.getTargetStringLiteralFromString("\"i\"");
        org.antlr.v4.tool.Grammar grammar19 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target20 = new org.antlr.v4.codegen.target.Python3Target();
        int int21 = python3Target20.getInlineTestSetWordSize();
        java.lang.String[] strArray24 = new java.lang.String[] { "hi!", "" };
        python3Target20.targetCharValueEscape = strArray24;
        java.util.Set<java.lang.String> strSet26 = python3Target20.badWords;
        org.stringtemplate.v4.STGroup sTGroup27 = python3Target20.templates;
        org.antlr.v4.tool.Grammar grammar28 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target29 = new org.antlr.v4.codegen.target.Python3Target();
        int int30 = python3Target29.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup31 = python3Target29.templates;
        org.antlr.v4.tool.Grammar grammar32 = null;
        int[] intArray33 = new int[] {};
        java.lang.String[] strArray34 = python3Target29.getTokenTypesAsTargetLabels(grammar32, intArray33);
        java.lang.String[] strArray35 = python3Target20.getTokenTypesAsTargetLabels(grammar28, intArray33);
        java.lang.String[] strArray36 = python3Target0.getTokenTypesAsTargetLabels(grammar19, intArray33);
        int int37 = python3Target0.getSerializedATNSegmentLimit();
        org.antlr.v4.codegen.CodeGenerator codeGenerator38 = python3Target0.getCodeGenerator();
        boolean boolean39 = python3Target0.wantsBaseListener();
        org.antlr.v4.tool.Grammar grammar40 = null;
        org.stringtemplate.v4.ST sT41 = null;
        // The following exception was thrown during execution in test generation
        try {
            python3Target0.genListenerFile(grammar40, sT41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "4.5.2.1" + "'", str3, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(codeGenerator6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 64 + "'", int9 == 64);
        org.junit.Assert.assertNull(sTGroup10);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[]");
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "\"\"i\"\"" + "'", str18, "\"\"i\"\"");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 64 + "'", int21 == 64);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertNotNull(strSet26);
        org.junit.Assert.assertNull(sTGroup27);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 64 + "'", int30 == 64);
        org.junit.Assert.assertNull(sTGroup31);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]");
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 29 + "'", int37 == 29);
        org.junit.Assert.assertNull(codeGenerator38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    }

    @Test
    public void test06553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06553");
        java.lang.String str1 = org.stringtemplate.v4.StringRenderer.escapeHTML("\"\"\"\"4.5.2.1\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "\"\"\"\"4.5.2.1\"\"\"\"" + "'", str1, "\"\"\"\"4.5.2.1\"\"\"\"");
    }

    @Test
    public void test06554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06554");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "", true);
        org.antlr.v4.tool.Grammar grammar7 = null;
        org.stringtemplate.v4.ST sT8 = null;
        python3Target0.genRecognizerHeaderFile(grammar7, sT8, "\"\"\"\"");
        org.stringtemplate.v4.STGroup sTGroup11 = null;
        python3Target0.templates = sTGroup11;
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = null;
        java.lang.String str16 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator13, "\"\"", true);
        java.lang.String str17 = python3Target0.getLanguage();
        java.lang.String[] strArray18 = python3Target0.targetCharValueEscape;
        boolean boolean19 = python3Target0.wantsBaseVisitor();
        java.lang.String str20 = python3Target0.getVersion();
        org.antlr.v4.codegen.target.Python3Target python3Target21 = new org.antlr.v4.codegen.target.Python3Target();
        int int22 = python3Target21.getInlineTestSetWordSize();
        java.lang.String str23 = python3Target21.language;
        java.lang.String str24 = python3Target21.getVersion();
        int int25 = python3Target21.getInlineTestSetWordSize();
        java.lang.String str26 = python3Target21.getLanguage();
        java.lang.String str29 = python3Target21.getTargetStringLiteralFromString("hi!", false);
        org.antlr.v4.tool.Grammar grammar30 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target31 = new org.antlr.v4.codegen.target.Python3Target();
        int int32 = python3Target31.getInlineTestSetWordSize();
        java.lang.String str33 = python3Target31.language;
        java.lang.String str34 = python3Target31.getVersion();
        int int35 = python3Target31.getInlineTestSetWordSize();
        java.lang.String str36 = python3Target31.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator37 = python3Target31.gen;
        org.antlr.v4.tool.Grammar grammar38 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target39 = new org.antlr.v4.codegen.target.Python3Target();
        int int40 = python3Target39.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup41 = python3Target39.templates;
        org.antlr.v4.tool.Grammar grammar42 = null;
        int[] intArray43 = new int[] {};
        java.lang.String[] strArray44 = python3Target39.getTokenTypesAsTargetLabels(grammar42, intArray43);
        java.lang.String[] strArray45 = python3Target31.getTokenTypesAsTargetLabels(grammar38, intArray43);
        java.lang.String str46 = python3Target31.getLanguage();
        java.lang.String str47 = python3Target31.getLanguage();
        java.lang.String str49 = python3Target31.getTargetStringLiteralFromString("\"i\"");
        org.antlr.v4.tool.Grammar grammar50 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target51 = new org.antlr.v4.codegen.target.Python3Target();
        int int52 = python3Target51.getInlineTestSetWordSize();
        java.lang.String[] strArray55 = new java.lang.String[] { "hi!", "" };
        python3Target51.targetCharValueEscape = strArray55;
        java.util.Set<java.lang.String> strSet57 = python3Target51.badWords;
        org.stringtemplate.v4.STGroup sTGroup58 = python3Target51.templates;
        org.antlr.v4.tool.Grammar grammar59 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target60 = new org.antlr.v4.codegen.target.Python3Target();
        int int61 = python3Target60.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup62 = python3Target60.templates;
        org.antlr.v4.tool.Grammar grammar63 = null;
        int[] intArray64 = new int[] {};
        java.lang.String[] strArray65 = python3Target60.getTokenTypesAsTargetLabels(grammar63, intArray64);
        java.lang.String[] strArray66 = python3Target51.getTokenTypesAsTargetLabels(grammar59, intArray64);
        java.lang.String[] strArray67 = python3Target31.getTokenTypesAsTargetLabels(grammar50, intArray64);
        java.lang.String[] strArray68 = python3Target21.getTokenTypesAsTargetLabels(grammar30, intArray64);
        org.stringtemplate.v4.STGroup sTGroup69 = python3Target21.templates;
        java.lang.String str70 = python3Target21.language;
        org.antlr.v4.codegen.CodeGenerator codeGenerator71 = null;
        java.lang.String str74 = python3Target21.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator71, "\"\"\\\"\\\"\"\"", false);
        org.antlr.v4.codegen.target.Python3Target python3Target75 = new org.antlr.v4.codegen.target.Python3Target();
        org.stringtemplate.v4.STGroup sTGroup76 = null;
        python3Target75.templates = sTGroup76;
        java.util.Set<java.lang.String> strSet78 = null;
        python3Target75.badWords = strSet78;
        boolean boolean80 = python3Target75.wantsBaseListener();
        java.lang.String[] strArray81 = python3Target75.targetCharValueEscape;
        python3Target21.targetCharValueEscape = strArray81;
        boolean boolean83 = python3Target21.templatesExist();
        org.antlr.v4.codegen.CodeGenerator codeGenerator84 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target85 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator84);
        int int86 = python3Target85.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup87 = python3Target85.loadTemplates();
        python3Target21.templates = sTGroup87;
        python3Target0.templates = sTGroup87;
        python3Target0.addBadWords();
        java.lang.String str92 = python3Target0.getImplicitRuleLabel("\"\\\"i\\\"\"");
        java.lang.Class<?> wildcardClass93 = python3Target0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"" + "'", str6, "\"\"");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\"\"" + "'", str16, "\"\"");
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "4.5.2.1" + "'", str20, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 64 + "'", int22 == 64);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "4.5.2.1" + "'", str24, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 64 + "'", int25 == 64);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!" + "'", str29, "hi!");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 64 + "'", int32 == 64);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "4.5.2.1" + "'", str34, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 64 + "'", int35 == 64);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(codeGenerator37);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 64 + "'", int40 == 64);
        org.junit.Assert.assertNull(sTGroup41);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[]");
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "\"\"i\"\"" + "'", str49, "\"\"i\"\"");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 64 + "'", int52 == 64);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertNotNull(strSet57);
        org.junit.Assert.assertNull(sTGroup58);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 64 + "'", int61 == 64);
        org.junit.Assert.assertNull(sTGroup62);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[]");
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertNull(sTGroup69);
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "\\\"\\\"\\\"\\\"" + "'", str74, "\\\"\\\"\\\"\\\"");
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 64 + "'", int86 == 64);
        org.junit.Assert.assertNotNull(sTGroup87);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "_\"\\\"i\\\"\"" + "'", str92, "_\"\\\"i\\\"\"");
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test06555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06555");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str2 = python3Target0.getTargetStringLiteralFromString("\"\"");
        int int3 = python3Target0.getInlineTestSetWordSize();
        boolean boolean4 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup5 = python3Target0.templates;
        java.lang.String str7 = python3Target0.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = null;
        python3Target0.gen = codeGenerator8;
        org.antlr.v4.codegen.target.Python3Target python3Target10 = new org.antlr.v4.codegen.target.Python3Target();
        int int11 = python3Target10.getInlineTestSetWordSize();
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!", "" };
        python3Target10.targetCharValueEscape = strArray14;
        org.antlr.v4.codegen.CodeGenerator codeGenerator16 = null;
        java.lang.String str19 = python3Target10.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator16, "\"\"", false);
        org.antlr.v4.codegen.target.Python3Target python3Target20 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str21 = python3Target20.language;
        java.lang.String[] strArray22 = python3Target20.targetCharValueEscape;
        python3Target10.targetCharValueEscape = strArray22;
        python3Target10.language = "\"\\\"\\\"4.5.2.1\\\"\\\"\"";
        java.lang.String[] strArray26 = python3Target10.targetCharValueEscape;
        python3Target0.targetCharValueEscape = strArray26;
        org.stringtemplate.v4.STGroup sTGroup28 = python3Target0.templates;
        boolean boolean29 = python3Target0.wantsBaseVisitor();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "\"\"\"\"" + "'", str2, "\"\"\"\"");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 64 + "'", int3 == 64);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(sTGroup5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"\"\"\"\"\"" + "'", str7, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 64 + "'", int11 == 64);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNull(sTGroup28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test06556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06556");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        boolean boolean2 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.gen;
        boolean boolean4 = python3Target0.supportsOverloadedMethods();
        boolean boolean5 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.tool.Grammar grammar6 = null;
        org.stringtemplate.v4.ST sT7 = null;
        python3Target0.genRecognizerHeaderFile(grammar6, sT7, "\"\"\"\"\"\"");
        boolean boolean10 = python3Target0.templatesExist();
        boolean boolean11 = python3Target0.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet12 = python3Target0.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = python3Target0.gen;
        java.lang.String str16 = python3Target0.getTargetStringLiteralFromString("\"\"\"1\"\"\"", true);
        java.lang.String str19 = python3Target0.getTargetStringLiteralFromString("\"\"\"\"_tseta\"\"\"\"", true);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNull(codeGenerator13);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\"\"\"\"1\"\"\"\"" + "'", str16, "\"\"\"\"1\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "\"\"\"\"\"_tseta\"\"\"\"\"" + "'", str19, "\"\"\"\"\"_tseta\"\"\"\"\"");
    }

    @Test
    public void test06557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06557");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        java.lang.String str3 = python3Target0.getVersion();
        int int4 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str5 = python3Target0.getLanguage();
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromString("4.5.2.1", true);
        boolean boolean9 = python3Target0.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet10 = python3Target0.badWords;
        org.antlr.v4.codegen.target.Python3Target python3Target11 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str12 = python3Target11.language;
        java.lang.String[] strArray13 = python3Target11.targetCharValueEscape;
        python3Target0.targetCharValueEscape = strArray13;
        org.antlr.v4.codegen.CodeGenerator codeGenerator15 = null;
        java.lang.String str18 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator15, "\"\"\"\"\"4.5.2.1\"\"\"\"\"", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator19 = python3Target0.getCodeGenerator();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "4.5.2.1" + "'", str3, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"4.5.2.1\"" + "'", str8, "\"4.5.2.1\"");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "\"\\\"\\\"\\\"\\\"4.5.2.1\\\"\\\"\\\"\\\"\"" + "'", str18, "\"\\\"\\\"\\\"\\\"4.5.2.1\\\"\\\"\\\"\\\"\"");
        org.junit.Assert.assertNull(codeGenerator19);
    }

    @Test
    public void test06558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06558");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        java.lang.String str3 = python3Target0.getVersion();
        int int4 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str5 = python3Target0.getLanguage();
        boolean boolean6 = python3Target0.templatesExist();
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        python3Target0.gen = codeGenerator7;
        boolean boolean9 = python3Target0.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup10 = python3Target0.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = null;
        java.lang.String str14 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator11, "\"\"\"\"\\\"i\\\"\"\"\"\"", false);
        python3Target0.addBadWords();
        // The following exception was thrown during execution in test generation
        try {
            org.stringtemplate.v4.STGroup sTGroup16 = python3Target0.loadTemplates();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "4.5.2.1" + "'", str3, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(sTGroup10);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\\\"\\\"\\\"\\\"i\\\"\\\"\\\"\\\"" + "'", str14, "\\\"\\\"\\\"\\\"i\\\"\\\"\\\"\\\"");
    }

    @Test
    public void test06559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06559");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        boolean boolean2 = python3Target0.wantsBaseVisitor();
        java.lang.String str3 = python3Target0.getLanguage();
        int int4 = python3Target0.getInlineTestSetWordSize();
        python3Target0.addBadWords();
        org.antlr.v4.tool.Grammar grammar6 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target7 = new org.antlr.v4.codegen.target.Python3Target();
        int int8 = python3Target7.getInlineTestSetWordSize();
        java.lang.String str9 = python3Target7.language;
        java.lang.String str10 = python3Target7.getLanguage();
        java.lang.String str12 = python3Target7.getTargetStringLiteralFromString("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = null;
        java.lang.String str16 = python3Target7.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator13, "hi!", true);
        int int17 = python3Target7.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar18 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target19 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str20 = python3Target19.language;
        org.antlr.v4.codegen.target.Python3Target python3Target21 = new org.antlr.v4.codegen.target.Python3Target();
        org.stringtemplate.v4.STGroup sTGroup22 = null;
        python3Target21.templates = sTGroup22;
        java.lang.String[] strArray27 = new java.lang.String[] { "", "\\0", "" };
        java.util.LinkedHashSet<java.lang.String> strSet28 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet28, strArray27);
        python3Target21.badWords = strSet28;
        python3Target19.badWords = strSet28;
        org.antlr.v4.tool.Grammar grammar32 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target33 = new org.antlr.v4.codegen.target.Python3Target();
        int int34 = python3Target33.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup35 = python3Target33.templates;
        org.antlr.v4.tool.Grammar grammar36 = null;
        int[] intArray37 = new int[] {};
        java.lang.String[] strArray38 = python3Target33.getTokenTypesAsTargetLabels(grammar36, intArray37);
        java.lang.String[] strArray39 = python3Target19.getTokenTypesAsTargetLabels(grammar32, intArray37);
        java.lang.String[] strArray40 = python3Target7.getTokenTypesAsTargetLabels(grammar18, intArray37);
        java.lang.String[] strArray41 = python3Target0.getTokenTypesAsTargetLabels(grammar6, intArray37);
        org.antlr.v4.codegen.CodeGenerator codeGenerator42 = python3Target0.getCodeGenerator();
        java.lang.String str43 = python3Target0.getVersion();
        org.stringtemplate.v4.STGroup sTGroup44 = python3Target0.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator45 = python3Target0.getCodeGenerator();
        boolean boolean46 = python3Target0.wantsBaseListener();
        // The following exception was thrown during execution in test generation
        try {
            org.stringtemplate.v4.STGroup sTGroup47 = python3Target0.getTemplates();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 64 + "'", int8 == 64);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"\"" + "'", str12, "\"\"");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\"i\"" + "'", str16, "\"i\"");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 29 + "'", int17 == 29);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 64 + "'", int34 == 64);
        org.junit.Assert.assertNull(sTGroup35);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[]");
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNull(codeGenerator42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "4.5.2.1" + "'", str43, "4.5.2.1");
        org.junit.Assert.assertNull(sTGroup44);
        org.junit.Assert.assertNull(codeGenerator45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    }

    @Test
    public void test06560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06560");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        java.lang.String str3 = python3Target0.getVersion();
        int int4 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str5 = python3Target0.getLanguage();
        boolean boolean6 = python3Target0.templatesExist();
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        python3Target0.gen = codeGenerator7;
        boolean boolean9 = python3Target0.templatesExist();
        boolean boolean10 = python3Target0.wantsBaseListener();
        org.stringtemplate.v4.STGroup sTGroup11 = python3Target0.templates;
        java.lang.String str12 = python3Target0.language;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str14 = python3Target0.getImplicitRuleLabel("0");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "4.5.2.1" + "'", str3, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(sTGroup11);
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test06561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06561");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        org.stringtemplate.v4.STGroup sTGroup1 = null;
        python3Target0.templates = sTGroup1;
        java.lang.String[] strArray6 = new java.lang.String[] { "", "\\0", "" };
        java.util.LinkedHashSet<java.lang.String> strSet7 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet7, strArray6);
        python3Target0.badWords = strSet7;
        python3Target0.addBadWords();
        boolean boolean11 = python3Target0.supportsOverloadedMethods();
        python3Target0.addBadWords();
        org.antlr.v4.codegen.target.Python3Target python3Target13 = new org.antlr.v4.codegen.target.Python3Target();
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = null;
        python3Target13.gen = codeGenerator14;
        org.antlr.v4.codegen.target.Python3Target python3Target16 = new org.antlr.v4.codegen.target.Python3Target();
        int int17 = python3Target16.getInlineTestSetWordSize();
        java.lang.String str18 = python3Target16.language;
        java.lang.String str19 = python3Target16.getVersion();
        int int20 = python3Target16.getInlineTestSetWordSize();
        java.lang.String str21 = python3Target16.getLanguage();
        java.lang.String str24 = python3Target16.getTargetStringLiteralFromString("4.5.2.1", true);
        boolean boolean25 = python3Target16.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet26 = python3Target16.getBadWords();
        python3Target13.badWords = strSet26;
        python3Target0.badWords = strSet26;
        java.util.Set<java.lang.String> strSet29 = python3Target0.badWords;
        org.antlr.v4.codegen.CodeGenerator codeGenerator30 = null;
        python3Target0.gen = codeGenerator30;
        org.antlr.v4.tool.Rule rule32 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str33 = python3Target0.getRuleFunctionContextStructName(rule32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 64 + "'", int17 == 64);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "4.5.2.1" + "'", str19, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 64 + "'", int20 == 64);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "\"4.5.2.1\"" + "'", str24, "\"4.5.2.1\"");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(strSet26);
        org.junit.Assert.assertNotNull(strSet29);
    }

    @Test
    public void test06562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06562");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        org.stringtemplate.v4.STGroup sTGroup1 = null;
        python3Target0.templates = sTGroup1;
        java.util.Set<java.lang.String> strSet3 = null;
        python3Target0.badWords = strSet3;
        boolean boolean5 = python3Target0.supportsOverloadedMethods();
        java.lang.String str6 = python3Target0.getVersion();
        boolean boolean7 = python3Target0.wantsBaseVisitor();
        boolean boolean8 = python3Target0.wantsBaseVisitor();
        org.antlr.v4.codegen.target.Python3Target python3Target9 = new org.antlr.v4.codegen.target.Python3Target();
        int int10 = python3Target9.getInlineTestSetWordSize();
        java.lang.String str11 = python3Target9.language;
        org.stringtemplate.v4.STGroup sTGroup12 = python3Target9.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = python3Target9.gen;
        java.lang.String str14 = python3Target9.getVersion();
        java.lang.String str15 = python3Target9.getLanguage();
        java.lang.String str16 = python3Target9.getLanguage();
        java.util.Set<java.lang.String> strSet17 = python3Target9.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator18 = python3Target9.getCodeGenerator();
        org.antlr.v4.codegen.target.Python3Target python3Target19 = new org.antlr.v4.codegen.target.Python3Target();
        org.stringtemplate.v4.STGroup sTGroup20 = null;
        python3Target19.templates = sTGroup20;
        java.util.Set<java.lang.String> strSet22 = null;
        python3Target19.badWords = strSet22;
        boolean boolean24 = python3Target19.templatesExist();
        org.antlr.v4.codegen.target.Python3Target python3Target25 = new org.antlr.v4.codegen.target.Python3Target();
        int int26 = python3Target25.getInlineTestSetWordSize();
        java.lang.String str27 = python3Target25.language;
        java.lang.String str28 = python3Target25.getLanguage();
        java.lang.String str30 = python3Target25.getTargetStringLiteralFromString("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator31 = null;
        java.lang.String str34 = python3Target25.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator31, "hi!", true);
        int int35 = python3Target25.getSerializedATNSegmentLimit();
        org.antlr.v4.codegen.CodeGenerator codeGenerator36 = null;
        java.lang.String str39 = python3Target25.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator36, "4.5.2.1", true);
        java.lang.String[] strArray40 = python3Target25.targetCharValueEscape;
        java.lang.String str41 = python3Target25.getVersion();
        java.lang.String str42 = python3Target25.getVersion();
        org.antlr.v4.codegen.target.Python3Target python3Target43 = new org.antlr.v4.codegen.target.Python3Target();
        int int44 = python3Target43.getInlineTestSetWordSize();
        java.lang.String str45 = python3Target43.language;
        org.antlr.v4.codegen.CodeGenerator codeGenerator46 = python3Target43.getCodeGenerator();
        java.util.Set<java.lang.String> strSet47 = python3Target43.getBadWords();
        org.antlr.v4.codegen.target.Python3Target python3Target48 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray50 = new java.lang.String[] { "" };
        java.util.LinkedHashSet<java.lang.String> strSet51 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet51, strArray50);
        python3Target48.badWords = strSet51;
        python3Target43.badWords = strSet51;
        java.lang.String str55 = python3Target43.getVersion();
        java.lang.String str57 = python3Target43.encodeIntAsCharEscape(29);
        java.lang.String str60 = python3Target43.getTargetStringLiteralFromString("", true);
        org.antlr.v4.codegen.target.Python3Target python3Target61 = new org.antlr.v4.codegen.target.Python3Target();
        org.stringtemplate.v4.STGroup sTGroup62 = null;
        python3Target61.templates = sTGroup62;
        java.util.Set<java.lang.String> strSet64 = null;
        python3Target61.badWords = strSet64;
        boolean boolean66 = python3Target61.supportsOverloadedMethods();
        int int67 = python3Target61.getInlineTestSetWordSize();
        org.antlr.v4.codegen.target.Python3Target python3Target68 = new org.antlr.v4.codegen.target.Python3Target();
        int int69 = python3Target68.getInlineTestSetWordSize();
        boolean boolean70 = python3Target68.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator71 = python3Target68.gen;
        boolean boolean72 = python3Target68.wantsBaseVisitor();
        boolean boolean73 = python3Target68.supportsOverloadedMethods();
        java.lang.String str76 = python3Target68.getTargetStringLiteralFromString("\\0", false);
        boolean boolean77 = python3Target68.templatesExist();
        org.antlr.v4.codegen.CodeGenerator codeGenerator78 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target79 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator78);
        java.lang.String str81 = python3Target79.encodeIntAsCharEscape((int) (short) 1);
        org.stringtemplate.v4.STGroup sTGroup82 = python3Target79.loadTemplates();
        python3Target68.templates = sTGroup82;
        python3Target61.templates = sTGroup82;
        python3Target43.templates = sTGroup82;
        python3Target25.templates = sTGroup82;
        python3Target19.templates = sTGroup82;
        python3Target9.templates = sTGroup82;
        python3Target0.templates = sTGroup82;
        org.antlr.v4.tool.Rule rule90 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str91 = python3Target0.getRuleFunctionContextStructName(rule90);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "4.5.2.1" + "'", str6, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 64 + "'", int10 == 64);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(sTGroup12);
        org.junit.Assert.assertNull(codeGenerator13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "4.5.2.1" + "'", str14, "4.5.2.1");
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertNull(codeGenerator18);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 64 + "'", int26 == 64);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "\"\"" + "'", str30, "\"\"");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "\"i\"" + "'", str34, "\"i\"");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 29 + "'", int35 == 29);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "\".5.2.\"" + "'", str39, "\".5.2.\"");
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "4.5.2.1" + "'", str41, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "4.5.2.1" + "'", str42, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 64 + "'", int44 == 64);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNull(codeGenerator46);
        org.junit.Assert.assertNotNull(strSet47);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "4.5.2.1" + "'", str55, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "\\35" + "'", str57, "\\35");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "\"\"" + "'", str60, "\"\"");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 64 + "'", int67 == 64);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 64 + "'", int69 == 64);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNull(codeGenerator71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "\\0" + "'", str76, "\\0");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "\\1" + "'", str81, "\\1");
        org.junit.Assert.assertNotNull(sTGroup82);
    }

    @Test
    public void test06563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06563");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!", "" };
        python3Target0.targetCharValueEscape = strArray4;
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        java.lang.String str9 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator6, "\"\"", false);
        org.antlr.v4.codegen.target.Python3Target python3Target10 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str11 = python3Target10.language;
        java.lang.String[] strArray12 = python3Target10.targetCharValueEscape;
        python3Target0.targetCharValueEscape = strArray12;
        boolean boolean14 = python3Target0.wantsBaseVisitor();
        python3Target0.addBadWords();
        python3Target0.addBadWords();
        boolean boolean17 = python3Target0.supportsOverloadedMethods();
        boolean boolean18 = python3Target0.wantsBaseListener();
        int int19 = python3Target0.getInlineTestSetWordSize();
        org.antlr.v4.tool.ast.GrammarAST grammarAST20 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean21 = python3Target0.grammarSymbolCausesIssueInGeneratedCode(grammarAST20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 64 + "'", int19 == 64);
    }

    @Test
    public void test06564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06564");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        java.lang.String str3 = python3Target0.getLanguage();
        java.lang.String str5 = python3Target0.getTargetStringLiteralFromString("");
        java.lang.String str6 = python3Target0.getVersion();
        org.stringtemplate.v4.STGroup sTGroup7 = null;
        python3Target0.templates = sTGroup7;
        java.util.Set<java.lang.String> strSet9 = python3Target0.getBadWords();
        java.lang.String str12 = python3Target0.getTargetStringLiteralFromString("", true);
        python3Target0.addBadWords();
        org.antlr.v4.codegen.target.Python3Target python3Target14 = new org.antlr.v4.codegen.target.Python3Target();
        int int15 = python3Target14.getInlineTestSetWordSize();
        java.lang.String str16 = python3Target14.language;
        java.lang.String str17 = python3Target14.getLanguage();
        java.lang.String str19 = python3Target14.getTargetStringLiteralFromString("");
        java.lang.String str20 = python3Target14.getVersion();
        org.antlr.v4.codegen.target.Python3Target python3Target21 = new org.antlr.v4.codegen.target.Python3Target();
        int int22 = python3Target21.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup23 = python3Target21.templates;
        org.antlr.v4.tool.Grammar grammar24 = null;
        int[] intArray25 = new int[] {};
        java.lang.String[] strArray26 = python3Target21.getTokenTypesAsTargetLabels(grammar24, intArray25);
        python3Target14.targetCharValueEscape = strArray26;
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray26;
        python3Target0.targetCharValueEscape = strArray26;
        java.lang.String str30 = python3Target0.language;
        org.antlr.v4.codegen.CodeGenerator codeGenerator31 = null;
        java.lang.String str34 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator31, "\\\"\\\"4.5.2.1\\\"\\\"", false);
        org.antlr.v4.tool.ast.GrammarAST grammarAST35 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean36 = python3Target0.grammarSymbolCausesIssueInGeneratedCode(grammarAST35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\"\"" + "'", str5, "\"\"");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "4.5.2.1" + "'", str6, "4.5.2.1");
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"\"" + "'", str12, "\"\"");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 64 + "'", int15 == 64);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "\"\"" + "'", str19, "\"\"");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "4.5.2.1" + "'", str20, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 64 + "'", int22 == 64);
        org.junit.Assert.assertNull(sTGroup23);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]");
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "\\\"\\\"4.5.2.1\\\"\\\"" + "'", str34, "\\\"\\\"4.5.2.1\\\"\\\"");
    }

    @Test
    public void test06565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06565");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        boolean boolean3 = python3Target0.templatesExist();
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = null;
        java.lang.String str7 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator4, "\"\"\"64\"\"\"", true);
        java.util.Set<java.lang.String> strSet8 = python3Target0.badWords;
        java.util.Set<java.lang.String> strSet9 = python3Target0.badWords;
        org.antlr.v4.tool.ast.GrammarAST grammarAST10 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean11 = python3Target0.visibleGrammarSymbolCausesIssueInGeneratedCode(grammarAST10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"\\\"\\\"64\\\"\\\"\"" + "'", str7, "\"\\\"\\\"64\\\"\\\"\"");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNotNull(strSet9);
    }

    @Test
    public void test06566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06566");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.wantsBaseVisitor();
        org.antlr.v4.codegen.CodeGenerator codeGenerator2 = null;
        python3Target0.gen = codeGenerator2;
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = python3Target0.gen;
        java.util.Set<java.lang.String> strSet5 = python3Target0.badWords;
        org.antlr.v4.codegen.target.Python3Target python3Target6 = new org.antlr.v4.codegen.target.Python3Target();
        int int7 = python3Target6.getInlineTestSetWordSize();
        java.lang.String str8 = python3Target6.language;
        java.lang.String str9 = python3Target6.getVersion();
        int int10 = python3Target6.getInlineTestSetWordSize();
        java.lang.String str11 = python3Target6.getLanguage();
        java.lang.String str14 = python3Target6.getTargetStringLiteralFromString("4.5.2.1", true);
        boolean boolean15 = python3Target6.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet16 = python3Target6.badWords;
        org.antlr.v4.tool.Grammar grammar17 = null;
        org.stringtemplate.v4.ST sT18 = null;
        python3Target6.genRecognizerHeaderFile(grammar17, sT18, "\"4.5.2.1\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator21 = null;
        java.lang.String str24 = python3Target6.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator21, "i", true);
        org.antlr.v4.codegen.target.Python3Target python3Target25 = new org.antlr.v4.codegen.target.Python3Target();
        org.stringtemplate.v4.STGroup sTGroup26 = null;
        python3Target25.templates = sTGroup26;
        java.lang.String[] strArray31 = new java.lang.String[] { "", "\\0", "" };
        java.util.LinkedHashSet<java.lang.String> strSet32 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet32, strArray31);
        python3Target25.badWords = strSet32;
        python3Target6.badWords = strSet32;
        python3Target0.badWords = strSet32;
        org.stringtemplate.v4.STGroup sTGroup37 = python3Target0.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator38 = python3Target0.getCodeGenerator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str40 = python3Target0.getImplicitRuleLabel("\"\\12\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(codeGenerator4);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 64 + "'", int7 == 64);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "4.5.2.1" + "'", str9, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 64 + "'", int10 == 64);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\"4.5.2.1\"" + "'", str14, "\"4.5.2.1\"");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "\"\"" + "'", str24, "\"\"");
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(sTGroup37);
        org.junit.Assert.assertNull(codeGenerator38);
    }

    @Test
    public void test06567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06567");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        java.lang.String str3 = python3Target0.getVersion();
        int int4 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str5 = python3Target0.language;
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = python3Target0.getCodeGenerator();
        org.antlr.v4.tool.Grammar grammar7 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target8 = new org.antlr.v4.codegen.target.Python3Target();
        int int9 = python3Target8.getInlineTestSetWordSize();
        java.lang.String str10 = python3Target8.language;
        org.stringtemplate.v4.STGroup sTGroup11 = python3Target8.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = python3Target8.gen;
        java.util.Set<java.lang.String> strSet13 = python3Target8.badWords;
        java.util.Set<java.lang.String> strSet14 = python3Target8.badWords;
        java.lang.String str15 = python3Target8.language;
        org.antlr.v4.tool.Grammar grammar16 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target17 = new org.antlr.v4.codegen.target.Python3Target();
        int int18 = python3Target17.getInlineTestSetWordSize();
        java.lang.String str19 = python3Target17.language;
        java.lang.String str20 = python3Target17.getVersion();
        int int21 = python3Target17.getInlineTestSetWordSize();
        java.lang.String str22 = python3Target17.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator23 = python3Target17.gen;
        org.antlr.v4.tool.Grammar grammar24 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target25 = new org.antlr.v4.codegen.target.Python3Target();
        int int26 = python3Target25.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup27 = python3Target25.templates;
        org.antlr.v4.tool.Grammar grammar28 = null;
        int[] intArray29 = new int[] {};
        java.lang.String[] strArray30 = python3Target25.getTokenTypesAsTargetLabels(grammar28, intArray29);
        java.lang.String[] strArray31 = python3Target17.getTokenTypesAsTargetLabels(grammar24, intArray29);
        java.lang.String str32 = python3Target17.getLanguage();
        java.lang.String str33 = python3Target17.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator34 = null;
        python3Target17.gen = codeGenerator34;
        org.antlr.v4.tool.Grammar grammar36 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target37 = new org.antlr.v4.codegen.target.Python3Target();
        int int38 = python3Target37.getInlineTestSetWordSize();
        java.lang.String str39 = python3Target37.language;
        java.lang.String str40 = python3Target37.getVersion();
        int int41 = python3Target37.getInlineTestSetWordSize();
        java.lang.String str42 = python3Target37.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator43 = python3Target37.gen;
        org.antlr.v4.tool.Grammar grammar44 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target45 = new org.antlr.v4.codegen.target.Python3Target();
        int int46 = python3Target45.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup47 = python3Target45.templates;
        org.antlr.v4.tool.Grammar grammar48 = null;
        int[] intArray49 = new int[] {};
        java.lang.String[] strArray50 = python3Target45.getTokenTypesAsTargetLabels(grammar48, intArray49);
        java.lang.String[] strArray51 = python3Target37.getTokenTypesAsTargetLabels(grammar44, intArray49);
        java.lang.String str52 = python3Target37.getLanguage();
        java.lang.String str53 = python3Target37.getLanguage();
        java.lang.String str55 = python3Target37.getTargetStringLiteralFromString("\"i\"");
        org.antlr.v4.tool.Grammar grammar56 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target57 = new org.antlr.v4.codegen.target.Python3Target();
        int int58 = python3Target57.getInlineTestSetWordSize();
        java.lang.String[] strArray61 = new java.lang.String[] { "hi!", "" };
        python3Target57.targetCharValueEscape = strArray61;
        java.util.Set<java.lang.String> strSet63 = python3Target57.badWords;
        org.stringtemplate.v4.STGroup sTGroup64 = python3Target57.templates;
        org.antlr.v4.tool.Grammar grammar65 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target66 = new org.antlr.v4.codegen.target.Python3Target();
        int int67 = python3Target66.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup68 = python3Target66.templates;
        org.antlr.v4.tool.Grammar grammar69 = null;
        int[] intArray70 = new int[] {};
        java.lang.String[] strArray71 = python3Target66.getTokenTypesAsTargetLabels(grammar69, intArray70);
        java.lang.String[] strArray72 = python3Target57.getTokenTypesAsTargetLabels(grammar65, intArray70);
        java.lang.String[] strArray73 = python3Target37.getTokenTypesAsTargetLabels(grammar56, intArray70);
        java.lang.String[] strArray74 = python3Target17.getTokenTypesAsTargetLabels(grammar36, intArray70);
        java.lang.String[] strArray75 = python3Target8.getTokenTypesAsTargetLabels(grammar16, intArray70);
        java.lang.String[] strArray76 = python3Target0.getTokenTypesAsTargetLabels(grammar7, intArray70);
        org.antlr.v4.codegen.CodeGenerator codeGenerator77 = null;
        java.lang.String str80 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator77, "\"\"\"\".5.2.\"\"\"\"", true);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str82 = python3Target0.getImplicitSetLabel("\"\\\"\\\" \\\"\\\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "4.5.2.1" + "'", str3, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(codeGenerator6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 64 + "'", int9 == 64);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(sTGroup11);
        org.junit.Assert.assertNull(codeGenerator12);
        org.junit.Assert.assertNotNull(strSet13);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 64 + "'", int18 == 64);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "4.5.2.1" + "'", str20, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 64 + "'", int21 == 64);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(codeGenerator23);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 64 + "'", int26 == 64);
        org.junit.Assert.assertNull(sTGroup27);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[]");
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 64 + "'", int38 == 64);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "4.5.2.1" + "'", str40, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 64 + "'", int41 == 64);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNull(codeGenerator43);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 64 + "'", int46 == 64);
        org.junit.Assert.assertNull(sTGroup47);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[]");
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "\"\"i\"\"" + "'", str55, "\"\"i\"\"");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 64 + "'", int58 == 64);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(strSet63);
        org.junit.Assert.assertNull(sTGroup64);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 64 + "'", int67 == 64);
        org.junit.Assert.assertNull(sTGroup68);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[]");
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "\"\\\"\\\"\\\".5.2.\\\"\\\"\\\"\"" + "'", str80, "\"\\\"\\\"\\\".5.2.\\\"\\\"\\\"\"");
    }

    @Test
    public void test06568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06568");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        boolean boolean2 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.gen;
        boolean boolean4 = python3Target0.wantsBaseVisitor();
        boolean boolean5 = python3Target0.supportsOverloadedMethods();
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromString("\\0", false);
        boolean boolean9 = python3Target0.templatesExist();
        python3Target0.addBadWords();
        java.lang.String str12 = python3Target0.encodeIntAsCharEscape((int) ' ');
        org.antlr.v4.tool.Grammar grammar13 = null;
        org.stringtemplate.v4.ST sT14 = null;
        python3Target0.genRecognizerHeaderFile(grammar13, sT14, "\\64");
        java.lang.String str18 = python3Target0.getTargetStringLiteralFromString("\"\\\"\\\"\\\"i\\\"\\\"\\\"\"");
        org.antlr.v4.tool.Grammar grammar19 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str21 = python3Target0.getTokenTypeAsTargetLabel(grammar19, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\\0" + "'", str8, "\\0");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + " " + "'", str12, " ");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "\"\"\\\"\\\"\\\"i\\\"\\\"\\\"\"\"" + "'", str18, "\"\"\\\"\\\"\\\"i\\\"\\\"\\\"\"\"");
    }

    @Test
    public void test06569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06569");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        org.stringtemplate.v4.STGroup sTGroup3 = python3Target0.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = python3Target0.gen;
        java.lang.String str5 = python3Target0.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = python3Target0.gen;
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = python3Target0.gen;
        org.antlr.v4.tool.Grammar grammar8 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target9 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str10 = python3Target9.language;
        org.antlr.v4.codegen.target.Python3Target python3Target11 = new org.antlr.v4.codegen.target.Python3Target();
        org.stringtemplate.v4.STGroup sTGroup12 = null;
        python3Target11.templates = sTGroup12;
        java.lang.String[] strArray17 = new java.lang.String[] { "", "\\0", "" };
        java.util.LinkedHashSet<java.lang.String> strSet18 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet18, strArray17);
        python3Target11.badWords = strSet18;
        python3Target9.badWords = strSet18;
        org.antlr.v4.tool.Grammar grammar22 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target23 = new org.antlr.v4.codegen.target.Python3Target();
        int int24 = python3Target23.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup25 = python3Target23.templates;
        org.antlr.v4.tool.Grammar grammar26 = null;
        int[] intArray27 = new int[] {};
        java.lang.String[] strArray28 = python3Target23.getTokenTypesAsTargetLabels(grammar26, intArray27);
        java.lang.String[] strArray29 = python3Target9.getTokenTypesAsTargetLabels(grammar22, intArray27);
        java.lang.String[] strArray30 = python3Target0.getTokenTypesAsTargetLabels(grammar8, intArray27);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str32 = python3Target0.getImplicitRuleLabel("\"\"\"\"\"\"\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(sTGroup3);
        org.junit.Assert.assertNull(codeGenerator4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(codeGenerator6);
        org.junit.Assert.assertNull(codeGenerator7);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 64 + "'", int24 == 64);
        org.junit.Assert.assertNull(sTGroup25);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[]");
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(strArray30);
    }

    @Test
    public void test06570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06570");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        boolean boolean2 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.gen;
        boolean boolean4 = python3Target0.wantsBaseVisitor();
        java.lang.String str5 = python3Target0.getLanguage();
        python3Target0.language = "\"\"\"4.5.2.1\"\"\"";
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = null;
        python3Target0.gen = codeGenerator8;
        org.antlr.v4.codegen.target.Python3Target python3Target10 = new org.antlr.v4.codegen.target.Python3Target();
        int int11 = python3Target10.getInlineTestSetWordSize();
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!", "" };
        python3Target10.targetCharValueEscape = strArray14;
        org.antlr.v4.codegen.CodeGenerator codeGenerator16 = null;
        java.lang.String str19 = python3Target10.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator16, "\"\"", false);
        org.antlr.v4.codegen.target.Python3Target python3Target20 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str21 = python3Target20.language;
        java.lang.String[] strArray22 = python3Target20.targetCharValueEscape;
        python3Target10.targetCharValueEscape = strArray22;
        python3Target10.language = "\"\\\"\\\"4.5.2.1\\\"\\\"\"";
        java.lang.String[] strArray26 = python3Target10.targetCharValueEscape;
        python3Target0.targetCharValueEscape = strArray26;
        org.antlr.v4.codegen.target.Python3Target python3Target28 = new org.antlr.v4.codegen.target.Python3Target();
        int int29 = python3Target28.getInlineTestSetWordSize();
        java.lang.String str30 = python3Target28.language;
        java.lang.String str31 = python3Target28.getVersion();
        boolean boolean32 = python3Target28.wantsBaseListener();
        java.util.Set<java.lang.String> strSet33 = python3Target28.getBadWords();
        java.util.Set<java.lang.String> strSet34 = python3Target28.getBadWords();
        python3Target0.badWords = strSet34;
        org.antlr.v4.codegen.CodeGenerator codeGenerator36 = python3Target0.getCodeGenerator();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 64 + "'", int11 == 64);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 64 + "'", int29 == 64);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "4.5.2.1" + "'", str31, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strSet33);
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertNull(codeGenerator36);
    }

    @Test
    public void test06571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06571");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        boolean boolean2 = python3Target0.wantsBaseVisitor();
        java.lang.String str3 = python3Target0.getLanguage();
        int int4 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str5 = python3Target0.getLanguage();
        java.lang.String str7 = python3Target0.getTargetStringLiteralFromString("\"4.5.2.1\"");
        java.lang.String[] strArray8 = null;
        python3Target0.targetCharValueEscape = strArray8;
        int int10 = python3Target0.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup11 = python3Target0.templates;
        boolean boolean12 = python3Target0.templatesExist();
        org.antlr.v4.codegen.model.RuleFunction ruleFunction13 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str14 = python3Target0.getRuleFunctionContextStructName(ruleFunction13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"\"4.5.2.1\"\"" + "'", str7, "\"\"4.5.2.1\"\"");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 64 + "'", int10 == 64);
        org.junit.Assert.assertNull(sTGroup11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test06572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06572");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        java.lang.String str3 = python3Target0.getLanguage();
        java.lang.String str5 = python3Target0.getTargetStringLiteralFromString("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        java.lang.String str9 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator6, "hi!", true);
        int int10 = python3Target0.getSerializedATNSegmentLimit();
        boolean boolean11 = python3Target0.templatesExist();
        org.stringtemplate.v4.STGroup sTGroup12 = null;
        python3Target0.templates = sTGroup12;
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = null;
        java.lang.String str17 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator14, "", false);
        java.lang.String str18 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator19 = python3Target0.getCodeGenerator();
        java.util.Set<java.lang.String> strSet20 = python3Target0.getBadWords();
        org.antlr.v4.tool.Grammar grammar21 = null;
        org.stringtemplate.v4.ST sT22 = null;
        // The following exception was thrown during execution in test generation
        try {
            python3Target0.genListenerFile(grammar21, sT22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\"\"" + "'", str5, "\"\"");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"i\"" + "'", str9, "\"i\"");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 29 + "'", int10 == 29);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "4.5.2.1" + "'", str18, "4.5.2.1");
        org.junit.Assert.assertNull(codeGenerator19);
        org.junit.Assert.assertNotNull(strSet20);
    }

    @Test
    public void test06573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06573");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        java.lang.String str3 = python3Target0.getLanguage();
        java.lang.String str5 = python3Target0.getTargetStringLiteralFromString("");
        java.lang.String str7 = python3Target0.getTargetStringLiteralFromString("\\1");
        boolean boolean8 = python3Target0.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup9 = python3Target0.templates;
        boolean boolean10 = python3Target0.wantsBaseVisitor();
        boolean boolean11 = python3Target0.wantsBaseListener();
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = null;
        python3Target0.gen = codeGenerator12;
        boolean boolean14 = python3Target0.supportsOverloadedMethods();
        boolean boolean15 = python3Target0.templatesExist();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\"\"" + "'", str5, "\"\"");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"\\1\"" + "'", str7, "\"\\1\"");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(sTGroup9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test06574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06574");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "", true);
        org.antlr.v4.tool.Grammar grammar7 = null;
        org.stringtemplate.v4.ST sT8 = null;
        python3Target0.genRecognizerHeaderFile(grammar7, sT8, "");
        org.antlr.v4.tool.Grammar grammar11 = null;
        org.stringtemplate.v4.ST sT12 = null;
        python3Target0.genRecognizerHeaderFile(grammar11, sT12, "\"i\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator15 = python3Target0.gen;
        org.antlr.v4.codegen.CodeGenerator codeGenerator16 = null;
        python3Target0.gen = codeGenerator16;
        java.util.Set<java.lang.String> strSet18 = python3Target0.badWords;
        java.lang.String str20 = python3Target0.getTargetStringLiteralFromString("\"\"\\12\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator21 = python3Target0.gen;
        org.antlr.v4.codegen.CodeGenerator codeGenerator22 = python3Target0.gen;
        // The following exception was thrown during execution in test generation
        try {
            org.stringtemplate.v4.STGroup sTGroup23 = python3Target0.getTemplates();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"" + "'", str6, "\"\"");
        org.junit.Assert.assertNull(codeGenerator15);
        org.junit.Assert.assertNotNull(strSet18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "\"\"\"\\12\"\"\"" + "'", str20, "\"\"\"\\12\"\"\"");
        org.junit.Assert.assertNull(codeGenerator21);
        org.junit.Assert.assertNull(codeGenerator22);
    }

    @Test
    public void test06575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06575");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        org.stringtemplate.v4.STGroup sTGroup3 = python3Target0.templates;
        boolean boolean4 = python3Target0.supportsOverloadedMethods();
        java.lang.String str5 = python3Target0.getLanguage();
        org.antlr.v4.tool.ast.GrammarAST grammarAST6 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str7 = python3Target0.getLoopLabel(grammarAST6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(sTGroup3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str5);
    }

    @Test
    public void test06576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06576");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        boolean boolean2 = python3Target0.wantsBaseVisitor();
        java.lang.String str3 = python3Target0.getLanguage();
        int int4 = python3Target0.getInlineTestSetWordSize();
        java.lang.String[] strArray5 = python3Target0.targetCharValueEscape;
        int int6 = python3Target0.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup7 = null;
        python3Target0.templates = sTGroup7;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str10 = python3Target0.getImplicitTokenLabel("\"\"#\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 64 + "'", int6 == 64);
    }

    @Test
    public void test06577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06577");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        org.stringtemplate.v4.STGroup sTGroup1 = null;
        python3Target0.templates = sTGroup1;
        java.util.Set<java.lang.String> strSet3 = null;
        python3Target0.badWords = strSet3;
        boolean boolean5 = python3Target0.wantsBaseListener();
        java.lang.String[] strArray6 = python3Target0.targetCharValueEscape;
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromString("\"\\\"hi!\\\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = python3Target0.getCodeGenerator();
        java.lang.String str11 = python3Target0.getTargetStringLiteralFromString("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = null;
        python3Target0.gen = codeGenerator12;
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\"\\\"hi!\\\"\"\"" + "'", str8, "\"\"\\\"hi!\\\"\"\"");
        org.junit.Assert.assertNull(codeGenerator9);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"\"" + "'", str11, "\"\"");
    }

    @Test
    public void test06578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06578");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str2 = python3Target0.getTargetStringLiteralFromString("\"\"");
        int int3 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str5 = python3Target0.encodeIntAsCharEscape(0);
        java.lang.String str7 = python3Target0.getTargetStringLiteralFromString("");
        java.lang.String str8 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = python3Target0.gen;
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        java.lang.String str13 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator10, "\\35", false);
        java.lang.String str14 = python3Target0.getVersion();
        java.lang.String str15 = python3Target0.getLanguage();
        org.antlr.v4.tool.Grammar grammar16 = null;
        org.stringtemplate.v4.ST sT17 = null;
        python3Target0.genRecognizerHeaderFile(grammar16, sT17, "\"0\"");
        org.antlr.v4.tool.ast.GrammarAST grammarAST20 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str21 = python3Target0.getLoopCounter(grammarAST20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "\"\"\"\"" + "'", str2, "\"\"\"\"");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 64 + "'", int3 == 64);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\\0" + "'", str5, "\\0");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"\"" + "'", str7, "\"\"");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "4.5.2.1" + "'", str8, "4.5.2.1");
        org.junit.Assert.assertNull(codeGenerator9);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "3" + "'", str13, "3");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "4.5.2.1" + "'", str14, "4.5.2.1");
        org.junit.Assert.assertNull(str15);
    }

    @Test
    public void test06579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06579");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.LinkedHashSet<java.lang.String> strSet3 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet3, strArray2);
        python3Target0.badWords = strSet3;
        org.stringtemplate.v4.STGroup sTGroup6 = python3Target0.templates;
        int int7 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str9 = python3Target0.encodeIntAsCharEscape((int) (byte) 10);
        org.antlr.v4.codegen.target.Python3Target python3Target10 = new org.antlr.v4.codegen.target.Python3Target();
        int int11 = python3Target10.getInlineTestSetWordSize();
        boolean boolean12 = python3Target10.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = python3Target10.gen;
        java.lang.String str14 = python3Target10.getVersion();
        java.lang.String[] strArray15 = python3Target10.targetCharValueEscape;
        org.antlr.v4.tool.Grammar grammar16 = null;
        org.stringtemplate.v4.ST sT17 = null;
        python3Target10.genRecognizerHeaderFile(grammar16, sT17, "");
        python3Target10.addBadWords();
        org.antlr.v4.codegen.target.Python3Target python3Target21 = new org.antlr.v4.codegen.target.Python3Target();
        int int22 = python3Target21.getInlineTestSetWordSize();
        boolean boolean23 = python3Target21.wantsBaseVisitor();
        java.lang.String str24 = python3Target21.getLanguage();
        int int25 = python3Target21.getInlineTestSetWordSize();
        java.lang.String[] strArray26 = python3Target21.targetCharValueEscape;
        python3Target10.targetCharValueEscape = strArray26;
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray26;
        python3Target0.targetCharValueEscape = strArray26;
        org.antlr.v4.codegen.CodeGenerator codeGenerator30 = python3Target0.gen;
        org.antlr.v4.tool.Grammar grammar31 = null;
        org.stringtemplate.v4.ST sT32 = null;
        python3Target0.genRecognizerHeaderFile(grammar31, sT32, "\"\"\"12\"\"\"");
        java.lang.String[] strArray35 = python3Target0.targetCharValueEscape;
        // The following exception was thrown during execution in test generation
        try {
            org.stringtemplate.v4.STGroup sTGroup36 = python3Target0.getTemplates();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(sTGroup6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 64 + "'", int7 == 64);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\\12" + "'", str9, "\\12");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 64 + "'", int11 == 64);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(codeGenerator13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "4.5.2.1" + "'", str14, "4.5.2.1");
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 64 + "'", int22 == 64);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 64 + "'", int25 == 64);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNull(codeGenerator30);
        org.junit.Assert.assertNotNull(strArray35);
    }

    @Test
    public void test06580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06580");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.getCodeGenerator();
        java.util.Set<java.lang.String> strSet4 = python3Target0.getBadWords();
        org.stringtemplate.v4.STGroup sTGroup5 = null;
        python3Target0.templates = sTGroup5;
        java.util.Set<java.lang.String> strSet7 = python3Target0.badWords;
        org.antlr.v4.tool.Grammar grammar8 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target9 = new org.antlr.v4.codegen.target.Python3Target();
        int int10 = python3Target9.getInlineTestSetWordSize();
        java.lang.String str11 = python3Target9.language;
        java.lang.String str12 = python3Target9.getVersion();
        int int13 = python3Target9.getInlineTestSetWordSize();
        java.lang.String str14 = python3Target9.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator15 = python3Target9.gen;
        org.antlr.v4.tool.Grammar grammar16 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target17 = new org.antlr.v4.codegen.target.Python3Target();
        int int18 = python3Target17.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup19 = python3Target17.templates;
        org.antlr.v4.tool.Grammar grammar20 = null;
        int[] intArray21 = new int[] {};
        java.lang.String[] strArray22 = python3Target17.getTokenTypesAsTargetLabels(grammar20, intArray21);
        java.lang.String[] strArray23 = python3Target9.getTokenTypesAsTargetLabels(grammar16, intArray21);
        java.lang.String str24 = python3Target9.getLanguage();
        java.lang.String str25 = python3Target9.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator26 = null;
        python3Target9.gen = codeGenerator26;
        org.antlr.v4.tool.Grammar grammar28 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target29 = new org.antlr.v4.codegen.target.Python3Target();
        int int30 = python3Target29.getInlineTestSetWordSize();
        java.lang.String str31 = python3Target29.language;
        java.lang.String str32 = python3Target29.getVersion();
        int int33 = python3Target29.getInlineTestSetWordSize();
        java.lang.String str34 = python3Target29.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator35 = python3Target29.gen;
        org.antlr.v4.tool.Grammar grammar36 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target37 = new org.antlr.v4.codegen.target.Python3Target();
        int int38 = python3Target37.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup39 = python3Target37.templates;
        org.antlr.v4.tool.Grammar grammar40 = null;
        int[] intArray41 = new int[] {};
        java.lang.String[] strArray42 = python3Target37.getTokenTypesAsTargetLabels(grammar40, intArray41);
        java.lang.String[] strArray43 = python3Target29.getTokenTypesAsTargetLabels(grammar36, intArray41);
        java.lang.String str44 = python3Target29.getLanguage();
        java.lang.String str45 = python3Target29.getLanguage();
        java.lang.String str47 = python3Target29.getTargetStringLiteralFromString("\"i\"");
        org.antlr.v4.tool.Grammar grammar48 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target49 = new org.antlr.v4.codegen.target.Python3Target();
        int int50 = python3Target49.getInlineTestSetWordSize();
        java.lang.String[] strArray53 = new java.lang.String[] { "hi!", "" };
        python3Target49.targetCharValueEscape = strArray53;
        java.util.Set<java.lang.String> strSet55 = python3Target49.badWords;
        org.stringtemplate.v4.STGroup sTGroup56 = python3Target49.templates;
        org.antlr.v4.tool.Grammar grammar57 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target58 = new org.antlr.v4.codegen.target.Python3Target();
        int int59 = python3Target58.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup60 = python3Target58.templates;
        org.antlr.v4.tool.Grammar grammar61 = null;
        int[] intArray62 = new int[] {};
        java.lang.String[] strArray63 = python3Target58.getTokenTypesAsTargetLabels(grammar61, intArray62);
        java.lang.String[] strArray64 = python3Target49.getTokenTypesAsTargetLabels(grammar57, intArray62);
        java.lang.String[] strArray65 = python3Target29.getTokenTypesAsTargetLabels(grammar48, intArray62);
        java.lang.String[] strArray66 = python3Target9.getTokenTypesAsTargetLabels(grammar28, intArray62);
        java.lang.String[] strArray67 = python3Target0.getTokenTypesAsTargetLabels(grammar8, intArray62);
        org.antlr.v4.codegen.CodeGenerator codeGenerator68 = python3Target0.gen;
        org.antlr.v4.tool.Grammar grammar69 = null;
        org.stringtemplate.v4.ST sT70 = null;
        python3Target0.genRecognizerHeaderFile(grammar69, sT70, "4.5.2.1");
        org.antlr.v4.tool.ast.GrammarAST grammarAST73 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str74 = python3Target0.getLoopCounter(grammarAST73);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 64 + "'", int10 == 64);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "4.5.2.1" + "'", str12, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 64 + "'", int13 == 64);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(codeGenerator15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 64 + "'", int18 == 64);
        org.junit.Assert.assertNull(sTGroup19);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[]");
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 64 + "'", int30 == 64);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "4.5.2.1" + "'", str32, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 64 + "'", int33 == 64);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNull(codeGenerator35);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 64 + "'", int38 == 64);
        org.junit.Assert.assertNull(sTGroup39);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[]");
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "\"\"i\"\"" + "'", str47, "\"\"i\"\"");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 64 + "'", int50 == 64);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertNotNull(strSet55);
        org.junit.Assert.assertNull(sTGroup56);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 64 + "'", int59 == 64);
        org.junit.Assert.assertNull(sTGroup60);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[]");
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertNull(codeGenerator68);
    }

    @Test
    public void test06581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06581");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!", "" };
        python3Target0.targetCharValueEscape = strArray4;
        java.lang.String[] strArray6 = python3Target0.targetCharValueEscape;
        boolean boolean7 = python3Target0.supportsOverloadedMethods();
        java.lang.String[] strArray8 = new java.lang.String[] {};
        python3Target0.targetCharValueEscape = strArray8;
        boolean boolean10 = python3Target0.wantsBaseVisitor();
        int int11 = python3Target0.getInlineTestSetWordSize();
        boolean boolean12 = python3Target0.wantsBaseVisitor();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 64 + "'", int11 == 64);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test06582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06582");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str2 = python3Target0.encodeIntAsCharEscape(100);
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target4 = new org.antlr.v4.codegen.target.Python3Target();
        int int5 = python3Target4.getInlineTestSetWordSize();
        java.lang.String str6 = python3Target4.language;
        java.lang.String str7 = python3Target4.getVersion();
        int int8 = python3Target4.getInlineTestSetWordSize();
        java.lang.String str9 = python3Target4.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = python3Target4.gen;
        org.antlr.v4.tool.Grammar grammar11 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target12 = new org.antlr.v4.codegen.target.Python3Target();
        int int13 = python3Target12.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup14 = python3Target12.templates;
        org.antlr.v4.tool.Grammar grammar15 = null;
        int[] intArray16 = new int[] {};
        java.lang.String[] strArray17 = python3Target12.getTokenTypesAsTargetLabels(grammar15, intArray16);
        java.lang.String[] strArray18 = python3Target4.getTokenTypesAsTargetLabels(grammar11, intArray16);
        java.lang.String[] strArray19 = python3Target0.getTokenTypesAsTargetLabels(grammar3, intArray16);
        int int20 = python3Target0.getSerializedATNSegmentLimit();
        org.antlr.v4.codegen.CodeGenerator codeGenerator21 = python3Target0.getCodeGenerator();
        int int22 = python3Target0.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator23 = null;
        java.lang.String str26 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator23, "\"\"4.5.2.1\"\"", false);
        java.lang.String str29 = python3Target0.getTargetStringLiteralFromString("\\0", true);
        org.stringtemplate.v4.STGroup sTGroup30 = null;
        python3Target0.templates = sTGroup30;
        org.antlr.v4.tool.Grammar grammar32 = null;
        org.stringtemplate.v4.ST sT33 = null;
        python3Target0.genRecognizerHeaderFile(grammar32, sT33, "\\\"1\\\"");
        boolean boolean36 = python3Target0.templatesExist();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "d" + "'", str2, "d");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 64 + "'", int5 == 64);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4.5.2.1" + "'", str7, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 64 + "'", int8 == 64);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(codeGenerator10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 64 + "'", int13 == 64);
        org.junit.Assert.assertNull(sTGroup14);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]");
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 29 + "'", int20 == 29);
        org.junit.Assert.assertNull(codeGenerator21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 64 + "'", int22 == 64);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\\\"4.5.2.1\\\"" + "'", str26, "\\\"4.5.2.1\\\"");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "\"\\0\"" + "'", str29, "\"\\0\"");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test06583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06583");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str2 = python3Target0.getTargetStringLiteralFromString("\"\"");
        int int3 = python3Target0.getInlineTestSetWordSize();
        boolean boolean4 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.codegen.target.Python3Target python3Target5 = new org.antlr.v4.codegen.target.Python3Target();
        int int6 = python3Target5.getInlineTestSetWordSize();
        boolean boolean7 = python3Target5.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target5.gen;
        java.lang.String str9 = python3Target5.getVersion();
        java.lang.String[] strArray10 = python3Target5.targetCharValueEscape;
        boolean boolean11 = python3Target5.supportsOverloadedMethods();
        int int12 = python3Target5.getInlineTestSetWordSize();
        java.lang.String str13 = python3Target5.getLanguage();
        java.lang.String str14 = python3Target5.getVersion();
        org.antlr.v4.codegen.target.Python3Target python3Target15 = new org.antlr.v4.codegen.target.Python3Target();
        int int16 = python3Target15.getInlineTestSetWordSize();
        java.lang.String str17 = python3Target15.language;
        java.lang.String str18 = python3Target15.getVersion();
        int int19 = python3Target15.getInlineTestSetWordSize();
        java.lang.String str20 = python3Target15.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator21 = python3Target15.gen;
        org.antlr.v4.tool.Grammar grammar22 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target23 = new org.antlr.v4.codegen.target.Python3Target();
        int int24 = python3Target23.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup25 = python3Target23.templates;
        org.antlr.v4.tool.Grammar grammar26 = null;
        int[] intArray27 = new int[] {};
        java.lang.String[] strArray28 = python3Target23.getTokenTypesAsTargetLabels(grammar26, intArray27);
        java.lang.String[] strArray29 = python3Target15.getTokenTypesAsTargetLabels(grammar22, intArray27);
        java.lang.String str30 = python3Target15.getLanguage();
        java.lang.String str31 = python3Target15.getLanguage();
        java.lang.String str33 = python3Target15.getTargetStringLiteralFromString("\"i\"");
        org.antlr.v4.tool.Grammar grammar34 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target35 = new org.antlr.v4.codegen.target.Python3Target();
        int int36 = python3Target35.getInlineTestSetWordSize();
        java.lang.String[] strArray39 = new java.lang.String[] { "hi!", "" };
        python3Target35.targetCharValueEscape = strArray39;
        java.util.Set<java.lang.String> strSet41 = python3Target35.badWords;
        org.stringtemplate.v4.STGroup sTGroup42 = python3Target35.templates;
        org.antlr.v4.tool.Grammar grammar43 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target44 = new org.antlr.v4.codegen.target.Python3Target();
        int int45 = python3Target44.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup46 = python3Target44.templates;
        org.antlr.v4.tool.Grammar grammar47 = null;
        int[] intArray48 = new int[] {};
        java.lang.String[] strArray49 = python3Target44.getTokenTypesAsTargetLabels(grammar47, intArray48);
        java.lang.String[] strArray50 = python3Target35.getTokenTypesAsTargetLabels(grammar43, intArray48);
        java.lang.String[] strArray51 = python3Target15.getTokenTypesAsTargetLabels(grammar34, intArray48);
        python3Target5.targetCharValueEscape = strArray51;
        python3Target0.targetCharValueEscape = strArray51;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str55 = python3Target0.getImplicitRuleLabel("\"_tseta\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "\"\"\"\"" + "'", str2, "\"\"\"\"");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 64 + "'", int3 == 64);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 64 + "'", int6 == 64);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "4.5.2.1" + "'", str9, "4.5.2.1");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 64 + "'", int12 == 64);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "4.5.2.1" + "'", str14, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 64 + "'", int16 == 64);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "4.5.2.1" + "'", str18, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 64 + "'", int19 == 64);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(codeGenerator21);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 64 + "'", int24 == 64);
        org.junit.Assert.assertNull(sTGroup25);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[]");
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "\"\"i\"\"" + "'", str33, "\"\"i\"\"");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 64 + "'", int36 == 64);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(strSet41);
        org.junit.Assert.assertNull(sTGroup42);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 64 + "'", int45 == 64);
        org.junit.Assert.assertNull(sTGroup46);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[]");
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertNotNull(strArray51);
    }

    @Test
    public void test06584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06584");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "", true);
        java.util.Set<java.lang.String> strSet7 = python3Target0.badWords;
        java.lang.String str8 = python3Target0.language;
        int int9 = python3Target0.getInlineTestSetWordSize();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str11 = python3Target0.getImplicitTokenLabel("\"\\\"\\\"\\\"i\\\"\\\"\\\"\\\"Contex\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"" + "'", str6, "\"\"");
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 64 + "'", int9 == 64);
    }

    @Test
    public void test06585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06585");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str2 = python3Target0.getTargetStringLiteralFromString("\"\"");
        int int3 = python3Target0.getInlineTestSetWordSize();
        boolean boolean4 = python3Target0.supportsOverloadedMethods();
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromString("\"i\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        java.lang.String str10 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator7, "\"\"\\\"\\\"4.5.2.1\\\"\\\"\"\"", true);
        python3Target0.language = "\\\"hi!\\\"";
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = python3Target0.gen;
        java.lang.String str16 = python3Target0.getTargetStringLiteralFromString("\\12", false);
        boolean boolean17 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator18 = python3Target0.gen;
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "\"\"\"\"" + "'", str2, "\"\"\"\"");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 64 + "'", int3 == 64);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"i\"\"" + "'", str6, "\"\"i\"\"");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"\\\"\\\"\\\"4.5.2.1\\\"\\\"\\\"\"" + "'", str10, "\"\\\"\\\"\\\"4.5.2.1\\\"\\\"\\\"\"");
        org.junit.Assert.assertNull(codeGenerator13);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\\12" + "'", str16, "\\12");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(codeGenerator18);
    }

    @Test
    public void test06586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06586");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "", true);
        org.antlr.v4.tool.Grammar grammar7 = null;
        org.stringtemplate.v4.ST sT8 = null;
        python3Target0.genRecognizerHeaderFile(grammar7, sT8, "");
        org.antlr.v4.tool.Grammar grammar11 = null;
        org.stringtemplate.v4.ST sT12 = null;
        python3Target0.genRecognizerHeaderFile(grammar11, sT12, "\"i\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator15 = python3Target0.gen;
        org.antlr.v4.codegen.CodeGenerator codeGenerator16 = null;
        python3Target0.gen = codeGenerator16;
        org.stringtemplate.v4.STGroup sTGroup18 = null;
        python3Target0.templates = sTGroup18;
        org.antlr.v4.codegen.CodeGenerator codeGenerator20 = python3Target0.getCodeGenerator();
        java.lang.String str23 = python3Target0.getTargetStringLiteralFromString("4.5.2.1", true);
        boolean boolean24 = python3Target0.wantsBaseListener();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"" + "'", str6, "\"\"");
        org.junit.Assert.assertNull(codeGenerator15);
        org.junit.Assert.assertNull(codeGenerator20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "\"4.5.2.1\"" + "'", str23, "\"4.5.2.1\"");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test06587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06587");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        boolean boolean2 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.gen;
        boolean boolean4 = python3Target0.wantsBaseVisitor();
        java.lang.String str5 = python3Target0.language;
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromString("\\0", false);
        int int9 = python3Target0.getSerializedATNSegmentLimit();
        org.stringtemplate.v4.STGroup sTGroup10 = null;
        python3Target0.templates = sTGroup10;
        boolean boolean12 = python3Target0.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar13 = null;
        org.stringtemplate.v4.ST sT14 = null;
        python3Target0.genRecognizerHeaderFile(grammar13, sT14, "\"\"hi!\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = python3Target0.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup18 = null;
        python3Target0.templates = sTGroup18;
        int int20 = python3Target0.getInlineTestSetWordSize();
        org.antlr.v4.codegen.model.RuleFunction ruleFunction21 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str22 = python3Target0.getRuleFunctionContextStructName(ruleFunction21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\\0" + "'", str8, "\\0");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 29 + "'", int9 == 29);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(codeGenerator17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 64 + "'", int20 == 64);
    }

    @Test
    public void test06588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06588");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        org.stringtemplate.v4.STGroup sTGroup3 = python3Target0.templates;
        boolean boolean4 = python3Target0.templatesExist();
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = null;
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator5, "", false);
        int int9 = python3Target0.getInlineTestSetWordSize();
        boolean boolean10 = python3Target0.wantsBaseVisitor();
        java.lang.String str12 = python3Target0.encodeIntAsCharEscape(10);
        python3Target0.addBadWords();
        int int14 = python3Target0.getInlineTestSetWordSize();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(sTGroup3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 64 + "'", int9 == 64);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\\12" + "'", str12, "\\12");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 64 + "'", int14 == 64);
    }

    @Test
    public void test06589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06589");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        java.lang.String str3 = python3Target0.getVersion();
        int int4 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str5 = python3Target0.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = python3Target0.gen;
        org.antlr.v4.tool.Grammar grammar7 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target8 = new org.antlr.v4.codegen.target.Python3Target();
        int int9 = python3Target8.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup10 = python3Target8.templates;
        org.antlr.v4.tool.Grammar grammar11 = null;
        int[] intArray12 = new int[] {};
        java.lang.String[] strArray13 = python3Target8.getTokenTypesAsTargetLabels(grammar11, intArray12);
        java.lang.String[] strArray14 = python3Target0.getTokenTypesAsTargetLabels(grammar7, intArray12);
        java.lang.String str15 = python3Target0.getLanguage();
        java.lang.String str17 = python3Target0.encodeIntAsCharEscape(64);
        org.antlr.v4.tool.Grammar grammar18 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target19 = new org.antlr.v4.codegen.target.Python3Target();
        int int20 = python3Target19.getInlineTestSetWordSize();
        java.lang.String str21 = python3Target19.language;
        org.stringtemplate.v4.STGroup sTGroup22 = python3Target19.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator23 = python3Target19.gen;
        java.util.Set<java.lang.String> strSet24 = python3Target19.badWords;
        java.util.Set<java.lang.String> strSet25 = python3Target19.badWords;
        java.lang.String str26 = python3Target19.language;
        org.antlr.v4.tool.Grammar grammar27 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target28 = new org.antlr.v4.codegen.target.Python3Target();
        int int29 = python3Target28.getInlineTestSetWordSize();
        java.lang.String str30 = python3Target28.language;
        java.lang.String str31 = python3Target28.getVersion();
        int int32 = python3Target28.getInlineTestSetWordSize();
        java.lang.String str33 = python3Target28.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator34 = python3Target28.gen;
        org.antlr.v4.tool.Grammar grammar35 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target36 = new org.antlr.v4.codegen.target.Python3Target();
        int int37 = python3Target36.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup38 = python3Target36.templates;
        org.antlr.v4.tool.Grammar grammar39 = null;
        int[] intArray40 = new int[] {};
        java.lang.String[] strArray41 = python3Target36.getTokenTypesAsTargetLabels(grammar39, intArray40);
        java.lang.String[] strArray42 = python3Target28.getTokenTypesAsTargetLabels(grammar35, intArray40);
        java.lang.String str43 = python3Target28.getLanguage();
        java.lang.String str44 = python3Target28.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator45 = null;
        python3Target28.gen = codeGenerator45;
        org.antlr.v4.tool.Grammar grammar47 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target48 = new org.antlr.v4.codegen.target.Python3Target();
        int int49 = python3Target48.getInlineTestSetWordSize();
        java.lang.String str50 = python3Target48.language;
        java.lang.String str51 = python3Target48.getVersion();
        int int52 = python3Target48.getInlineTestSetWordSize();
        java.lang.String str53 = python3Target48.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator54 = python3Target48.gen;
        org.antlr.v4.tool.Grammar grammar55 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target56 = new org.antlr.v4.codegen.target.Python3Target();
        int int57 = python3Target56.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup58 = python3Target56.templates;
        org.antlr.v4.tool.Grammar grammar59 = null;
        int[] intArray60 = new int[] {};
        java.lang.String[] strArray61 = python3Target56.getTokenTypesAsTargetLabels(grammar59, intArray60);
        java.lang.String[] strArray62 = python3Target48.getTokenTypesAsTargetLabels(grammar55, intArray60);
        java.lang.String str63 = python3Target48.getLanguage();
        java.lang.String str64 = python3Target48.getLanguage();
        java.lang.String str66 = python3Target48.getTargetStringLiteralFromString("\"i\"");
        org.antlr.v4.tool.Grammar grammar67 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target68 = new org.antlr.v4.codegen.target.Python3Target();
        int int69 = python3Target68.getInlineTestSetWordSize();
        java.lang.String[] strArray72 = new java.lang.String[] { "hi!", "" };
        python3Target68.targetCharValueEscape = strArray72;
        java.util.Set<java.lang.String> strSet74 = python3Target68.badWords;
        org.stringtemplate.v4.STGroup sTGroup75 = python3Target68.templates;
        org.antlr.v4.tool.Grammar grammar76 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target77 = new org.antlr.v4.codegen.target.Python3Target();
        int int78 = python3Target77.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup79 = python3Target77.templates;
        org.antlr.v4.tool.Grammar grammar80 = null;
        int[] intArray81 = new int[] {};
        java.lang.String[] strArray82 = python3Target77.getTokenTypesAsTargetLabels(grammar80, intArray81);
        java.lang.String[] strArray83 = python3Target68.getTokenTypesAsTargetLabels(grammar76, intArray81);
        java.lang.String[] strArray84 = python3Target48.getTokenTypesAsTargetLabels(grammar67, intArray81);
        java.lang.String[] strArray85 = python3Target28.getTokenTypesAsTargetLabels(grammar47, intArray81);
        java.lang.String[] strArray86 = python3Target19.getTokenTypesAsTargetLabels(grammar27, intArray81);
        java.lang.String[] strArray87 = python3Target0.getTokenTypesAsTargetLabels(grammar18, intArray81);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str89 = python3Target0.getImplicitTokenLabel("\\\"\\\"0\\\"\\\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "4.5.2.1" + "'", str3, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(codeGenerator6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 64 + "'", int9 == 64);
        org.junit.Assert.assertNull(sTGroup10);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[]");
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "@" + "'", str17, "@");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 64 + "'", int20 == 64);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(sTGroup22);
        org.junit.Assert.assertNull(codeGenerator23);
        org.junit.Assert.assertNotNull(strSet24);
        org.junit.Assert.assertNotNull(strSet25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 64 + "'", int29 == 64);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "4.5.2.1" + "'", str31, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 64 + "'", int32 == 64);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(codeGenerator34);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 64 + "'", int37 == 64);
        org.junit.Assert.assertNull(sTGroup38);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[]");
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 64 + "'", int49 == 64);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "4.5.2.1" + "'", str51, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 64 + "'", int52 == 64);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNull(codeGenerator54);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 64 + "'", int57 == 64);
        org.junit.Assert.assertNull(sTGroup58);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[]");
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "\"\"i\"\"" + "'", str66, "\"\"i\"\"");
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 64 + "'", int69 == 64);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertNotNull(strSet74);
        org.junit.Assert.assertNull(sTGroup75);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 64 + "'", int78 == 64);
        org.junit.Assert.assertNull(sTGroup79);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[]");
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertNotNull(strArray83);
        org.junit.Assert.assertNotNull(strArray84);
        org.junit.Assert.assertNotNull(strArray85);
        org.junit.Assert.assertNotNull(strArray86);
        org.junit.Assert.assertNotNull(strArray87);
    }

    @Test
    public void test06590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06590");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        boolean boolean2 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.gen;
        boolean boolean4 = python3Target0.wantsBaseVisitor();
        python3Target0.addBadWords();
        java.lang.String str7 = python3Target0.encodeIntAsCharEscape(100);
        java.lang.String str8 = python3Target0.getVersion();
        java.lang.String str9 = python3Target0.getVersion();
        org.antlr.v4.codegen.target.Python3Target python3Target10 = new org.antlr.v4.codegen.target.Python3Target();
        int int11 = python3Target10.getInlineTestSetWordSize();
        java.lang.String str12 = python3Target10.language;
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = null;
        java.lang.String str16 = python3Target10.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator13, "", true);
        java.util.Set<java.lang.String> strSet17 = python3Target10.getBadWords();
        java.lang.String str19 = python3Target10.encodeIntAsCharEscape(29);
        java.util.Set<java.lang.String> strSet20 = python3Target10.getBadWords();
        python3Target0.badWords = strSet20;
        java.lang.String str22 = python3Target0.getVersion();
        org.antlr.v4.codegen.target.Python3Target python3Target23 = new org.antlr.v4.codegen.target.Python3Target();
        int int24 = python3Target23.getInlineTestSetWordSize();
        java.lang.String str25 = python3Target23.language;
        org.stringtemplate.v4.STGroup sTGroup26 = python3Target23.templates;
        boolean boolean27 = python3Target23.templatesExist();
        org.antlr.v4.codegen.CodeGenerator codeGenerator28 = null;
        java.lang.String str31 = python3Target23.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator28, "", false);
        java.util.Set<java.lang.String> strSet32 = null;
        python3Target23.badWords = strSet32;
        java.lang.String str36 = python3Target23.getTargetStringLiteralFromString("@", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator37 = null;
        java.lang.String str40 = python3Target23.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator37, "d", true);
        org.antlr.v4.codegen.target.Python3Target python3Target41 = new org.antlr.v4.codegen.target.Python3Target();
        int int42 = python3Target41.getInlineTestSetWordSize();
        java.lang.String str43 = python3Target41.language;
        java.lang.String str44 = python3Target41.getVersion();
        int int45 = python3Target41.getInlineTestSetWordSize();
        java.lang.String str46 = python3Target41.getLanguage();
        boolean boolean47 = python3Target41.templatesExist();
        java.util.Set<java.lang.String> strSet48 = python3Target41.getBadWords();
        python3Target23.badWords = strSet48;
        python3Target0.badWords = strSet48;
        python3Target0.addBadWords();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "d" + "'", str7, "d");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "4.5.2.1" + "'", str8, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "4.5.2.1" + "'", str9, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 64 + "'", int11 == 64);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\"\"" + "'", str16, "\"\"");
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "\\35" + "'", str19, "\\35");
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "4.5.2.1" + "'", str22, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 64 + "'", int24 == 64);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(sTGroup26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "\"@\"" + "'", str36, "\"@\"");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "\"\"" + "'", str40, "\"\"");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 64 + "'", int42 == 64);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "4.5.2.1" + "'", str44, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 64 + "'", int45 == 64);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(strSet48);
    }

    @Test
    public void test06591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06591");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str1 = python3Target0.language;
        int int2 = python3Target0.getSerializedATNSegmentLimit();
        org.stringtemplate.v4.STGroup sTGroup3 = null;
        python3Target0.templates = sTGroup3;
        boolean boolean5 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.tool.Grammar grammar6 = null;
        org.stringtemplate.v4.ST sT7 = null;
        // The following exception was thrown during execution in test generation
        try {
            python3Target0.genFile(grammar6, sT7, "\"\"Python3\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 29 + "'", int2 == 29);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test06592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06592");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        java.lang.String str3 = python3Target0.getVersion();
        int int4 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str5 = python3Target0.getLanguage();
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromString("4.5.2.1", true);
        boolean boolean9 = python3Target0.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet10 = python3Target0.badWords;
        org.antlr.v4.tool.Grammar grammar11 = null;
        org.stringtemplate.v4.ST sT12 = null;
        python3Target0.genRecognizerHeaderFile(grammar11, sT12, "\"4.5.2.1\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator15 = null;
        java.lang.String str18 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator15, "i", true);
        java.lang.String str19 = python3Target0.getLanguage();
        boolean boolean20 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.codegen.target.Python3Target python3Target21 = new org.antlr.v4.codegen.target.Python3Target();
        int int22 = python3Target21.getInlineTestSetWordSize();
        java.lang.String[] strArray25 = new java.lang.String[] { "hi!", "" };
        python3Target21.targetCharValueEscape = strArray25;
        org.antlr.v4.codegen.CodeGenerator codeGenerator27 = null;
        java.lang.String str30 = python3Target21.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator27, "\"\"", false);
        int int31 = python3Target21.getSerializedATNSegmentLimit();
        org.antlr.v4.codegen.CodeGenerator codeGenerator32 = python3Target21.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator33 = python3Target21.getCodeGenerator();
        boolean boolean34 = python3Target21.supportsOverloadedMethods();
        org.antlr.v4.codegen.target.Python3Target python3Target35 = new org.antlr.v4.codegen.target.Python3Target();
        int int36 = python3Target35.getInlineTestSetWordSize();
        java.lang.String str37 = python3Target35.language;
        java.lang.String str38 = python3Target35.getVersion();
        int int39 = python3Target35.getInlineTestSetWordSize();
        java.lang.String str40 = python3Target35.getLanguage();
        java.lang.String str43 = python3Target35.getTargetStringLiteralFromString("4.5.2.1", true);
        java.util.Set<java.lang.String> strSet44 = python3Target35.getBadWords();
        python3Target21.badWords = strSet44;
        python3Target0.badWords = strSet44;
        org.stringtemplate.v4.STGroup sTGroup47 = null;
        python3Target0.templates = sTGroup47;
        org.antlr.v4.codegen.CodeGenerator codeGenerator49 = null;
        java.lang.String str52 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator49, "\"\"\"\\0\"\"\"", false);
        org.antlr.v4.tool.Rule rule53 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str54 = python3Target0.getRuleFunctionContextStructName(rule53);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "4.5.2.1" + "'", str3, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"4.5.2.1\"" + "'", str8, "\"4.5.2.1\"");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "\"\"" + "'", str18, "\"\"");
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 64 + "'", int22 == 64);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 29 + "'", int31 == 29);
        org.junit.Assert.assertNull(codeGenerator32);
        org.junit.Assert.assertNull(codeGenerator33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 64 + "'", int36 == 64);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "4.5.2.1" + "'", str38, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 64 + "'", int39 == 64);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "\"4.5.2.1\"" + "'", str43, "\"4.5.2.1\"");
        org.junit.Assert.assertNotNull(strSet44);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "\\\"\\\"0\\\"\\\"" + "'", str52, "\\\"\\\"0\\\"\\\"");
    }

    @Test
    public void test06593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06593");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        java.lang.String str3 = python3Target0.getVersion();
        int int4 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str5 = python3Target0.getLanguage();
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromString("4.5.2.1", true);
        java.util.Set<java.lang.String> strSet9 = python3Target0.badWords;
        int int10 = python3Target0.getSerializedATNSegmentLimit();
        java.lang.String str11 = python3Target0.getVersion();
        java.lang.String[] strArray12 = new java.lang.String[] {};
        python3Target0.targetCharValueEscape = strArray12;
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = null;
        java.lang.String str17 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator14, "\"\"i\"\"", true);
        java.lang.String[] strArray18 = python3Target0.targetCharValueEscape;
        java.lang.String str21 = python3Target0.getTargetStringLiteralFromString("\"\\1\"", true);
        java.lang.String str22 = python3Target0.getLanguage();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str24 = python3Target0.getImplicitSetLabel("\"6\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "4.5.2.1" + "'", str3, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"4.5.2.1\"" + "'", str8, "\"4.5.2.1\"");
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 29 + "'", int10 == 29);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "4.5.2.1" + "'", str11, "4.5.2.1");
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\"\\\"i\\\"\"" + "'", str17, "\"\\\"i\\\"\"");
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "\"\"\\1\"\"" + "'", str21, "\"\"\\1\"\"");
        org.junit.Assert.assertNull(str22);
    }

    @Test
    public void test06594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06594");
        java.lang.String str1 = org.stringtemplate.v4.StringRenderer.escapeHTML("\\\"\\\"\\\"\\\"\\\"0\\\"\\\"\\\"\\\"\\\"");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "\\\"\\\"\\\"\\\"\\\"0\\\"\\\"\\\"\\\"\\\"" + "'", str1, "\\\"\\\"\\\"\\\"\\\"0\\\"\\\"\\\"\\\"\\\"");
    }

    @Test
    public void test06595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06595");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        org.stringtemplate.v4.STGroup sTGroup3 = python3Target0.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = python3Target0.gen;
        java.util.Set<java.lang.String> strSet5 = python3Target0.badWords;
        org.stringtemplate.v4.STGroup sTGroup6 = null;
        python3Target0.templates = sTGroup6;
        java.util.Set<java.lang.String> strSet8 = python3Target0.badWords;
        java.lang.String str9 = python3Target0.getLanguage();
        org.antlr.v4.codegen.target.Python3Target python3Target10 = new org.antlr.v4.codegen.target.Python3Target();
        int int11 = python3Target10.getInlineTestSetWordSize();
        java.lang.String str12 = python3Target10.language;
        java.lang.String str13 = python3Target10.getVersion();
        int int14 = python3Target10.getInlineTestSetWordSize();
        java.lang.String str15 = python3Target10.getLanguage();
        java.lang.String str18 = python3Target10.getTargetStringLiteralFromString("4.5.2.1", true);
        boolean boolean19 = python3Target10.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet20 = python3Target10.badWords;
        org.antlr.v4.codegen.CodeGenerator codeGenerator21 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target22 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator21);
        java.lang.String str24 = python3Target22.encodeIntAsCharEscape((int) (short) 1);
        org.stringtemplate.v4.STGroup sTGroup25 = python3Target22.loadTemplates();
        python3Target10.templates = sTGroup25;
        python3Target0.templates = sTGroup25;
        java.lang.String str29 = python3Target0.encodeIntAsCharEscape((int) 'a');
        org.antlr.v4.codegen.CodeGenerator codeGenerator30 = python3Target0.gen;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(sTGroup3);
        org.junit.Assert.assertNull(codeGenerator4);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 64 + "'", int11 == 64);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "4.5.2.1" + "'", str13, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 64 + "'", int14 == 64);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "\"4.5.2.1\"" + "'", str18, "\"4.5.2.1\"");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "\\1" + "'", str24, "\\1");
        org.junit.Assert.assertNotNull(sTGroup25);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "a" + "'", str29, "a");
        org.junit.Assert.assertNull(codeGenerator30);
    }

    @Test
    public void test06596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06596");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        org.stringtemplate.v4.STGroup sTGroup3 = python3Target0.templates;
        boolean boolean4 = python3Target0.templatesExist();
        java.lang.String[] strArray5 = python3Target0.targetCharValueEscape;
        java.util.Set<java.lang.String> strSet6 = python3Target0.badWords;
        boolean boolean7 = python3Target0.templatesExist();
        java.util.Set<java.lang.String> strSet8 = python3Target0.getBadWords();
        org.antlr.v4.codegen.target.Python3Target python3Target9 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str10 = python3Target9.language;
        org.antlr.v4.codegen.target.Python3Target python3Target11 = new org.antlr.v4.codegen.target.Python3Target();
        org.stringtemplate.v4.STGroup sTGroup12 = null;
        python3Target11.templates = sTGroup12;
        java.lang.String[] strArray17 = new java.lang.String[] { "", "\\0", "" };
        java.util.LinkedHashSet<java.lang.String> strSet18 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet18, strArray17);
        python3Target11.badWords = strSet18;
        python3Target9.badWords = strSet18;
        org.stringtemplate.v4.STGroup sTGroup22 = python3Target9.templates;
        org.antlr.v4.codegen.target.Python3Target python3Target23 = new org.antlr.v4.codegen.target.Python3Target();
        int int24 = python3Target23.getInlineTestSetWordSize();
        boolean boolean25 = python3Target23.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator26 = python3Target23.gen;
        boolean boolean27 = python3Target23.supportsOverloadedMethods();
        java.lang.String[] strArray28 = python3Target23.targetCharValueEscape;
        python3Target9.targetCharValueEscape = strArray28;
        java.util.Set<java.lang.String> strSet30 = python3Target9.getBadWords();
        python3Target0.badWords = strSet30;
        org.stringtemplate.v4.STGroup sTGroup32 = python3Target0.templates;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass33 = sTGroup32.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(sTGroup3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(sTGroup22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 64 + "'", int24 == 64);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(codeGenerator26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertNull(sTGroup32);
    }

    @Test
    public void test06597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06597");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str2 = python3Target0.getTargetStringLiteralFromString("\"\"");
        int int3 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str5 = python3Target0.encodeIntAsCharEscape(0);
        java.lang.String str7 = python3Target0.getTargetStringLiteralFromString("");
        java.lang.String str8 = python3Target0.getVersion();
        java.util.Set<java.lang.String> strSet9 = python3Target0.badWords;
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "\"\"\"\"" + "'", str2, "\"\"\"\"");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 64 + "'", int3 == 64);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\\0" + "'", str5, "\\0");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"\"" + "'", str7, "\"\"");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "4.5.2.1" + "'", str8, "4.5.2.1");
        org.junit.Assert.assertNotNull(strSet9);
    }

    @Test
    public void test06598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06598");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        java.lang.String str3 = python3Target0.getVersion();
        org.stringtemplate.v4.STGroup sTGroup4 = null;
        python3Target0.templates = sTGroup4;
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        java.lang.String str9 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator6, "d", false);
        java.lang.String str10 = python3Target0.getVersion();
        int int11 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str13 = python3Target0.getTargetStringLiteralFromString("\"1\"");
        int int14 = python3Target0.getSerializedATNSegmentLimit();
        java.lang.String str15 = python3Target0.getLanguage();
        python3Target0.addBadWords();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "4.5.2.1" + "'", str3, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "4.5.2.1" + "'", str10, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 64 + "'", int11 == 64);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"\"1\"\"" + "'", str13, "\"\"1\"\"");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 29 + "'", int14 == 29);
        org.junit.Assert.assertNull(str15);
    }

    @Test
    public void test06599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06599");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        java.lang.String str3 = python3Target0.getLanguage();
        java.lang.String str5 = python3Target0.getTargetStringLiteralFromString("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        java.lang.String str9 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator6, "hi!", true);
        int int10 = python3Target0.getSerializedATNSegmentLimit();
        boolean boolean11 = python3Target0.templatesExist();
        org.antlr.v4.codegen.target.Python3Target python3Target12 = new org.antlr.v4.codegen.target.Python3Target();
        int int13 = python3Target12.getInlineTestSetWordSize();
        boolean boolean14 = python3Target12.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator15 = python3Target12.gen;
        boolean boolean16 = python3Target12.wantsBaseVisitor();
        boolean boolean17 = python3Target12.supportsOverloadedMethods();
        java.lang.String str20 = python3Target12.getTargetStringLiteralFromString("\\0", false);
        java.lang.String str22 = python3Target12.encodeIntAsCharEscape(10);
        java.util.Set<java.lang.String> strSet23 = python3Target12.getBadWords();
        python3Target0.badWords = strSet23;
        org.stringtemplate.v4.STGroup sTGroup25 = null;
        python3Target0.templates = sTGroup25;
        org.antlr.v4.codegen.CodeGenerator codeGenerator27 = python3Target0.getCodeGenerator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str29 = python3Target0.getImplicitTokenLabel("\"\"\"\\\"\\\"\\\"i\\\"\\\"\\\"\"\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\"\"" + "'", str5, "\"\"");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"i\"" + "'", str9, "\"i\"");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 29 + "'", int10 == 29);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 64 + "'", int13 == 64);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(codeGenerator15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "\\0" + "'", str20, "\\0");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "\\12" + "'", str22, "\\12");
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertNull(codeGenerator27);
    }

    @Test
    public void test06600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06600");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str2 = python3Target0.getTargetStringLiteralFromString("\"\"");
        int int3 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str5 = python3Target0.encodeIntAsCharEscape(0);
        java.lang.String str7 = python3Target0.getTargetStringLiteralFromString("");
        int int8 = python3Target0.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = null;
        java.lang.String str12 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator9, "\\12", false);
        org.antlr.v4.tool.Grammar grammar13 = null;
        org.stringtemplate.v4.ST sT14 = null;
        python3Target0.genRecognizerHeaderFile(grammar13, sT14, "d");
        int int17 = python3Target0.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator18 = null;
        python3Target0.gen = codeGenerator18;
        org.antlr.v4.tool.Grammar grammar20 = null;
        org.stringtemplate.v4.ST sT21 = null;
        python3Target0.genRecognizerHeaderFile(grammar20, sT21, "\"\\\"i\\\"\"");
        java.lang.String str25 = python3Target0.encodeIntAsCharEscape(0);
        org.antlr.v4.tool.Rule rule26 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str27 = python3Target0.getRuleFunctionContextStructName(rule26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "\"\"\"\"" + "'", str2, "\"\"\"\"");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 64 + "'", int3 == 64);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\\0" + "'", str5, "\\0");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"\"" + "'", str7, "\"\"");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 64 + "'", int8 == 64);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "1" + "'", str12, "1");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 64 + "'", int17 == 64);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "\\0" + "'", str25, "\\0");
    }

    @Test
    public void test06601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06601");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        java.lang.String str3 = python3Target0.getVersion();
        int int4 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str5 = python3Target0.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = python3Target0.gen;
        org.antlr.v4.tool.Grammar grammar7 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target8 = new org.antlr.v4.codegen.target.Python3Target();
        int int9 = python3Target8.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup10 = python3Target8.templates;
        org.antlr.v4.tool.Grammar grammar11 = null;
        int[] intArray12 = new int[] {};
        java.lang.String[] strArray13 = python3Target8.getTokenTypesAsTargetLabels(grammar11, intArray12);
        java.lang.String[] strArray14 = python3Target0.getTokenTypesAsTargetLabels(grammar7, intArray12);
        boolean boolean15 = python3Target0.templatesExist();
        java.lang.String str16 = python3Target0.language;
        java.lang.String str18 = python3Target0.getTargetStringLiteralFromString("\\\"\\\"\\\"\\\"0\\\"\\\"\\\"\\\"");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "4.5.2.1" + "'", str3, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(codeGenerator6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 64 + "'", int9 == 64);
        org.junit.Assert.assertNull(sTGroup10);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[]");
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "\"\\\"\\\"\\\"\\\"0\\\"\\\"\\\"\\\"\"" + "'", str18, "\"\\\"\\\"\\\"\\\"0\\\"\\\"\\\"\\\"\"");
    }

    @Test
    public void test06602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06602");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        java.lang.String str3 = python3Target0.getVersion();
        org.stringtemplate.v4.STGroup sTGroup4 = null;
        python3Target0.templates = sTGroup4;
        java.util.Set<java.lang.String> strSet6 = python3Target0.badWords;
        boolean boolean7 = python3Target0.templatesExist();
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = null;
        java.lang.String str11 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator8, "\\\"\\\"4.5.2.1\\\"\\\"", true);
        python3Target0.addBadWords();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "4.5.2.1" + "'", str3, "4.5.2.1");
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"\\\"\\\"4.5.2.1\\\"\\\"\"" + "'", str11, "\"\\\"\\\"4.5.2.1\\\"\\\"\"");
    }

    @Test
    public void test06603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06603");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        org.stringtemplate.v4.STGroup sTGroup1 = null;
        python3Target0.templates = sTGroup1;
        java.lang.String[] strArray6 = new java.lang.String[] { "", "\\0", "" };
        java.util.LinkedHashSet<java.lang.String> strSet7 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet7, strArray6);
        python3Target0.badWords = strSet7;
        python3Target0.addBadWords();
        boolean boolean11 = python3Target0.supportsOverloadedMethods();
        python3Target0.addBadWords();
        java.lang.String str14 = python3Target0.getTargetStringLiteralFromString("\"\\0\"");
        org.stringtemplate.v4.STGroup sTGroup15 = null;
        python3Target0.templates = sTGroup15;
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = null;
        python3Target0.gen = codeGenerator17;
        java.util.Set<java.lang.String> strSet19 = python3Target0.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator20 = null;
        python3Target0.gen = codeGenerator20;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str23 = python3Target0.getElementListName("\"0\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\"\"\\0\"\"" + "'", str14, "\"\"\\0\"\"");
        org.junit.Assert.assertNotNull(strSet19);
    }

    @Test
    public void test06604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06604");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        org.stringtemplate.v4.STGroup sTGroup1 = null;
        python3Target0.templates = sTGroup1;
        java.util.Set<java.lang.String> strSet3 = null;
        python3Target0.badWords = strSet3;
        boolean boolean5 = python3Target0.supportsOverloadedMethods();
        int int6 = python3Target0.getInlineTestSetWordSize();
        java.lang.String[] strArray7 = python3Target0.targetCharValueEscape;
        java.lang.String str9 = python3Target0.encodeIntAsCharEscape((int) (short) 0);
        boolean boolean10 = python3Target0.supportsOverloadedMethods();
        java.lang.String str12 = python3Target0.encodeIntAsCharEscape(0);
        org.antlr.v4.codegen.target.Python3Target python3Target13 = new org.antlr.v4.codegen.target.Python3Target();
        int int14 = python3Target13.getInlineTestSetWordSize();
        java.lang.String str15 = python3Target13.language;
        java.lang.String str16 = python3Target13.getVersion();
        int int17 = python3Target13.getInlineTestSetWordSize();
        java.lang.String str18 = python3Target13.getLanguage();
        java.lang.String str21 = python3Target13.getTargetStringLiteralFromString("4.5.2.1", true);
        boolean boolean22 = python3Target13.supportsOverloadedMethods();
        java.lang.String[] strArray23 = python3Target13.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup24 = python3Target13.templates;
        org.antlr.v4.codegen.target.Python3Target python3Target25 = new org.antlr.v4.codegen.target.Python3Target();
        int int26 = python3Target25.getInlineTestSetWordSize();
        java.lang.String str27 = python3Target25.language;
        org.stringtemplate.v4.STGroup sTGroup28 = python3Target25.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator29 = python3Target25.gen;
        boolean boolean30 = python3Target25.wantsBaseListener();
        org.antlr.v4.tool.Grammar grammar31 = null;
        org.stringtemplate.v4.ST sT32 = null;
        python3Target25.genRecognizerHeaderFile(grammar31, sT32, "\"4.5.2.1\"");
        boolean boolean35 = python3Target25.templatesExist();
        java.util.Set<java.lang.String> strSet36 = python3Target25.badWords;
        java.util.Set<java.lang.String> strSet37 = python3Target25.getBadWords();
        python3Target13.badWords = strSet37;
        org.antlr.v4.codegen.target.Python3Target python3Target39 = new org.antlr.v4.codegen.target.Python3Target();
        int int40 = python3Target39.getInlineTestSetWordSize();
        java.lang.String str41 = python3Target39.language;
        java.lang.String str42 = python3Target39.getVersion();
        int int43 = python3Target39.getInlineTestSetWordSize();
        java.lang.String str44 = python3Target39.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator45 = python3Target39.gen;
        org.antlr.v4.tool.Grammar grammar46 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target47 = new org.antlr.v4.codegen.target.Python3Target();
        int int48 = python3Target47.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup49 = python3Target47.templates;
        org.antlr.v4.tool.Grammar grammar50 = null;
        int[] intArray51 = new int[] {};
        java.lang.String[] strArray52 = python3Target47.getTokenTypesAsTargetLabels(grammar50, intArray51);
        java.lang.String[] strArray53 = python3Target39.getTokenTypesAsTargetLabels(grammar46, intArray51);
        java.lang.String str56 = python3Target39.getTargetStringLiteralFromString("", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator57 = null;
        java.lang.String str60 = python3Target39.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator57, "\"i\"", true);
        org.stringtemplate.v4.STGroup sTGroup61 = null;
        python3Target39.templates = sTGroup61;
        boolean boolean63 = python3Target39.templatesExist();
        boolean boolean64 = python3Target39.wantsBaseVisitor();
        java.util.Set<java.lang.String> strSet65 = python3Target39.badWords;
        python3Target13.badWords = strSet65;
        python3Target0.badWords = strSet65;
        java.lang.Class<?> wildcardClass68 = strSet65.getClass();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 64 + "'", int6 == 64);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\\0" + "'", str9, "\\0");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\\0" + "'", str12, "\\0");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 64 + "'", int14 == 64);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "4.5.2.1" + "'", str16, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 64 + "'", int17 == 64);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "\"4.5.2.1\"" + "'", str21, "\"4.5.2.1\"");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNull(sTGroup24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 64 + "'", int26 == 64);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(sTGroup28);
        org.junit.Assert.assertNull(codeGenerator29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strSet36);
        org.junit.Assert.assertNotNull(strSet37);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 64 + "'", int40 == 64);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "4.5.2.1" + "'", str42, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 64 + "'", int43 == 64);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNull(codeGenerator45);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 64 + "'", int48 == 64);
        org.junit.Assert.assertNull(sTGroup49);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[]");
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "\"i\"" + "'", str60, "\"i\"");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(strSet65);
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test06605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06605");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "", true);
        java.lang.String str8 = python3Target0.encodeIntAsCharEscape((int) (short) 100);
        org.stringtemplate.v4.STGroup sTGroup9 = python3Target0.templates;
        java.lang.String str11 = python3Target0.encodeIntAsCharEscape(29);
        java.lang.String str13 = python3Target0.getTargetStringLiteralFromString("");
        boolean boolean14 = python3Target0.templatesExist();
        int int15 = python3Target0.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar16 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str18 = python3Target0.getTokenTypeAsTargetLabel(grammar16, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"" + "'", str6, "\"\"");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "d" + "'", str8, "d");
        org.junit.Assert.assertNull(sTGroup9);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\\35" + "'", str11, "\\35");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"\"" + "'", str13, "\"\"");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 29 + "'", int15 == 29);
    }

    @Test
    public void test06606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06606");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        boolean boolean2 = python3Target0.wantsBaseVisitor();
        java.lang.String str3 = python3Target0.getLanguage();
        int int4 = python3Target0.getInlineTestSetWordSize();
        python3Target0.addBadWords();
        org.antlr.v4.tool.Grammar grammar6 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target7 = new org.antlr.v4.codegen.target.Python3Target();
        int int8 = python3Target7.getInlineTestSetWordSize();
        java.lang.String str9 = python3Target7.language;
        java.lang.String str10 = python3Target7.getLanguage();
        java.lang.String str12 = python3Target7.getTargetStringLiteralFromString("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = null;
        java.lang.String str16 = python3Target7.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator13, "hi!", true);
        int int17 = python3Target7.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar18 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target19 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str20 = python3Target19.language;
        org.antlr.v4.codegen.target.Python3Target python3Target21 = new org.antlr.v4.codegen.target.Python3Target();
        org.stringtemplate.v4.STGroup sTGroup22 = null;
        python3Target21.templates = sTGroup22;
        java.lang.String[] strArray27 = new java.lang.String[] { "", "\\0", "" };
        java.util.LinkedHashSet<java.lang.String> strSet28 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet28, strArray27);
        python3Target21.badWords = strSet28;
        python3Target19.badWords = strSet28;
        org.antlr.v4.tool.Grammar grammar32 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target33 = new org.antlr.v4.codegen.target.Python3Target();
        int int34 = python3Target33.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup35 = python3Target33.templates;
        org.antlr.v4.tool.Grammar grammar36 = null;
        int[] intArray37 = new int[] {};
        java.lang.String[] strArray38 = python3Target33.getTokenTypesAsTargetLabels(grammar36, intArray37);
        java.lang.String[] strArray39 = python3Target19.getTokenTypesAsTargetLabels(grammar32, intArray37);
        java.lang.String[] strArray40 = python3Target7.getTokenTypesAsTargetLabels(grammar18, intArray37);
        java.lang.String[] strArray41 = python3Target0.getTokenTypesAsTargetLabels(grammar6, intArray37);
        org.antlr.v4.codegen.CodeGenerator codeGenerator42 = python3Target0.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup43 = null;
        python3Target0.templates = sTGroup43;
        boolean boolean45 = python3Target0.wantsBaseVisitor();
        java.lang.String str46 = python3Target0.getVersion();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 64 + "'", int8 == 64);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"\"" + "'", str12, "\"\"");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\"i\"" + "'", str16, "\"i\"");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 29 + "'", int17 == 29);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 64 + "'", int34 == 64);
        org.junit.Assert.assertNull(sTGroup35);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[]");
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNull(codeGenerator42);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "4.5.2.1" + "'", str46, "4.5.2.1");
    }

    @Test
    public void test06607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06607");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = python3Target0.gen;
        java.lang.String str8 = python3Target0.language;
        java.lang.String str9 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = python3Target0.getCodeGenerator();
        java.util.Set<java.lang.String> strSet11 = python3Target0.badWords;
        org.antlr.v4.tool.Grammar grammar12 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target13 = new org.antlr.v4.codegen.target.Python3Target();
        int int14 = python3Target13.getInlineTestSetWordSize();
        boolean boolean15 = python3Target13.wantsBaseVisitor();
        java.lang.String str16 = python3Target13.getLanguage();
        int int17 = python3Target13.getInlineTestSetWordSize();
        python3Target13.addBadWords();
        org.antlr.v4.tool.Grammar grammar19 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target20 = new org.antlr.v4.codegen.target.Python3Target();
        int int21 = python3Target20.getInlineTestSetWordSize();
        java.lang.String str22 = python3Target20.language;
        java.lang.String str23 = python3Target20.getLanguage();
        java.lang.String str25 = python3Target20.getTargetStringLiteralFromString("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator26 = null;
        java.lang.String str29 = python3Target20.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator26, "hi!", true);
        int int30 = python3Target20.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar31 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target32 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str33 = python3Target32.language;
        org.antlr.v4.codegen.target.Python3Target python3Target34 = new org.antlr.v4.codegen.target.Python3Target();
        org.stringtemplate.v4.STGroup sTGroup35 = null;
        python3Target34.templates = sTGroup35;
        java.lang.String[] strArray40 = new java.lang.String[] { "", "\\0", "" };
        java.util.LinkedHashSet<java.lang.String> strSet41 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet41, strArray40);
        python3Target34.badWords = strSet41;
        python3Target32.badWords = strSet41;
        org.antlr.v4.tool.Grammar grammar45 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target46 = new org.antlr.v4.codegen.target.Python3Target();
        int int47 = python3Target46.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup48 = python3Target46.templates;
        org.antlr.v4.tool.Grammar grammar49 = null;
        int[] intArray50 = new int[] {};
        java.lang.String[] strArray51 = python3Target46.getTokenTypesAsTargetLabels(grammar49, intArray50);
        java.lang.String[] strArray52 = python3Target32.getTokenTypesAsTargetLabels(grammar45, intArray50);
        java.lang.String[] strArray53 = python3Target20.getTokenTypesAsTargetLabels(grammar31, intArray50);
        java.lang.String[] strArray54 = python3Target13.getTokenTypesAsTargetLabels(grammar19, intArray50);
        java.lang.String[] strArray55 = python3Target0.getTokenTypesAsTargetLabels(grammar12, intArray50);
        boolean boolean56 = python3Target0.wantsBaseListener();
        java.lang.String str58 = python3Target0.getTargetStringLiteralFromString("\"\"\"\"\"\"4.5.2.1\"\"\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar59 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str61 = python3Target0.getTokenTypeAsTargetLabel(grammar59, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"" + "'", str6, "\"\"");
        org.junit.Assert.assertNull(codeGenerator7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "4.5.2.1" + "'", str9, "4.5.2.1");
        org.junit.Assert.assertNull(codeGenerator10);
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 64 + "'", int14 == 64);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 64 + "'", int17 == 64);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 64 + "'", int21 == 64);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "\"\"" + "'", str25, "\"\"");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "\"i\"" + "'", str29, "\"i\"");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 29 + "'", int30 == 29);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 64 + "'", int47 == 64);
        org.junit.Assert.assertNull(sTGroup48);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[]");
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "\"\"\"\"\"\"\"4.5.2.1\"\"\"\"\"\"\"" + "'", str58, "\"\"\"\"\"\"\"4.5.2.1\"\"\"\"\"\"\"");
    }

    @Test
    public void test06608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06608");
        java.lang.String str1 = org.stringtemplate.v4.StringRenderer.escapeHTML("\"\\\"#\\\"\"");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "\"\\\"#\\\"\"" + "'", str1, "\"\\\"#\\\"\"");
    }

    @Test
    public void test06609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06609");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.wantsBaseVisitor();
        org.antlr.v4.codegen.CodeGenerator codeGenerator2 = null;
        python3Target0.gen = codeGenerator2;
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = python3Target0.gen;
        java.util.Set<java.lang.String> strSet5 = python3Target0.badWords;
        org.antlr.v4.codegen.target.Python3Target python3Target6 = new org.antlr.v4.codegen.target.Python3Target();
        int int7 = python3Target6.getInlineTestSetWordSize();
        java.lang.String str8 = python3Target6.language;
        java.lang.String str9 = python3Target6.getVersion();
        int int10 = python3Target6.getInlineTestSetWordSize();
        java.lang.String str11 = python3Target6.getLanguage();
        java.lang.String str14 = python3Target6.getTargetStringLiteralFromString("4.5.2.1", true);
        boolean boolean15 = python3Target6.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet16 = python3Target6.badWords;
        org.antlr.v4.tool.Grammar grammar17 = null;
        org.stringtemplate.v4.ST sT18 = null;
        python3Target6.genRecognizerHeaderFile(grammar17, sT18, "\"4.5.2.1\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator21 = null;
        java.lang.String str24 = python3Target6.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator21, "i", true);
        org.antlr.v4.codegen.target.Python3Target python3Target25 = new org.antlr.v4.codegen.target.Python3Target();
        org.stringtemplate.v4.STGroup sTGroup26 = null;
        python3Target25.templates = sTGroup26;
        java.lang.String[] strArray31 = new java.lang.String[] { "", "\\0", "" };
        java.util.LinkedHashSet<java.lang.String> strSet32 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet32, strArray31);
        python3Target25.badWords = strSet32;
        python3Target6.badWords = strSet32;
        python3Target0.badWords = strSet32;
        org.stringtemplate.v4.STGroup sTGroup37 = python3Target0.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator38 = python3Target0.getCodeGenerator();
        java.lang.Class<?> wildcardClass39 = python3Target0.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(codeGenerator4);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 64 + "'", int7 == 64);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "4.5.2.1" + "'", str9, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 64 + "'", int10 == 64);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\"4.5.2.1\"" + "'", str14, "\"4.5.2.1\"");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "\"\"" + "'", str24, "\"\"");
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(sTGroup37);
        org.junit.Assert.assertNull(codeGenerator38);
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test06610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06610");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        org.stringtemplate.v4.STGroup sTGroup1 = null;
        python3Target0.templates = sTGroup1;
        java.lang.String[] strArray6 = new java.lang.String[] { "", "\\0", "" };
        java.util.LinkedHashSet<java.lang.String> strSet7 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet7, strArray6);
        python3Target0.badWords = strSet7;
        python3Target0.language = "\\0";
        org.antlr.v4.codegen.target.Python3Target python3Target12 = new org.antlr.v4.codegen.target.Python3Target();
        int int13 = python3Target12.getInlineTestSetWordSize();
        java.lang.String str14 = python3Target12.language;
        java.lang.String str15 = python3Target12.getVersion();
        org.stringtemplate.v4.STGroup sTGroup16 = null;
        python3Target12.templates = sTGroup16;
        org.antlr.v4.codegen.CodeGenerator codeGenerator18 = null;
        java.lang.String str21 = python3Target12.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator18, "d", false);
        java.util.Set<java.lang.String> strSet22 = python3Target12.getBadWords();
        python3Target0.badWords = strSet22;
        org.antlr.v4.tool.ast.GrammarAST grammarAST24 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str25 = python3Target0.getLoopLabel(grammarAST24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 64 + "'", int13 == 64);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "4.5.2.1" + "'", str15, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNotNull(strSet22);
    }

    @Test
    public void test06611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06611");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        java.lang.String str3 = python3Target0.getVersion();
        int int4 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str5 = python3Target0.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = python3Target0.gen;
        python3Target0.addBadWords();
        java.util.Set<java.lang.String> strSet8 = python3Target0.getBadWords();
        java.lang.Class<?> wildcardClass9 = python3Target0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "4.5.2.1" + "'", str3, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(codeGenerator6);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test06612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06612");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = python3Target0.gen;
        org.antlr.v4.codegen.target.Python3Target python3Target8 = new org.antlr.v4.codegen.target.Python3Target();
        int int9 = python3Target8.getInlineTestSetWordSize();
        java.lang.String str10 = python3Target8.language;
        java.lang.String str11 = python3Target8.getVersion();
        int int12 = python3Target8.getInlineTestSetWordSize();
        java.lang.String str13 = python3Target8.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = python3Target8.gen;
        org.antlr.v4.tool.Grammar grammar15 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target16 = new org.antlr.v4.codegen.target.Python3Target();
        int int17 = python3Target16.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup18 = python3Target16.templates;
        org.antlr.v4.tool.Grammar grammar19 = null;
        int[] intArray20 = new int[] {};
        java.lang.String[] strArray21 = python3Target16.getTokenTypesAsTargetLabels(grammar19, intArray20);
        java.lang.String[] strArray22 = python3Target8.getTokenTypesAsTargetLabels(grammar15, intArray20);
        java.lang.String str23 = python3Target8.getLanguage();
        java.lang.String str24 = python3Target8.getLanguage();
        java.lang.String str26 = python3Target8.getTargetStringLiteralFromString("\"i\"");
        java.util.Set<java.lang.String> strSet27 = python3Target8.badWords;
        python3Target0.badWords = strSet27;
        org.antlr.v4.tool.Grammar grammar29 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target30 = new org.antlr.v4.codegen.target.Python3Target();
        int int31 = python3Target30.getInlineTestSetWordSize();
        java.lang.String[] strArray34 = new java.lang.String[] { "hi!", "" };
        python3Target30.targetCharValueEscape = strArray34;
        java.lang.String[] strArray36 = python3Target30.targetCharValueEscape;
        boolean boolean37 = python3Target30.supportsOverloadedMethods();
        java.lang.String[] strArray38 = new java.lang.String[] {};
        python3Target30.targetCharValueEscape = strArray38;
        org.stringtemplate.v4.STGroup sTGroup40 = null;
        python3Target30.templates = sTGroup40;
        org.antlr.v4.tool.Grammar grammar42 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target43 = new org.antlr.v4.codegen.target.Python3Target();
        int int44 = python3Target43.getInlineTestSetWordSize();
        java.lang.String str45 = python3Target43.language;
        org.stringtemplate.v4.STGroup sTGroup46 = python3Target43.templates;
        java.lang.String str48 = python3Target43.getTargetStringLiteralFromString("\"hi!\"");
        java.lang.String str50 = python3Target43.getTargetStringLiteralFromString("");
        org.antlr.v4.tool.Grammar grammar51 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target52 = new org.antlr.v4.codegen.target.Python3Target();
        int int53 = python3Target52.getInlineTestSetWordSize();
        boolean boolean54 = python3Target52.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator55 = python3Target52.gen;
        boolean boolean56 = python3Target52.wantsBaseVisitor();
        boolean boolean57 = python3Target52.supportsOverloadedMethods();
        java.lang.String str60 = python3Target52.getTargetStringLiteralFromString("\\0", false);
        boolean boolean61 = python3Target52.templatesExist();
        python3Target52.addBadWords();
        org.antlr.v4.tool.Grammar grammar63 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target64 = new org.antlr.v4.codegen.target.Python3Target();
        int int65 = python3Target64.getInlineTestSetWordSize();
        java.lang.String str66 = python3Target64.language;
        java.lang.String str67 = python3Target64.getVersion();
        int int68 = python3Target64.getInlineTestSetWordSize();
        java.lang.String str69 = python3Target64.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator70 = python3Target64.gen;
        org.antlr.v4.tool.Grammar grammar71 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target72 = new org.antlr.v4.codegen.target.Python3Target();
        int int73 = python3Target72.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup74 = python3Target72.templates;
        org.antlr.v4.tool.Grammar grammar75 = null;
        int[] intArray76 = new int[] {};
        java.lang.String[] strArray77 = python3Target72.getTokenTypesAsTargetLabels(grammar75, intArray76);
        java.lang.String[] strArray78 = python3Target64.getTokenTypesAsTargetLabels(grammar71, intArray76);
        java.lang.String[] strArray79 = python3Target52.getTokenTypesAsTargetLabels(grammar63, intArray76);
        java.lang.String[] strArray80 = python3Target43.getTokenTypesAsTargetLabels(grammar51, intArray76);
        java.lang.String[] strArray81 = python3Target30.getTokenTypesAsTargetLabels(grammar42, intArray76);
        java.lang.String[] strArray82 = python3Target0.getTokenTypesAsTargetLabels(grammar29, intArray76);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str84 = python3Target0.getListLabel("");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"" + "'", str6, "\"\"");
        org.junit.Assert.assertNull(codeGenerator7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 64 + "'", int9 == 64);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "4.5.2.1" + "'", str11, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 64 + "'", int12 == 64);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(codeGenerator14);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 64 + "'", int17 == 64);
        org.junit.Assert.assertNull(sTGroup18);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[]");
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\"\"i\"\"" + "'", str26, "\"\"i\"\"");
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 64 + "'", int31 == 64);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 64 + "'", int44 == 64);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNull(sTGroup46);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "\"\"hi!\"\"" + "'", str48, "\"\"hi!\"\"");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "\"\"" + "'", str50, "\"\"");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 64 + "'", int53 == 64);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(codeGenerator55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "\\0" + "'", str60, "\\0");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 64 + "'", int65 == 64);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "4.5.2.1" + "'", str67, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 64 + "'", int68 == 64);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertNull(codeGenerator70);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 64 + "'", int73 == 64);
        org.junit.Assert.assertNull(sTGroup74);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[]");
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertNotNull(strArray80);
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertNotNull(strArray82);
    }

    @Test
    public void test06613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06613");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        java.lang.String str3 = python3Target0.getVersion();
        int int4 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str5 = python3Target0.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = python3Target0.gen;
        python3Target0.addBadWords();
        python3Target0.language = "\\0";
        boolean boolean10 = python3Target0.wantsBaseVisitor();
        org.antlr.v4.codegen.target.Python3Target python3Target11 = new org.antlr.v4.codegen.target.Python3Target();
        int int12 = python3Target11.getInlineTestSetWordSize();
        java.lang.String str13 = python3Target11.language;
        java.lang.String str14 = python3Target11.getVersion();
        int int15 = python3Target11.getInlineTestSetWordSize();
        java.lang.String str16 = python3Target11.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = python3Target11.gen;
        org.antlr.v4.tool.Grammar grammar18 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target19 = new org.antlr.v4.codegen.target.Python3Target();
        int int20 = python3Target19.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup21 = python3Target19.templates;
        org.antlr.v4.tool.Grammar grammar22 = null;
        int[] intArray23 = new int[] {};
        java.lang.String[] strArray24 = python3Target19.getTokenTypesAsTargetLabels(grammar22, intArray23);
        java.lang.String[] strArray25 = python3Target11.getTokenTypesAsTargetLabels(grammar18, intArray23);
        java.lang.String str26 = python3Target11.getLanguage();
        java.lang.String str27 = python3Target11.getLanguage();
        java.lang.String str29 = python3Target11.getTargetStringLiteralFromString("\"i\"");
        java.util.Set<java.lang.String> strSet30 = python3Target11.badWords;
        python3Target0.badWords = strSet30;
        java.util.Set<java.lang.String> strSet32 = python3Target0.badWords;
        // The following exception was thrown during execution in test generation
        try {
            org.stringtemplate.v4.STGroup sTGroup33 = python3Target0.getTemplates();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "4.5.2.1" + "'", str3, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(codeGenerator6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 64 + "'", int12 == 64);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "4.5.2.1" + "'", str14, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 64 + "'", int15 == 64);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(codeGenerator17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 64 + "'", int20 == 64);
        org.junit.Assert.assertNull(sTGroup21);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[]");
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "\"\"i\"\"" + "'", str29, "\"\"i\"\"");
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertNotNull(strSet32);
    }

    @Test
    public void test06614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06614");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        java.lang.String str3 = python3Target0.getVersion();
        int int4 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str5 = python3Target0.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = python3Target0.gen;
        org.antlr.v4.tool.Grammar grammar7 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target8 = new org.antlr.v4.codegen.target.Python3Target();
        int int9 = python3Target8.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup10 = python3Target8.templates;
        org.antlr.v4.tool.Grammar grammar11 = null;
        int[] intArray12 = new int[] {};
        java.lang.String[] strArray13 = python3Target8.getTokenTypesAsTargetLabels(grammar11, intArray12);
        java.lang.String[] strArray14 = python3Target0.getTokenTypesAsTargetLabels(grammar7, intArray12);
        java.lang.String str16 = python3Target0.encodeIntAsCharEscape((int) (byte) 100);
        java.lang.String str17 = python3Target0.language;
        java.lang.String str18 = python3Target0.language;
        org.antlr.v4.codegen.CodeGenerator codeGenerator19 = null;
        java.lang.String str22 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator19, "\\\"hi!\\\"", false);
        boolean boolean23 = python3Target0.wantsBaseListener();
        java.lang.String[] strArray24 = python3Target0.targetCharValueEscape;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str26 = python3Target0.getElementName("\"\"\"\\1\"\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "4.5.2.1" + "'", str3, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(codeGenerator6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 64 + "'", int9 == 64);
        org.junit.Assert.assertNull(sTGroup10);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[]");
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "d" + "'", str16, "d");
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "\\\"hi!\\\"" + "'", str22, "\\\"hi!\\\"");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(strArray24);
    }

    @Test
    public void test06615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06615");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        org.stringtemplate.v4.STGroup sTGroup3 = python3Target0.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = python3Target0.gen;
        java.util.Set<java.lang.String> strSet5 = python3Target0.badWords;
        org.stringtemplate.v4.STGroup sTGroup6 = null;
        python3Target0.templates = sTGroup6;
        java.util.Set<java.lang.String> strSet8 = python3Target0.badWords;
        java.lang.String str9 = python3Target0.getLanguage();
        java.lang.String str10 = python3Target0.getLanguage();
        python3Target0.language = "0";
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = python3Target0.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = python3Target0.gen;
        int int15 = python3Target0.getSerializedATNSegmentLimit();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(sTGroup3);
        org.junit.Assert.assertNull(codeGenerator4);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(codeGenerator13);
        org.junit.Assert.assertNull(codeGenerator14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 29 + "'", int15 == 29);
    }

    @Test
    public void test06616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06616");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        boolean boolean2 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.gen;
        java.lang.String str4 = python3Target0.getVersion();
        java.lang.String[] strArray5 = python3Target0.targetCharValueEscape;
        org.antlr.v4.tool.Grammar grammar6 = null;
        org.stringtemplate.v4.ST sT7 = null;
        python3Target0.genRecognizerHeaderFile(grammar6, sT7, "");
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = python3Target0.gen;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str12 = python3Target0.getElementName("\"\\\"\\\"\\\"\\\"\\\"\\\"4.5.2.1\\\"\\\"\\\"\\\"\\\"\\\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "4.5.2.1" + "'", str4, "4.5.2.1");
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNull(codeGenerator10);
    }

    @Test
    public void test06617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06617");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "", true);
        org.antlr.v4.tool.Grammar grammar7 = null;
        org.stringtemplate.v4.ST sT8 = null;
        python3Target0.genRecognizerHeaderFile(grammar7, sT8, "");
        org.antlr.v4.tool.Grammar grammar11 = null;
        org.stringtemplate.v4.ST sT12 = null;
        python3Target0.genRecognizerHeaderFile(grammar11, sT12, "\"i\"");
        boolean boolean15 = python3Target0.wantsBaseListener();
        org.antlr.v4.codegen.CodeGenerator codeGenerator16 = python3Target0.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = null;
        python3Target0.gen = codeGenerator17;
        org.antlr.v4.codegen.model.RuleFunction ruleFunction19 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str20 = python3Target0.getRuleFunctionContextStructName(ruleFunction19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"" + "'", str6, "\"\"");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(codeGenerator16);
    }

    @Test
    public void test06618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06618");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        org.stringtemplate.v4.STGroup sTGroup1 = null;
        python3Target0.templates = sTGroup1;
        java.util.Set<java.lang.String> strSet3 = null;
        python3Target0.badWords = strSet3;
        boolean boolean5 = python3Target0.supportsOverloadedMethods();
        java.lang.String str6 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = python3Target0.getCodeGenerator();
        org.antlr.v4.tool.Grammar grammar8 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target9 = new org.antlr.v4.codegen.target.Python3Target();
        int int10 = python3Target9.getInlineTestSetWordSize();
        java.lang.String str11 = python3Target9.language;
        java.lang.String str12 = python3Target9.getVersion();
        int int13 = python3Target9.getInlineTestSetWordSize();
        java.lang.String str15 = python3Target9.getTargetStringLiteralFromString("@");
        org.antlr.v4.codegen.target.Python3Target python3Target16 = new org.antlr.v4.codegen.target.Python3Target();
        int int17 = python3Target16.getInlineTestSetWordSize();
        java.lang.String str18 = python3Target16.language;
        java.lang.String str19 = python3Target16.getVersion();
        int int20 = python3Target16.getInlineTestSetWordSize();
        java.lang.String str21 = python3Target16.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator22 = python3Target16.gen;
        python3Target16.addBadWords();
        python3Target16.language = "\\0";
        java.lang.String[] strArray26 = python3Target16.targetCharValueEscape;
        python3Target9.targetCharValueEscape = strArray26;
        org.antlr.v4.tool.Grammar grammar28 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target29 = new org.antlr.v4.codegen.target.Python3Target();
        int int30 = python3Target29.getInlineTestSetWordSize();
        java.lang.String str31 = python3Target29.language;
        org.antlr.v4.codegen.CodeGenerator codeGenerator32 = null;
        java.lang.String str35 = python3Target29.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator32, "", true);
        org.antlr.v4.tool.Grammar grammar36 = null;
        org.stringtemplate.v4.ST sT37 = null;
        python3Target29.genRecognizerHeaderFile(grammar36, sT37, "\"\"\"\"");
        org.stringtemplate.v4.STGroup sTGroup40 = null;
        python3Target29.templates = sTGroup40;
        org.stringtemplate.v4.STGroup sTGroup42 = null;
        python3Target29.templates = sTGroup42;
        org.antlr.v4.tool.Grammar grammar44 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target45 = new org.antlr.v4.codegen.target.Python3Target();
        int int46 = python3Target45.getInlineTestSetWordSize();
        java.lang.String str47 = python3Target45.language;
        java.lang.String str48 = python3Target45.getVersion();
        int int49 = python3Target45.getInlineTestSetWordSize();
        java.lang.String str50 = python3Target45.getLanguage();
        java.lang.String str53 = python3Target45.getTargetStringLiteralFromString("4.5.2.1", true);
        java.util.Set<java.lang.String> strSet54 = python3Target45.badWords;
        int int55 = python3Target45.getSerializedATNSegmentLimit();
        java.lang.String str56 = python3Target45.getVersion();
        org.antlr.v4.tool.Grammar grammar57 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target58 = new org.antlr.v4.codegen.target.Python3Target();
        int int59 = python3Target58.getInlineTestSetWordSize();
        java.lang.String str60 = python3Target58.language;
        java.lang.String str61 = python3Target58.getVersion();
        int int62 = python3Target58.getInlineTestSetWordSize();
        java.lang.String str63 = python3Target58.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator64 = python3Target58.gen;
        org.antlr.v4.tool.Grammar grammar65 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target66 = new org.antlr.v4.codegen.target.Python3Target();
        int int67 = python3Target66.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup68 = python3Target66.templates;
        org.antlr.v4.tool.Grammar grammar69 = null;
        int[] intArray70 = new int[] {};
        java.lang.String[] strArray71 = python3Target66.getTokenTypesAsTargetLabels(grammar69, intArray70);
        java.lang.String[] strArray72 = python3Target58.getTokenTypesAsTargetLabels(grammar65, intArray70);
        java.lang.String[] strArray73 = python3Target45.getTokenTypesAsTargetLabels(grammar57, intArray70);
        java.lang.String[] strArray74 = python3Target29.getTokenTypesAsTargetLabels(grammar44, intArray70);
        java.lang.String[] strArray75 = python3Target9.getTokenTypesAsTargetLabels(grammar28, intArray70);
        java.lang.String[] strArray76 = python3Target0.getTokenTypesAsTargetLabels(grammar8, intArray70);
        org.antlr.v4.tool.Grammar grammar77 = null;
        org.stringtemplate.v4.ST sT78 = null;
        python3Target0.genRecognizerHeaderFile(grammar77, sT78, "ython");
        org.antlr.v4.tool.ast.GrammarAST grammarAST81 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean82 = python3Target0.visibleGrammarSymbolCausesIssueInGeneratedCode(grammarAST81);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "4.5.2.1" + "'", str6, "4.5.2.1");
        org.junit.Assert.assertNull(codeGenerator7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 64 + "'", int10 == 64);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "4.5.2.1" + "'", str12, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 64 + "'", int13 == 64);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\"@\"" + "'", str15, "\"@\"");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 64 + "'", int17 == 64);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "4.5.2.1" + "'", str19, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 64 + "'", int20 == 64);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(codeGenerator22);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 64 + "'", int30 == 64);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "\"\"" + "'", str35, "\"\"");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 64 + "'", int46 == 64);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "4.5.2.1" + "'", str48, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 64 + "'", int49 == 64);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "\"4.5.2.1\"" + "'", str53, "\"4.5.2.1\"");
        org.junit.Assert.assertNotNull(strSet54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 29 + "'", int55 == 29);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "4.5.2.1" + "'", str56, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 64 + "'", int59 == 64);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "4.5.2.1" + "'", str61, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 64 + "'", int62 == 64);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNull(codeGenerator64);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 64 + "'", int67 == 64);
        org.junit.Assert.assertNull(sTGroup68);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[]");
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertNotNull(strArray76);
    }

    @Test
    public void test06619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06619");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str1 = python3Target0.language;
        org.antlr.v4.codegen.target.Python3Target python3Target2 = new org.antlr.v4.codegen.target.Python3Target();
        org.stringtemplate.v4.STGroup sTGroup3 = null;
        python3Target2.templates = sTGroup3;
        java.lang.String[] strArray8 = new java.lang.String[] { "", "\\0", "" };
        java.util.LinkedHashSet<java.lang.String> strSet9 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet9, strArray8);
        python3Target2.badWords = strSet9;
        python3Target0.badWords = strSet9;
        python3Target0.language = "\"\"i\"\"";
        java.lang.String str15 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator16 = python3Target0.getCodeGenerator();
        org.antlr.v4.tool.Grammar grammar17 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target18 = new org.antlr.v4.codegen.target.Python3Target();
        int int19 = python3Target18.getInlineTestSetWordSize();
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!", "" };
        python3Target18.targetCharValueEscape = strArray22;
        java.util.Set<java.lang.String> strSet24 = python3Target18.badWords;
        org.stringtemplate.v4.STGroup sTGroup25 = python3Target18.templates;
        org.antlr.v4.tool.Grammar grammar26 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target27 = new org.antlr.v4.codegen.target.Python3Target();
        int int28 = python3Target27.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup29 = python3Target27.templates;
        org.antlr.v4.tool.Grammar grammar30 = null;
        int[] intArray31 = new int[] {};
        java.lang.String[] strArray32 = python3Target27.getTokenTypesAsTargetLabels(grammar30, intArray31);
        java.lang.String[] strArray33 = python3Target18.getTokenTypesAsTargetLabels(grammar26, intArray31);
        java.lang.String[] strArray34 = python3Target0.getTokenTypesAsTargetLabels(grammar17, intArray31);
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray34;
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "4.5.2.1" + "'", str15, "4.5.2.1");
        org.junit.Assert.assertNull(codeGenerator16);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 64 + "'", int19 == 64);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(strSet24);
        org.junit.Assert.assertNull(sTGroup25);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 64 + "'", int28 == 64);
        org.junit.Assert.assertNull(sTGroup29);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[]");
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(strArray34);
    }

    @Test
    public void test06620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06620");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        java.lang.String str3 = python3Target0.getLanguage();
        java.lang.String str5 = python3Target0.getTargetStringLiteralFromString("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        java.lang.String str9 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator6, "hi!", true);
        int int10 = python3Target0.getSerializedATNSegmentLimit();
        java.lang.String str13 = python3Target0.getTargetStringLiteralFromString("\"i\"", true);
        int int14 = python3Target0.getInlineTestSetWordSize();
        java.lang.String[] strArray15 = python3Target0.targetCharValueEscape;
        java.lang.String str16 = python3Target0.language;
        java.lang.String str19 = python3Target0.getTargetStringLiteralFromString("\\\"\\\"\\\"\\\"0\\\"\\\"\\\"\\\"", true);
        java.lang.String str20 = python3Target0.language;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str22 = python3Target0.getImplicitTokenLabel("i");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\"\"" + "'", str5, "\"\"");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"i\"" + "'", str9, "\"i\"");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 29 + "'", int10 == 29);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"\"i\"\"" + "'", str13, "\"\"i\"\"");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 64 + "'", int14 == 64);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "\"\\\"\\\"\\\"\\\"0\\\"\\\"\\\"\\\"\"" + "'", str19, "\"\\\"\\\"\\\"\\\"0\\\"\\\"\\\"\\\"\"");
        org.junit.Assert.assertNull(str20);
    }

    @Test
    public void test06621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06621");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        java.lang.String str3 = python3Target0.getVersion();
        int int4 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromString("@");
        python3Target0.language = "d";
        boolean boolean9 = python3Target0.wantsBaseListener();
        java.lang.String str11 = python3Target0.getTargetStringLiteralFromString("");
        python3Target0.addBadWords();
        java.lang.String[] strArray13 = null;
        python3Target0.targetCharValueEscape = strArray13;
        org.antlr.v4.codegen.CodeGenerator codeGenerator15 = python3Target0.getCodeGenerator();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "4.5.2.1" + "'", str3, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"@\"" + "'", str6, "\"@\"");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"\"" + "'", str11, "\"\"");
        org.junit.Assert.assertNull(codeGenerator15);
    }

    @Test
    public void test06622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06622");
        org.antlr.v4.codegen.target.Python3Target.PythonStringRenderer pythonStringRenderer0 = new org.antlr.v4.codegen.target.Python3Target.PythonStringRenderer();
        java.lang.Object obj1 = null;
        java.util.Locale locale3 = null;
        java.lang.String str4 = pythonStringRenderer0.toString(obj1, "d", locale3);
        java.util.Locale locale7 = null;
        java.lang.String str8 = pythonStringRenderer0.toString((java.lang.Object) "\"\"i\"\"", "\\12", locale7);
        org.antlr.v4.codegen.target.Python3Target python3Target9 = new org.antlr.v4.codegen.target.Python3Target();
        int int10 = python3Target9.getInlineTestSetWordSize();
        java.lang.String str11 = python3Target9.language;
        java.lang.String str12 = python3Target9.getLanguage();
        java.lang.String str14 = python3Target9.getTargetStringLiteralFromString("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator15 = null;
        java.lang.String str18 = python3Target9.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator15, "hi!", true);
        int int19 = python3Target9.getSerializedATNSegmentLimit();
        boolean boolean20 = python3Target9.templatesExist();
        java.lang.String str21 = python3Target9.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup22 = null;
        python3Target9.templates = sTGroup22;
        java.util.Locale locale25 = null;
        java.lang.String str26 = pythonStringRenderer0.toString((java.lang.Object) sTGroup22, "\\35", locale25);
        java.lang.Object obj27 = null;
        java.util.Locale locale29 = null;
        java.lang.String str30 = pythonStringRenderer0.toString(obj27, "\"\\\"\\\"\\\"i\\\"\\\"\\\"\"Context", locale29);
        org.antlr.v4.codegen.target.Python3Target python3Target31 = new org.antlr.v4.codegen.target.Python3Target();
        int int32 = python3Target31.getInlineTestSetWordSize();
        java.lang.String str33 = python3Target31.language;
        java.lang.String str34 = python3Target31.getLanguage();
        java.lang.String str36 = python3Target31.getTargetStringLiteralFromString("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator37 = null;
        java.lang.String str40 = python3Target31.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator37, "hi!", true);
        int int41 = python3Target31.getSerializedATNSegmentLimit();
        java.lang.String str44 = python3Target31.getTargetStringLiteralFromString("\"i\"", true);
        int int45 = python3Target31.getInlineTestSetWordSize();
        java.util.Locale locale47 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str48 = pythonStringRenderer0.toString((java.lang.Object) python3Target31, "\"\"\"\"\" \"\"\"\"\"", locale47);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: org.antlr.v4.codegen.target.Python3Target cannot be cast to java.lang.String");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "d" + "'", str4, "d");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\\12" + "'", str8, "\\12");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 64 + "'", int10 == 64);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\"\"" + "'", str14, "\"\"");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "\"i\"" + "'", str18, "\"i\"");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 29 + "'", int19 == 29);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\\35" + "'", str26, "\\35");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "\"\\\"\\\"\\\"i\\\"\\\"\\\"\"Context" + "'", str30, "\"\\\"\\\"\\\"i\\\"\\\"\\\"\"Context");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 64 + "'", int32 == 64);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "\"\"" + "'", str36, "\"\"");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "\"i\"" + "'", str40, "\"i\"");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 29 + "'", int41 == 29);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "\"\"i\"\"" + "'", str44, "\"\"i\"\"");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 64 + "'", int45 == 64);
    }

    @Test
    public void test06623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06623");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str2 = python3Target0.getTargetStringLiteralFromString("\"\"");
        int int3 = python3Target0.getInlineTestSetWordSize();
        boolean boolean4 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup5 = python3Target0.templates;
        java.lang.String str7 = python3Target0.getTargetStringLiteralFromString("\"\"\"\"");
        int int8 = python3Target0.getInlineTestSetWordSize();
        boolean boolean9 = python3Target0.supportsOverloadedMethods();
        java.lang.String str10 = python3Target0.language;
        boolean boolean11 = python3Target0.templatesExist();
        python3Target0.addBadWords();
        org.antlr.v4.tool.Grammar grammar13 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target14 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str16 = python3Target14.getTargetStringLiteralFromString("\"\"");
        int int17 = python3Target14.getInlineTestSetWordSize();
        java.lang.String str19 = python3Target14.encodeIntAsCharEscape(0);
        java.lang.String str21 = python3Target14.getTargetStringLiteralFromString("");
        java.util.Set<java.lang.String> strSet22 = python3Target14.getBadWords();
        java.lang.String str23 = python3Target14.getLanguage();
        org.antlr.v4.tool.Grammar grammar24 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target25 = new org.antlr.v4.codegen.target.Python3Target();
        int int26 = python3Target25.getInlineTestSetWordSize();
        java.lang.String str27 = python3Target25.language;
        java.lang.String str28 = python3Target25.getLanguage();
        java.lang.String str30 = python3Target25.getTargetStringLiteralFromString("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator31 = null;
        java.lang.String str34 = python3Target25.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator31, "hi!", true);
        int int35 = python3Target25.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar36 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target37 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str38 = python3Target37.language;
        org.antlr.v4.codegen.target.Python3Target python3Target39 = new org.antlr.v4.codegen.target.Python3Target();
        org.stringtemplate.v4.STGroup sTGroup40 = null;
        python3Target39.templates = sTGroup40;
        java.lang.String[] strArray45 = new java.lang.String[] { "", "\\0", "" };
        java.util.LinkedHashSet<java.lang.String> strSet46 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet46, strArray45);
        python3Target39.badWords = strSet46;
        python3Target37.badWords = strSet46;
        org.antlr.v4.tool.Grammar grammar50 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target51 = new org.antlr.v4.codegen.target.Python3Target();
        int int52 = python3Target51.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup53 = python3Target51.templates;
        org.antlr.v4.tool.Grammar grammar54 = null;
        int[] intArray55 = new int[] {};
        java.lang.String[] strArray56 = python3Target51.getTokenTypesAsTargetLabels(grammar54, intArray55);
        java.lang.String[] strArray57 = python3Target37.getTokenTypesAsTargetLabels(grammar50, intArray55);
        java.lang.String[] strArray58 = python3Target25.getTokenTypesAsTargetLabels(grammar36, intArray55);
        java.lang.String[] strArray59 = python3Target14.getTokenTypesAsTargetLabels(grammar24, intArray55);
        java.lang.String[] strArray60 = python3Target0.getTokenTypesAsTargetLabels(grammar13, intArray55);
        java.lang.String str61 = python3Target0.getLanguage();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "\"\"\"\"" + "'", str2, "\"\"\"\"");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 64 + "'", int3 == 64);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(sTGroup5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"\"\"\"\"\"" + "'", str7, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 64 + "'", int8 == 64);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\"\"\"\"" + "'", str16, "\"\"\"\"");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 64 + "'", int17 == 64);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "\\0" + "'", str19, "\\0");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "\"\"" + "'", str21, "\"\"");
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 64 + "'", int26 == 64);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "\"\"" + "'", str30, "\"\"");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "\"i\"" + "'", str34, "\"i\"");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 29 + "'", int35 == 29);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 64 + "'", int52 == 64);
        org.junit.Assert.assertNull(sTGroup53);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[]");
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertNull(str61);
    }

    @Test
    public void test06624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06624");
        org.antlr.v4.codegen.target.Python3Target.PythonStringRenderer pythonStringRenderer0 = new org.antlr.v4.codegen.target.Python3Target.PythonStringRenderer();
        java.lang.Object obj1 = null;
        java.util.Locale locale3 = null;
        java.lang.String str4 = pythonStringRenderer0.toString(obj1, "d", locale3);
        java.util.Locale locale7 = null;
        java.lang.String str8 = pythonStringRenderer0.toString((java.lang.Object) "\"\"i\"\"", "\\12", locale7);
        org.antlr.v4.codegen.target.Python3Target python3Target9 = new org.antlr.v4.codegen.target.Python3Target();
        int int10 = python3Target9.getInlineTestSetWordSize();
        java.lang.String str11 = python3Target9.language;
        java.lang.String str12 = python3Target9.getLanguage();
        java.lang.String str14 = python3Target9.getTargetStringLiteralFromString("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator15 = null;
        java.lang.String str18 = python3Target9.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator15, "hi!", true);
        int int19 = python3Target9.getSerializedATNSegmentLimit();
        boolean boolean20 = python3Target9.templatesExist();
        java.lang.String str21 = python3Target9.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup22 = null;
        python3Target9.templates = sTGroup22;
        java.util.Locale locale25 = null;
        java.lang.String str26 = pythonStringRenderer0.toString((java.lang.Object) sTGroup22, "\\35", locale25);
        org.antlr.v4.codegen.target.Python3Target python3Target27 = new org.antlr.v4.codegen.target.Python3Target();
        int int28 = python3Target27.getInlineTestSetWordSize();
        java.lang.String str29 = python3Target27.language;
        java.lang.String str30 = python3Target27.getLanguage();
        java.lang.String str32 = python3Target27.getTargetStringLiteralFromString("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator33 = null;
        java.lang.String str36 = python3Target27.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator33, "hi!", true);
        int int37 = python3Target27.getSerializedATNSegmentLimit();
        org.antlr.v4.codegen.CodeGenerator codeGenerator38 = null;
        java.lang.String str41 = python3Target27.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator38, "4.5.2.1", true);
        org.stringtemplate.v4.STGroup sTGroup42 = null;
        python3Target27.templates = sTGroup42;
        java.util.Locale locale45 = null;
        java.lang.String str46 = pythonStringRenderer0.toString((java.lang.Object) sTGroup42, "@", locale45);
        org.antlr.v4.codegen.target.Python3Target python3Target47 = new org.antlr.v4.codegen.target.Python3Target();
        int int48 = python3Target47.getInlineTestSetWordSize();
        java.lang.String str49 = python3Target47.language;
        java.lang.String str50 = python3Target47.getVersion();
        org.antlr.v4.tool.Grammar grammar51 = null;
        org.stringtemplate.v4.ST sT52 = null;
        python3Target47.genRecognizerHeaderFile(grammar51, sT52, "\"\"\"\"");
        boolean boolean55 = python3Target47.wantsBaseListener();
        python3Target47.language = "hi!";
        java.util.Locale locale59 = null;
        java.lang.String str60 = pythonStringRenderer0.toString((java.lang.Object) "hi!", "\"\"\"\"\"\"", locale59);
        org.antlr.v4.codegen.target.Python3Target python3Target61 = new org.antlr.v4.codegen.target.Python3Target();
        int int62 = python3Target61.getInlineTestSetWordSize();
        boolean boolean63 = python3Target61.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator64 = python3Target61.gen;
        boolean boolean65 = python3Target61.wantsBaseVisitor();
        java.lang.String str68 = python3Target61.getTargetStringLiteralFromString("@", false);
        java.util.Locale locale70 = null;
        java.lang.String str71 = pythonStringRenderer0.toString((java.lang.Object) "@", "\"_\\\"1\\\"\"", locale70);
        org.antlr.v4.codegen.target.Python3Target python3Target72 = new org.antlr.v4.codegen.target.Python3Target();
        int int73 = python3Target72.getInlineTestSetWordSize();
        java.lang.String str74 = python3Target72.language;
        java.lang.String str75 = python3Target72.getVersion();
        int int76 = python3Target72.getInlineTestSetWordSize();
        java.lang.String str77 = python3Target72.getLanguage();
        java.lang.String str80 = python3Target72.getTargetStringLiteralFromString("4.5.2.1", true);
        boolean boolean81 = python3Target72.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet82 = python3Target72.badWords;
        org.antlr.v4.codegen.CodeGenerator codeGenerator83 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target84 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator83);
        java.lang.String str86 = python3Target84.encodeIntAsCharEscape((int) (short) 1);
        org.stringtemplate.v4.STGroup sTGroup87 = python3Target84.loadTemplates();
        python3Target72.templates = sTGroup87;
        java.util.Locale locale90 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str91 = pythonStringRenderer0.toString((java.lang.Object) sTGroup87, "\"\"\\\"i\\\"\"\"", locale90);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: org.stringtemplate.v4.STGroupFile cannot be cast to java.lang.String");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "d" + "'", str4, "d");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\\12" + "'", str8, "\\12");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 64 + "'", int10 == 64);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\"\"" + "'", str14, "\"\"");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "\"i\"" + "'", str18, "\"i\"");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 29 + "'", int19 == 29);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\\35" + "'", str26, "\\35");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 64 + "'", int28 == 64);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "\"\"" + "'", str32, "\"\"");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "\"i\"" + "'", str36, "\"i\"");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 29 + "'", int37 == 29);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "\".5.2.\"" + "'", str41, "\".5.2.\"");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "@" + "'", str46, "@");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 64 + "'", int48 == 64);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "4.5.2.1" + "'", str50, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "\"\"\"\"\"\"" + "'", str60, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 64 + "'", int62 == 64);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNull(codeGenerator64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "@" + "'", str68, "@");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "\"_\\\"1\\\"\"" + "'", str71, "\"_\\\"1\\\"\"");
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 64 + "'", int73 == 64);
        org.junit.Assert.assertNull(str74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "4.5.2.1" + "'", str75, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 64 + "'", int76 == 64);
        org.junit.Assert.assertNull(str77);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "\"4.5.2.1\"" + "'", str80, "\"4.5.2.1\"");
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(strSet82);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "\\1" + "'", str86, "\\1");
        org.junit.Assert.assertNotNull(sTGroup87);
    }

    @Test
    public void test06625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06625");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        org.stringtemplate.v4.STGroup sTGroup3 = python3Target0.templates;
        java.lang.String str5 = python3Target0.getTargetStringLiteralFromString("\"hi!\"");
        java.lang.String str7 = python3Target0.getTargetStringLiteralFromString("");
        org.antlr.v4.tool.Grammar grammar8 = null;
        org.stringtemplate.v4.ST sT9 = null;
        python3Target0.genRecognizerHeaderFile(grammar8, sT9, "\"\"\"\"\\\"\\\"\\\"4.5.2.1\\\"\\\"\\\"\"\"\"\"");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str13 = python3Target0.getAltLabelContextStructName("\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"4.5.2.1\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(sTGroup3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\"\"hi!\"\"" + "'", str5, "\"\"hi!\"\"");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"\"" + "'", str7, "\"\"");
    }

    @Test
    public void test06626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06626");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        org.stringtemplate.v4.STGroup sTGroup1 = null;
        python3Target0.templates = sTGroup1;
        java.util.Set<java.lang.String> strSet3 = null;
        python3Target0.badWords = strSet3;
        boolean boolean5 = python3Target0.supportsOverloadedMethods();
        java.lang.String str6 = python3Target0.getVersion();
        java.lang.String str7 = python3Target0.language;
        java.util.Set<java.lang.String> strSet8 = python3Target0.badWords;
        python3Target0.language = "\"\"\"hi!\"\"\"";
        org.antlr.v4.codegen.target.Python3Target python3Target11 = new org.antlr.v4.codegen.target.Python3Target();
        int int12 = python3Target11.getInlineTestSetWordSize();
        java.lang.String str13 = python3Target11.language;
        java.lang.String str14 = python3Target11.getLanguage();
        java.lang.String str16 = python3Target11.getTargetStringLiteralFromString("");
        java.lang.String str17 = python3Target11.getVersion();
        org.antlr.v4.codegen.target.Python3Target python3Target18 = new org.antlr.v4.codegen.target.Python3Target();
        int int19 = python3Target18.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup20 = python3Target18.templates;
        org.antlr.v4.tool.Grammar grammar21 = null;
        int[] intArray22 = new int[] {};
        java.lang.String[] strArray23 = python3Target18.getTokenTypesAsTargetLabels(grammar21, intArray22);
        python3Target11.targetCharValueEscape = strArray23;
        org.antlr.v4.codegen.target.Python3Target python3Target25 = new org.antlr.v4.codegen.target.Python3Target();
        int int26 = python3Target25.getInlineTestSetWordSize();
        java.lang.String str27 = python3Target25.language;
        org.antlr.v4.codegen.CodeGenerator codeGenerator28 = python3Target25.getCodeGenerator();
        java.util.Set<java.lang.String> strSet29 = python3Target25.getBadWords();
        java.lang.String[] strArray30 = python3Target25.targetCharValueEscape;
        python3Target11.targetCharValueEscape = strArray30;
        java.lang.String str32 = python3Target11.getVersion();
        org.antlr.v4.codegen.target.Python3Target python3Target33 = new org.antlr.v4.codegen.target.Python3Target();
        org.stringtemplate.v4.STGroup sTGroup34 = null;
        python3Target33.templates = sTGroup34;
        java.lang.String[] strArray39 = new java.lang.String[] { "", "\\0", "" };
        java.util.LinkedHashSet<java.lang.String> strSet40 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet40, strArray39);
        python3Target33.badWords = strSet40;
        java.lang.String str45 = python3Target33.getTargetStringLiteralFromString("hi!", true);
        java.util.Set<java.lang.String> strSet46 = python3Target33.badWords;
        python3Target11.badWords = strSet46;
        java.lang.String str49 = python3Target11.getTargetStringLiteralFromString("\"\"");
        java.lang.String str52 = python3Target11.getTargetStringLiteralFromString("\"\"\"\\1\"\"\"", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator53 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target54 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator53);
        int int55 = python3Target54.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup56 = python3Target54.loadTemplates();
        python3Target11.templates = sTGroup56;
        python3Target0.templates = sTGroup56;
        org.antlr.v4.tool.ast.GrammarAST grammarAST59 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean60 = python3Target0.grammarSymbolCausesIssueInGeneratedCode(grammarAST59);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "4.5.2.1" + "'", str6, "4.5.2.1");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(strSet8);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 64 + "'", int12 == 64);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\"\"" + "'", str16, "\"\"");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "4.5.2.1" + "'", str17, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 64 + "'", int19 == 64);
        org.junit.Assert.assertNull(sTGroup20);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[]");
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 64 + "'", int26 == 64);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(codeGenerator28);
        org.junit.Assert.assertNotNull(strSet29);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "4.5.2.1" + "'", str32, "4.5.2.1");
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "\"hi!\"" + "'", str45, "\"hi!\"");
        org.junit.Assert.assertNotNull(strSet46);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "\"\"\"\"" + "'", str49, "\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "\"\"\"\"\\1\"\"\"\"" + "'", str52, "\"\"\"\"\\1\"\"\"\"");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 64 + "'", int55 == 64);
        org.junit.Assert.assertNotNull(sTGroup56);
    }

    @Test
    public void test06627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06627");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!", "" };
        python3Target0.targetCharValueEscape = strArray4;
        java.util.Set<java.lang.String> strSet6 = python3Target0.badWords;
        org.stringtemplate.v4.STGroup sTGroup7 = python3Target0.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target0.gen;
        java.lang.String str10 = python3Target0.encodeIntAsCharEscape(0);
        org.antlr.v4.tool.ast.GrammarAST grammarAST11 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean12 = python3Target0.grammarSymbolCausesIssueInGeneratedCode(grammarAST11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertNull(sTGroup7);
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
    }

    @Test
    public void test06628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06628");
        java.lang.String str1 = org.stringtemplate.v4.StringRenderer.escapeHTML("\"\"#\"\"");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "\"\"#\"\"" + "'", str1, "\"\"#\"\"");
    }

    @Test
    public void test06629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06629");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        boolean boolean2 = python3Target0.wantsBaseVisitor();
        java.lang.String str3 = python3Target0.getLanguage();
        int int4 = python3Target0.getInlineTestSetWordSize();
        python3Target0.addBadWords();
        org.antlr.v4.tool.Grammar grammar6 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target7 = new org.antlr.v4.codegen.target.Python3Target();
        int int8 = python3Target7.getInlineTestSetWordSize();
        java.lang.String str9 = python3Target7.language;
        java.lang.String str10 = python3Target7.getLanguage();
        java.lang.String str12 = python3Target7.getTargetStringLiteralFromString("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = null;
        java.lang.String str16 = python3Target7.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator13, "hi!", true);
        int int17 = python3Target7.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar18 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target19 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str20 = python3Target19.language;
        org.antlr.v4.codegen.target.Python3Target python3Target21 = new org.antlr.v4.codegen.target.Python3Target();
        org.stringtemplate.v4.STGroup sTGroup22 = null;
        python3Target21.templates = sTGroup22;
        java.lang.String[] strArray27 = new java.lang.String[] { "", "\\0", "" };
        java.util.LinkedHashSet<java.lang.String> strSet28 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet28, strArray27);
        python3Target21.badWords = strSet28;
        python3Target19.badWords = strSet28;
        org.antlr.v4.tool.Grammar grammar32 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target33 = new org.antlr.v4.codegen.target.Python3Target();
        int int34 = python3Target33.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup35 = python3Target33.templates;
        org.antlr.v4.tool.Grammar grammar36 = null;
        int[] intArray37 = new int[] {};
        java.lang.String[] strArray38 = python3Target33.getTokenTypesAsTargetLabels(grammar36, intArray37);
        java.lang.String[] strArray39 = python3Target19.getTokenTypesAsTargetLabels(grammar32, intArray37);
        java.lang.String[] strArray40 = python3Target7.getTokenTypesAsTargetLabels(grammar18, intArray37);
        java.lang.String[] strArray41 = python3Target0.getTokenTypesAsTargetLabels(grammar6, intArray37);
        org.antlr.v4.codegen.CodeGenerator codeGenerator42 = python3Target0.getCodeGenerator();
        java.lang.String str43 = python3Target0.getVersion();
        python3Target0.addBadWords();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str46 = python3Target0.getImplicitRuleLabel("\"\"\"\"\"\\\"\\\"\\\"4.5.2.1\\\"\\\"\\\"\"\"\"\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 64 + "'", int8 == 64);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"\"" + "'", str12, "\"\"");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\"i\"" + "'", str16, "\"i\"");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 29 + "'", int17 == 29);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 64 + "'", int34 == 64);
        org.junit.Assert.assertNull(sTGroup35);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[]");
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNull(codeGenerator42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "4.5.2.1" + "'", str43, "4.5.2.1");
    }

    @Test
    public void test06630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06630");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        java.lang.String str3 = python3Target0.getVersion();
        int int4 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str5 = python3Target0.getLanguage();
        boolean boolean6 = python3Target0.templatesExist();
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        python3Target0.gen = codeGenerator7;
        boolean boolean9 = python3Target0.templatesExist();
        boolean boolean10 = python3Target0.wantsBaseListener();
        org.stringtemplate.v4.STGroup sTGroup11 = python3Target0.templates;
        java.lang.String str14 = python3Target0.getTargetStringLiteralFromString("hi!", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator15 = python3Target0.getCodeGenerator();
        boolean boolean16 = python3Target0.templatesExist();
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = null;
        python3Target0.gen = codeGenerator17;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "4.5.2.1" + "'", str3, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(sTGroup11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNull(codeGenerator15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test06631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06631");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        java.lang.String str3 = python3Target0.getVersion();
        int int4 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str5 = python3Target0.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = python3Target0.gen;
        org.antlr.v4.tool.Grammar grammar7 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target8 = new org.antlr.v4.codegen.target.Python3Target();
        int int9 = python3Target8.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup10 = python3Target8.templates;
        org.antlr.v4.tool.Grammar grammar11 = null;
        int[] intArray12 = new int[] {};
        java.lang.String[] strArray13 = python3Target8.getTokenTypesAsTargetLabels(grammar11, intArray12);
        java.lang.String[] strArray14 = python3Target0.getTokenTypesAsTargetLabels(grammar7, intArray12);
        java.lang.String str17 = python3Target0.getTargetStringLiteralFromString("", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator18 = null;
        java.lang.String str21 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator18, "\"i\"", true);
        boolean boolean22 = python3Target0.templatesExist();
        org.antlr.v4.codegen.target.Python3Target python3Target23 = new org.antlr.v4.codegen.target.Python3Target();
        int int24 = python3Target23.getInlineTestSetWordSize();
        boolean boolean25 = python3Target23.wantsBaseVisitor();
        java.lang.String str26 = python3Target23.getLanguage();
        java.lang.String str29 = python3Target23.getTargetStringLiteralFromString("\"\".5.2.\"\"", false);
        java.lang.String str32 = python3Target23.getTargetStringLiteralFromString("\"\"\"\"\"4.5.2.1\"\"\"\"\"", true);
        java.util.Set<java.lang.String> strSet33 = python3Target23.getBadWords();
        boolean boolean34 = python3Target23.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet35 = python3Target23.badWords;
        python3Target0.badWords = strSet35;
        java.lang.String str39 = python3Target0.getTargetStringLiteralFromString("\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"4.5.2.1\\\"\\\"\\\"\\\"\\\"\\\"\\\"\"", false);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "4.5.2.1" + "'", str3, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(codeGenerator6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 64 + "'", int9 == 64);
        org.junit.Assert.assertNull(sTGroup10);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[]");
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "\"i\"" + "'", str21, "\"i\"");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 64 + "'", int24 == 64);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "\"\".5.2.\"\"" + "'", str29, "\"\".5.2.\"\"");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "\"\"\"\"\"\"4.5.2.1\"\"\"\"\"\"" + "'", str32, "\"\"\"\"\"\"4.5.2.1\"\"\"\"\"\"");
        org.junit.Assert.assertNotNull(strSet33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"4.5.2.1\\\"\\\"\\\"\\\"\\\"\\\"\\\"\"" + "'", str39, "\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"4.5.2.1\\\"\\\"\\\"\\\"\\\"\\\"\\\"\"");
    }

    @Test
    public void test06632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06632");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        java.lang.String str3 = python3Target0.getVersion();
        int int4 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str5 = python3Target0.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = python3Target0.gen;
        org.antlr.v4.tool.Grammar grammar7 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target8 = new org.antlr.v4.codegen.target.Python3Target();
        int int9 = python3Target8.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup10 = python3Target8.templates;
        org.antlr.v4.tool.Grammar grammar11 = null;
        int[] intArray12 = new int[] {};
        java.lang.String[] strArray13 = python3Target8.getTokenTypesAsTargetLabels(grammar11, intArray12);
        java.lang.String[] strArray14 = python3Target0.getTokenTypesAsTargetLabels(grammar7, intArray12);
        java.lang.String str15 = python3Target0.getLanguage();
        java.lang.String str16 = python3Target0.getLanguage();
        java.lang.String str18 = python3Target0.getTargetStringLiteralFromString("\"i\"");
        java.lang.String str21 = python3Target0.getTargetStringLiteralFromString("\"\" \"\"", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator22 = python3Target0.getCodeGenerator();
        org.antlr.v4.codegen.model.RuleFunction ruleFunction23 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str24 = python3Target0.getRuleFunctionContextStructName(ruleFunction23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "4.5.2.1" + "'", str3, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(codeGenerator6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 64 + "'", int9 == 64);
        org.junit.Assert.assertNull(sTGroup10);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[]");
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "\"\"i\"\"" + "'", str18, "\"\"i\"\"");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "\"\"\" \"\"\"" + "'", str21, "\"\"\" \"\"\"");
        org.junit.Assert.assertNull(codeGenerator22);
    }

    @Test
    public void test06633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06633");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        boolean boolean2 = python3Target0.wantsBaseVisitor();
        java.lang.String str3 = python3Target0.getLanguage();
        int int4 = python3Target0.getInlineTestSetWordSize();
        java.lang.String[] strArray5 = python3Target0.targetCharValueEscape;
        int int6 = python3Target0.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup7 = null;
        python3Target0.templates = sTGroup7;
        org.antlr.v4.tool.Grammar grammar9 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target10 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str11 = python3Target10.language;
        org.antlr.v4.codegen.target.Python3Target python3Target12 = new org.antlr.v4.codegen.target.Python3Target();
        org.stringtemplate.v4.STGroup sTGroup13 = null;
        python3Target12.templates = sTGroup13;
        java.lang.String[] strArray18 = new java.lang.String[] { "", "\\0", "" };
        java.util.LinkedHashSet<java.lang.String> strSet19 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet19, strArray18);
        python3Target12.badWords = strSet19;
        python3Target10.badWords = strSet19;
        org.antlr.v4.tool.Grammar grammar23 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target24 = new org.antlr.v4.codegen.target.Python3Target();
        int int25 = python3Target24.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup26 = python3Target24.templates;
        org.antlr.v4.tool.Grammar grammar27 = null;
        int[] intArray28 = new int[] {};
        java.lang.String[] strArray29 = python3Target24.getTokenTypesAsTargetLabels(grammar27, intArray28);
        java.lang.String[] strArray30 = python3Target10.getTokenTypesAsTargetLabels(grammar23, intArray28);
        java.lang.String[] strArray31 = python3Target0.getTokenTypesAsTargetLabels(grammar9, intArray28);
        org.antlr.v4.codegen.CodeGenerator codeGenerator32 = null;
        java.lang.String str35 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator32, "\"\\\"i\\\"\"", true);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 64 + "'", int6 == 64);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 64 + "'", int25 == 64);
        org.junit.Assert.assertNull(sTGroup26);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[]");
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "\"\\\"i\\\"\"" + "'", str35, "\"\\\"i\\\"\"");
    }

    @Test
    public void test06634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06634");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        org.stringtemplate.v4.STGroup sTGroup1 = null;
        python3Target0.templates = sTGroup1;
        java.lang.String[] strArray6 = new java.lang.String[] { "", "\\0", "" };
        java.util.LinkedHashSet<java.lang.String> strSet7 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet7, strArray6);
        python3Target0.badWords = strSet7;
        java.util.Set<java.lang.String> strSet10 = python3Target0.badWords;
        java.lang.String str11 = python3Target0.language;
        boolean boolean12 = python3Target0.supportsOverloadedMethods();
        java.lang.String str13 = python3Target0.language;
        boolean boolean14 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.codegen.target.Python3Target python3Target15 = new org.antlr.v4.codegen.target.Python3Target();
        org.stringtemplate.v4.STGroup sTGroup16 = null;
        python3Target15.templates = sTGroup16;
        java.lang.String str20 = python3Target15.getTargetStringLiteralFromString("\"1\"", false);
        java.lang.String str21 = python3Target15.getVersion();
        java.lang.String[] strArray22 = python3Target15.targetCharValueEscape;
        python3Target0.targetCharValueEscape = strArray22;
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "\"1\"" + "'", str20, "\"1\"");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "4.5.2.1" + "'", str21, "4.5.2.1");
        org.junit.Assert.assertNotNull(strArray22);
    }

    @Test
    public void test06635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06635");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        boolean boolean2 = python3Target0.wantsBaseVisitor();
        java.lang.String str4 = python3Target0.getTargetStringLiteralFromString("\"\"\"4.5.2.1\"\"\"");
        java.lang.String str5 = python3Target0.language;
        org.antlr.v4.tool.ast.GrammarAST grammarAST6 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean7 = python3Target0.visibleGrammarSymbolCausesIssueInGeneratedCode(grammarAST6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\"\"\"\"4.5.2.1\"\"\"\"" + "'", str4, "\"\"\"\"4.5.2.1\"\"\"\"");
        org.junit.Assert.assertNull(str5);
    }

    @Test
    public void test06636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06636");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "", true);
        org.antlr.v4.tool.Grammar grammar7 = null;
        org.stringtemplate.v4.ST sT8 = null;
        python3Target0.genRecognizerHeaderFile(grammar7, sT8, "");
        org.antlr.v4.tool.Grammar grammar11 = null;
        org.stringtemplate.v4.ST sT12 = null;
        python3Target0.genRecognizerHeaderFile(grammar11, sT12, "\"i\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator15 = python3Target0.gen;
        java.lang.String str17 = python3Target0.getTargetStringLiteralFromString("\"\"\"\"4.5.2.1\"\"\"\"");
        org.stringtemplate.v4.STGroup sTGroup18 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar19 = null;
        org.stringtemplate.v4.ST sT20 = null;
        python3Target0.genRecognizerHeaderFile(grammar19, sT20, "12");
        org.antlr.v4.codegen.target.Python3Target python3Target23 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str24 = python3Target23.language;
        org.antlr.v4.codegen.target.Python3Target python3Target25 = new org.antlr.v4.codegen.target.Python3Target();
        org.stringtemplate.v4.STGroup sTGroup26 = null;
        python3Target25.templates = sTGroup26;
        java.lang.String[] strArray31 = new java.lang.String[] { "", "\\0", "" };
        java.util.LinkedHashSet<java.lang.String> strSet32 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet32, strArray31);
        python3Target25.badWords = strSet32;
        python3Target23.badWords = strSet32;
        python3Target23.language = "\"\"i\"\"";
        java.lang.String str38 = python3Target23.language;
        java.lang.String str40 = python3Target23.getTargetStringLiteralFromString("");
        org.antlr.v4.codegen.target.Python3Target python3Target41 = new org.antlr.v4.codegen.target.Python3Target();
        int int42 = python3Target41.getInlineTestSetWordSize();
        java.lang.String str43 = python3Target41.language;
        org.antlr.v4.codegen.CodeGenerator codeGenerator44 = null;
        java.lang.String str47 = python3Target41.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator44, "", true);
        java.util.Set<java.lang.String> strSet48 = python3Target41.getBadWords();
        java.lang.String str50 = python3Target41.encodeIntAsCharEscape(29);
        java.util.Set<java.lang.String> strSet51 = python3Target41.getBadWords();
        python3Target23.badWords = strSet51;
        python3Target0.badWords = strSet51;
        org.antlr.v4.codegen.CodeGenerator codeGenerator54 = python3Target0.gen;
        boolean boolean55 = python3Target0.wantsBaseListener();
        // The following exception was thrown during execution in test generation
        try {
            org.stringtemplate.v4.STGroup sTGroup56 = python3Target0.loadTemplates();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"" + "'", str6, "\"\"");
        org.junit.Assert.assertNull(codeGenerator15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\"\"\"\"\"4.5.2.1\"\"\"\"\"" + "'", str17, "\"\"\"\"\"4.5.2.1\"\"\"\"\"");
        org.junit.Assert.assertNull(sTGroup18);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "\"\"i\"\"" + "'", str38, "\"\"i\"\"");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "\"\"" + "'", str40, "\"\"");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 64 + "'", int42 == 64);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "\"\"" + "'", str47, "\"\"");
        org.junit.Assert.assertNotNull(strSet48);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "\\35" + "'", str50, "\\35");
        org.junit.Assert.assertNotNull(strSet51);
        org.junit.Assert.assertNull(codeGenerator54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
    }

    @Test
    public void test06637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06637");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        boolean boolean2 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.gen;
        int int4 = python3Target0.getSerializedATNSegmentLimit();
        java.lang.String str7 = python3Target0.getTargetStringLiteralFromString("\\64", true);
        boolean boolean8 = python3Target0.wantsBaseListener();
        java.lang.String str10 = python3Target0.encodeIntAsCharEscape((int) '#');
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = null;
        python3Target0.gen = codeGenerator11;
        java.lang.String str14 = python3Target0.encodeIntAsCharEscape(0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 29 + "'", int4 == 29);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"\\64\"" + "'", str7, "\"\\64\"");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "#" + "'", str10, "#");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\\0" + "'", str14, "\\0");
    }

    @Test
    public void test06638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06638");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.codegen.target.Python3Target python3Target3 = new org.antlr.v4.codegen.target.Python3Target();
        int int4 = python3Target3.getInlineTestSetWordSize();
        java.lang.String[] strArray7 = new java.lang.String[] { "hi!", "" };
        python3Target3.targetCharValueEscape = strArray7;
        python3Target0.targetCharValueEscape = strArray7;
        java.lang.String str11 = python3Target0.encodeIntAsCharEscape((int) (short) 100);
        boolean boolean12 = python3Target0.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet13 = python3Target0.badWords;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "d" + "'", str11, "d");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strSet13);
    }

    @Test
    public void test06639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06639");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str1 = python3Target0.language;
        int int2 = python3Target0.getSerializedATNSegmentLimit();
        java.lang.String str4 = python3Target0.getTargetStringLiteralFromString("i");
        int int5 = python3Target0.getSerializedATNSegmentLimit();
        org.antlr.v4.codegen.target.Python3Target python3Target6 = new org.antlr.v4.codegen.target.Python3Target();
        int int7 = python3Target6.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup8 = python3Target6.templates;
        org.antlr.v4.codegen.target.Python3Target python3Target9 = new org.antlr.v4.codegen.target.Python3Target();
        int int10 = python3Target9.getInlineTestSetWordSize();
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "" };
        python3Target9.targetCharValueEscape = strArray13;
        python3Target6.targetCharValueEscape = strArray13;
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray13;
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray13;
        python3Target0.targetCharValueEscape = strArray13;
        java.lang.String str20 = python3Target0.encodeIntAsCharEscape((int) 'a');
        org.antlr.v4.tool.Grammar grammar21 = null;
        org.stringtemplate.v4.ST sT22 = null;
        // The following exception was thrown during execution in test generation
        try {
            python3Target0.genListenerFile(grammar21, sT22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 29 + "'", int2 == 29);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\"i\"" + "'", str4, "\"i\"");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 29 + "'", int5 == 29);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 64 + "'", int7 == 64);
        org.junit.Assert.assertNull(sTGroup8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 64 + "'", int10 == 64);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "a" + "'", str20, "a");
    }

    @Test
    public void test06640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06640");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        org.stringtemplate.v4.STGroup sTGroup3 = python3Target0.templates;
        boolean boolean4 = python3Target0.templatesExist();
        boolean boolean5 = python3Target0.wantsBaseListener();
        boolean boolean6 = python3Target0.wantsBaseListener();
        java.util.Set<java.lang.String> strSet7 = python3Target0.getBadWords();
        java.lang.String str9 = python3Target0.encodeIntAsCharEscape(10);
        boolean boolean10 = python3Target0.wantsBaseListener();
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = null;
        java.lang.String str14 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator11, "\\\"64\\\"", true);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(sTGroup3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\\12" + "'", str9, "\\12");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\"\\\"64\\\"\"" + "'", str14, "\"\\\"64\\\"\"");
    }

    @Test
    public void test06641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06641");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.wantsBaseVisitor();
        org.antlr.v4.codegen.CodeGenerator codeGenerator2 = null;
        python3Target0.gen = codeGenerator2;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str9 = python3Target0.getTargetStringLiteralFromString("\"\"i\"\"", false);
        // The following exception was thrown during execution in test generation
        try {
            org.stringtemplate.v4.STGroup sTGroup10 = python3Target0.getTemplates();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\"i\"\"" + "'", str9, "\"\"i\"\"");
    }

    @Test
    public void test06642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06642");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str1 = python3Target0.language;
        java.lang.String[] strArray2 = python3Target0.targetCharValueEscape;
        boolean boolean3 = python3Target0.supportsOverloadedMethods();
        int int4 = python3Target0.getSerializedATNSegmentLimit();
        org.antlr.v4.codegen.target.Python3Target python3Target5 = new org.antlr.v4.codegen.target.Python3Target();
        int int6 = python3Target5.getInlineTestSetWordSize();
        boolean boolean7 = python3Target5.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target5.gen;
        boolean boolean9 = python3Target5.wantsBaseVisitor();
        boolean boolean10 = python3Target5.supportsOverloadedMethods();
        java.lang.String str13 = python3Target5.getTargetStringLiteralFromString("\\0", false);
        boolean boolean14 = python3Target5.templatesExist();
        python3Target5.addBadWords();
        org.antlr.v4.tool.Grammar grammar16 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target17 = new org.antlr.v4.codegen.target.Python3Target();
        int int18 = python3Target17.getInlineTestSetWordSize();
        java.lang.String str19 = python3Target17.language;
        java.lang.String str20 = python3Target17.getVersion();
        int int21 = python3Target17.getInlineTestSetWordSize();
        java.lang.String str22 = python3Target17.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator23 = python3Target17.gen;
        org.antlr.v4.tool.Grammar grammar24 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target25 = new org.antlr.v4.codegen.target.Python3Target();
        int int26 = python3Target25.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup27 = python3Target25.templates;
        org.antlr.v4.tool.Grammar grammar28 = null;
        int[] intArray29 = new int[] {};
        java.lang.String[] strArray30 = python3Target25.getTokenTypesAsTargetLabels(grammar28, intArray29);
        java.lang.String[] strArray31 = python3Target17.getTokenTypesAsTargetLabels(grammar24, intArray29);
        java.lang.String[] strArray32 = python3Target5.getTokenTypesAsTargetLabels(grammar16, intArray29);
        python3Target0.targetCharValueEscape = strArray32;
        org.antlr.v4.tool.Rule rule34 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str35 = python3Target0.getRuleFunctionContextStructName(rule34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 29 + "'", int4 == 29);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 64 + "'", int6 == 64);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\\0" + "'", str13, "\\0");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 64 + "'", int18 == 64);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "4.5.2.1" + "'", str20, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 64 + "'", int21 == 64);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(codeGenerator23);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 64 + "'", int26 == 64);
        org.junit.Assert.assertNull(sTGroup27);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[]");
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(strArray32);
    }

    @Test
    public void test06643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06643");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        java.lang.String str3 = python3Target0.getLanguage();
        java.lang.String str5 = python3Target0.getTargetStringLiteralFromString("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        java.lang.String str9 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator6, "hi!", true);
        int int10 = python3Target0.getSerializedATNSegmentLimit();
        boolean boolean11 = python3Target0.templatesExist();
        org.stringtemplate.v4.STGroup sTGroup12 = null;
        python3Target0.templates = sTGroup12;
        java.lang.String[] strArray14 = python3Target0.targetCharValueEscape;
        org.antlr.v4.tool.Grammar grammar15 = null;
        org.stringtemplate.v4.ST sT16 = null;
        python3Target0.genRecognizerHeaderFile(grammar15, sT16, "");
        java.lang.String[] strArray19 = python3Target0.targetCharValueEscape;
        org.antlr.v4.codegen.CodeGenerator codeGenerator20 = null;
        python3Target0.gen = codeGenerator20;
        org.antlr.v4.codegen.model.RuleFunction ruleFunction22 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str23 = python3Target0.getRuleFunctionContextStructName(ruleFunction22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\"\"" + "'", str5, "\"\"");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"i\"" + "'", str9, "\"i\"");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 29 + "'", int10 == 29);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(strArray19);
    }

    @Test
    public void test06644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06644");
        org.antlr.v4.codegen.target.Python3Target.PythonStringRenderer pythonStringRenderer0 = new org.antlr.v4.codegen.target.Python3Target.PythonStringRenderer();
        java.lang.Object obj1 = null;
        java.util.Locale locale3 = null;
        java.lang.String str4 = pythonStringRenderer0.toString(obj1, "d", locale3);
        java.util.Locale locale7 = null;
        java.lang.String str8 = pythonStringRenderer0.toString((java.lang.Object) "\".5.2.\"", "@", locale7);
        org.antlr.v4.codegen.target.Python3Target python3Target9 = new org.antlr.v4.codegen.target.Python3Target();
        int int10 = python3Target9.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup11 = python3Target9.templates;
        java.util.Locale locale13 = null;
        java.lang.String str14 = pythonStringRenderer0.toString((java.lang.Object) sTGroup11, "\"\"\"hi!\"\"\"", locale13);
        java.lang.Object obj15 = null;
        java.util.Locale locale17 = null;
        java.lang.String str18 = pythonStringRenderer0.toString(obj15, "\"\"\"\"4.5.2.1\"\"\"\"", locale17);
        org.antlr.v4.codegen.target.Python3Target python3Target19 = new org.antlr.v4.codegen.target.Python3Target();
        int int20 = python3Target19.getInlineTestSetWordSize();
        java.lang.String str21 = python3Target19.language;
        org.antlr.v4.codegen.CodeGenerator codeGenerator22 = null;
        java.lang.String str25 = python3Target19.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator22, "", true);
        org.antlr.v4.tool.Grammar grammar26 = null;
        org.stringtemplate.v4.ST sT27 = null;
        python3Target19.genRecognizerHeaderFile(grammar26, sT27, "");
        java.util.Locale locale31 = null;
        java.lang.String str32 = pythonStringRenderer0.toString((java.lang.Object) sT27, "\"\"hi!\"\"", locale31);
        org.antlr.v4.codegen.target.Python3Target python3Target33 = new org.antlr.v4.codegen.target.Python3Target();
        int int34 = python3Target33.getInlineTestSetWordSize();
        java.lang.String str35 = python3Target33.language;
        org.antlr.v4.codegen.CodeGenerator codeGenerator36 = null;
        java.lang.String str39 = python3Target33.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator36, "", true);
        org.antlr.v4.tool.Grammar grammar40 = null;
        org.stringtemplate.v4.ST sT41 = null;
        python3Target33.genRecognizerHeaderFile(grammar40, sT41, "");
        org.antlr.v4.tool.Grammar grammar44 = null;
        org.stringtemplate.v4.ST sT45 = null;
        python3Target33.genRecognizerHeaderFile(grammar44, sT45, "\"i\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator48 = python3Target33.gen;
        java.lang.String str50 = python3Target33.getTargetStringLiteralFromString("\"\"\"\"4.5.2.1\"\"\"\"");
        java.util.Locale locale52 = null;
        java.lang.String str53 = pythonStringRenderer0.toString((java.lang.Object) "\"\"\"\"4.5.2.1\"\"\"\"", "\"\"\"\"i\"\"\"\"", locale52);
        org.antlr.v4.codegen.target.Python3Target python3Target54 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean55 = python3Target54.wantsBaseVisitor();
        org.antlr.v4.codegen.CodeGenerator codeGenerator56 = null;
        python3Target54.gen = codeGenerator56;
        org.antlr.v4.codegen.CodeGenerator codeGenerator58 = python3Target54.gen;
        java.util.Set<java.lang.String> strSet59 = python3Target54.badWords;
        org.antlr.v4.codegen.target.Python3Target python3Target60 = new org.antlr.v4.codegen.target.Python3Target();
        int int61 = python3Target60.getInlineTestSetWordSize();
        java.lang.String str62 = python3Target60.language;
        java.lang.String str63 = python3Target60.getVersion();
        int int64 = python3Target60.getInlineTestSetWordSize();
        java.lang.String str65 = python3Target60.getLanguage();
        java.lang.String str68 = python3Target60.getTargetStringLiteralFromString("4.5.2.1", true);
        boolean boolean69 = python3Target60.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet70 = python3Target60.badWords;
        org.antlr.v4.tool.Grammar grammar71 = null;
        org.stringtemplate.v4.ST sT72 = null;
        python3Target60.genRecognizerHeaderFile(grammar71, sT72, "\"4.5.2.1\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator75 = null;
        java.lang.String str78 = python3Target60.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator75, "i", true);
        org.antlr.v4.codegen.target.Python3Target python3Target79 = new org.antlr.v4.codegen.target.Python3Target();
        org.stringtemplate.v4.STGroup sTGroup80 = null;
        python3Target79.templates = sTGroup80;
        java.lang.String[] strArray85 = new java.lang.String[] { "", "\\0", "" };
        java.util.LinkedHashSet<java.lang.String> strSet86 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet86, strArray85);
        python3Target79.badWords = strSet86;
        python3Target60.badWords = strSet86;
        python3Target54.badWords = strSet86;
        org.stringtemplate.v4.STGroup sTGroup91 = python3Target54.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator92 = python3Target54.getCodeGenerator();
        java.util.Locale locale94 = null;
        java.lang.String str95 = pythonStringRenderer0.toString((java.lang.Object) codeGenerator92, "\"\"\"\"\"4.5.2.1\"\"\"\"\"", locale94);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "d" + "'", str4, "d");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "@" + "'", str8, "@");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 64 + "'", int10 == 64);
        org.junit.Assert.assertNull(sTGroup11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\"\"\"hi!\"\"\"" + "'", str14, "\"\"\"hi!\"\"\"");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "\"\"\"\"4.5.2.1\"\"\"\"" + "'", str18, "\"\"\"\"4.5.2.1\"\"\"\"");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 64 + "'", int20 == 64);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "\"\"" + "'", str25, "\"\"");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "\"\"hi!\"\"" + "'", str32, "\"\"hi!\"\"");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 64 + "'", int34 == 64);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "\"\"" + "'", str39, "\"\"");
        org.junit.Assert.assertNull(codeGenerator48);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "\"\"\"\"\"4.5.2.1\"\"\"\"\"" + "'", str50, "\"\"\"\"\"4.5.2.1\"\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "\"\"\"\"i\"\"\"\"" + "'", str53, "\"\"\"\"i\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNull(codeGenerator58);
        org.junit.Assert.assertNotNull(strSet59);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 64 + "'", int61 == 64);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "4.5.2.1" + "'", str63, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 64 + "'", int64 == 64);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "\"4.5.2.1\"" + "'", str68, "\"4.5.2.1\"");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(strSet70);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "\"\"" + "'", str78, "\"\"");
        org.junit.Assert.assertNotNull(strArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNull(sTGroup91);
        org.junit.Assert.assertNull(codeGenerator92);
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "\"\"\"\"\"4.5.2.1\"\"\"\"\"" + "'", str95, "\"\"\"\"\"4.5.2.1\"\"\"\"\"");
    }

    @Test
    public void test06645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06645");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!", "" };
        python3Target0.targetCharValueEscape = strArray4;
        java.lang.String[] strArray6 = python3Target0.targetCharValueEscape;
        python3Target0.addBadWords();
        org.antlr.v4.codegen.target.Python3Target python3Target8 = new org.antlr.v4.codegen.target.Python3Target();
        int int9 = python3Target8.getInlineTestSetWordSize();
        java.lang.String str10 = python3Target8.language;
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = null;
        java.lang.String str14 = python3Target8.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator11, "", true);
        org.antlr.v4.tool.Grammar grammar15 = null;
        org.stringtemplate.v4.ST sT16 = null;
        python3Target8.genRecognizerHeaderFile(grammar15, sT16, "");
        org.antlr.v4.tool.Grammar grammar19 = null;
        org.stringtemplate.v4.ST sT20 = null;
        python3Target8.genRecognizerHeaderFile(grammar19, sT20, "\"i\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator23 = python3Target8.gen;
        org.antlr.v4.codegen.CodeGenerator codeGenerator24 = null;
        python3Target8.gen = codeGenerator24;
        java.lang.String str27 = python3Target8.encodeIntAsCharEscape(1);
        org.antlr.v4.tool.Grammar grammar28 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target29 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str31 = python3Target29.encodeIntAsCharEscape(100);
        org.antlr.v4.tool.Grammar grammar32 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target33 = new org.antlr.v4.codegen.target.Python3Target();
        int int34 = python3Target33.getInlineTestSetWordSize();
        java.lang.String str35 = python3Target33.language;
        java.lang.String str36 = python3Target33.getVersion();
        int int37 = python3Target33.getInlineTestSetWordSize();
        java.lang.String str38 = python3Target33.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator39 = python3Target33.gen;
        org.antlr.v4.tool.Grammar grammar40 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target41 = new org.antlr.v4.codegen.target.Python3Target();
        int int42 = python3Target41.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup43 = python3Target41.templates;
        org.antlr.v4.tool.Grammar grammar44 = null;
        int[] intArray45 = new int[] {};
        java.lang.String[] strArray46 = python3Target41.getTokenTypesAsTargetLabels(grammar44, intArray45);
        java.lang.String[] strArray47 = python3Target33.getTokenTypesAsTargetLabels(grammar40, intArray45);
        java.lang.String[] strArray48 = python3Target29.getTokenTypesAsTargetLabels(grammar32, intArray45);
        java.lang.String[] strArray49 = python3Target8.getTokenTypesAsTargetLabels(grammar28, intArray45);
        python3Target0.targetCharValueEscape = strArray49;
        org.stringtemplate.v4.STGroup sTGroup51 = null;
        python3Target0.templates = sTGroup51;
        python3Target0.language = "\"\"\\\"hi!\\\"\"\"";
        boolean boolean55 = python3Target0.wantsBaseListener();
        int int56 = python3Target0.getSerializedATNSegmentLimit();
        python3Target0.addBadWords();
        org.antlr.v4.tool.ast.GrammarAST grammarAST58 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str59 = python3Target0.getLoopCounter(grammarAST58);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 64 + "'", int9 == 64);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\"\"" + "'", str14, "\"\"");
        org.junit.Assert.assertNull(codeGenerator23);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "\\1" + "'", str27, "\\1");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "d" + "'", str31, "d");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 64 + "'", int34 == 64);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "4.5.2.1" + "'", str36, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 64 + "'", int37 == 64);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(codeGenerator39);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 64 + "'", int42 == 64);
        org.junit.Assert.assertNull(sTGroup43);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[]");
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 29 + "'", int56 == 29);
    }

    @Test
    public void test06646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06646");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        java.lang.String str3 = python3Target0.getVersion();
        int int4 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str5 = python3Target0.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = python3Target0.gen;
        org.antlr.v4.tool.Grammar grammar7 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target8 = new org.antlr.v4.codegen.target.Python3Target();
        int int9 = python3Target8.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup10 = python3Target8.templates;
        org.antlr.v4.tool.Grammar grammar11 = null;
        int[] intArray12 = new int[] {};
        java.lang.String[] strArray13 = python3Target8.getTokenTypesAsTargetLabels(grammar11, intArray12);
        java.lang.String[] strArray14 = python3Target0.getTokenTypesAsTargetLabels(grammar7, intArray12);
        java.lang.String str15 = python3Target0.getLanguage();
        java.lang.String str16 = python3Target0.getLanguage();
        java.lang.String str18 = python3Target0.getTargetStringLiteralFromString("\"i\"");
        java.lang.String str20 = python3Target0.getTargetStringLiteralFromString("\"4.5.2.1\"");
        int int21 = python3Target0.getSerializedATNSegmentLimit();
        org.antlr.v4.codegen.target.Python3Target python3Target22 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str24 = python3Target22.getTargetStringLiteralFromString("\"\"");
        int int25 = python3Target22.getInlineTestSetWordSize();
        boolean boolean26 = python3Target22.supportsOverloadedMethods();
        java.lang.String str28 = python3Target22.getTargetStringLiteralFromString("\"i\"");
        python3Target22.addBadWords();
        org.antlr.v4.codegen.target.Python3Target python3Target30 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str31 = python3Target30.language;
        java.lang.String[] strArray32 = python3Target30.targetCharValueEscape;
        python3Target22.targetCharValueEscape = strArray32;
        org.stringtemplate.v4.STGroup sTGroup34 = null;
        python3Target22.templates = sTGroup34;
        org.antlr.v4.codegen.target.Python3Target python3Target36 = new org.antlr.v4.codegen.target.Python3Target();
        int int37 = python3Target36.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup38 = python3Target36.templates;
        org.antlr.v4.codegen.target.Python3Target python3Target39 = new org.antlr.v4.codegen.target.Python3Target();
        int int40 = python3Target39.getInlineTestSetWordSize();
        java.lang.String[] strArray43 = new java.lang.String[] { "hi!", "" };
        python3Target39.targetCharValueEscape = strArray43;
        python3Target36.targetCharValueEscape = strArray43;
        python3Target22.targetCharValueEscape = strArray43;
        python3Target0.targetCharValueEscape = strArray43;
        python3Target0.language = "\"\"\"\"\"\"\"\"\"\"4.5.2.1\"\"\"\"\"\"\"\"\"\"";
        java.lang.String str52 = python3Target0.getTargetStringLiteralFromString("\"\"\"\"\"\"\\\"\\\"\"\"\"\"\"\"", true);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "4.5.2.1" + "'", str3, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(codeGenerator6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 64 + "'", int9 == 64);
        org.junit.Assert.assertNull(sTGroup10);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[]");
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "\"\"i\"\"" + "'", str18, "\"\"i\"\"");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "\"\"4.5.2.1\"\"" + "'", str20, "\"\"4.5.2.1\"\"");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 29 + "'", int21 == 29);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "\"\"\"\"" + "'", str24, "\"\"\"\"");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 64 + "'", int25 == 64);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "\"\"i\"\"" + "'", str28, "\"\"i\"\"");
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 64 + "'", int37 == 64);
        org.junit.Assert.assertNull(sTGroup38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 64 + "'", int40 == 64);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "\"\"\"\"\"\"\"\\\"\\\"\"\"\"\"\"\"\"" + "'", str52, "\"\"\"\"\"\"\"\\\"\\\"\"\"\"\"\"\"\"");
    }

    @Test
    public void test06647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06647");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        java.lang.String str3 = python3Target0.getLanguage();
        java.lang.String str5 = python3Target0.getTargetStringLiteralFromString("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        java.lang.String str9 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator6, "hi!", true);
        int int10 = python3Target0.getSerializedATNSegmentLimit();
        boolean boolean11 = python3Target0.templatesExist();
        org.antlr.v4.codegen.target.Python3Target python3Target12 = new org.antlr.v4.codegen.target.Python3Target();
        int int13 = python3Target12.getInlineTestSetWordSize();
        boolean boolean14 = python3Target12.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator15 = python3Target12.gen;
        boolean boolean16 = python3Target12.wantsBaseVisitor();
        boolean boolean17 = python3Target12.supportsOverloadedMethods();
        java.lang.String str20 = python3Target12.getTargetStringLiteralFromString("\\0", false);
        java.lang.String str22 = python3Target12.encodeIntAsCharEscape(10);
        java.util.Set<java.lang.String> strSet23 = python3Target12.getBadWords();
        python3Target0.badWords = strSet23;
        org.stringtemplate.v4.STGroup sTGroup25 = null;
        python3Target0.templates = sTGroup25;
        org.antlr.v4.codegen.CodeGenerator codeGenerator27 = python3Target0.getCodeGenerator();
        org.antlr.v4.tool.Grammar grammar28 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str30 = python3Target0.getTokenTypeAsTargetLabel(grammar28, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\"\"" + "'", str5, "\"\"");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"i\"" + "'", str9, "\"i\"");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 29 + "'", int10 == 29);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 64 + "'", int13 == 64);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(codeGenerator15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "\\0" + "'", str20, "\\0");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "\\12" + "'", str22, "\\12");
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertNull(codeGenerator27);
    }

    @Test
    public void test06648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06648");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        org.stringtemplate.v4.STGroup sTGroup1 = null;
        python3Target0.templates = sTGroup1;
        java.lang.String[] strArray6 = new java.lang.String[] { "", "\\0", "" };
        java.util.LinkedHashSet<java.lang.String> strSet7 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet7, strArray6);
        python3Target0.badWords = strSet7;
        org.stringtemplate.v4.STGroup sTGroup10 = python3Target0.templates;
        java.lang.String str11 = python3Target0.getVersion();
        java.lang.String str12 = python3Target0.language;
        org.antlr.v4.tool.Grammar grammar13 = null;
        org.stringtemplate.v4.ST sT14 = null;
        // The following exception was thrown during execution in test generation
        try {
            python3Target0.genFile(grammar13, sT14, "\"\\\"\\\"\\\"\\\"\\\"64\\\"\\\"\\\"\\\"\\\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(sTGroup10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "4.5.2.1" + "'", str11, "4.5.2.1");
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test06649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06649");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        java.lang.String str3 = python3Target0.getVersion();
        int int4 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str5 = python3Target0.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = python3Target0.gen;
        python3Target0.addBadWords();
        python3Target0.language = "\\0";
        boolean boolean10 = python3Target0.wantsBaseVisitor();
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = python3Target0.getCodeGenerator();
        int int12 = python3Target0.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar13 = null;
        org.stringtemplate.v4.ST sT14 = null;
        python3Target0.genRecognizerHeaderFile(grammar13, sT14, "\"\"\"4.5.2.1\"\"\"");
        java.lang.String[] strArray17 = python3Target0.targetCharValueEscape;
        java.lang.String str18 = python3Target0.language;
        // The following exception was thrown during execution in test generation
        try {
            org.stringtemplate.v4.STGroup sTGroup19 = python3Target0.loadTemplates();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "4.5.2.1" + "'", str3, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(codeGenerator6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(codeGenerator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 29 + "'", int12 == 29);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "\\0" + "'", str18, "\\0");
    }

    @Test
    public void test06650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06650");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        org.stringtemplate.v4.STGroup sTGroup3 = python3Target0.templates;
        boolean boolean4 = python3Target0.templatesExist();
        java.lang.String[] strArray5 = python3Target0.targetCharValueEscape;
        java.util.Set<java.lang.String> strSet6 = python3Target0.badWords;
        boolean boolean7 = python3Target0.templatesExist();
        java.util.Set<java.lang.String> strSet8 = python3Target0.getBadWords();
        org.antlr.v4.codegen.target.Python3Target python3Target9 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str10 = python3Target9.language;
        org.antlr.v4.codegen.target.Python3Target python3Target11 = new org.antlr.v4.codegen.target.Python3Target();
        org.stringtemplate.v4.STGroup sTGroup12 = null;
        python3Target11.templates = sTGroup12;
        java.lang.String[] strArray17 = new java.lang.String[] { "", "\\0", "" };
        java.util.LinkedHashSet<java.lang.String> strSet18 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet18, strArray17);
        python3Target11.badWords = strSet18;
        python3Target9.badWords = strSet18;
        org.stringtemplate.v4.STGroup sTGroup22 = python3Target9.templates;
        org.antlr.v4.codegen.target.Python3Target python3Target23 = new org.antlr.v4.codegen.target.Python3Target();
        int int24 = python3Target23.getInlineTestSetWordSize();
        boolean boolean25 = python3Target23.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator26 = python3Target23.gen;
        boolean boolean27 = python3Target23.supportsOverloadedMethods();
        java.lang.String[] strArray28 = python3Target23.targetCharValueEscape;
        python3Target9.targetCharValueEscape = strArray28;
        java.util.Set<java.lang.String> strSet30 = python3Target9.getBadWords();
        python3Target0.badWords = strSet30;
        org.antlr.v4.codegen.CodeGenerator codeGenerator32 = python3Target0.getCodeGenerator();
        java.lang.String str33 = python3Target0.language;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(sTGroup3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(sTGroup22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 64 + "'", int24 == 64);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(codeGenerator26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertNull(codeGenerator32);
        org.junit.Assert.assertNull(str33);
    }

    @Test
    public void test06651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06651");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        boolean boolean2 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.gen;
        boolean boolean4 = python3Target0.wantsBaseVisitor();
        java.lang.String str5 = python3Target0.getLanguage();
        java.lang.String str6 = python3Target0.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        python3Target0.gen = codeGenerator7;
        int int9 = python3Target0.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar10 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target11 = new org.antlr.v4.codegen.target.Python3Target();
        int int12 = python3Target11.getInlineTestSetWordSize();
        boolean boolean13 = python3Target11.wantsBaseVisitor();
        java.lang.String str14 = python3Target11.getLanguage();
        java.lang.String str17 = python3Target11.getTargetStringLiteralFromString("\"\".5.2.\"\"", false);
        java.lang.String str20 = python3Target11.getTargetStringLiteralFromString("\"\"\"\"\"4.5.2.1\"\"\"\"\"", true);
        org.antlr.v4.tool.Grammar grammar21 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target22 = new org.antlr.v4.codegen.target.Python3Target();
        int int23 = python3Target22.getInlineTestSetWordSize();
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!", "" };
        python3Target22.targetCharValueEscape = strArray26;
        org.antlr.v4.codegen.CodeGenerator codeGenerator28 = null;
        java.lang.String str31 = python3Target22.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator28, "\"\"", false);
        int int32 = python3Target22.getSerializedATNSegmentLimit();
        org.antlr.v4.codegen.CodeGenerator codeGenerator33 = python3Target22.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator34 = python3Target22.getCodeGenerator();
        boolean boolean35 = python3Target22.templatesExist();
        org.antlr.v4.tool.Grammar grammar36 = null;
        int[] intArray37 = new int[] {};
        java.lang.String[] strArray38 = python3Target22.getTokenTypesAsTargetLabels(grammar36, intArray37);
        java.lang.String[] strArray39 = python3Target11.getTokenTypesAsTargetLabels(grammar21, intArray37);
        java.lang.String[] strArray40 = python3Target0.getTokenTypesAsTargetLabels(grammar10, intArray37);
        java.util.Set<java.lang.String> strSet41 = python3Target0.badWords;
        python3Target0.language = "\"\\\"\\\"0\\\"\\\"\"";
        java.lang.String[] strArray44 = null;
        python3Target0.targetCharValueEscape = strArray44;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 29 + "'", int9 == 29);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 64 + "'", int12 == 64);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\"\".5.2.\"\"" + "'", str17, "\"\".5.2.\"\"");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "\"\"\"\"\"\"4.5.2.1\"\"\"\"\"\"" + "'", str20, "\"\"\"\"\"\"4.5.2.1\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 64 + "'", int23 == 64);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 29 + "'", int32 == 29);
        org.junit.Assert.assertNull(codeGenerator33);
        org.junit.Assert.assertNull(codeGenerator34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[]");
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertNotNull(strSet41);
    }

    @Test
    public void test06652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06652");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        java.lang.String str3 = python3Target0.getLanguage();
        java.lang.String str5 = python3Target0.getTargetStringLiteralFromString("");
        java.lang.String str7 = python3Target0.getTargetStringLiteralFromString("\\1");
        boolean boolean8 = python3Target0.wantsBaseVisitor();
        boolean boolean9 = python3Target0.templatesExist();
        org.antlr.v4.codegen.target.Python3Target python3Target10 = new org.antlr.v4.codegen.target.Python3Target();
        int int11 = python3Target10.getInlineTestSetWordSize();
        java.lang.String str12 = python3Target10.language;
        java.lang.String str13 = python3Target10.getVersion();
        int int14 = python3Target10.getInlineTestSetWordSize();
        java.lang.String str15 = python3Target10.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator16 = python3Target10.gen;
        python3Target10.addBadWords();
        python3Target10.language = "\\0";
        boolean boolean20 = python3Target10.wantsBaseVisitor();
        org.antlr.v4.codegen.CodeGenerator codeGenerator21 = python3Target10.getCodeGenerator();
        int int22 = python3Target10.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar23 = null;
        org.stringtemplate.v4.ST sT24 = null;
        python3Target10.genRecognizerHeaderFile(grammar23, sT24, "\"\"\"4.5.2.1\"\"\"");
        java.util.Set<java.lang.String> strSet27 = python3Target10.badWords;
        python3Target0.badWords = strSet27;
        org.antlr.v4.codegen.target.Python3Target python3Target29 = new org.antlr.v4.codegen.target.Python3Target();
        int int30 = python3Target29.getInlineTestSetWordSize();
        java.lang.String str31 = python3Target29.language;
        java.lang.String str32 = python3Target29.getVersion();
        org.antlr.v4.tool.Grammar grammar33 = null;
        org.stringtemplate.v4.ST sT34 = null;
        python3Target29.genRecognizerHeaderFile(grammar33, sT34, "\"\"\"\"");
        boolean boolean37 = python3Target29.wantsBaseListener();
        python3Target29.language = "hi!";
        org.antlr.v4.codegen.target.Python3Target python3Target40 = new org.antlr.v4.codegen.target.Python3Target();
        int int41 = python3Target40.getInlineTestSetWordSize();
        java.lang.String str42 = python3Target40.language;
        java.lang.String str43 = python3Target40.getVersion();
        int int44 = python3Target40.getInlineTestSetWordSize();
        java.lang.String str45 = python3Target40.getLanguage();
        java.lang.String str48 = python3Target40.getTargetStringLiteralFromString("4.5.2.1", true);
        boolean boolean49 = python3Target40.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet50 = python3Target40.badWords;
        org.antlr.v4.tool.Grammar grammar51 = null;
        org.stringtemplate.v4.ST sT52 = null;
        python3Target40.genRecognizerHeaderFile(grammar51, sT52, "\"4.5.2.1\"");
        java.util.Set<java.lang.String> strSet55 = python3Target40.getBadWords();
        python3Target29.badWords = strSet55;
        python3Target0.badWords = strSet55;
        java.lang.Class<?> wildcardClass58 = strSet55.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\"\"" + "'", str5, "\"\"");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"\\1\"" + "'", str7, "\"\\1\"");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 64 + "'", int11 == 64);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "4.5.2.1" + "'", str13, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 64 + "'", int14 == 64);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(codeGenerator16);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(codeGenerator21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 29 + "'", int22 == 29);
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 64 + "'", int30 == 64);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "4.5.2.1" + "'", str32, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 64 + "'", int41 == 64);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "4.5.2.1" + "'", str43, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 64 + "'", int44 == 64);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "\"4.5.2.1\"" + "'", str48, "\"4.5.2.1\"");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(strSet50);
        org.junit.Assert.assertNotNull(strSet55);
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test06653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06653");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.getCodeGenerator();
        java.util.Set<java.lang.String> strSet4 = python3Target0.getBadWords();
        java.lang.String[] strArray5 = python3Target0.targetCharValueEscape;
        java.lang.String str7 = python3Target0.getTargetStringLiteralFromString("\"\"i\"\"");
        python3Target0.addBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = null;
        java.lang.String str12 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator9, "\"\"\" \"\"\"", false);
        // The following exception was thrown during execution in test generation
        try {
            org.stringtemplate.v4.STGroup sTGroup13 = python3Target0.getTemplates();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"\"\"i\"\"\"" + "'", str7, "\"\"\"i\"\"\"");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\\\"\\\" \\\"\\\"" + "'", str12, "\\\"\\\" \\\"\\\"");
    }

    @Test
    public void test06654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06654");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        boolean boolean2 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.gen;
        boolean boolean4 = python3Target0.supportsOverloadedMethods();
        boolean boolean5 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        java.lang.String str9 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator6, "\"\"hi!\"\"", true);
        python3Target0.addBadWords();
        org.antlr.v4.codegen.target.Python3Target python3Target11 = new org.antlr.v4.codegen.target.Python3Target();
        org.stringtemplate.v4.STGroup sTGroup12 = null;
        python3Target11.templates = sTGroup12;
        java.util.Set<java.lang.String> strSet14 = null;
        python3Target11.badWords = strSet14;
        boolean boolean16 = python3Target11.wantsBaseListener();
        java.lang.String[] strArray17 = python3Target11.targetCharValueEscape;
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray17;
        python3Target0.targetCharValueEscape = strArray17;
        org.antlr.v4.tool.Grammar grammar20 = null;
        org.stringtemplate.v4.ST sT21 = null;
        python3Target0.genRecognizerHeaderFile(grammar20, sT21, "");
        org.antlr.v4.codegen.CodeGenerator codeGenerator24 = null;
        java.lang.String str27 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator24, "\"\"\"\"\"4.5.2.1\"\"\"\"\"", false);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str9, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "\\\"\\\"\\\"\\\"4.5.2.1\\\"\\\"\\\"\\\"" + "'", str27, "\\\"\\\"\\\"\\\"4.5.2.1\\\"\\\"\\\"\\\"");
    }

    @Test
    public void test06655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06655");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        org.stringtemplate.v4.STGroup sTGroup1 = null;
        python3Target0.templates = sTGroup1;
        java.util.Set<java.lang.String> strSet3 = null;
        python3Target0.badWords = strSet3;
        boolean boolean5 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup6 = null;
        python3Target0.templates = sTGroup6;
        python3Target0.language = "\"\\\"i\\\"\"";
        org.stringtemplate.v4.STGroup sTGroup10 = python3Target0.templates;
        int int11 = python3Target0.getInlineTestSetWordSize();
        boolean boolean12 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.tool.ast.GrammarAST grammarAST13 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean14 = python3Target0.grammarSymbolCausesIssueInGeneratedCode(grammarAST13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(sTGroup10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 64 + "'", int11 == 64);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test06656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06656");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        boolean boolean2 = python3Target0.wantsBaseVisitor();
        java.lang.String str3 = python3Target0.getLanguage();
        int int4 = python3Target0.getInlineTestSetWordSize();
        python3Target0.addBadWords();
        boolean boolean6 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        python3Target0.gen = codeGenerator7;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str10 = python3Target0.getElementName("_tset\\1");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test06657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06657");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        boolean boolean2 = python3Target0.wantsBaseVisitor();
        java.lang.String str3 = python3Target0.getLanguage();
        int int4 = python3Target0.getInlineTestSetWordSize();
        python3Target0.addBadWords();
        boolean boolean6 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        python3Target0.gen = codeGenerator7;
        org.antlr.v4.tool.ast.GrammarAST grammarAST9 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str10 = python3Target0.getLoopLabel(grammarAST9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test06658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06658");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        boolean boolean2 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.gen;
        boolean boolean4 = python3Target0.wantsBaseVisitor();
        java.lang.String str5 = python3Target0.language;
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromString("\\0", false);
        int int9 = python3Target0.getInlineTestSetWordSize();
        int int10 = python3Target0.getSerializedATNSegmentLimit();
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = python3Target0.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = python3Target0.gen;
        java.util.Set<java.lang.String> strSet13 = python3Target0.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = null;
        python3Target0.gen = codeGenerator14;
        python3Target0.language = "\"\"\"\"\"\\0\"\"\"\"\"";
        org.antlr.v4.tool.Rule rule18 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str19 = python3Target0.getRuleFunctionContextStructName(rule18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\\0" + "'", str8, "\\0");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 64 + "'", int9 == 64);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 29 + "'", int10 == 29);
        org.junit.Assert.assertNull(codeGenerator11);
        org.junit.Assert.assertNull(codeGenerator12);
        org.junit.Assert.assertNotNull(strSet13);
    }

    @Test
    public void test06659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06659");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        java.lang.String str3 = python3Target0.getLanguage();
        java.lang.String str5 = python3Target0.getTargetStringLiteralFromString("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        java.lang.String str9 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator6, "hi!", true);
        int int10 = python3Target0.getSerializedATNSegmentLimit();
        boolean boolean11 = python3Target0.templatesExist();
        org.stringtemplate.v4.STGroup sTGroup12 = null;
        python3Target0.templates = sTGroup12;
        java.lang.String[] strArray14 = python3Target0.targetCharValueEscape;
        boolean boolean15 = python3Target0.supportsOverloadedMethods();
        java.lang.String str17 = python3Target0.getTargetStringLiteralFromString("\"\"\"\"\"\"\"\"");
        boolean boolean18 = python3Target0.templatesExist();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\"\"" + "'", str5, "\"\"");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"i\"" + "'", str9, "\"i\"");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 29 + "'", int10 == 29);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\"\"\"\"\"\"\"\"\"\"" + "'", str17, "\"\"\"\"\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test06660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06660");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        org.stringtemplate.v4.STGroup sTGroup1 = null;
        python3Target0.templates = sTGroup1;
        java.lang.String[] strArray6 = new java.lang.String[] { "", "\\0", "" };
        java.util.LinkedHashSet<java.lang.String> strSet7 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet7, strArray6);
        python3Target0.badWords = strSet7;
        java.lang.String[] strArray10 = python3Target0.targetCharValueEscape;
        java.lang.String[] strArray11 = python3Target0.targetCharValueEscape;
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = null;
        java.lang.String str15 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator12, "\\\".5.2.\\\"", true);
        org.antlr.v4.tool.Grammar grammar16 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str18 = python3Target0.getTokenTypeAsTargetLabel(grammar16, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\"\\\".5.2.\\\"\"" + "'", str15, "\"\\\".5.2.\\\"\"");
    }

    @Test
    public void test06661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06661");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.wantsBaseVisitor();
        org.antlr.v4.codegen.CodeGenerator codeGenerator2 = null;
        python3Target0.gen = codeGenerator2;
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = python3Target0.gen;
        java.util.Set<java.lang.String> strSet5 = python3Target0.badWords;
        org.antlr.v4.codegen.target.Python3Target python3Target6 = new org.antlr.v4.codegen.target.Python3Target();
        int int7 = python3Target6.getInlineTestSetWordSize();
        java.lang.String str8 = python3Target6.language;
        java.lang.String str9 = python3Target6.getVersion();
        int int10 = python3Target6.getInlineTestSetWordSize();
        java.lang.String str11 = python3Target6.getLanguage();
        java.lang.String str14 = python3Target6.getTargetStringLiteralFromString("4.5.2.1", true);
        boolean boolean15 = python3Target6.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet16 = python3Target6.badWords;
        org.antlr.v4.tool.Grammar grammar17 = null;
        org.stringtemplate.v4.ST sT18 = null;
        python3Target6.genRecognizerHeaderFile(grammar17, sT18, "\"4.5.2.1\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator21 = null;
        java.lang.String str24 = python3Target6.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator21, "i", true);
        org.antlr.v4.codegen.target.Python3Target python3Target25 = new org.antlr.v4.codegen.target.Python3Target();
        org.stringtemplate.v4.STGroup sTGroup26 = null;
        python3Target25.templates = sTGroup26;
        java.lang.String[] strArray31 = new java.lang.String[] { "", "\\0", "" };
        java.util.LinkedHashSet<java.lang.String> strSet32 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet32, strArray31);
        python3Target25.badWords = strSet32;
        python3Target6.badWords = strSet32;
        python3Target0.badWords = strSet32;
        boolean boolean37 = python3Target0.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup38 = python3Target0.templates;
        java.lang.String str39 = python3Target0.getVersion();
        // The following exception was thrown during execution in test generation
        try {
            org.stringtemplate.v4.STGroup sTGroup40 = python3Target0.getTemplates();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(codeGenerator4);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 64 + "'", int7 == 64);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "4.5.2.1" + "'", str9, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 64 + "'", int10 == 64);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\"4.5.2.1\"" + "'", str14, "\"4.5.2.1\"");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "\"\"" + "'", str24, "\"\"");
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(sTGroup38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "4.5.2.1" + "'", str39, "4.5.2.1");
    }

    @Test
    public void test06662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06662");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.LinkedHashSet<java.lang.String> strSet3 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet3, strArray2);
        python3Target0.badWords = strSet3;
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = python3Target0.getCodeGenerator();
        java.lang.String str8 = python3Target0.encodeIntAsCharEscape((int) '4');
        java.lang.String str10 = python3Target0.encodeIntAsCharEscape((int) '#');
        org.antlr.v4.tool.Grammar grammar11 = null;
        org.stringtemplate.v4.ST sT12 = null;
        // The following exception was thrown during execution in test generation
        try {
            python3Target0.genFile(grammar11, sT12, "\"\\\"\\\"\\\"12\\\"\\\"\\\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(codeGenerator6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\\64" + "'", str8, "\\64");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "#" + "'", str10, "#");
    }

    @Test
    public void test06663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06663");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        boolean boolean2 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.gen;
        java.lang.String str4 = python3Target0.getVersion();
        java.lang.String[] strArray5 = python3Target0.targetCharValueEscape;
        org.antlr.v4.tool.Grammar grammar6 = null;
        org.stringtemplate.v4.ST sT7 = null;
        python3Target0.genRecognizerHeaderFile(grammar6, sT7, "");
        python3Target0.addBadWords();
        boolean boolean11 = python3Target0.templatesExist();
        java.lang.String str12 = python3Target0.getLanguage();
        python3Target0.language = "\"\"\"\"\"\\\"\\\"\\\"4.5.2.1\\\"\\\"\\\"\"\"\"\"\"";
        java.lang.String str16 = python3Target0.encodeIntAsCharEscape(29);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "4.5.2.1" + "'", str4, "4.5.2.1");
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\\35" + "'", str16, "\\35");
    }

    @Test
    public void test06664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06664");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        boolean boolean2 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.gen;
        boolean boolean4 = python3Target0.wantsBaseVisitor();
        java.lang.String str5 = python3Target0.language;
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromString("\\0", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = python3Target0.gen;
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        java.lang.String str13 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator10, "\"\\\"\\\"4.5.2.1\\\"\\\"\"", true);
        python3Target0.addBadWords();
        java.util.Set<java.lang.String> strSet15 = python3Target0.badWords;
        java.lang.String str16 = python3Target0.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = null;
        java.lang.String str20 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator17, "\"\"\"\"\"\\0\"\"\"\"\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator21 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target22 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator21);
        java.util.Set<java.lang.String> strSet23 = python3Target22.badWords;
        java.lang.String str24 = python3Target22.getLanguage();
        java.lang.String str26 = python3Target22.getImplicitRuleLabel("\\\"1\\\"");
        org.stringtemplate.v4.STGroup sTGroup27 = python3Target22.loadTemplates();
        python3Target0.templates = sTGroup27;
        org.stringtemplate.v4.STGroup sTGroup29 = python3Target0.templates;
        org.antlr.v4.tool.ast.GrammarAST grammarAST30 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean31 = python3Target0.grammarSymbolCausesIssueInGeneratedCode(grammarAST30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\\0" + "'", str8, "\\0");
        org.junit.Assert.assertNull(codeGenerator9);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"\\\"\\\"4.5.2.1\\\"\\\"\"" + "'", str13, "\"\\\"\\\"4.5.2.1\\\"\\\"\"");
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "\\\"\\\"\\\"\\\"0\\\"\\\"\\\"\\\"" + "'", str20, "\\\"\\\"\\\"\\\"0\\\"\\\"\\\"\\\"");
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Python3" + "'", str24, "Python3");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "_\\\"1\\\"" + "'", str26, "_\\\"1\\\"");
        org.junit.Assert.assertNotNull(sTGroup27);
        org.junit.Assert.assertNotNull(sTGroup29);
    }

    @Test
    public void test06665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06665");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "", true);
        org.antlr.v4.tool.Grammar grammar7 = null;
        org.stringtemplate.v4.ST sT8 = null;
        python3Target0.genRecognizerHeaderFile(grammar7, sT8, "");
        org.antlr.v4.tool.Grammar grammar11 = null;
        org.stringtemplate.v4.ST sT12 = null;
        python3Target0.genRecognizerHeaderFile(grammar11, sT12, "\"i\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator15 = python3Target0.gen;
        org.antlr.v4.codegen.CodeGenerator codeGenerator16 = python3Target0.getCodeGenerator();
        boolean boolean17 = python3Target0.supportsOverloadedMethods();
        java.lang.String str18 = python3Target0.getVersion();
        org.stringtemplate.v4.STGroup sTGroup19 = python3Target0.templates;
        org.antlr.v4.tool.ast.GrammarAST grammarAST20 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean21 = python3Target0.grammarSymbolCausesIssueInGeneratedCode(grammarAST20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"" + "'", str6, "\"\"");
        org.junit.Assert.assertNull(codeGenerator15);
        org.junit.Assert.assertNull(codeGenerator16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "4.5.2.1" + "'", str18, "4.5.2.1");
        org.junit.Assert.assertNull(sTGroup19);
    }

    @Test
    public void test06666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06666");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str1 = python3Target0.language;
        int int2 = python3Target0.getSerializedATNSegmentLimit();
        java.lang.String str3 = python3Target0.getLanguage();
        java.util.Set<java.lang.String> strSet4 = python3Target0.getBadWords();
        org.stringtemplate.v4.STGroup sTGroup5 = null;
        python3Target0.templates = sTGroup5;
        python3Target0.language = "\"1\"";
        java.lang.String str9 = python3Target0.getVersion();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str11 = python3Target0.getAltLabelContextStructName("_tset\"\"\\\"\\\"0\\\"\\\"\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 29 + "'", int2 == 29);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "4.5.2.1" + "'", str9, "4.5.2.1");
    }

    @Test
    public void test06667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06667");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        boolean boolean2 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.gen;
        java.lang.String str4 = python3Target0.getVersion();
        java.lang.String[] strArray5 = python3Target0.targetCharValueEscape;
        boolean boolean6 = python3Target0.supportsOverloadedMethods();
        java.lang.String str8 = python3Target0.encodeIntAsCharEscape((int) '#');
        boolean boolean9 = python3Target0.wantsBaseListener();
        java.util.Set<java.lang.String> strSet10 = python3Target0.getBadWords();
        java.lang.String str11 = python3Target0.getVersion();
        java.lang.String str12 = python3Target0.language;
        java.lang.String[] strArray13 = python3Target0.targetCharValueEscape;
        boolean boolean14 = python3Target0.wantsBaseVisitor();
        org.antlr.v4.tool.ast.GrammarAST grammarAST15 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str16 = python3Target0.getLoopCounter(grammarAST15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "4.5.2.1" + "'", str4, "4.5.2.1");
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "#" + "'", str8, "#");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "4.5.2.1" + "'", str11, "4.5.2.1");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test06668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06668");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        java.lang.String str3 = python3Target0.getVersion();
        int int4 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str5 = python3Target0.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = python3Target0.gen;
        org.antlr.v4.tool.Grammar grammar7 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target8 = new org.antlr.v4.codegen.target.Python3Target();
        int int9 = python3Target8.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup10 = python3Target8.templates;
        org.antlr.v4.tool.Grammar grammar11 = null;
        int[] intArray12 = new int[] {};
        java.lang.String[] strArray13 = python3Target8.getTokenTypesAsTargetLabels(grammar11, intArray12);
        java.lang.String[] strArray14 = python3Target0.getTokenTypesAsTargetLabels(grammar7, intArray12);
        java.lang.String str16 = python3Target0.encodeIntAsCharEscape((int) (byte) 100);
        java.lang.String str17 = python3Target0.language;
        java.lang.String str18 = python3Target0.language;
        org.antlr.v4.codegen.CodeGenerator codeGenerator19 = null;
        java.lang.String str22 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator19, "\\\"hi!\\\"", false);
        boolean boolean23 = python3Target0.wantsBaseListener();
        java.lang.String[] strArray24 = python3Target0.targetCharValueEscape;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str26 = python3Target0.getAltLabelContextStructName("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 0");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "4.5.2.1" + "'", str3, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(codeGenerator6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 64 + "'", int9 == 64);
        org.junit.Assert.assertNull(sTGroup10);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[]");
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "d" + "'", str16, "d");
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "\\\"hi!\\\"" + "'", str22, "\\\"hi!\\\"");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(strArray24);
    }

    @Test
    public void test06669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06669");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str1 = python3Target0.language;
        boolean boolean2 = python3Target0.templatesExist();
        java.lang.String str4 = python3Target0.encodeIntAsCharEscape((int) (short) 100);
        int int5 = python3Target0.getInlineTestSetWordSize();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "d" + "'", str4, "d");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 64 + "'", int5 == 64);
    }

    @Test
    public void test06670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06670");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.wantsBaseVisitor();
        org.antlr.v4.codegen.CodeGenerator codeGenerator2 = null;
        python3Target0.gen = codeGenerator2;
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = python3Target0.gen;
        java.util.Set<java.lang.String> strSet5 = python3Target0.badWords;
        org.antlr.v4.codegen.target.Python3Target python3Target6 = new org.antlr.v4.codegen.target.Python3Target();
        int int7 = python3Target6.getInlineTestSetWordSize();
        java.lang.String str8 = python3Target6.language;
        java.lang.String str9 = python3Target6.getVersion();
        int int10 = python3Target6.getInlineTestSetWordSize();
        java.lang.String str11 = python3Target6.getLanguage();
        java.lang.String str14 = python3Target6.getTargetStringLiteralFromString("4.5.2.1", true);
        boolean boolean15 = python3Target6.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet16 = python3Target6.badWords;
        org.antlr.v4.tool.Grammar grammar17 = null;
        org.stringtemplate.v4.ST sT18 = null;
        python3Target6.genRecognizerHeaderFile(grammar17, sT18, "\"4.5.2.1\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator21 = null;
        java.lang.String str24 = python3Target6.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator21, "i", true);
        org.antlr.v4.codegen.target.Python3Target python3Target25 = new org.antlr.v4.codegen.target.Python3Target();
        org.stringtemplate.v4.STGroup sTGroup26 = null;
        python3Target25.templates = sTGroup26;
        java.lang.String[] strArray31 = new java.lang.String[] { "", "\\0", "" };
        java.util.LinkedHashSet<java.lang.String> strSet32 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet32, strArray31);
        python3Target25.badWords = strSet32;
        python3Target6.badWords = strSet32;
        python3Target0.badWords = strSet32;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str38 = python3Target0.getAltLabelContextStructName("\"d\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(codeGenerator4);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 64 + "'", int7 == 64);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "4.5.2.1" + "'", str9, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 64 + "'", int10 == 64);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\"4.5.2.1\"" + "'", str14, "\"4.5.2.1\"");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "\"\"" + "'", str24, "\"\"");
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
    }

    @Test
    public void test06671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06671");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        java.lang.String str3 = python3Target0.getVersion();
        int int4 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromString("@");
        org.antlr.v4.codegen.target.Python3Target python3Target7 = new org.antlr.v4.codegen.target.Python3Target();
        int int8 = python3Target7.getInlineTestSetWordSize();
        java.lang.String str9 = python3Target7.language;
        java.lang.String str10 = python3Target7.getVersion();
        int int11 = python3Target7.getInlineTestSetWordSize();
        java.lang.String str12 = python3Target7.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = python3Target7.gen;
        python3Target7.addBadWords();
        python3Target7.language = "\\0";
        java.lang.String[] strArray17 = python3Target7.targetCharValueEscape;
        python3Target0.targetCharValueEscape = strArray17;
        org.antlr.v4.tool.Grammar grammar19 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target20 = new org.antlr.v4.codegen.target.Python3Target();
        int int21 = python3Target20.getInlineTestSetWordSize();
        java.lang.String str22 = python3Target20.language;
        org.antlr.v4.codegen.CodeGenerator codeGenerator23 = null;
        java.lang.String str26 = python3Target20.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator23, "", true);
        org.antlr.v4.tool.Grammar grammar27 = null;
        org.stringtemplate.v4.ST sT28 = null;
        python3Target20.genRecognizerHeaderFile(grammar27, sT28, "\"\"\"\"");
        org.stringtemplate.v4.STGroup sTGroup31 = null;
        python3Target20.templates = sTGroup31;
        org.stringtemplate.v4.STGroup sTGroup33 = null;
        python3Target20.templates = sTGroup33;
        org.antlr.v4.tool.Grammar grammar35 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target36 = new org.antlr.v4.codegen.target.Python3Target();
        int int37 = python3Target36.getInlineTestSetWordSize();
        java.lang.String str38 = python3Target36.language;
        java.lang.String str39 = python3Target36.getVersion();
        int int40 = python3Target36.getInlineTestSetWordSize();
        java.lang.String str41 = python3Target36.getLanguage();
        java.lang.String str44 = python3Target36.getTargetStringLiteralFromString("4.5.2.1", true);
        java.util.Set<java.lang.String> strSet45 = python3Target36.badWords;
        int int46 = python3Target36.getSerializedATNSegmentLimit();
        java.lang.String str47 = python3Target36.getVersion();
        org.antlr.v4.tool.Grammar grammar48 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target49 = new org.antlr.v4.codegen.target.Python3Target();
        int int50 = python3Target49.getInlineTestSetWordSize();
        java.lang.String str51 = python3Target49.language;
        java.lang.String str52 = python3Target49.getVersion();
        int int53 = python3Target49.getInlineTestSetWordSize();
        java.lang.String str54 = python3Target49.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator55 = python3Target49.gen;
        org.antlr.v4.tool.Grammar grammar56 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target57 = new org.antlr.v4.codegen.target.Python3Target();
        int int58 = python3Target57.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup59 = python3Target57.templates;
        org.antlr.v4.tool.Grammar grammar60 = null;
        int[] intArray61 = new int[] {};
        java.lang.String[] strArray62 = python3Target57.getTokenTypesAsTargetLabels(grammar60, intArray61);
        java.lang.String[] strArray63 = python3Target49.getTokenTypesAsTargetLabels(grammar56, intArray61);
        java.lang.String[] strArray64 = python3Target36.getTokenTypesAsTargetLabels(grammar48, intArray61);
        java.lang.String[] strArray65 = python3Target20.getTokenTypesAsTargetLabels(grammar35, intArray61);
        java.lang.String[] strArray66 = python3Target0.getTokenTypesAsTargetLabels(grammar19, intArray61);
        java.lang.String[] strArray67 = python3Target0.targetCharValueEscape;
        org.antlr.v4.tool.Grammar grammar68 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str70 = python3Target0.getTokenTypeAsTargetLabel(grammar68, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "4.5.2.1" + "'", str3, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"@\"" + "'", str6, "\"@\"");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 64 + "'", int8 == 64);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "4.5.2.1" + "'", str10, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 64 + "'", int11 == 64);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(codeGenerator13);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 64 + "'", int21 == 64);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\"\"" + "'", str26, "\"\"");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 64 + "'", int37 == 64);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "4.5.2.1" + "'", str39, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 64 + "'", int40 == 64);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "\"4.5.2.1\"" + "'", str44, "\"4.5.2.1\"");
        org.junit.Assert.assertNotNull(strSet45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 29 + "'", int46 == 29);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "4.5.2.1" + "'", str47, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 64 + "'", int50 == 64);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "4.5.2.1" + "'", str52, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 64 + "'", int53 == 64);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNull(codeGenerator55);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 64 + "'", int58 == 64);
        org.junit.Assert.assertNull(sTGroup59);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[]");
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertNotNull(strArray67);
    }

    @Test
    public void test06672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06672");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        org.stringtemplate.v4.STGroup sTGroup3 = python3Target0.templates;
        boolean boolean4 = python3Target0.templatesExist();
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = python3Target0.getCodeGenerator();
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromString("\"\"\"\\\"\\\"\"\"\"", false);
        java.lang.String str10 = python3Target0.encodeIntAsCharEscape(64);
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = python3Target0.gen;
        org.antlr.v4.tool.Rule rule12 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str13 = python3Target0.getRuleFunctionContextStructName(rule12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(sTGroup3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(codeGenerator5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\"\"\\\"\\\"\"\"\"" + "'", str8, "\"\"\"\\\"\\\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "@" + "'", str10, "@");
        org.junit.Assert.assertNull(codeGenerator11);
    }

    @Test
    public void test06673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06673");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str2 = python3Target0.getTargetStringLiteralFromString("\"\"");
        int int3 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str5 = python3Target0.encodeIntAsCharEscape(0);
        java.lang.String str7 = python3Target0.getTargetStringLiteralFromString("");
        java.util.Set<java.lang.String> strSet8 = python3Target0.getBadWords();
        java.lang.String str9 = python3Target0.getLanguage();
        org.antlr.v4.tool.Grammar grammar10 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target11 = new org.antlr.v4.codegen.target.Python3Target();
        int int12 = python3Target11.getInlineTestSetWordSize();
        java.lang.String str13 = python3Target11.language;
        java.lang.String str14 = python3Target11.getLanguage();
        java.lang.String str16 = python3Target11.getTargetStringLiteralFromString("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = null;
        java.lang.String str20 = python3Target11.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator17, "hi!", true);
        int int21 = python3Target11.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar22 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target23 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str24 = python3Target23.language;
        org.antlr.v4.codegen.target.Python3Target python3Target25 = new org.antlr.v4.codegen.target.Python3Target();
        org.stringtemplate.v4.STGroup sTGroup26 = null;
        python3Target25.templates = sTGroup26;
        java.lang.String[] strArray31 = new java.lang.String[] { "", "\\0", "" };
        java.util.LinkedHashSet<java.lang.String> strSet32 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet32, strArray31);
        python3Target25.badWords = strSet32;
        python3Target23.badWords = strSet32;
        org.antlr.v4.tool.Grammar grammar36 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target37 = new org.antlr.v4.codegen.target.Python3Target();
        int int38 = python3Target37.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup39 = python3Target37.templates;
        org.antlr.v4.tool.Grammar grammar40 = null;
        int[] intArray41 = new int[] {};
        java.lang.String[] strArray42 = python3Target37.getTokenTypesAsTargetLabels(grammar40, intArray41);
        java.lang.String[] strArray43 = python3Target23.getTokenTypesAsTargetLabels(grammar36, intArray41);
        java.lang.String[] strArray44 = python3Target11.getTokenTypesAsTargetLabels(grammar22, intArray41);
        java.lang.String[] strArray45 = python3Target0.getTokenTypesAsTargetLabels(grammar10, intArray41);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str47 = python3Target0.getImplicitRuleLabel("\"\"\\\"\\\"\\\"\\\"\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "\"\"\"\"" + "'", str2, "\"\"\"\"");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 64 + "'", int3 == 64);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\\0" + "'", str5, "\\0");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"\"" + "'", str7, "\"\"");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 64 + "'", int12 == 64);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\"\"" + "'", str16, "\"\"");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "\"i\"" + "'", str20, "\"i\"");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 29 + "'", int21 == 29);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 64 + "'", int38 == 64);
        org.junit.Assert.assertNull(sTGroup39);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[]");
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(strArray45);
    }

    @Test
    public void test06674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06674");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        org.stringtemplate.v4.STGroup sTGroup1 = null;
        python3Target0.templates = sTGroup1;
        java.util.Set<java.lang.String> strSet3 = null;
        python3Target0.badWords = strSet3;
        boolean boolean5 = python3Target0.wantsBaseListener();
        java.lang.String[] strArray6 = python3Target0.targetCharValueEscape;
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromString("\"\\\"hi!\\\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = python3Target0.getCodeGenerator();
        boolean boolean10 = python3Target0.templatesExist();
        org.stringtemplate.v4.STGroup sTGroup11 = null;
        python3Target0.templates = sTGroup11;
        org.antlr.v4.tool.Grammar grammar13 = null;
        org.stringtemplate.v4.ST sT14 = null;
        // The following exception was thrown during execution in test generation
        try {
            python3Target0.genListenerFile(grammar13, sT14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\"\\\"hi!\\\"\"\"" + "'", str8, "\"\"\\\"hi!\\\"\"\"");
        org.junit.Assert.assertNull(codeGenerator9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test06675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06675");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        boolean boolean2 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.gen;
        java.lang.String str4 = python3Target0.getVersion();
        java.lang.String[] strArray5 = python3Target0.targetCharValueEscape;
        boolean boolean6 = python3Target0.supportsOverloadedMethods();
        int int7 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str8 = python3Target0.getLanguage();
        java.lang.String str9 = python3Target0.getLanguage();
        int int10 = python3Target0.getSerializedATNSegmentLimit();
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = python3Target0.gen;
        java.lang.Class<?> wildcardClass12 = python3Target0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "4.5.2.1" + "'", str4, "4.5.2.1");
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 64 + "'", int7 == 64);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 29 + "'", int10 == 29);
        org.junit.Assert.assertNull(codeGenerator11);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test06676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06676");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        org.stringtemplate.v4.STGroup sTGroup1 = null;
        python3Target0.templates = sTGroup1;
        java.util.Set<java.lang.String> strSet3 = null;
        python3Target0.badWords = strSet3;
        boolean boolean5 = python3Target0.supportsOverloadedMethods();
        java.lang.String str6 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = python3Target0.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = null;
        java.lang.String str11 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator8, "hi!", false);
        java.lang.String str12 = python3Target0.getVersion();
        java.util.Set<java.lang.String> strSet13 = python3Target0.badWords;
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = python3Target0.gen;
        // The following exception was thrown during execution in test generation
        try {
            org.stringtemplate.v4.STGroup sTGroup15 = python3Target0.getTemplates();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "4.5.2.1" + "'", str6, "4.5.2.1");
        org.junit.Assert.assertNull(codeGenerator7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "i" + "'", str11, "i");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "4.5.2.1" + "'", str12, "4.5.2.1");
        org.junit.Assert.assertNull(strSet13);
        org.junit.Assert.assertNull(codeGenerator14);
    }

    @Test
    public void test06677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06677");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str1 = python3Target0.language;
        int int2 = python3Target0.getSerializedATNSegmentLimit();
        java.lang.Class<?> wildcardClass3 = python3Target0.getClass();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 29 + "'", int2 == 29);
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test06678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06678");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str2 = python3Target0.encodeIntAsCharEscape(100);
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target4 = new org.antlr.v4.codegen.target.Python3Target();
        int int5 = python3Target4.getInlineTestSetWordSize();
        java.lang.String str6 = python3Target4.language;
        java.lang.String str7 = python3Target4.getVersion();
        int int8 = python3Target4.getInlineTestSetWordSize();
        java.lang.String str9 = python3Target4.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = python3Target4.gen;
        org.antlr.v4.tool.Grammar grammar11 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target12 = new org.antlr.v4.codegen.target.Python3Target();
        int int13 = python3Target12.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup14 = python3Target12.templates;
        org.antlr.v4.tool.Grammar grammar15 = null;
        int[] intArray16 = new int[] {};
        java.lang.String[] strArray17 = python3Target12.getTokenTypesAsTargetLabels(grammar15, intArray16);
        java.lang.String[] strArray18 = python3Target4.getTokenTypesAsTargetLabels(grammar11, intArray16);
        java.lang.String[] strArray19 = python3Target0.getTokenTypesAsTargetLabels(grammar3, intArray16);
        org.antlr.v4.tool.Grammar grammar20 = null;
        org.stringtemplate.v4.ST sT21 = null;
        python3Target0.genRecognizerHeaderFile(grammar20, sT21, "\\12");
        java.lang.String str25 = python3Target0.encodeIntAsCharEscape(0);
        int int26 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str27 = python3Target0.getLanguage();
        boolean boolean28 = python3Target0.supportsOverloadedMethods();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str30 = python3Target0.getElementName("\"\\\"\\\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "d" + "'", str2, "d");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 64 + "'", int5 == 64);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4.5.2.1" + "'", str7, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 64 + "'", int8 == 64);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(codeGenerator10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 64 + "'", int13 == 64);
        org.junit.Assert.assertNull(sTGroup14);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]");
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "\\0" + "'", str25, "\\0");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 64 + "'", int26 == 64);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test06679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06679");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "", true);
        java.util.Set<java.lang.String> strSet7 = python3Target0.badWords;
        java.lang.String str8 = python3Target0.language;
        org.stringtemplate.v4.STGroup sTGroup9 = null;
        python3Target0.templates = sTGroup9;
        org.antlr.v4.tool.Grammar grammar11 = null;
        org.stringtemplate.v4.ST sT12 = null;
        python3Target0.genRecognizerHeaderFile(grammar11, sT12, "\"\\1\"");
        int int15 = python3Target0.getInlineTestSetWordSize();
        boolean boolean16 = python3Target0.templatesExist();
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = null;
        java.lang.String str20 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator17, "\\\"\\\"\\\"\\\"i\\\"\\\"\\\"\\\"", true);
        java.lang.String str22 = python3Target0.getTargetStringLiteralFromString("\"\"\"hi!\"\"\"");
        org.antlr.v4.tool.Rule rule23 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str24 = python3Target0.getRuleFunctionContextStructName(rule23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"" + "'", str6, "\"\"");
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 64 + "'", int15 == 64);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "\"\\\"\\\"\\\"\\\"i\\\"\\\"\\\"\\\"\"" + "'", str20, "\"\\\"\\\"\\\"\\\"i\\\"\\\"\\\"\\\"\"");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "\"\"\"\"hi!\"\"\"\"" + "'", str22, "\"\"\"\"hi!\"\"\"\"");
    }

    @Test
    public void test06680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06680");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        java.lang.String str3 = python3Target0.getVersion();
        org.stringtemplate.v4.STGroup sTGroup4 = null;
        python3Target0.templates = sTGroup4;
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        java.lang.String str9 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator6, "\"hi!\"", true);
        boolean boolean10 = python3Target0.wantsBaseVisitor();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str12 = python3Target0.getImplicitRuleLabel("\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"4.5.2.1\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "4.5.2.1" + "'", str3, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"hi!\"" + "'", str9, "\"hi!\"");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test06681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06681");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        org.stringtemplate.v4.STGroup sTGroup3 = python3Target0.templates;
        java.lang.String str5 = python3Target0.getTargetStringLiteralFromString("\"hi!\"");
        java.lang.String str7 = python3Target0.getTargetStringLiteralFromString("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target0.getCodeGenerator();
        java.lang.String str9 = python3Target0.language;
        org.antlr.v4.codegen.target.Python3Target python3Target10 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str12 = python3Target10.getTargetStringLiteralFromString("\"\"");
        int int13 = python3Target10.getInlineTestSetWordSize();
        boolean boolean14 = python3Target10.supportsOverloadedMethods();
        java.lang.String str15 = python3Target10.getLanguage();
        java.lang.String str17 = python3Target10.encodeIntAsCharEscape(0);
        java.util.Set<java.lang.String> strSet18 = python3Target10.badWords;
        python3Target0.badWords = strSet18;
        org.antlr.v4.codegen.target.Python3Target python3Target20 = new org.antlr.v4.codegen.target.Python3Target();
        int int21 = python3Target20.getInlineTestSetWordSize();
        java.lang.String str22 = python3Target20.language;
        org.stringtemplate.v4.STGroup sTGroup23 = python3Target20.templates;
        boolean boolean24 = python3Target20.supportsOverloadedMethods();
        org.antlr.v4.codegen.target.Python3Target python3Target25 = new org.antlr.v4.codegen.target.Python3Target();
        int int26 = python3Target25.getInlineTestSetWordSize();
        java.lang.String str27 = python3Target25.language;
        java.lang.String str28 = python3Target25.getVersion();
        int int29 = python3Target25.getInlineTestSetWordSize();
        java.lang.String str30 = python3Target25.getLanguage();
        java.lang.String str33 = python3Target25.getTargetStringLiteralFromString("4.5.2.1", true);
        java.util.Set<java.lang.String> strSet34 = python3Target25.badWords;
        python3Target20.badWords = strSet34;
        python3Target0.badWords = strSet34;
        python3Target0.addBadWords();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(sTGroup3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\"\"hi!\"\"" + "'", str5, "\"\"hi!\"\"");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"\"" + "'", str7, "\"\"");
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"\"\"\"" + "'", str12, "\"\"\"\"");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 64 + "'", int13 == 64);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\\0" + "'", str17, "\\0");
        org.junit.Assert.assertNotNull(strSet18);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 64 + "'", int21 == 64);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(sTGroup23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 64 + "'", int26 == 64);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "4.5.2.1" + "'", str28, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 64 + "'", int29 == 64);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "\"4.5.2.1\"" + "'", str33, "\"4.5.2.1\"");
        org.junit.Assert.assertNotNull(strSet34);
    }

    @Test
    public void test06682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06682");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        java.lang.String str3 = python3Target0.getLanguage();
        java.lang.String str5 = python3Target0.getTargetStringLiteralFromString("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        java.lang.String str9 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator6, "hi!", true);
        int int10 = python3Target0.getSerializedATNSegmentLimit();
        boolean boolean11 = python3Target0.templatesExist();
        java.lang.String str12 = python3Target0.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = null;
        python3Target0.gen = codeGenerator13;
        boolean boolean15 = python3Target0.wantsBaseListener();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str17 = python3Target0.getImplicitSetLabel("\\12");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\"\"" + "'", str5, "\"\"");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"i\"" + "'", str9, "\"i\"");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 29 + "'", int10 == 29);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test06683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06683");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.wantsBaseVisitor();
        org.antlr.v4.codegen.CodeGenerator codeGenerator2 = null;
        python3Target0.gen = codeGenerator2;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromString("hi!", false);
        java.lang.String[] strArray7 = python3Target0.targetCharValueEscape;
        boolean boolean8 = python3Target0.wantsBaseListener();
        org.antlr.v4.tool.Grammar grammar9 = null;
        org.stringtemplate.v4.ST sT10 = null;
        // The following exception was thrown during execution in test generation
        try {
            python3Target0.genListenerFile(grammar9, sT10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test06684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06684");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        org.stringtemplate.v4.STGroup sTGroup3 = python3Target0.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = python3Target0.gen;
        java.util.Set<java.lang.String> strSet5 = python3Target0.badWords;
        java.util.Set<java.lang.String> strSet6 = python3Target0.badWords;
        java.lang.String str7 = python3Target0.language;
        org.antlr.v4.tool.Grammar grammar8 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target9 = new org.antlr.v4.codegen.target.Python3Target();
        int int10 = python3Target9.getInlineTestSetWordSize();
        java.lang.String str11 = python3Target9.language;
        java.lang.String str12 = python3Target9.getVersion();
        int int13 = python3Target9.getInlineTestSetWordSize();
        java.lang.String str14 = python3Target9.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator15 = python3Target9.gen;
        org.antlr.v4.tool.Grammar grammar16 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target17 = new org.antlr.v4.codegen.target.Python3Target();
        int int18 = python3Target17.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup19 = python3Target17.templates;
        org.antlr.v4.tool.Grammar grammar20 = null;
        int[] intArray21 = new int[] {};
        java.lang.String[] strArray22 = python3Target17.getTokenTypesAsTargetLabels(grammar20, intArray21);
        java.lang.String[] strArray23 = python3Target9.getTokenTypesAsTargetLabels(grammar16, intArray21);
        java.lang.String str24 = python3Target9.getLanguage();
        java.lang.String str25 = python3Target9.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator26 = null;
        python3Target9.gen = codeGenerator26;
        org.antlr.v4.tool.Grammar grammar28 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target29 = new org.antlr.v4.codegen.target.Python3Target();
        int int30 = python3Target29.getInlineTestSetWordSize();
        java.lang.String str31 = python3Target29.language;
        java.lang.String str32 = python3Target29.getVersion();
        int int33 = python3Target29.getInlineTestSetWordSize();
        java.lang.String str34 = python3Target29.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator35 = python3Target29.gen;
        org.antlr.v4.tool.Grammar grammar36 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target37 = new org.antlr.v4.codegen.target.Python3Target();
        int int38 = python3Target37.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup39 = python3Target37.templates;
        org.antlr.v4.tool.Grammar grammar40 = null;
        int[] intArray41 = new int[] {};
        java.lang.String[] strArray42 = python3Target37.getTokenTypesAsTargetLabels(grammar40, intArray41);
        java.lang.String[] strArray43 = python3Target29.getTokenTypesAsTargetLabels(grammar36, intArray41);
        java.lang.String str44 = python3Target29.getLanguage();
        java.lang.String str45 = python3Target29.getLanguage();
        java.lang.String str47 = python3Target29.getTargetStringLiteralFromString("\"i\"");
        org.antlr.v4.tool.Grammar grammar48 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target49 = new org.antlr.v4.codegen.target.Python3Target();
        int int50 = python3Target49.getInlineTestSetWordSize();
        java.lang.String[] strArray53 = new java.lang.String[] { "hi!", "" };
        python3Target49.targetCharValueEscape = strArray53;
        java.util.Set<java.lang.String> strSet55 = python3Target49.badWords;
        org.stringtemplate.v4.STGroup sTGroup56 = python3Target49.templates;
        org.antlr.v4.tool.Grammar grammar57 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target58 = new org.antlr.v4.codegen.target.Python3Target();
        int int59 = python3Target58.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup60 = python3Target58.templates;
        org.antlr.v4.tool.Grammar grammar61 = null;
        int[] intArray62 = new int[] {};
        java.lang.String[] strArray63 = python3Target58.getTokenTypesAsTargetLabels(grammar61, intArray62);
        java.lang.String[] strArray64 = python3Target49.getTokenTypesAsTargetLabels(grammar57, intArray62);
        java.lang.String[] strArray65 = python3Target29.getTokenTypesAsTargetLabels(grammar48, intArray62);
        java.lang.String[] strArray66 = python3Target9.getTokenTypesAsTargetLabels(grammar28, intArray62);
        java.lang.String[] strArray67 = python3Target0.getTokenTypesAsTargetLabels(grammar8, intArray62);
        java.lang.String str68 = python3Target0.getLanguage();
        org.antlr.v4.tool.ast.GrammarAST grammarAST69 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str70 = python3Target0.getLoopCounter(grammarAST69);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(sTGroup3);
        org.junit.Assert.assertNull(codeGenerator4);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 64 + "'", int10 == 64);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "4.5.2.1" + "'", str12, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 64 + "'", int13 == 64);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(codeGenerator15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 64 + "'", int18 == 64);
        org.junit.Assert.assertNull(sTGroup19);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[]");
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 64 + "'", int30 == 64);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "4.5.2.1" + "'", str32, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 64 + "'", int33 == 64);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNull(codeGenerator35);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 64 + "'", int38 == 64);
        org.junit.Assert.assertNull(sTGroup39);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[]");
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "\"\"i\"\"" + "'", str47, "\"\"i\"\"");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 64 + "'", int50 == 64);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertNotNull(strSet55);
        org.junit.Assert.assertNull(sTGroup56);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 64 + "'", int59 == 64);
        org.junit.Assert.assertNull(sTGroup60);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[]");
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertNull(str68);
    }

    @Test
    public void test06685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06685");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!", "" };
        python3Target0.targetCharValueEscape = strArray4;
        java.lang.String[] strArray6 = python3Target0.targetCharValueEscape;
        boolean boolean7 = python3Target0.supportsOverloadedMethods();
        java.lang.String[] strArray8 = new java.lang.String[] {};
        python3Target0.targetCharValueEscape = strArray8;
        boolean boolean10 = python3Target0.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar11 = null;
        org.stringtemplate.v4.ST sT12 = null;
        python3Target0.genRecognizerHeaderFile(grammar11, sT12, "\"64\"");
        java.lang.String str15 = python3Target0.getLanguage();
        org.antlr.v4.tool.Grammar grammar16 = null;
        org.stringtemplate.v4.ST sT17 = null;
        python3Target0.genRecognizerHeaderFile(grammar16, sT17, "\\1");
        org.antlr.v4.tool.ast.GrammarAST grammarAST20 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean21 = python3Target0.visibleGrammarSymbolCausesIssueInGeneratedCode(grammarAST20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(str15);
    }

    @Test
    public void test06686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06686");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        boolean boolean2 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.gen;
        boolean boolean4 = python3Target0.wantsBaseVisitor();
        boolean boolean5 = python3Target0.supportsOverloadedMethods();
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromString("\\0", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = python3Target0.gen;
        boolean boolean10 = python3Target0.wantsBaseListener();
        boolean boolean11 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.codegen.target.Python3Target python3Target12 = new org.antlr.v4.codegen.target.Python3Target();
        org.stringtemplate.v4.STGroup sTGroup13 = null;
        python3Target12.templates = sTGroup13;
        java.lang.String[] strArray18 = new java.lang.String[] { "", "\\0", "" };
        java.util.LinkedHashSet<java.lang.String> strSet19 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet19, strArray18);
        python3Target12.badWords = strSet19;
        python3Target12.addBadWords();
        org.antlr.v4.codegen.target.Python3Target python3Target23 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean24 = python3Target23.wantsBaseVisitor();
        org.antlr.v4.codegen.CodeGenerator codeGenerator25 = null;
        python3Target23.gen = codeGenerator25;
        org.antlr.v4.codegen.CodeGenerator codeGenerator27 = python3Target23.gen;
        java.util.Set<java.lang.String> strSet28 = python3Target23.badWords;
        org.antlr.v4.codegen.target.Python3Target python3Target29 = new org.antlr.v4.codegen.target.Python3Target();
        int int30 = python3Target29.getInlineTestSetWordSize();
        java.lang.String str31 = python3Target29.language;
        java.lang.String str32 = python3Target29.getVersion();
        int int33 = python3Target29.getInlineTestSetWordSize();
        java.lang.String str34 = python3Target29.getLanguage();
        java.lang.String str37 = python3Target29.getTargetStringLiteralFromString("4.5.2.1", true);
        boolean boolean38 = python3Target29.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet39 = python3Target29.badWords;
        org.antlr.v4.tool.Grammar grammar40 = null;
        org.stringtemplate.v4.ST sT41 = null;
        python3Target29.genRecognizerHeaderFile(grammar40, sT41, "\"4.5.2.1\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator44 = null;
        java.lang.String str47 = python3Target29.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator44, "i", true);
        org.antlr.v4.codegen.target.Python3Target python3Target48 = new org.antlr.v4.codegen.target.Python3Target();
        org.stringtemplate.v4.STGroup sTGroup49 = null;
        python3Target48.templates = sTGroup49;
        java.lang.String[] strArray54 = new java.lang.String[] { "", "\\0", "" };
        java.util.LinkedHashSet<java.lang.String> strSet55 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet55, strArray54);
        python3Target48.badWords = strSet55;
        python3Target29.badWords = strSet55;
        python3Target23.badWords = strSet55;
        python3Target12.badWords = strSet55;
        org.antlr.v4.codegen.CodeGenerator codeGenerator61 = null;
        python3Target12.gen = codeGenerator61;
        java.util.Set<java.lang.String> strSet63 = python3Target12.badWords;
        python3Target0.badWords = strSet63;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\\0" + "'", str8, "\\0");
        org.junit.Assert.assertNull(codeGenerator9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(codeGenerator27);
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 64 + "'", int30 == 64);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "4.5.2.1" + "'", str32, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 64 + "'", int33 == 64);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "\"4.5.2.1\"" + "'", str37, "\"4.5.2.1\"");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(strSet39);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "\"\"" + "'", str47, "\"\"");
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(strSet63);
    }

    @Test
    public void test06687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06687");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        java.lang.String str3 = python3Target0.getVersion();
        int int4 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str5 = python3Target0.getLanguage();
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromString("hi!", false);
        org.antlr.v4.tool.Grammar grammar9 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target10 = new org.antlr.v4.codegen.target.Python3Target();
        int int11 = python3Target10.getInlineTestSetWordSize();
        java.lang.String str12 = python3Target10.language;
        java.lang.String str13 = python3Target10.getVersion();
        int int14 = python3Target10.getInlineTestSetWordSize();
        java.lang.String str15 = python3Target10.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator16 = python3Target10.gen;
        org.antlr.v4.tool.Grammar grammar17 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target18 = new org.antlr.v4.codegen.target.Python3Target();
        int int19 = python3Target18.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup20 = python3Target18.templates;
        org.antlr.v4.tool.Grammar grammar21 = null;
        int[] intArray22 = new int[] {};
        java.lang.String[] strArray23 = python3Target18.getTokenTypesAsTargetLabels(grammar21, intArray22);
        java.lang.String[] strArray24 = python3Target10.getTokenTypesAsTargetLabels(grammar17, intArray22);
        java.lang.String str25 = python3Target10.getLanguage();
        java.lang.String str26 = python3Target10.getLanguage();
        java.lang.String str28 = python3Target10.getTargetStringLiteralFromString("\"i\"");
        org.antlr.v4.tool.Grammar grammar29 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target30 = new org.antlr.v4.codegen.target.Python3Target();
        int int31 = python3Target30.getInlineTestSetWordSize();
        java.lang.String[] strArray34 = new java.lang.String[] { "hi!", "" };
        python3Target30.targetCharValueEscape = strArray34;
        java.util.Set<java.lang.String> strSet36 = python3Target30.badWords;
        org.stringtemplate.v4.STGroup sTGroup37 = python3Target30.templates;
        org.antlr.v4.tool.Grammar grammar38 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target39 = new org.antlr.v4.codegen.target.Python3Target();
        int int40 = python3Target39.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup41 = python3Target39.templates;
        org.antlr.v4.tool.Grammar grammar42 = null;
        int[] intArray43 = new int[] {};
        java.lang.String[] strArray44 = python3Target39.getTokenTypesAsTargetLabels(grammar42, intArray43);
        java.lang.String[] strArray45 = python3Target30.getTokenTypesAsTargetLabels(grammar38, intArray43);
        java.lang.String[] strArray46 = python3Target10.getTokenTypesAsTargetLabels(grammar29, intArray43);
        java.lang.String[] strArray47 = python3Target0.getTokenTypesAsTargetLabels(grammar9, intArray43);
        org.stringtemplate.v4.STGroup sTGroup48 = python3Target0.templates;
        java.lang.String str49 = python3Target0.language;
        org.antlr.v4.codegen.CodeGenerator codeGenerator50 = null;
        java.lang.String str53 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator50, "\"\"\\\"\\\"\"\"", false);
        java.lang.String str55 = python3Target0.getTargetStringLiteralFromString("i");
        java.lang.String str58 = python3Target0.getTargetStringLiteralFromString("\\\"hi!\\\"", true);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "4.5.2.1" + "'", str3, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 64 + "'", int11 == 64);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "4.5.2.1" + "'", str13, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 64 + "'", int14 == 64);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(codeGenerator16);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 64 + "'", int19 == 64);
        org.junit.Assert.assertNull(sTGroup20);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[]");
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "\"\"i\"\"" + "'", str28, "\"\"i\"\"");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 64 + "'", int31 == 64);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(strSet36);
        org.junit.Assert.assertNull(sTGroup37);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 64 + "'", int40 == 64);
        org.junit.Assert.assertNull(sTGroup41);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[]");
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNull(sTGroup48);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "\\\"\\\"\\\"\\\"" + "'", str53, "\\\"\\\"\\\"\\\"");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "\"i\"" + "'", str55, "\"i\"");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str58, "\"\\\"hi!\\\"\"");
    }

    @Test
    public void test06688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06688");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        org.stringtemplate.v4.STGroup sTGroup3 = python3Target0.templates;
        java.lang.String str5 = python3Target0.getTargetStringLiteralFromString("\"hi!\"");
        java.lang.String str7 = python3Target0.getTargetStringLiteralFromString("");
        boolean boolean8 = python3Target0.templatesExist();
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = python3Target0.gen;
        org.antlr.v4.tool.ast.GrammarAST grammarAST10 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean11 = python3Target0.visibleGrammarSymbolCausesIssueInGeneratedCode(grammarAST10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(sTGroup3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\"\"hi!\"\"" + "'", str5, "\"\"hi!\"\"");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"\"" + "'", str7, "\"\"");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(codeGenerator9);
    }

    @Test
    public void test06689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06689");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str2 = python3Target0.encodeIntAsCharEscape(100);
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target4 = new org.antlr.v4.codegen.target.Python3Target();
        int int5 = python3Target4.getInlineTestSetWordSize();
        java.lang.String str6 = python3Target4.language;
        java.lang.String str7 = python3Target4.getVersion();
        int int8 = python3Target4.getInlineTestSetWordSize();
        java.lang.String str9 = python3Target4.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = python3Target4.gen;
        org.antlr.v4.tool.Grammar grammar11 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target12 = new org.antlr.v4.codegen.target.Python3Target();
        int int13 = python3Target12.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup14 = python3Target12.templates;
        org.antlr.v4.tool.Grammar grammar15 = null;
        int[] intArray16 = new int[] {};
        java.lang.String[] strArray17 = python3Target12.getTokenTypesAsTargetLabels(grammar15, intArray16);
        java.lang.String[] strArray18 = python3Target4.getTokenTypesAsTargetLabels(grammar11, intArray16);
        java.lang.String[] strArray19 = python3Target0.getTokenTypesAsTargetLabels(grammar3, intArray16);
        org.antlr.v4.tool.Grammar grammar20 = null;
        org.stringtemplate.v4.ST sT21 = null;
        python3Target0.genRecognizerHeaderFile(grammar20, sT21, "\\12");
        int int24 = python3Target0.getSerializedATNSegmentLimit();
        java.lang.String str25 = python3Target0.language;
        int int26 = python3Target0.getSerializedATNSegmentLimit();
        boolean boolean27 = python3Target0.supportsOverloadedMethods();
        boolean boolean28 = python3Target0.wantsBaseListener();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "d" + "'", str2, "d");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 64 + "'", int5 == 64);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4.5.2.1" + "'", str7, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 64 + "'", int8 == 64);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(codeGenerator10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 64 + "'", int13 == 64);
        org.junit.Assert.assertNull(sTGroup14);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]");
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 29 + "'", int24 == 29);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 29 + "'", int26 == 29);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test06690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06690");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        boolean boolean2 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.gen;
        boolean boolean4 = python3Target0.wantsBaseVisitor();
        org.antlr.v4.codegen.target.Python3Target python3Target5 = new org.antlr.v4.codegen.target.Python3Target();
        int int6 = python3Target5.getInlineTestSetWordSize();
        java.lang.String str7 = python3Target5.language;
        java.lang.String str8 = python3Target5.getVersion();
        org.stringtemplate.v4.STGroup sTGroup9 = null;
        python3Target5.templates = sTGroup9;
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = null;
        java.lang.String str14 = python3Target5.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator11, "d", false);
        java.util.Set<java.lang.String> strSet15 = python3Target5.getBadWords();
        python3Target0.badWords = strSet15;
        java.util.Set<java.lang.String> strSet17 = python3Target0.badWords;
        java.util.Set<java.lang.String> strSet18 = python3Target0.getBadWords();
        org.antlr.v4.tool.Grammar grammar19 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target20 = new org.antlr.v4.codegen.target.Python3Target();
        int int21 = python3Target20.getInlineTestSetWordSize();
        java.lang.String str22 = python3Target20.language;
        java.lang.String str23 = python3Target20.getVersion();
        int int24 = python3Target20.getInlineTestSetWordSize();
        java.lang.String str25 = python3Target20.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator26 = python3Target20.gen;
        python3Target20.addBadWords();
        python3Target20.language = "\\0";
        boolean boolean30 = python3Target20.wantsBaseVisitor();
        org.antlr.v4.codegen.CodeGenerator codeGenerator31 = python3Target20.getCodeGenerator();
        int int32 = python3Target20.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar33 = null;
        org.stringtemplate.v4.ST sT34 = null;
        python3Target20.genRecognizerHeaderFile(grammar33, sT34, "\"\"\"4.5.2.1\"\"\"");
        java.util.Set<java.lang.String> strSet37 = python3Target20.badWords;
        org.antlr.v4.tool.Grammar grammar38 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target39 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str41 = python3Target39.encodeIntAsCharEscape(100);
        org.antlr.v4.tool.Grammar grammar42 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target43 = new org.antlr.v4.codegen.target.Python3Target();
        int int44 = python3Target43.getInlineTestSetWordSize();
        java.lang.String str45 = python3Target43.language;
        java.lang.String str46 = python3Target43.getVersion();
        int int47 = python3Target43.getInlineTestSetWordSize();
        java.lang.String str48 = python3Target43.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator49 = python3Target43.gen;
        org.antlr.v4.tool.Grammar grammar50 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target51 = new org.antlr.v4.codegen.target.Python3Target();
        int int52 = python3Target51.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup53 = python3Target51.templates;
        org.antlr.v4.tool.Grammar grammar54 = null;
        int[] intArray55 = new int[] {};
        java.lang.String[] strArray56 = python3Target51.getTokenTypesAsTargetLabels(grammar54, intArray55);
        java.lang.String[] strArray57 = python3Target43.getTokenTypesAsTargetLabels(grammar50, intArray55);
        java.lang.String[] strArray58 = python3Target39.getTokenTypesAsTargetLabels(grammar42, intArray55);
        java.lang.String[] strArray59 = python3Target20.getTokenTypesAsTargetLabels(grammar38, intArray55);
        java.lang.String[] strArray60 = python3Target0.getTokenTypesAsTargetLabels(grammar19, intArray55);
        java.lang.String str63 = python3Target0.getTargetStringLiteralFromString("\"\"\"\"\"4.5.2.1\"\"\"\"\"", false);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 64 + "'", int6 == 64);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "4.5.2.1" + "'", str8, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertNotNull(strSet18);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 64 + "'", int21 == 64);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "4.5.2.1" + "'", str23, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 64 + "'", int24 == 64);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(codeGenerator26);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(codeGenerator31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 29 + "'", int32 == 29);
        org.junit.Assert.assertNotNull(strSet37);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "d" + "'", str41, "d");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 64 + "'", int44 == 64);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "4.5.2.1" + "'", str46, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 64 + "'", int47 == 64);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNull(codeGenerator49);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 64 + "'", int52 == 64);
        org.junit.Assert.assertNull(sTGroup53);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[]");
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "\"\"\"\"\"4.5.2.1\"\"\"\"\"" + "'", str63, "\"\"\"\"\"4.5.2.1\"\"\"\"\"");
    }

    @Test
    public void test06691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06691");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        org.stringtemplate.v4.STGroup sTGroup1 = null;
        python3Target0.templates = sTGroup1;
        java.lang.String[] strArray6 = new java.lang.String[] { "", "\\0", "" };
        java.util.LinkedHashSet<java.lang.String> strSet7 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet7, strArray6);
        python3Target0.badWords = strSet7;
        java.lang.String str12 = python3Target0.getTargetStringLiteralFromString("hi!", true);
        int int13 = python3Target0.getInlineTestSetWordSize();
        boolean boolean14 = python3Target0.wantsBaseVisitor();
        org.antlr.v4.codegen.target.Python3Target python3Target15 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str17 = python3Target15.getTargetStringLiteralFromString("\"\"");
        int int18 = python3Target15.getInlineTestSetWordSize();
        boolean boolean19 = python3Target15.supportsOverloadedMethods();
        java.lang.String str21 = python3Target15.encodeIntAsCharEscape(10);
        org.antlr.v4.tool.Grammar grammar22 = null;
        org.stringtemplate.v4.ST sT23 = null;
        python3Target15.genRecognizerHeaderFile(grammar22, sT23, "\"\"");
        org.antlr.v4.codegen.target.Python3Target python3Target26 = new org.antlr.v4.codegen.target.Python3Target();
        int int27 = python3Target26.getInlineTestSetWordSize();
        boolean boolean28 = python3Target26.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator29 = python3Target26.gen;
        boolean boolean30 = python3Target26.wantsBaseVisitor();
        java.lang.String str31 = python3Target26.language;
        java.lang.String str34 = python3Target26.getTargetStringLiteralFromString("\\0", false);
        int int35 = python3Target26.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet36 = python3Target26.getBadWords();
        python3Target15.badWords = strSet36;
        python3Target0.badWords = strSet36;
        org.antlr.v4.tool.ast.GrammarAST grammarAST39 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str40 = python3Target0.getLoopLabel(grammarAST39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"hi!\"" + "'", str12, "\"hi!\"");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 64 + "'", int13 == 64);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\"\"\"\"" + "'", str17, "\"\"\"\"");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 64 + "'", int18 == 64);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "\\12" + "'", str21, "\\12");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 64 + "'", int27 == 64);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(codeGenerator29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "\\0" + "'", str34, "\\0");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 64 + "'", int35 == 64);
        org.junit.Assert.assertNotNull(strSet36);
    }

    @Test
    public void test06692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06692");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "", true);
        java.util.Set<java.lang.String> strSet7 = python3Target0.badWords;
        java.lang.String str8 = python3Target0.language;
        org.stringtemplate.v4.STGroup sTGroup9 = null;
        python3Target0.templates = sTGroup9;
        org.antlr.v4.tool.Grammar grammar11 = null;
        org.stringtemplate.v4.ST sT12 = null;
        python3Target0.genRecognizerHeaderFile(grammar11, sT12, "\"\\1\"");
        java.util.Set<java.lang.String> strSet15 = null;
        python3Target0.badWords = strSet15;
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = null;
        java.lang.String str20 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator17, "\"\"\"\"4.5.2.1\"\"\"\"", false);
        java.lang.String[] strArray21 = python3Target0.targetCharValueEscape;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"" + "'", str6, "\"\"");
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "\\\"\\\"\\\"4.5.2.1\\\"\\\"\\\"" + "'", str20, "\\\"\\\"\\\"4.5.2.1\\\"\\\"\\\"");
        org.junit.Assert.assertNotNull(strArray21);
    }

    @Test
    public void test06693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06693");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        java.lang.String str3 = python3Target0.getVersion();
        int int4 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str5 = python3Target0.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = python3Target0.gen;
        org.antlr.v4.tool.Grammar grammar7 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target8 = new org.antlr.v4.codegen.target.Python3Target();
        int int9 = python3Target8.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup10 = python3Target8.templates;
        org.antlr.v4.tool.Grammar grammar11 = null;
        int[] intArray12 = new int[] {};
        java.lang.String[] strArray13 = python3Target8.getTokenTypesAsTargetLabels(grammar11, intArray12);
        java.lang.String[] strArray14 = python3Target0.getTokenTypesAsTargetLabels(grammar7, intArray12);
        java.lang.String str15 = python3Target0.getLanguage();
        java.lang.String str16 = python3Target0.getLanguage();
        java.lang.String str18 = python3Target0.getTargetStringLiteralFromString("\"i\"");
        org.antlr.v4.tool.Grammar grammar19 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target20 = new org.antlr.v4.codegen.target.Python3Target();
        int int21 = python3Target20.getInlineTestSetWordSize();
        java.lang.String[] strArray24 = new java.lang.String[] { "hi!", "" };
        python3Target20.targetCharValueEscape = strArray24;
        java.util.Set<java.lang.String> strSet26 = python3Target20.badWords;
        org.stringtemplate.v4.STGroup sTGroup27 = python3Target20.templates;
        org.antlr.v4.tool.Grammar grammar28 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target29 = new org.antlr.v4.codegen.target.Python3Target();
        int int30 = python3Target29.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup31 = python3Target29.templates;
        org.antlr.v4.tool.Grammar grammar32 = null;
        int[] intArray33 = new int[] {};
        java.lang.String[] strArray34 = python3Target29.getTokenTypesAsTargetLabels(grammar32, intArray33);
        java.lang.String[] strArray35 = python3Target20.getTokenTypesAsTargetLabels(grammar28, intArray33);
        java.lang.String[] strArray36 = python3Target0.getTokenTypesAsTargetLabels(grammar19, intArray33);
        int int37 = python3Target0.getSerializedATNSegmentLimit();
        org.antlr.v4.codegen.CodeGenerator codeGenerator38 = python3Target0.getCodeGenerator();
        boolean boolean39 = python3Target0.wantsBaseListener();
        org.antlr.v4.codegen.CodeGenerator codeGenerator40 = null;
        java.lang.String str43 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator40, "\"\"\"\"d\"\"\"\"", true);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "4.5.2.1" + "'", str3, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(codeGenerator6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 64 + "'", int9 == 64);
        org.junit.Assert.assertNull(sTGroup10);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[]");
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "\"\"i\"\"" + "'", str18, "\"\"i\"\"");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 64 + "'", int21 == 64);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertNotNull(strSet26);
        org.junit.Assert.assertNull(sTGroup27);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 64 + "'", int30 == 64);
        org.junit.Assert.assertNull(sTGroup31);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]");
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 29 + "'", int37 == 29);
        org.junit.Assert.assertNull(codeGenerator38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "\"\\\"\\\"\\\"d\\\"\\\"\\\"\"" + "'", str43, "\"\\\"\\\"\\\"d\\\"\\\"\\\"\"");
    }

    @Test
    public void test06694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06694");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        java.lang.String str3 = python3Target0.getVersion();
        int int4 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str5 = python3Target0.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = python3Target0.gen;
        python3Target0.addBadWords();
        python3Target0.language = "\\0";
        boolean boolean10 = python3Target0.wantsBaseVisitor();
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = python3Target0.getCodeGenerator();
        int int12 = python3Target0.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar13 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target14 = new org.antlr.v4.codegen.target.Python3Target();
        int int15 = python3Target14.getInlineTestSetWordSize();
        java.lang.String str16 = python3Target14.language;
        org.stringtemplate.v4.STGroup sTGroup17 = python3Target14.templates;
        java.lang.String str19 = python3Target14.getTargetStringLiteralFromString("\"hi!\"");
        java.lang.String str21 = python3Target14.getTargetStringLiteralFromString("");
        org.antlr.v4.tool.Grammar grammar22 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target23 = new org.antlr.v4.codegen.target.Python3Target();
        int int24 = python3Target23.getInlineTestSetWordSize();
        boolean boolean25 = python3Target23.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator26 = python3Target23.gen;
        boolean boolean27 = python3Target23.wantsBaseVisitor();
        boolean boolean28 = python3Target23.supportsOverloadedMethods();
        java.lang.String str31 = python3Target23.getTargetStringLiteralFromString("\\0", false);
        boolean boolean32 = python3Target23.templatesExist();
        python3Target23.addBadWords();
        org.antlr.v4.tool.Grammar grammar34 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target35 = new org.antlr.v4.codegen.target.Python3Target();
        int int36 = python3Target35.getInlineTestSetWordSize();
        java.lang.String str37 = python3Target35.language;
        java.lang.String str38 = python3Target35.getVersion();
        int int39 = python3Target35.getInlineTestSetWordSize();
        java.lang.String str40 = python3Target35.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator41 = python3Target35.gen;
        org.antlr.v4.tool.Grammar grammar42 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target43 = new org.antlr.v4.codegen.target.Python3Target();
        int int44 = python3Target43.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup45 = python3Target43.templates;
        org.antlr.v4.tool.Grammar grammar46 = null;
        int[] intArray47 = new int[] {};
        java.lang.String[] strArray48 = python3Target43.getTokenTypesAsTargetLabels(grammar46, intArray47);
        java.lang.String[] strArray49 = python3Target35.getTokenTypesAsTargetLabels(grammar42, intArray47);
        java.lang.String[] strArray50 = python3Target23.getTokenTypesAsTargetLabels(grammar34, intArray47);
        java.lang.String[] strArray51 = python3Target14.getTokenTypesAsTargetLabels(grammar22, intArray47);
        java.lang.String[] strArray52 = python3Target0.getTokenTypesAsTargetLabels(grammar13, intArray47);
        java.util.Set<java.lang.String> strSet53 = python3Target0.badWords;
        org.antlr.v4.codegen.target.Python3Target python3Target54 = new org.antlr.v4.codegen.target.Python3Target();
        int int55 = python3Target54.getInlineTestSetWordSize();
        java.lang.String str56 = python3Target54.language;
        java.lang.String str57 = python3Target54.getLanguage();
        java.lang.String str59 = python3Target54.getTargetStringLiteralFromString("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator60 = null;
        java.lang.String str63 = python3Target54.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator60, "hi!", true);
        int int64 = python3Target54.getSerializedATNSegmentLimit();
        org.antlr.v4.codegen.CodeGenerator codeGenerator65 = null;
        java.lang.String str68 = python3Target54.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator65, "4.5.2.1", true);
        java.lang.String[] strArray69 = python3Target54.targetCharValueEscape;
        python3Target0.targetCharValueEscape = strArray69;
        java.util.Set<java.lang.String> strSet71 = python3Target0.badWords;
        java.lang.String str72 = python3Target0.getLanguage();
        int int73 = python3Target0.getSerializedATNSegmentLimit();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str75 = python3Target0.getImplicitRuleLabel("_\\\"1\\\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "4.5.2.1" + "'", str3, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(codeGenerator6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(codeGenerator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 29 + "'", int12 == 29);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 64 + "'", int15 == 64);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(sTGroup17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "\"\"hi!\"\"" + "'", str19, "\"\"hi!\"\"");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "\"\"" + "'", str21, "\"\"");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 64 + "'", int24 == 64);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(codeGenerator26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "\\0" + "'", str31, "\\0");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 64 + "'", int36 == 64);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "4.5.2.1" + "'", str38, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 64 + "'", int39 == 64);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(codeGenerator41);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 64 + "'", int44 == 64);
        org.junit.Assert.assertNull(sTGroup45);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[]");
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNotNull(strSet53);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 64 + "'", int55 == 64);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "\"\"" + "'", str59, "\"\"");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "\"i\"" + "'", str63, "\"i\"");
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 29 + "'", int64 == 29);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "\".5.2.\"" + "'", str68, "\".5.2.\"");
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertNotNull(strSet71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "\\0" + "'", str72, "\\0");
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 29 + "'", int73 == 29);
    }

    @Test
    public void test06695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06695");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        java.lang.String str3 = python3Target0.getVersion();
        int int4 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str5 = python3Target0.getLanguage();
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromString("4.5.2.1", true);
        java.util.Set<java.lang.String> strSet9 = python3Target0.getBadWords();
        java.lang.String str11 = python3Target0.encodeIntAsCharEscape(29);
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = null;
        python3Target0.gen = codeGenerator12;
        java.util.Set<java.lang.String> strSet14 = python3Target0.getBadWords();
        boolean boolean15 = python3Target0.wantsBaseListener();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "4.5.2.1" + "'", str3, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"4.5.2.1\"" + "'", str8, "\"4.5.2.1\"");
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\\35" + "'", str11, "\\35");
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test06696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06696");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        boolean boolean2 = python3Target0.wantsBaseVisitor();
        java.lang.String str3 = python3Target0.getLanguage();
        int int4 = python3Target0.getInlineTestSetWordSize();
        python3Target0.language = "\"hi!\"";
        java.util.Set<java.lang.String> strSet7 = python3Target0.badWords;
        python3Target0.addBadWords();
        org.antlr.v4.tool.Grammar grammar9 = null;
        org.stringtemplate.v4.ST sT10 = null;
        // The following exception was thrown during execution in test generation
        try {
            python3Target0.genFile(grammar9, sT10, "_tset\"\\\".5.2.\\\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertNotNull(strSet7);
    }

    @Test
    public void test06697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06697");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        org.stringtemplate.v4.STGroup sTGroup1 = null;
        python3Target0.templates = sTGroup1;
        java.lang.String[] strArray6 = new java.lang.String[] { "", "\\0", "" };
        java.util.LinkedHashSet<java.lang.String> strSet7 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet7, strArray6);
        python3Target0.badWords = strSet7;
        java.lang.String str10 = python3Target0.getLanguage();
        java.lang.String str11 = python3Target0.getLanguage();
        java.util.Set<java.lang.String> strSet12 = python3Target0.getBadWords();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str14 = python3Target0.getImplicitRuleLabel("\"\"\"\"\"\"\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(strSet12);
    }

    @Test
    public void test06698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06698");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        java.lang.String str3 = python3Target0.getVersion();
        int int4 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str5 = python3Target0.getLanguage();
        int int6 = python3Target0.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        java.lang.String str10 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator7, "\"\"\\\"\\\"\\\"#\\\"\\\"\\\"\"\"", true);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "4.5.2.1" + "'", str3, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 64 + "'", int6 == 64);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"\\\"\\\"\\\"\\\"#\\\"\\\"\\\"\\\"\"" + "'", str10, "\"\\\"\\\"\\\"\\\"#\\\"\\\"\\\"\\\"\"");
    }

    @Test
    public void test06699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06699");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        boolean boolean2 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.gen;
        java.lang.String str4 = python3Target0.getVersion();
        java.lang.String[] strArray5 = python3Target0.targetCharValueEscape;
        org.antlr.v4.tool.Grammar grammar6 = null;
        org.stringtemplate.v4.ST sT7 = null;
        python3Target0.genRecognizerHeaderFile(grammar6, sT7, "");
        python3Target0.addBadWords();
        boolean boolean11 = python3Target0.templatesExist();
        java.lang.String str13 = python3Target0.getTargetStringLiteralFromString("");
        java.lang.String str14 = python3Target0.getLanguage();
        java.util.Set<java.lang.String> strSet15 = python3Target0.badWords;
        int int16 = python3Target0.getSerializedATNSegmentLimit();
        boolean boolean17 = python3Target0.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar18 = null;
        org.stringtemplate.v4.ST sT19 = null;
        // The following exception was thrown during execution in test generation
        try {
            python3Target0.genListenerFile(grammar18, sT19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "4.5.2.1" + "'", str4, "4.5.2.1");
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"\"" + "'", str13, "\"\"");
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 29 + "'", int16 == 29);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test06700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06700");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        java.lang.String str3 = python3Target0.getVersion();
        int int4 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str5 = python3Target0.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = python3Target0.gen;
        python3Target0.addBadWords();
        org.antlr.v4.codegen.target.Python3Target python3Target8 = new org.antlr.v4.codegen.target.Python3Target();
        int int9 = python3Target8.getInlineTestSetWordSize();
        java.lang.String str10 = python3Target8.language;
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = python3Target8.getCodeGenerator();
        java.util.Set<java.lang.String> strSet12 = python3Target8.getBadWords();
        org.antlr.v4.codegen.target.Python3Target python3Target13 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray15 = new java.lang.String[] { "" };
        java.util.LinkedHashSet<java.lang.String> strSet16 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet16, strArray15);
        python3Target13.badWords = strSet16;
        python3Target8.badWords = strSet16;
        python3Target0.badWords = strSet16;
        java.lang.String str23 = python3Target0.getTargetStringLiteralFromString("\".5.2.\"", true);
        java.lang.String str25 = python3Target0.getTargetStringLiteralFromString("\".5.2.\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator26 = null;
        java.lang.String str29 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator26, "\"@\"", false);
        org.stringtemplate.v4.STGroup sTGroup30 = null;
        python3Target0.templates = sTGroup30;
        org.antlr.v4.codegen.CodeGenerator codeGenerator32 = null;
        python3Target0.gen = codeGenerator32;
        org.antlr.v4.tool.Grammar grammar34 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str36 = python3Target0.getTokenTypeAsTargetLabel(grammar34, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "4.5.2.1" + "'", str3, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(codeGenerator6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 64 + "'", int9 == 64);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(codeGenerator11);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "\"\".5.2.\"\"" + "'", str23, "\"\".5.2.\"\"");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "\"\".5.2.\"\"" + "'", str25, "\"\".5.2.\"\"");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "@" + "'", str29, "@");
    }

    @Test
    public void test06701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06701");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        java.lang.String str3 = python3Target0.getVersion();
        int int4 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str5 = python3Target0.getLanguage();
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromString("4.5.2.1", true);
        boolean boolean9 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.tool.Grammar grammar10 = null;
        org.stringtemplate.v4.ST sT11 = null;
        python3Target0.genRecognizerHeaderFile(grammar10, sT11, "\\1");
        java.lang.String str14 = python3Target0.getLanguage();
        java.util.Set<java.lang.String> strSet15 = python3Target0.badWords;
        java.util.Set<java.lang.String> strSet16 = python3Target0.getBadWords();
        org.antlr.v4.tool.Rule rule17 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str18 = python3Target0.getRuleFunctionContextStructName(rule17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "4.5.2.1" + "'", str3, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"4.5.2.1\"" + "'", str8, "\"4.5.2.1\"");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertNotNull(strSet16);
    }

    @Test
    public void test06702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06702");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        org.stringtemplate.v4.STGroup sTGroup1 = null;
        python3Target0.templates = sTGroup1;
        java.util.Set<java.lang.String> strSet3 = null;
        python3Target0.badWords = strSet3;
        boolean boolean5 = python3Target0.supportsOverloadedMethods();
        java.lang.String str6 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = python3Target0.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = null;
        java.lang.String str11 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator8, "hi!", false);
        java.lang.String str12 = python3Target0.getVersion();
        org.antlr.v4.codegen.target.Python3Target python3Target13 = new org.antlr.v4.codegen.target.Python3Target();
        int int14 = python3Target13.getInlineTestSetWordSize();
        java.lang.String str15 = python3Target13.language;
        java.lang.String str16 = python3Target13.getVersion();
        int int17 = python3Target13.getInlineTestSetWordSize();
        java.lang.String str18 = python3Target13.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator19 = python3Target13.gen;
        org.antlr.v4.tool.Grammar grammar20 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target21 = new org.antlr.v4.codegen.target.Python3Target();
        int int22 = python3Target21.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup23 = python3Target21.templates;
        org.antlr.v4.tool.Grammar grammar24 = null;
        int[] intArray25 = new int[] {};
        java.lang.String[] strArray26 = python3Target21.getTokenTypesAsTargetLabels(grammar24, intArray25);
        java.lang.String[] strArray27 = python3Target13.getTokenTypesAsTargetLabels(grammar20, intArray25);
        java.lang.String str28 = python3Target13.getLanguage();
        java.lang.String str29 = python3Target13.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator30 = null;
        python3Target13.gen = codeGenerator30;
        org.antlr.v4.codegen.CodeGenerator codeGenerator32 = null;
        python3Target13.gen = codeGenerator32;
        org.antlr.v4.codegen.target.Python3Target python3Target34 = new org.antlr.v4.codegen.target.Python3Target();
        int int35 = python3Target34.getInlineTestSetWordSize();
        java.lang.String[] strArray38 = new java.lang.String[] { "hi!", "" };
        python3Target34.targetCharValueEscape = strArray38;
        org.antlr.v4.codegen.CodeGenerator codeGenerator40 = null;
        java.lang.String str43 = python3Target34.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator40, "\"\"", false);
        org.antlr.v4.codegen.target.Python3Target python3Target44 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str45 = python3Target44.language;
        java.lang.String[] strArray46 = python3Target44.targetCharValueEscape;
        python3Target34.targetCharValueEscape = strArray46;
        python3Target13.targetCharValueEscape = strArray46;
        python3Target0.targetCharValueEscape = strArray46;
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray46;
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray46;
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "4.5.2.1" + "'", str6, "4.5.2.1");
        org.junit.Assert.assertNull(codeGenerator7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "i" + "'", str11, "i");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "4.5.2.1" + "'", str12, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 64 + "'", int14 == 64);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "4.5.2.1" + "'", str16, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 64 + "'", int17 == 64);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(codeGenerator19);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 64 + "'", int22 == 64);
        org.junit.Assert.assertNull(sTGroup23);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]");
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 64 + "'", int35 == 64);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(strArray46);
    }

    @Test
    public void test06703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06703");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.getCodeGenerator();
        java.util.Set<java.lang.String> strSet4 = python3Target0.getBadWords();
        org.stringtemplate.v4.STGroup sTGroup5 = null;
        python3Target0.templates = sTGroup5;
        org.antlr.v4.tool.Grammar grammar7 = null;
        org.stringtemplate.v4.ST sT8 = null;
        python3Target0.genRecognizerHeaderFile(grammar7, sT8, "\"i\"");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str12 = python3Target0.getImplicitSetLabel("\"\\\"\\\"\\\"\\\"\\\"\\\"4.5.2.1\\\"\\\"\\\"\\\"\\\"\\\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertNotNull(strSet4);
    }

    @Test
    public void test06704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06704");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        java.lang.String str3 = python3Target0.getVersion();
        int int4 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str5 = python3Target0.getLanguage();
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromString("4.5.2.1", true);
        java.util.Set<java.lang.String> strSet9 = python3Target0.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = python3Target0.getCodeGenerator();
        java.lang.String str11 = python3Target0.language;
        java.util.Set<java.lang.String> strSet12 = python3Target0.getBadWords();
        java.lang.Class<?> wildcardClass13 = python3Target0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "4.5.2.1" + "'", str3, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"4.5.2.1\"" + "'", str8, "\"4.5.2.1\"");
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertNull(codeGenerator10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test06705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06705");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str2 = python3Target0.getTargetStringLiteralFromString("\"\"");
        int int3 = python3Target0.getInlineTestSetWordSize();
        boolean boolean4 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup5 = python3Target0.templates;
        java.lang.String str7 = python3Target0.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = null;
        python3Target0.gen = codeGenerator8;
        boolean boolean10 = python3Target0.wantsBaseListener();
        java.lang.String str11 = python3Target0.language;
        org.antlr.v4.tool.ast.GrammarAST grammarAST12 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str13 = python3Target0.getLoopLabel(grammarAST12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "\"\"\"\"" + "'", str2, "\"\"\"\"");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 64 + "'", int3 == 64);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(sTGroup5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"\"\"\"\"\"" + "'", str7, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test06706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06706");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!", "" };
        python3Target0.targetCharValueEscape = strArray4;
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        java.lang.String str9 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator6, "\"\"", false);
        int int10 = python3Target0.getSerializedATNSegmentLimit();
        int int11 = python3Target0.getSerializedATNSegmentLimit();
        java.lang.String str14 = python3Target0.getTargetStringLiteralFromString("\"\\\"\\\"\"", false);
        boolean boolean15 = python3Target0.templatesExist();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str17 = python3Target0.getImplicitRuleLabel("\\12");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 29 + "'", int10 == 29);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 29 + "'", int11 == 29);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\"\\\"\\\"\"" + "'", str14, "\"\\\"\\\"\"");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test06707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06707");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        boolean boolean2 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.gen;
        java.lang.String str4 = python3Target0.getVersion();
        java.lang.String[] strArray5 = python3Target0.targetCharValueEscape;
        org.antlr.v4.tool.Grammar grammar6 = null;
        org.stringtemplate.v4.ST sT7 = null;
        python3Target0.genRecognizerHeaderFile(grammar6, sT7, "");
        org.antlr.v4.codegen.target.Python3Target python3Target10 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str12 = python3Target10.getTargetStringLiteralFromString("\"\"");
        int int13 = python3Target10.getInlineTestSetWordSize();
        boolean boolean14 = python3Target10.supportsOverloadedMethods();
        java.lang.String str16 = python3Target10.encodeIntAsCharEscape(10);
        boolean boolean17 = python3Target10.templatesExist();
        java.lang.String[] strArray18 = python3Target10.targetCharValueEscape;
        python3Target0.targetCharValueEscape = strArray18;
        java.lang.String[] strArray20 = python3Target0.targetCharValueEscape;
        org.antlr.v4.tool.Grammar grammar21 = null;
        org.stringtemplate.v4.ST sT22 = null;
        // The following exception was thrown during execution in test generation
        try {
            python3Target0.genListenerFile(grammar21, sT22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "4.5.2.1" + "'", str4, "4.5.2.1");
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"\"\"\"" + "'", str12, "\"\"\"\"");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 64 + "'", int13 == 64);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\\12" + "'", str16, "\\12");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(strArray20);
    }

    @Test
    public void test06708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06708");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        java.lang.String str3 = python3Target0.getVersion();
        int int4 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str5 = python3Target0.getLanguage();
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromString("4.5.2.1", true);
        boolean boolean9 = python3Target0.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet10 = python3Target0.badWords;
        org.antlr.v4.tool.Grammar grammar11 = null;
        org.stringtemplate.v4.ST sT12 = null;
        python3Target0.genRecognizerHeaderFile(grammar11, sT12, "\"4.5.2.1\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator15 = null;
        java.lang.String str18 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator15, "i", true);
        java.lang.String str19 = python3Target0.getLanguage();
        boolean boolean20 = python3Target0.wantsBaseListener();
        python3Target0.addBadWords();
        int int22 = python3Target0.getSerializedATNSegmentLimit();
        org.antlr.v4.codegen.model.RuleFunction ruleFunction23 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str24 = python3Target0.getRuleFunctionContextStructName(ruleFunction23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "4.5.2.1" + "'", str3, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"4.5.2.1\"" + "'", str8, "\"4.5.2.1\"");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "\"\"" + "'", str18, "\"\"");
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 29 + "'", int22 == 29);
    }

    @Test
    public void test06709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06709");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        org.stringtemplate.v4.STGroup sTGroup3 = python3Target0.templates;
        boolean boolean4 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.codegen.target.Python3Target python3Target5 = new org.antlr.v4.codegen.target.Python3Target();
        int int6 = python3Target5.getInlineTestSetWordSize();
        java.lang.String str7 = python3Target5.language;
        java.lang.String str8 = python3Target5.getVersion();
        int int9 = python3Target5.getInlineTestSetWordSize();
        java.lang.String str10 = python3Target5.getLanguage();
        java.lang.String str13 = python3Target5.getTargetStringLiteralFromString("4.5.2.1", true);
        java.util.Set<java.lang.String> strSet14 = python3Target5.badWords;
        python3Target0.badWords = strSet14;
        org.antlr.v4.codegen.CodeGenerator codeGenerator16 = python3Target0.getCodeGenerator();
        java.lang.String str17 = python3Target0.getLanguage();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(sTGroup3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 64 + "'", int6 == 64);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "4.5.2.1" + "'", str8, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 64 + "'", int9 == 64);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"4.5.2.1\"" + "'", str13, "\"4.5.2.1\"");
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertNull(codeGenerator16);
        org.junit.Assert.assertNull(str17);
    }

    @Test
    public void test06710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06710");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        java.lang.String str3 = python3Target0.getVersion();
        int int4 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str5 = python3Target0.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = python3Target0.gen;
        org.antlr.v4.tool.Grammar grammar7 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target8 = new org.antlr.v4.codegen.target.Python3Target();
        int int9 = python3Target8.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup10 = python3Target8.templates;
        org.antlr.v4.tool.Grammar grammar11 = null;
        int[] intArray12 = new int[] {};
        java.lang.String[] strArray13 = python3Target8.getTokenTypesAsTargetLabels(grammar11, intArray12);
        java.lang.String[] strArray14 = python3Target0.getTokenTypesAsTargetLabels(grammar7, intArray12);
        java.lang.String str17 = python3Target0.getTargetStringLiteralFromString("", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator18 = null;
        java.lang.String str21 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator18, "\"i\"", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator22 = python3Target0.gen;
        python3Target0.language = "\"\"\"\\\"\\\"\"\"\"";
        java.util.Set<java.lang.String> strSet25 = python3Target0.getBadWords();
        org.antlr.v4.tool.ast.GrammarAST grammarAST26 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean27 = python3Target0.grammarSymbolCausesIssueInGeneratedCode(grammarAST26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "4.5.2.1" + "'", str3, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(codeGenerator6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 64 + "'", int9 == 64);
        org.junit.Assert.assertNull(sTGroup10);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[]");
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "\"i\"" + "'", str21, "\"i\"");
        org.junit.Assert.assertNull(codeGenerator22);
        org.junit.Assert.assertNotNull(strSet25);
    }

    @Test
    public void test06711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06711");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        java.lang.String str3 = python3Target0.getVersion();
        python3Target0.language = "@";
        java.lang.String[] strArray6 = python3Target0.targetCharValueEscape;
        org.antlr.v4.tool.Grammar grammar7 = null;
        org.stringtemplate.v4.ST sT8 = null;
        python3Target0.genRecognizerHeaderFile(grammar7, sT8, "\"\".5.2.\"\"");
        org.antlr.v4.tool.Grammar grammar11 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str13 = python3Target0.getTokenTypeAsTargetLabel(grammar11, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "4.5.2.1" + "'", str3, "4.5.2.1");
        org.junit.Assert.assertNotNull(strArray6);
    }

    @Test
    public void test06712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06712");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str2 = python3Target0.encodeIntAsCharEscape(100);
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target4 = new org.antlr.v4.codegen.target.Python3Target();
        int int5 = python3Target4.getInlineTestSetWordSize();
        java.lang.String str6 = python3Target4.language;
        java.lang.String str7 = python3Target4.getVersion();
        int int8 = python3Target4.getInlineTestSetWordSize();
        java.lang.String str9 = python3Target4.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = python3Target4.gen;
        org.antlr.v4.tool.Grammar grammar11 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target12 = new org.antlr.v4.codegen.target.Python3Target();
        int int13 = python3Target12.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup14 = python3Target12.templates;
        org.antlr.v4.tool.Grammar grammar15 = null;
        int[] intArray16 = new int[] {};
        java.lang.String[] strArray17 = python3Target12.getTokenTypesAsTargetLabels(grammar15, intArray16);
        java.lang.String[] strArray18 = python3Target4.getTokenTypesAsTargetLabels(grammar11, intArray16);
        java.lang.String[] strArray19 = python3Target0.getTokenTypesAsTargetLabels(grammar3, intArray16);
        int int20 = python3Target0.getSerializedATNSegmentLimit();
        org.antlr.v4.codegen.CodeGenerator codeGenerator21 = python3Target0.getCodeGenerator();
        int int22 = python3Target0.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator23 = null;
        java.lang.String str26 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator23, "\"\"4.5.2.1\"\"", false);
        boolean boolean27 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator28 = null;
        python3Target0.gen = codeGenerator28;
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "d" + "'", str2, "d");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 64 + "'", int5 == 64);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4.5.2.1" + "'", str7, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 64 + "'", int8 == 64);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(codeGenerator10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 64 + "'", int13 == 64);
        org.junit.Assert.assertNull(sTGroup14);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]");
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 29 + "'", int20 == 29);
        org.junit.Assert.assertNull(codeGenerator21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 64 + "'", int22 == 64);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\\\"4.5.2.1\\\"" + "'", str26, "\\\"4.5.2.1\\\"");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test06713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06713");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        boolean boolean2 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.gen;
        boolean boolean4 = python3Target0.wantsBaseVisitor();
        python3Target0.addBadWords();
        java.lang.String str7 = python3Target0.getTargetStringLiteralFromString("\"\"\"\\\"\\\"\\\"\\\"\"\"\"");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"\"\"\"\\\"\\\"\\\"\\\"\"\"\"\"" + "'", str7, "\"\"\"\"\\\"\\\"\\\"\\\"\"\"\"\"");
    }

    @Test
    public void test06714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06714");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        org.stringtemplate.v4.STGroup sTGroup1 = null;
        python3Target0.templates = sTGroup1;
        java.util.Set<java.lang.String> strSet3 = null;
        python3Target0.badWords = strSet3;
        boolean boolean5 = python3Target0.supportsOverloadedMethods();
        int int6 = python3Target0.getInlineTestSetWordSize();
        java.lang.String[] strArray7 = python3Target0.targetCharValueEscape;
        java.lang.String str9 = python3Target0.encodeIntAsCharEscape((int) (short) 0);
        boolean boolean10 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.tool.Grammar grammar11 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target12 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str14 = python3Target12.getTargetStringLiteralFromString("\"\"");
        int int15 = python3Target12.getInlineTestSetWordSize();
        boolean boolean16 = python3Target12.supportsOverloadedMethods();
        java.lang.String str18 = python3Target12.encodeIntAsCharEscape(10);
        org.antlr.v4.tool.Grammar grammar19 = null;
        org.stringtemplate.v4.ST sT20 = null;
        python3Target12.genRecognizerHeaderFile(grammar19, sT20, "\"\"");
        org.antlr.v4.tool.Grammar grammar23 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target24 = new org.antlr.v4.codegen.target.Python3Target();
        int int25 = python3Target24.getInlineTestSetWordSize();
        java.lang.String str26 = python3Target24.language;
        java.lang.String str27 = python3Target24.getVersion();
        int int28 = python3Target24.getInlineTestSetWordSize();
        java.lang.String str29 = python3Target24.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator30 = python3Target24.gen;
        org.antlr.v4.tool.Grammar grammar31 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target32 = new org.antlr.v4.codegen.target.Python3Target();
        int int33 = python3Target32.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup34 = python3Target32.templates;
        org.antlr.v4.tool.Grammar grammar35 = null;
        int[] intArray36 = new int[] {};
        java.lang.String[] strArray37 = python3Target32.getTokenTypesAsTargetLabels(grammar35, intArray36);
        java.lang.String[] strArray38 = python3Target24.getTokenTypesAsTargetLabels(grammar31, intArray36);
        java.lang.String str39 = python3Target24.getLanguage();
        java.lang.String str40 = python3Target24.getLanguage();
        java.lang.String str42 = python3Target24.getTargetStringLiteralFromString("\"i\"");
        org.antlr.v4.tool.Grammar grammar43 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target44 = new org.antlr.v4.codegen.target.Python3Target();
        int int45 = python3Target44.getInlineTestSetWordSize();
        java.lang.String[] strArray48 = new java.lang.String[] { "hi!", "" };
        python3Target44.targetCharValueEscape = strArray48;
        java.util.Set<java.lang.String> strSet50 = python3Target44.badWords;
        org.stringtemplate.v4.STGroup sTGroup51 = python3Target44.templates;
        org.antlr.v4.tool.Grammar grammar52 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target53 = new org.antlr.v4.codegen.target.Python3Target();
        int int54 = python3Target53.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup55 = python3Target53.templates;
        org.antlr.v4.tool.Grammar grammar56 = null;
        int[] intArray57 = new int[] {};
        java.lang.String[] strArray58 = python3Target53.getTokenTypesAsTargetLabels(grammar56, intArray57);
        java.lang.String[] strArray59 = python3Target44.getTokenTypesAsTargetLabels(grammar52, intArray57);
        java.lang.String[] strArray60 = python3Target24.getTokenTypesAsTargetLabels(grammar43, intArray57);
        java.lang.String[] strArray61 = python3Target12.getTokenTypesAsTargetLabels(grammar23, intArray57);
        java.lang.String[] strArray62 = python3Target0.getTokenTypesAsTargetLabels(grammar11, intArray57);
        int int63 = python3Target0.getInlineTestSetWordSize();
        boolean boolean64 = python3Target0.templatesExist();
        org.antlr.v4.tool.Grammar grammar65 = null;
        org.stringtemplate.v4.ST sT66 = null;
        // The following exception was thrown during execution in test generation
        try {
            python3Target0.genFile(grammar65, sT66, "\"\\\"\\\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 64 + "'", int6 == 64);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\\0" + "'", str9, "\\0");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\"\"\"\"" + "'", str14, "\"\"\"\"");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 64 + "'", int15 == 64);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "\\12" + "'", str18, "\\12");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 64 + "'", int25 == 64);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "4.5.2.1" + "'", str27, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 64 + "'", int28 == 64);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(codeGenerator30);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 64 + "'", int33 == 64);
        org.junit.Assert.assertNull(sTGroup34);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[]");
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "\"\"i\"\"" + "'", str42, "\"\"i\"\"");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 64 + "'", int45 == 64);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertNotNull(strSet50);
        org.junit.Assert.assertNull(sTGroup51);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 64 + "'", int54 == 64);
        org.junit.Assert.assertNull(sTGroup55);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[]");
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 64 + "'", int63 == 64);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
    }

    @Test
    public void test06715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06715");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!", "" };
        python3Target0.targetCharValueEscape = strArray4;
        java.lang.String[] strArray6 = python3Target0.targetCharValueEscape;
        boolean boolean7 = python3Target0.supportsOverloadedMethods();
        java.lang.String[] strArray8 = new java.lang.String[] {};
        python3Target0.targetCharValueEscape = strArray8;
        org.antlr.v4.codegen.target.Python3Target python3Target10 = new org.antlr.v4.codegen.target.Python3Target();
        org.stringtemplate.v4.STGroup sTGroup11 = null;
        python3Target10.templates = sTGroup11;
        java.lang.String[] strArray16 = new java.lang.String[] { "", "\\0", "" };
        java.util.LinkedHashSet<java.lang.String> strSet17 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet17, strArray16);
        python3Target10.badWords = strSet17;
        python3Target0.badWords = strSet17;
        boolean boolean21 = python3Target0.wantsBaseVisitor();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str23 = python3Target0.getImplicitRuleLabel("");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test06716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06716");
        java.lang.String str1 = org.stringtemplate.v4.StringRenderer.escapeHTML("\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"4.5.2.1\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"4.5.2.1\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"" + "'", str1, "\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"4.5.2.1\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"");
    }

    @Test
    public void test06717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06717");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str2 = python3Target0.getTargetStringLiteralFromString("\"\"");
        int int3 = python3Target0.getInlineTestSetWordSize();
        boolean boolean4 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup5 = python3Target0.templates;
        java.lang.String str7 = python3Target0.getTargetStringLiteralFromString("\"\"\"\"");
        int int8 = python3Target0.getInlineTestSetWordSize();
        boolean boolean9 = python3Target0.supportsOverloadedMethods();
        java.lang.String str10 = python3Target0.language;
        boolean boolean11 = python3Target0.templatesExist();
        python3Target0.addBadWords();
        org.antlr.v4.tool.Grammar grammar13 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target14 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str16 = python3Target14.getTargetStringLiteralFromString("\"\"");
        int int17 = python3Target14.getInlineTestSetWordSize();
        java.lang.String str19 = python3Target14.encodeIntAsCharEscape(0);
        java.lang.String str21 = python3Target14.getTargetStringLiteralFromString("");
        java.util.Set<java.lang.String> strSet22 = python3Target14.getBadWords();
        java.lang.String str23 = python3Target14.getLanguage();
        org.antlr.v4.tool.Grammar grammar24 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target25 = new org.antlr.v4.codegen.target.Python3Target();
        int int26 = python3Target25.getInlineTestSetWordSize();
        java.lang.String str27 = python3Target25.language;
        java.lang.String str28 = python3Target25.getLanguage();
        java.lang.String str30 = python3Target25.getTargetStringLiteralFromString("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator31 = null;
        java.lang.String str34 = python3Target25.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator31, "hi!", true);
        int int35 = python3Target25.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar36 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target37 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str38 = python3Target37.language;
        org.antlr.v4.codegen.target.Python3Target python3Target39 = new org.antlr.v4.codegen.target.Python3Target();
        org.stringtemplate.v4.STGroup sTGroup40 = null;
        python3Target39.templates = sTGroup40;
        java.lang.String[] strArray45 = new java.lang.String[] { "", "\\0", "" };
        java.util.LinkedHashSet<java.lang.String> strSet46 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet46, strArray45);
        python3Target39.badWords = strSet46;
        python3Target37.badWords = strSet46;
        org.antlr.v4.tool.Grammar grammar50 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target51 = new org.antlr.v4.codegen.target.Python3Target();
        int int52 = python3Target51.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup53 = python3Target51.templates;
        org.antlr.v4.tool.Grammar grammar54 = null;
        int[] intArray55 = new int[] {};
        java.lang.String[] strArray56 = python3Target51.getTokenTypesAsTargetLabels(grammar54, intArray55);
        java.lang.String[] strArray57 = python3Target37.getTokenTypesAsTargetLabels(grammar50, intArray55);
        java.lang.String[] strArray58 = python3Target25.getTokenTypesAsTargetLabels(grammar36, intArray55);
        java.lang.String[] strArray59 = python3Target14.getTokenTypesAsTargetLabels(grammar24, intArray55);
        java.lang.String[] strArray60 = python3Target0.getTokenTypesAsTargetLabels(grammar13, intArray55);
        org.antlr.v4.tool.Grammar grammar61 = null;
        org.stringtemplate.v4.ST sT62 = null;
        // The following exception was thrown during execution in test generation
        try {
            python3Target0.genFile(grammar61, sT62, "\\\"\\\"#\\\"\\\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "\"\"\"\"" + "'", str2, "\"\"\"\"");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 64 + "'", int3 == 64);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(sTGroup5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"\"\"\"\"\"" + "'", str7, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 64 + "'", int8 == 64);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\"\"\"\"" + "'", str16, "\"\"\"\"");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 64 + "'", int17 == 64);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "\\0" + "'", str19, "\\0");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "\"\"" + "'", str21, "\"\"");
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 64 + "'", int26 == 64);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "\"\"" + "'", str30, "\"\"");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "\"i\"" + "'", str34, "\"i\"");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 29 + "'", int35 == 29);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 64 + "'", int52 == 64);
        org.junit.Assert.assertNull(sTGroup53);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[]");
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertNotNull(strArray60);
    }

    @Test
    public void test06718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06718");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        org.stringtemplate.v4.STGroup sTGroup3 = python3Target0.templates;
        boolean boolean4 = python3Target0.templatesExist();
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = python3Target0.getCodeGenerator();
        org.antlr.v4.tool.Grammar grammar6 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target7 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str8 = python3Target7.language;
        java.lang.String[] strArray9 = python3Target7.targetCharValueEscape;
        boolean boolean10 = python3Target7.supportsOverloadedMethods();
        org.antlr.v4.tool.Grammar grammar11 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target12 = new org.antlr.v4.codegen.target.Python3Target();
        int int13 = python3Target12.getInlineTestSetWordSize();
        boolean boolean14 = python3Target12.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator15 = python3Target12.gen;
        boolean boolean16 = python3Target12.wantsBaseVisitor();
        boolean boolean17 = python3Target12.supportsOverloadedMethods();
        java.lang.String str20 = python3Target12.getTargetStringLiteralFromString("\\0", false);
        boolean boolean21 = python3Target12.templatesExist();
        python3Target12.addBadWords();
        org.antlr.v4.tool.Grammar grammar23 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target24 = new org.antlr.v4.codegen.target.Python3Target();
        int int25 = python3Target24.getInlineTestSetWordSize();
        java.lang.String str26 = python3Target24.language;
        java.lang.String str27 = python3Target24.getVersion();
        int int28 = python3Target24.getInlineTestSetWordSize();
        java.lang.String str29 = python3Target24.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator30 = python3Target24.gen;
        org.antlr.v4.tool.Grammar grammar31 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target32 = new org.antlr.v4.codegen.target.Python3Target();
        int int33 = python3Target32.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup34 = python3Target32.templates;
        org.antlr.v4.tool.Grammar grammar35 = null;
        int[] intArray36 = new int[] {};
        java.lang.String[] strArray37 = python3Target32.getTokenTypesAsTargetLabels(grammar35, intArray36);
        java.lang.String[] strArray38 = python3Target24.getTokenTypesAsTargetLabels(grammar31, intArray36);
        java.lang.String[] strArray39 = python3Target12.getTokenTypesAsTargetLabels(grammar23, intArray36);
        java.lang.String[] strArray40 = python3Target7.getTokenTypesAsTargetLabels(grammar11, intArray36);
        java.lang.String[] strArray41 = python3Target0.getTokenTypesAsTargetLabels(grammar6, intArray36);
        java.lang.String str43 = python3Target0.getTargetStringLiteralFromString("\"\"\"\\\"i\\\"\"\"\"");
        java.lang.String str46 = python3Target0.getTargetStringLiteralFromString("\"\\\"\\\"\\\"1\\\"\\\"\\\"\"", false);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str48 = python3Target0.getImplicitRuleLabel("\"\"\\\"hi!\\\"\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(sTGroup3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(codeGenerator5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 64 + "'", int13 == 64);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(codeGenerator15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "\\0" + "'", str20, "\\0");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 64 + "'", int25 == 64);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "4.5.2.1" + "'", str27, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 64 + "'", int28 == 64);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(codeGenerator30);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 64 + "'", int33 == 64);
        org.junit.Assert.assertNull(sTGroup34);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[]");
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "\"\"\"\"\\\"i\\\"\"\"\"\"" + "'", str43, "\"\"\"\"\\\"i\\\"\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "\"\\\"\\\"\\\"1\\\"\\\"\\\"\"" + "'", str46, "\"\\\"\\\"\\\"1\\\"\\\"\\\"\"");
    }

    @Test
    public void test06719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06719");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        org.stringtemplate.v4.STGroup sTGroup3 = python3Target0.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = python3Target0.gen;
        java.lang.String str5 = python3Target0.getVersion();
        java.lang.String str6 = python3Target0.getLanguage();
        java.lang.String str7 = python3Target0.getLanguage();
        java.util.Set<java.lang.String> strSet8 = python3Target0.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = python3Target0.getCodeGenerator();
        java.lang.String str10 = python3Target0.getLanguage();
        java.lang.String str12 = python3Target0.getTargetStringLiteralFromString("\\\"1\\\"");
        org.antlr.v4.tool.Grammar grammar13 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str15 = python3Target0.getTokenTypeAsTargetLabel(grammar13, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(sTGroup3);
        org.junit.Assert.assertNull(codeGenerator4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "4.5.2.1" + "'", str5, "4.5.2.1");
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNull(codeGenerator9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"\\\"1\\\"\"" + "'", str12, "\"\\\"1\\\"\"");
    }

    @Test
    public void test06720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06720");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        org.stringtemplate.v4.STGroup sTGroup3 = python3Target0.templates;
        java.lang.String str5 = python3Target0.getTargetStringLiteralFromString("\"hi!\"");
        java.lang.String str7 = python3Target0.getTargetStringLiteralFromString("");
        org.stringtemplate.v4.STGroup sTGroup8 = python3Target0.templates;
        org.antlr.v4.codegen.target.Python3Target python3Target9 = new org.antlr.v4.codegen.target.Python3Target();
        int int10 = python3Target9.getInlineTestSetWordSize();
        boolean boolean11 = python3Target9.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = python3Target9.gen;
        boolean boolean13 = python3Target9.supportsOverloadedMethods();
        boolean boolean14 = python3Target9.supportsOverloadedMethods();
        python3Target9.addBadWords();
        boolean boolean16 = python3Target9.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar17 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target18 = new org.antlr.v4.codegen.target.Python3Target();
        int int19 = python3Target18.getInlineTestSetWordSize();
        java.lang.String str20 = python3Target18.language;
        java.lang.String str21 = python3Target18.getVersion();
        int int22 = python3Target18.getInlineTestSetWordSize();
        java.lang.String str23 = python3Target18.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator24 = python3Target18.gen;
        org.antlr.v4.tool.Grammar grammar25 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target26 = new org.antlr.v4.codegen.target.Python3Target();
        int int27 = python3Target26.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup28 = python3Target26.templates;
        org.antlr.v4.tool.Grammar grammar29 = null;
        int[] intArray30 = new int[] {};
        java.lang.String[] strArray31 = python3Target26.getTokenTypesAsTargetLabels(grammar29, intArray30);
        java.lang.String[] strArray32 = python3Target18.getTokenTypesAsTargetLabels(grammar25, intArray30);
        java.lang.String str33 = python3Target18.getLanguage();
        java.lang.String str34 = python3Target18.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator35 = null;
        python3Target18.gen = codeGenerator35;
        org.antlr.v4.tool.Grammar grammar37 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target38 = new org.antlr.v4.codegen.target.Python3Target();
        int int39 = python3Target38.getInlineTestSetWordSize();
        java.lang.String str40 = python3Target38.language;
        java.lang.String str41 = python3Target38.getVersion();
        int int42 = python3Target38.getInlineTestSetWordSize();
        java.lang.String str43 = python3Target38.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator44 = python3Target38.gen;
        org.antlr.v4.tool.Grammar grammar45 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target46 = new org.antlr.v4.codegen.target.Python3Target();
        int int47 = python3Target46.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup48 = python3Target46.templates;
        org.antlr.v4.tool.Grammar grammar49 = null;
        int[] intArray50 = new int[] {};
        java.lang.String[] strArray51 = python3Target46.getTokenTypesAsTargetLabels(grammar49, intArray50);
        java.lang.String[] strArray52 = python3Target38.getTokenTypesAsTargetLabels(grammar45, intArray50);
        java.lang.String str53 = python3Target38.getLanguage();
        java.lang.String str54 = python3Target38.getLanguage();
        java.lang.String str56 = python3Target38.getTargetStringLiteralFromString("\"i\"");
        org.antlr.v4.tool.Grammar grammar57 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target58 = new org.antlr.v4.codegen.target.Python3Target();
        int int59 = python3Target58.getInlineTestSetWordSize();
        java.lang.String[] strArray62 = new java.lang.String[] { "hi!", "" };
        python3Target58.targetCharValueEscape = strArray62;
        java.util.Set<java.lang.String> strSet64 = python3Target58.badWords;
        org.stringtemplate.v4.STGroup sTGroup65 = python3Target58.templates;
        org.antlr.v4.tool.Grammar grammar66 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target67 = new org.antlr.v4.codegen.target.Python3Target();
        int int68 = python3Target67.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup69 = python3Target67.templates;
        org.antlr.v4.tool.Grammar grammar70 = null;
        int[] intArray71 = new int[] {};
        java.lang.String[] strArray72 = python3Target67.getTokenTypesAsTargetLabels(grammar70, intArray71);
        java.lang.String[] strArray73 = python3Target58.getTokenTypesAsTargetLabels(grammar66, intArray71);
        java.lang.String[] strArray74 = python3Target38.getTokenTypesAsTargetLabels(grammar57, intArray71);
        java.lang.String[] strArray75 = python3Target18.getTokenTypesAsTargetLabels(grammar37, intArray71);
        java.lang.String[] strArray76 = python3Target9.getTokenTypesAsTargetLabels(grammar17, intArray71);
        java.util.Set<java.lang.String> strSet77 = python3Target9.badWords;
        python3Target0.badWords = strSet77;
        python3Target0.language = "\"\\64\"";
        boolean boolean81 = python3Target0.supportsOverloadedMethods();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str83 = python3Target0.getListLabel("\"\"\"\\1\"\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(sTGroup3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\"\"hi!\"\"" + "'", str5, "\"\"hi!\"\"");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"\"" + "'", str7, "\"\"");
        org.junit.Assert.assertNull(sTGroup8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 64 + "'", int10 == 64);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(codeGenerator12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 64 + "'", int19 == 64);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "4.5.2.1" + "'", str21, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 64 + "'", int22 == 64);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(codeGenerator24);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 64 + "'", int27 == 64);
        org.junit.Assert.assertNull(sTGroup28);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[]");
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 64 + "'", int39 == 64);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "4.5.2.1" + "'", str41, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 64 + "'", int42 == 64);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNull(codeGenerator44);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 64 + "'", int47 == 64);
        org.junit.Assert.assertNull(sTGroup48);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[]");
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "\"\"i\"\"" + "'", str56, "\"\"i\"\"");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 64 + "'", int59 == 64);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertNotNull(strSet64);
        org.junit.Assert.assertNull(sTGroup65);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 64 + "'", int68 == 64);
        org.junit.Assert.assertNull(sTGroup69);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[]");
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertNotNull(strSet77);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
    }

    @Test
    public void test06721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06721");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        boolean boolean2 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.gen;
        boolean boolean4 = python3Target0.supportsOverloadedMethods();
        boolean boolean5 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.tool.Grammar grammar6 = null;
        org.stringtemplate.v4.ST sT7 = null;
        python3Target0.genRecognizerHeaderFile(grammar6, sT7, "\"\"\"\"\"\"");
        boolean boolean10 = python3Target0.templatesExist();
        java.util.Set<java.lang.String> strSet11 = python3Target0.getBadWords();
        boolean boolean12 = python3Target0.supportsOverloadedMethods();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test06722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06722");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "", true);
        org.antlr.v4.tool.Grammar grammar7 = null;
        org.stringtemplate.v4.ST sT8 = null;
        python3Target0.genRecognizerHeaderFile(grammar7, sT8, "");
        org.antlr.v4.tool.Grammar grammar11 = null;
        org.stringtemplate.v4.ST sT12 = null;
        python3Target0.genRecognizerHeaderFile(grammar11, sT12, "\"i\"");
        boolean boolean15 = python3Target0.wantsBaseListener();
        org.antlr.v4.codegen.CodeGenerator codeGenerator16 = python3Target0.getCodeGenerator();
        int int17 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str18 = python3Target0.getVersion();
        boolean boolean19 = python3Target0.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar20 = null;
        org.stringtemplate.v4.ST sT21 = null;
        // The following exception was thrown during execution in test generation
        try {
            python3Target0.genFile(grammar20, sT21, "\"\"\"\\12\"\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"" + "'", str6, "\"\"");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(codeGenerator16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 64 + "'", int17 == 64);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "4.5.2.1" + "'", str18, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test06723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06723");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        java.lang.String str3 = python3Target0.getVersion();
        int int4 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str5 = python3Target0.getLanguage();
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromString("4.5.2.1", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = null;
        python3Target0.gen = codeGenerator9;
        org.antlr.v4.codegen.target.Python3Target python3Target11 = new org.antlr.v4.codegen.target.Python3Target();
        int int12 = python3Target11.getInlineTestSetWordSize();
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!", "" };
        python3Target11.targetCharValueEscape = strArray15;
        java.lang.String[] strArray17 = python3Target11.targetCharValueEscape;
        python3Target11.addBadWords();
        org.antlr.v4.codegen.target.Python3Target python3Target19 = new org.antlr.v4.codegen.target.Python3Target();
        int int20 = python3Target19.getInlineTestSetWordSize();
        java.lang.String str21 = python3Target19.language;
        org.antlr.v4.codegen.CodeGenerator codeGenerator22 = null;
        java.lang.String str25 = python3Target19.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator22, "", true);
        org.antlr.v4.tool.Grammar grammar26 = null;
        org.stringtemplate.v4.ST sT27 = null;
        python3Target19.genRecognizerHeaderFile(grammar26, sT27, "");
        org.antlr.v4.tool.Grammar grammar30 = null;
        org.stringtemplate.v4.ST sT31 = null;
        python3Target19.genRecognizerHeaderFile(grammar30, sT31, "\"i\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator34 = python3Target19.gen;
        org.antlr.v4.codegen.CodeGenerator codeGenerator35 = null;
        python3Target19.gen = codeGenerator35;
        java.lang.String str38 = python3Target19.encodeIntAsCharEscape(1);
        org.antlr.v4.tool.Grammar grammar39 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target40 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str42 = python3Target40.encodeIntAsCharEscape(100);
        org.antlr.v4.tool.Grammar grammar43 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target44 = new org.antlr.v4.codegen.target.Python3Target();
        int int45 = python3Target44.getInlineTestSetWordSize();
        java.lang.String str46 = python3Target44.language;
        java.lang.String str47 = python3Target44.getVersion();
        int int48 = python3Target44.getInlineTestSetWordSize();
        java.lang.String str49 = python3Target44.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator50 = python3Target44.gen;
        org.antlr.v4.tool.Grammar grammar51 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target52 = new org.antlr.v4.codegen.target.Python3Target();
        int int53 = python3Target52.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup54 = python3Target52.templates;
        org.antlr.v4.tool.Grammar grammar55 = null;
        int[] intArray56 = new int[] {};
        java.lang.String[] strArray57 = python3Target52.getTokenTypesAsTargetLabels(grammar55, intArray56);
        java.lang.String[] strArray58 = python3Target44.getTokenTypesAsTargetLabels(grammar51, intArray56);
        java.lang.String[] strArray59 = python3Target40.getTokenTypesAsTargetLabels(grammar43, intArray56);
        java.lang.String[] strArray60 = python3Target19.getTokenTypesAsTargetLabels(grammar39, intArray56);
        python3Target11.targetCharValueEscape = strArray60;
        python3Target0.targetCharValueEscape = strArray60;
        org.antlr.v4.codegen.CodeGenerator codeGenerator63 = null;
        java.lang.String str66 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator63, "\\\"\\\"\\\"\\\"", true);
        org.stringtemplate.v4.STGroup sTGroup67 = python3Target0.templates;
        java.lang.String str68 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator69 = null;
        java.lang.String str72 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator69, "\"\"\"\"\"\"\"\"4.5.2.1\"\"\"\"\"\"\"\"", false);
        org.antlr.v4.tool.Grammar grammar73 = null;
        org.stringtemplate.v4.ST sT74 = null;
        // The following exception was thrown during execution in test generation
        try {
            python3Target0.genFile(grammar73, sT74, "\"\\\"\\\"\\\"i\\\"\\\"\\\"\"Context");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "4.5.2.1" + "'", str3, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"4.5.2.1\"" + "'", str8, "\"4.5.2.1\"");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 64 + "'", int12 == 64);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 64 + "'", int20 == 64);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "\"\"" + "'", str25, "\"\"");
        org.junit.Assert.assertNull(codeGenerator34);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "\\1" + "'", str38, "\\1");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "d" + "'", str42, "d");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 64 + "'", int45 == 64);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "4.5.2.1" + "'", str47, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 64 + "'", int48 == 64);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNull(codeGenerator50);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 64 + "'", int53 == 64);
        org.junit.Assert.assertNull(sTGroup54);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[]");
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "\"\\\"\\\"\\\"\\\"\"" + "'", str66, "\"\\\"\\\"\\\"\\\"\"");
        org.junit.Assert.assertNull(sTGroup67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "4.5.2.1" + "'", str68, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "\\\"\\\"\\\"\\\"\\\"\\\"\\\"4.5.2.1\\\"\\\"\\\"\\\"\\\"\\\"\\\"" + "'", str72, "\\\"\\\"\\\"\\\"\\\"\\\"\\\"4.5.2.1\\\"\\\"\\\"\\\"\\\"\\\"\\\"");
    }

    @Test
    public void test06724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06724");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        boolean boolean2 = python3Target0.wantsBaseVisitor();
        java.lang.String str3 = python3Target0.getLanguage();
        int int4 = python3Target0.getInlineTestSetWordSize();
        python3Target0.addBadWords();
        java.lang.String str7 = python3Target0.getTargetStringLiteralFromString("\"\"hi!\"\"");
        java.lang.String str8 = python3Target0.language;
        java.lang.String str9 = python3Target0.language;
        org.antlr.v4.tool.Grammar grammar10 = null;
        org.stringtemplate.v4.ST sT11 = null;
        // The following exception was thrown during execution in test generation
        try {
            python3Target0.genFile(grammar10, sT11, "\"\"\"1\"\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"\"\"hi!\"\"\"" + "'", str7, "\"\"\"hi!\"\"\"");
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test06725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06725");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        java.lang.String str3 = python3Target0.getVersion();
        int int4 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str5 = python3Target0.getLanguage();
        boolean boolean6 = python3Target0.templatesExist();
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        python3Target0.gen = codeGenerator7;
        python3Target0.language = "\"\"\\\"hi!\\\"\"\"";
        python3Target0.language = "\"\\\"hi!\\\"\"";
        java.lang.String str14 = python3Target0.encodeIntAsCharEscape((int) (byte) 100);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "4.5.2.1" + "'", str3, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "d" + "'", str14, "d");
    }

    @Test
    public void test06726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06726");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        org.stringtemplate.v4.STGroup sTGroup3 = python3Target0.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = python3Target0.gen;
        java.util.Set<java.lang.String> strSet5 = python3Target0.badWords;
        org.stringtemplate.v4.STGroup sTGroup6 = python3Target0.templates;
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromString("\"1\"");
        java.lang.String str9 = python3Target0.getLanguage();
        org.antlr.v4.tool.Grammar grammar10 = null;
        org.stringtemplate.v4.ST sT11 = null;
        python3Target0.genRecognizerHeaderFile(grammar10, sT11, "\\\"hi!\\\"Context");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(sTGroup3);
        org.junit.Assert.assertNull(codeGenerator4);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNull(sTGroup6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\"1\"\"" + "'", str8, "\"\"1\"\"");
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test06727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06727");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!", "" };
        python3Target0.targetCharValueEscape = strArray4;
        java.lang.String[] strArray6 = python3Target0.targetCharValueEscape;
        boolean boolean7 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = null;
        java.lang.String str11 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator8, "\"\"\"\"", true);
        boolean boolean12 = python3Target0.wantsBaseListener();
        boolean boolean13 = python3Target0.wantsBaseVisitor();
        java.lang.String str15 = python3Target0.encodeIntAsCharEscape((int) (byte) 100);
        python3Target0.addBadWords();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"\\\"\\\"\"" + "'", str11, "\"\\\"\\\"\"");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "d" + "'", str15, "d");
    }

    @Test
    public void test06728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06728");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str2 = python3Target0.getTargetStringLiteralFromString("\"\"");
        int int3 = python3Target0.getInlineTestSetWordSize();
        boolean boolean4 = python3Target0.supportsOverloadedMethods();
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromString("\"i\"");
        python3Target0.addBadWords();
        java.util.Set<java.lang.String> strSet8 = python3Target0.badWords;
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = null;
        java.lang.String str12 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator9, "\"\\\"\\\"\\\"4.5.2.1\\\"\\\"\\\"\"", false);
        java.lang.String str13 = python3Target0.language;
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = python3Target0.getCodeGenerator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str16 = python3Target0.getImplicitTokenLabel("\"Python3\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "\"\"\"\"" + "'", str2, "\"\"\"\"");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 64 + "'", int3 == 64);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"i\"\"" + "'", str6, "\"\"i\"\"");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\\\"\\\"\\\"4.5.2.1\\\"\\\"\\\"" + "'", str12, "\\\"\\\"\\\"4.5.2.1\\\"\\\"\\\"");
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(codeGenerator14);
    }

    @Test
    public void test06729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06729");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        java.lang.String str3 = python3Target0.getVersion();
        boolean boolean4 = python3Target0.wantsBaseListener();
        java.util.Set<java.lang.String> strSet5 = python3Target0.getBadWords();
        java.lang.String[] strArray6 = python3Target0.targetCharValueEscape;
        org.antlr.v4.codegen.target.Python3Target python3Target7 = new org.antlr.v4.codegen.target.Python3Target();
        int int8 = python3Target7.getInlineTestSetWordSize();
        java.lang.String str9 = python3Target7.language;
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        java.lang.String str13 = python3Target7.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator10, "", true);
        org.antlr.v4.tool.Grammar grammar14 = null;
        org.stringtemplate.v4.ST sT15 = null;
        python3Target7.genRecognizerHeaderFile(grammar14, sT15, "");
        org.antlr.v4.tool.Grammar grammar18 = null;
        org.stringtemplate.v4.ST sT19 = null;
        python3Target7.genRecognizerHeaderFile(grammar18, sT19, "\"i\"");
        boolean boolean22 = python3Target7.wantsBaseListener();
        org.antlr.v4.codegen.CodeGenerator codeGenerator23 = python3Target7.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator24 = null;
        python3Target7.gen = codeGenerator24;
        python3Target7.language = "Python3";
        org.antlr.v4.codegen.target.Python3Target python3Target28 = new org.antlr.v4.codegen.target.Python3Target();
        int int29 = python3Target28.getInlineTestSetWordSize();
        boolean boolean30 = python3Target28.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator31 = python3Target28.gen;
        java.lang.String str32 = python3Target28.getVersion();
        org.stringtemplate.v4.STGroup sTGroup33 = null;
        python3Target28.templates = sTGroup33;
        org.antlr.v4.tool.Grammar grammar35 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target36 = new org.antlr.v4.codegen.target.Python3Target();
        int int37 = python3Target36.getInlineTestSetWordSize();
        java.lang.String str38 = python3Target36.language;
        java.lang.String str39 = python3Target36.getVersion();
        python3Target36.language = "@";
        org.antlr.v4.tool.Grammar grammar42 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target43 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str45 = python3Target43.encodeIntAsCharEscape(100);
        org.antlr.v4.tool.Grammar grammar46 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target47 = new org.antlr.v4.codegen.target.Python3Target();
        int int48 = python3Target47.getInlineTestSetWordSize();
        java.lang.String str49 = python3Target47.language;
        java.lang.String str50 = python3Target47.getVersion();
        int int51 = python3Target47.getInlineTestSetWordSize();
        java.lang.String str52 = python3Target47.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator53 = python3Target47.gen;
        org.antlr.v4.tool.Grammar grammar54 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target55 = new org.antlr.v4.codegen.target.Python3Target();
        int int56 = python3Target55.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup57 = python3Target55.templates;
        org.antlr.v4.tool.Grammar grammar58 = null;
        int[] intArray59 = new int[] {};
        java.lang.String[] strArray60 = python3Target55.getTokenTypesAsTargetLabels(grammar58, intArray59);
        java.lang.String[] strArray61 = python3Target47.getTokenTypesAsTargetLabels(grammar54, intArray59);
        java.lang.String[] strArray62 = python3Target43.getTokenTypesAsTargetLabels(grammar46, intArray59);
        java.lang.String[] strArray63 = python3Target36.getTokenTypesAsTargetLabels(grammar42, intArray59);
        java.lang.String[] strArray64 = python3Target28.getTokenTypesAsTargetLabels(grammar35, intArray59);
        boolean boolean65 = python3Target28.wantsBaseListener();
        org.antlr.v4.codegen.target.Python3Target python3Target66 = new org.antlr.v4.codegen.target.Python3Target();
        int int67 = python3Target66.getInlineTestSetWordSize();
        java.lang.String str68 = python3Target66.language;
        org.antlr.v4.codegen.CodeGenerator codeGenerator69 = null;
        java.lang.String str72 = python3Target66.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator69, "", true);
        org.antlr.v4.tool.Grammar grammar73 = null;
        org.stringtemplate.v4.ST sT74 = null;
        python3Target66.genRecognizerHeaderFile(grammar73, sT74, "\"\"\"\"");
        org.stringtemplate.v4.STGroup sTGroup77 = null;
        python3Target66.templates = sTGroup77;
        java.lang.String str79 = python3Target66.language;
        boolean boolean80 = python3Target66.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator81 = python3Target66.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator82 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target83 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator82);
        int int84 = python3Target83.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup85 = python3Target83.loadTemplates();
        python3Target66.templates = sTGroup85;
        python3Target28.templates = sTGroup85;
        python3Target7.templates = sTGroup85;
        python3Target0.templates = sTGroup85;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "4.5.2.1" + "'", str3, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 64 + "'", int8 == 64);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"\"" + "'", str13, "\"\"");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(codeGenerator23);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 64 + "'", int29 == 64);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(codeGenerator31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "4.5.2.1" + "'", str32, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 64 + "'", int37 == 64);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "4.5.2.1" + "'", str39, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "d" + "'", str45, "d");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 64 + "'", int48 == 64);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "4.5.2.1" + "'", str50, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 64 + "'", int51 == 64);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNull(codeGenerator53);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 64 + "'", int56 == 64);
        org.junit.Assert.assertNull(sTGroup57);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[]");
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 64 + "'", int67 == 64);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "\"\"" + "'", str72, "\"\"");
        org.junit.Assert.assertNull(str79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNull(codeGenerator81);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 64 + "'", int84 == 64);
        org.junit.Assert.assertNotNull(sTGroup85);
    }

    @Test
    public void test06730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06730");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        boolean boolean2 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.gen;
        java.lang.String str4 = python3Target0.getVersion();
        java.lang.String[] strArray5 = python3Target0.targetCharValueEscape;
        org.antlr.v4.tool.Grammar grammar6 = null;
        org.stringtemplate.v4.ST sT7 = null;
        python3Target0.genRecognizerHeaderFile(grammar6, sT7, "");
        python3Target0.addBadWords();
        boolean boolean11 = python3Target0.templatesExist();
        java.lang.String str13 = python3Target0.getTargetStringLiteralFromString("");
        java.lang.String str14 = python3Target0.getLanguage();
        java.util.Set<java.lang.String> strSet15 = python3Target0.badWords;
        int int16 = python3Target0.getInlineTestSetWordSize();
        org.antlr.v4.tool.ast.GrammarAST grammarAST17 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean18 = python3Target0.visibleGrammarSymbolCausesIssueInGeneratedCode(grammarAST17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "4.5.2.1" + "'", str4, "4.5.2.1");
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"\"" + "'", str13, "\"\"");
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 64 + "'", int16 == 64);
    }

    @Test
    public void test06731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06731");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        org.stringtemplate.v4.STGroup sTGroup1 = null;
        python3Target0.templates = sTGroup1;
        java.lang.String[] strArray6 = new java.lang.String[] { "", "\\0", "" };
        java.util.LinkedHashSet<java.lang.String> strSet7 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet7, strArray6);
        python3Target0.badWords = strSet7;
        boolean boolean10 = python3Target0.templatesExist();
        java.lang.String str12 = python3Target0.encodeIntAsCharEscape(64);
        org.antlr.v4.codegen.target.Python3Target python3Target13 = new org.antlr.v4.codegen.target.Python3Target();
        int int14 = python3Target13.getInlineTestSetWordSize();
        boolean boolean15 = python3Target13.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator16 = python3Target13.gen;
        java.lang.String str17 = python3Target13.getVersion();
        java.lang.String[] strArray18 = python3Target13.targetCharValueEscape;
        python3Target0.targetCharValueEscape = strArray18;
        java.lang.String str20 = python3Target0.getVersion();
        boolean boolean21 = python3Target0.templatesExist();
        boolean boolean22 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.codegen.target.Python3Target python3Target23 = new org.antlr.v4.codegen.target.Python3Target();
        int int24 = python3Target23.getInlineTestSetWordSize();
        java.lang.String str25 = python3Target23.language;
        org.stringtemplate.v4.STGroup sTGroup26 = python3Target23.templates;
        boolean boolean27 = python3Target23.templatesExist();
        java.lang.String[] strArray28 = python3Target23.targetCharValueEscape;
        java.lang.String str29 = python3Target23.getVersion();
        java.lang.String str32 = python3Target23.getTargetStringLiteralFromString("\"\"\"\"4.5.2.1\"\"\"\"", false);
        java.lang.String str33 = python3Target23.getVersion();
        java.util.Set<java.lang.String> strSet34 = python3Target23.badWords;
        python3Target0.badWords = strSet34;
        org.antlr.v4.tool.ast.GrammarAST grammarAST36 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str37 = python3Target0.getLoopCounter(grammarAST36);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "@" + "'", str12, "@");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 64 + "'", int14 == 64);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(codeGenerator16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "4.5.2.1" + "'", str17, "4.5.2.1");
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "4.5.2.1" + "'", str20, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 64 + "'", int24 == 64);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(sTGroup26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "4.5.2.1" + "'", str29, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "\"\"\"\"4.5.2.1\"\"\"\"" + "'", str32, "\"\"\"\"4.5.2.1\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "4.5.2.1" + "'", str33, "4.5.2.1");
        org.junit.Assert.assertNotNull(strSet34);
    }

    @Test
    public void test06732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06732");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str1 = python3Target0.language;
        int int2 = python3Target0.getSerializedATNSegmentLimit();
        java.lang.String str4 = python3Target0.getTargetStringLiteralFromString("i");
        int int5 = python3Target0.getSerializedATNSegmentLimit();
        org.antlr.v4.codegen.target.Python3Target python3Target6 = new org.antlr.v4.codegen.target.Python3Target();
        int int7 = python3Target6.getInlineTestSetWordSize();
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!", "" };
        python3Target6.targetCharValueEscape = strArray10;
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = null;
        java.lang.String str15 = python3Target6.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator12, "\"\"", false);
        java.lang.String[] strArray16 = python3Target6.targetCharValueEscape;
        python3Target0.targetCharValueEscape = strArray16;
        java.lang.String str18 = python3Target0.language;
        org.antlr.v4.codegen.CodeGenerator codeGenerator19 = null;
        python3Target0.gen = codeGenerator19;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str22 = python3Target0.getElementName("\"\"\"\"\\64\"\"\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 29 + "'", int2 == 29);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\"i\"" + "'", str4, "\"i\"");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 29 + "'", int5 == 29);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 64 + "'", int7 == 64);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNull(str18);
    }

    @Test
    public void test06733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06733");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "", true);
        org.antlr.v4.tool.Grammar grammar7 = null;
        org.stringtemplate.v4.ST sT8 = null;
        python3Target0.genRecognizerHeaderFile(grammar7, sT8, "");
        org.antlr.v4.tool.Grammar grammar11 = null;
        org.stringtemplate.v4.ST sT12 = null;
        python3Target0.genRecognizerHeaderFile(grammar11, sT12, "\"i\"");
        int int15 = python3Target0.getSerializedATNSegmentLimit();
        python3Target0.language = "";
        java.lang.String[] strArray18 = python3Target0.targetCharValueEscape;
        boolean boolean19 = python3Target0.wantsBaseVisitor();
        python3Target0.addBadWords();
        java.lang.String str22 = python3Target0.encodeIntAsCharEscape((int) (byte) 0);
        org.antlr.v4.codegen.CodeGenerator codeGenerator23 = null;
        java.lang.String str26 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator23, "\"\\\"\\\" \\\"\\\"\"", true);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str28 = python3Target0.getImplicitRuleLabel("\\\"\\\"\\\"\\\"hi!\\\"\\\"\\\"\\\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"" + "'", str6, "\"\"");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 29 + "'", int15 == 29);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "\\0" + "'", str22, "\\0");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\"\\\"\\\" \\\"\\\"\"" + "'", str26, "\"\\\"\\\" \\\"\\\"\"");
    }

    @Test
    public void test06734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06734");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        org.stringtemplate.v4.STGroup sTGroup1 = null;
        python3Target0.templates = sTGroup1;
        java.util.Set<java.lang.String> strSet3 = null;
        python3Target0.badWords = strSet3;
        boolean boolean5 = python3Target0.templatesExist();
        org.antlr.v4.tool.Grammar grammar6 = null;
        org.stringtemplate.v4.ST sT7 = null;
        python3Target0.genRecognizerHeaderFile(grammar6, sT7, "\"\"\"4.5.2.1\"\"\"");
        org.antlr.v4.codegen.target.Python3Target python3Target10 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean11 = python3Target10.wantsBaseVisitor();
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = null;
        python3Target10.gen = codeGenerator12;
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = python3Target10.gen;
        java.util.Set<java.lang.String> strSet15 = python3Target10.badWords;
        org.antlr.v4.codegen.target.Python3Target python3Target16 = new org.antlr.v4.codegen.target.Python3Target();
        int int17 = python3Target16.getInlineTestSetWordSize();
        java.lang.String str18 = python3Target16.language;
        java.lang.String str19 = python3Target16.getVersion();
        int int20 = python3Target16.getInlineTestSetWordSize();
        java.lang.String str21 = python3Target16.getLanguage();
        java.lang.String str24 = python3Target16.getTargetStringLiteralFromString("4.5.2.1", true);
        boolean boolean25 = python3Target16.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet26 = python3Target16.badWords;
        org.antlr.v4.tool.Grammar grammar27 = null;
        org.stringtemplate.v4.ST sT28 = null;
        python3Target16.genRecognizerHeaderFile(grammar27, sT28, "\"4.5.2.1\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator31 = null;
        java.lang.String str34 = python3Target16.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator31, "i", true);
        org.antlr.v4.codegen.target.Python3Target python3Target35 = new org.antlr.v4.codegen.target.Python3Target();
        org.stringtemplate.v4.STGroup sTGroup36 = null;
        python3Target35.templates = sTGroup36;
        java.lang.String[] strArray41 = new java.lang.String[] { "", "\\0", "" };
        java.util.LinkedHashSet<java.lang.String> strSet42 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet42, strArray41);
        python3Target35.badWords = strSet42;
        python3Target16.badWords = strSet42;
        python3Target10.badWords = strSet42;
        python3Target0.badWords = strSet42;
        python3Target0.addBadWords();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(codeGenerator14);
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 64 + "'", int17 == 64);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "4.5.2.1" + "'", str19, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 64 + "'", int20 == 64);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "\"4.5.2.1\"" + "'", str24, "\"4.5.2.1\"");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(strSet26);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "\"\"" + "'", str34, "\"\"");
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
    }

    @Test
    public void test06735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06735");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        boolean boolean2 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.gen;
        java.lang.String str4 = python3Target0.getVersion();
        java.lang.String[] strArray5 = python3Target0.targetCharValueEscape;
        boolean boolean6 = python3Target0.supportsOverloadedMethods();
        java.lang.String str8 = python3Target0.encodeIntAsCharEscape((int) '#');
        python3Target0.language = "\"\".5.2.\"\"";
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str12 = python3Target0.encodeIntAsCharEscape((-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot encode the specified value: -1");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "4.5.2.1" + "'", str4, "4.5.2.1");
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "#" + "'", str8, "#");
    }

    @Test
    public void test06736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06736");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        boolean boolean2 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.gen;
        boolean boolean4 = python3Target0.wantsBaseVisitor();
        java.lang.String str5 = python3Target0.language;
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromString("\\0", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = python3Target0.gen;
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        java.lang.String str13 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator10, "\"\\\"\\\"4.5.2.1\\\"\\\"\"", true);
        python3Target0.addBadWords();
        java.util.Set<java.lang.String> strSet15 = python3Target0.badWords;
        java.lang.String str16 = python3Target0.getLanguage();
        java.lang.String str17 = python3Target0.language;
        java.lang.String[] strArray18 = python3Target0.targetCharValueEscape;
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray18;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\\0" + "'", str8, "\\0");
        org.junit.Assert.assertNull(codeGenerator9);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"\\\"\\\"4.5.2.1\\\"\\\"\"" + "'", str13, "\"\\\"\\\"4.5.2.1\\\"\\\"\"");
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(strArray18);
    }

    @Test
    public void test06737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06737");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str1 = python3Target0.language;
        int int2 = python3Target0.getSerializedATNSegmentLimit();
        java.lang.String str4 = python3Target0.getTargetStringLiteralFromString("i");
        java.lang.String str5 = python3Target0.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        python3Target0.gen = codeGenerator6;
        boolean boolean8 = python3Target0.wantsBaseListener();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str10 = python3Target0.getAltLabelContextStructName("\"\"\"\\\"hi!\\\"\"\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 29 + "'", int2 == 29);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\"i\"" + "'", str4, "\"i\"");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test06738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06738");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        boolean boolean2 = python3Target0.wantsBaseVisitor();
        java.lang.String str3 = python3Target0.getLanguage();
        int int4 = python3Target0.getInlineTestSetWordSize();
        python3Target0.language = "\"hi!\"";
        org.antlr.v4.codegen.target.Python3Target python3Target7 = new org.antlr.v4.codegen.target.Python3Target();
        int int8 = python3Target7.getInlineTestSetWordSize();
        boolean boolean9 = python3Target7.wantsBaseVisitor();
        java.lang.String str10 = python3Target7.getLanguage();
        int int11 = python3Target7.getInlineTestSetWordSize();
        java.lang.String[] strArray12 = python3Target7.targetCharValueEscape;
        python3Target0.targetCharValueEscape = strArray12;
        boolean boolean14 = python3Target0.wantsBaseListener();
        org.antlr.v4.tool.Grammar grammar15 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target16 = new org.antlr.v4.codegen.target.Python3Target();
        int int17 = python3Target16.getInlineTestSetWordSize();
        java.lang.String str18 = python3Target16.language;
        java.lang.String str19 = python3Target16.getVersion();
        int int20 = python3Target16.getInlineTestSetWordSize();
        java.lang.String str21 = python3Target16.getLanguage();
        java.lang.String str24 = python3Target16.getTargetStringLiteralFromString("4.5.2.1", true);
        java.util.Set<java.lang.String> strSet25 = python3Target16.badWords;
        int int26 = python3Target16.getSerializedATNSegmentLimit();
        java.lang.String str27 = python3Target16.getVersion();
        org.antlr.v4.tool.Grammar grammar28 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target29 = new org.antlr.v4.codegen.target.Python3Target();
        int int30 = python3Target29.getInlineTestSetWordSize();
        java.lang.String str31 = python3Target29.language;
        java.lang.String str32 = python3Target29.getVersion();
        int int33 = python3Target29.getInlineTestSetWordSize();
        java.lang.String str34 = python3Target29.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator35 = python3Target29.gen;
        org.antlr.v4.tool.Grammar grammar36 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target37 = new org.antlr.v4.codegen.target.Python3Target();
        int int38 = python3Target37.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup39 = python3Target37.templates;
        org.antlr.v4.tool.Grammar grammar40 = null;
        int[] intArray41 = new int[] {};
        java.lang.String[] strArray42 = python3Target37.getTokenTypesAsTargetLabels(grammar40, intArray41);
        java.lang.String[] strArray43 = python3Target29.getTokenTypesAsTargetLabels(grammar36, intArray41);
        java.lang.String[] strArray44 = python3Target16.getTokenTypesAsTargetLabels(grammar28, intArray41);
        java.lang.String[] strArray45 = python3Target0.getTokenTypesAsTargetLabels(grammar15, intArray41);
        java.lang.String str47 = python3Target0.encodeIntAsCharEscape((int) (short) 100);
        java.lang.String str50 = python3Target0.getTargetStringLiteralFromString("\"\\\"\\\"\\\"\\\"4.5.2.1\\\"\\\"\\\"\\\"\"", true);
        org.antlr.v4.tool.Grammar grammar51 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target52 = new org.antlr.v4.codegen.target.Python3Target();
        int int53 = python3Target52.getInlineTestSetWordSize();
        java.lang.String str54 = python3Target52.language;
        org.antlr.v4.codegen.CodeGenerator codeGenerator55 = null;
        java.lang.String str58 = python3Target52.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator55, "", true);
        org.antlr.v4.tool.Grammar grammar59 = null;
        org.stringtemplate.v4.ST sT60 = null;
        python3Target52.genRecognizerHeaderFile(grammar59, sT60, "\"\"\"\"");
        org.stringtemplate.v4.STGroup sTGroup63 = null;
        python3Target52.templates = sTGroup63;
        org.stringtemplate.v4.STGroup sTGroup65 = null;
        python3Target52.templates = sTGroup65;
        org.antlr.v4.tool.Grammar grammar67 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target68 = new org.antlr.v4.codegen.target.Python3Target();
        int int69 = python3Target68.getInlineTestSetWordSize();
        java.lang.String str70 = python3Target68.language;
        java.lang.String str71 = python3Target68.getVersion();
        int int72 = python3Target68.getInlineTestSetWordSize();
        java.lang.String str73 = python3Target68.getLanguage();
        java.lang.String str76 = python3Target68.getTargetStringLiteralFromString("4.5.2.1", true);
        java.util.Set<java.lang.String> strSet77 = python3Target68.badWords;
        int int78 = python3Target68.getSerializedATNSegmentLimit();
        java.lang.String str79 = python3Target68.getVersion();
        org.antlr.v4.tool.Grammar grammar80 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target81 = new org.antlr.v4.codegen.target.Python3Target();
        int int82 = python3Target81.getInlineTestSetWordSize();
        java.lang.String str83 = python3Target81.language;
        java.lang.String str84 = python3Target81.getVersion();
        int int85 = python3Target81.getInlineTestSetWordSize();
        java.lang.String str86 = python3Target81.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator87 = python3Target81.gen;
        org.antlr.v4.tool.Grammar grammar88 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target89 = new org.antlr.v4.codegen.target.Python3Target();
        int int90 = python3Target89.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup91 = python3Target89.templates;
        org.antlr.v4.tool.Grammar grammar92 = null;
        int[] intArray93 = new int[] {};
        java.lang.String[] strArray94 = python3Target89.getTokenTypesAsTargetLabels(grammar92, intArray93);
        java.lang.String[] strArray95 = python3Target81.getTokenTypesAsTargetLabels(grammar88, intArray93);
        java.lang.String[] strArray96 = python3Target68.getTokenTypesAsTargetLabels(grammar80, intArray93);
        java.lang.String[] strArray97 = python3Target52.getTokenTypesAsTargetLabels(grammar67, intArray93);
        java.lang.String[] strArray98 = python3Target0.getTokenTypesAsTargetLabels(grammar51, intArray93);
        java.lang.String[] strArray99 = python3Target0.targetCharValueEscape;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 64 + "'", int8 == 64);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 64 + "'", int11 == 64);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 64 + "'", int17 == 64);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "4.5.2.1" + "'", str19, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 64 + "'", int20 == 64);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "\"4.5.2.1\"" + "'", str24, "\"4.5.2.1\"");
        org.junit.Assert.assertNotNull(strSet25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 29 + "'", int26 == 29);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "4.5.2.1" + "'", str27, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 64 + "'", int30 == 64);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "4.5.2.1" + "'", str32, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 64 + "'", int33 == 64);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNull(codeGenerator35);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 64 + "'", int38 == 64);
        org.junit.Assert.assertNull(sTGroup39);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[]");
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "d" + "'", str47, "d");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "\"\"\\\"\\\"\\\"\\\"4.5.2.1\\\"\\\"\\\"\\\"\"\"" + "'", str50, "\"\"\\\"\\\"\\\"\\\"4.5.2.1\\\"\\\"\\\"\\\"\"\"");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 64 + "'", int53 == 64);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "\"\"" + "'", str58, "\"\"");
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 64 + "'", int69 == 64);
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "4.5.2.1" + "'", str71, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 64 + "'", int72 == 64);
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "\"4.5.2.1\"" + "'", str76, "\"4.5.2.1\"");
        org.junit.Assert.assertNotNull(strSet77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 29 + "'", int78 == 29);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "4.5.2.1" + "'", str79, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 64 + "'", int82 == 64);
        org.junit.Assert.assertNull(str83);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "4.5.2.1" + "'", str84, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 64 + "'", int85 == 64);
        org.junit.Assert.assertNull(str86);
        org.junit.Assert.assertNull(codeGenerator87);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 64 + "'", int90 == 64);
        org.junit.Assert.assertNull(sTGroup91);
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[]");
        org.junit.Assert.assertNotNull(strArray94);
        org.junit.Assert.assertNotNull(strArray95);
        org.junit.Assert.assertNotNull(strArray96);
        org.junit.Assert.assertNotNull(strArray97);
        org.junit.Assert.assertNotNull(strArray98);
        org.junit.Assert.assertNotNull(strArray99);
    }

    @Test
    public void test06739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06739");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        java.lang.String str3 = python3Target0.getVersion();
        int int4 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str5 = python3Target0.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = python3Target0.gen;
        python3Target0.addBadWords();
        org.antlr.v4.codegen.target.Python3Target python3Target8 = new org.antlr.v4.codegen.target.Python3Target();
        int int9 = python3Target8.getInlineTestSetWordSize();
        java.lang.String str10 = python3Target8.language;
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = python3Target8.getCodeGenerator();
        java.util.Set<java.lang.String> strSet12 = python3Target8.getBadWords();
        org.antlr.v4.codegen.target.Python3Target python3Target13 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray15 = new java.lang.String[] { "" };
        java.util.LinkedHashSet<java.lang.String> strSet16 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet16, strArray15);
        python3Target13.badWords = strSet16;
        python3Target8.badWords = strSet16;
        python3Target0.badWords = strSet16;
        java.lang.String str23 = python3Target0.getTargetStringLiteralFromString("\".5.2.\"", true);
        java.lang.String str25 = python3Target0.getTargetStringLiteralFromString("\".5.2.\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator26 = null;
        java.lang.String str29 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator26, "\"@\"", false);
        org.stringtemplate.v4.STGroup sTGroup30 = null;
        python3Target0.templates = sTGroup30;
        org.antlr.v4.codegen.CodeGenerator codeGenerator32 = null;
        python3Target0.gen = codeGenerator32;
        java.util.Set<java.lang.String> strSet34 = python3Target0.getBadWords();
        java.lang.String str36 = python3Target0.getTargetStringLiteralFromString("\"\"1\"\"");
        boolean boolean37 = python3Target0.wantsBaseVisitor();
        org.antlr.v4.codegen.CodeGenerator codeGenerator38 = python3Target0.getCodeGenerator();
        boolean boolean39 = python3Target0.supportsOverloadedMethods();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "4.5.2.1" + "'", str3, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(codeGenerator6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 64 + "'", int9 == 64);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(codeGenerator11);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "\"\".5.2.\"\"" + "'", str23, "\"\".5.2.\"\"");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "\"\".5.2.\"\"" + "'", str25, "\"\".5.2.\"\"");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "@" + "'", str29, "@");
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "\"\"\"1\"\"\"" + "'", str36, "\"\"\"1\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(codeGenerator38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    }

    @Test
    public void test06740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06740");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        java.lang.String str3 = python3Target0.getVersion();
        int int4 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromString("@");
        org.antlr.v4.codegen.target.Python3Target python3Target7 = new org.antlr.v4.codegen.target.Python3Target();
        int int8 = python3Target7.getInlineTestSetWordSize();
        java.lang.String str9 = python3Target7.language;
        java.lang.String str10 = python3Target7.getVersion();
        int int11 = python3Target7.getInlineTestSetWordSize();
        java.lang.String str12 = python3Target7.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = python3Target7.gen;
        python3Target7.addBadWords();
        python3Target7.language = "\\0";
        java.lang.String[] strArray17 = python3Target7.targetCharValueEscape;
        python3Target0.targetCharValueEscape = strArray17;
        org.antlr.v4.codegen.target.Python3Target python3Target19 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str21 = python3Target19.getTargetStringLiteralFromString("\"\"");
        int int22 = python3Target19.getInlineTestSetWordSize();
        boolean boolean23 = python3Target19.supportsOverloadedMethods();
        java.lang.String str25 = python3Target19.encodeIntAsCharEscape(10);
        org.antlr.v4.tool.Grammar grammar26 = null;
        org.stringtemplate.v4.ST sT27 = null;
        python3Target19.genRecognizerHeaderFile(grammar26, sT27, "\"\"");
        org.antlr.v4.tool.Grammar grammar30 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target31 = new org.antlr.v4.codegen.target.Python3Target();
        int int32 = python3Target31.getInlineTestSetWordSize();
        java.lang.String str33 = python3Target31.language;
        java.lang.String str34 = python3Target31.getVersion();
        int int35 = python3Target31.getInlineTestSetWordSize();
        java.lang.String str36 = python3Target31.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator37 = python3Target31.gen;
        org.antlr.v4.tool.Grammar grammar38 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target39 = new org.antlr.v4.codegen.target.Python3Target();
        int int40 = python3Target39.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup41 = python3Target39.templates;
        org.antlr.v4.tool.Grammar grammar42 = null;
        int[] intArray43 = new int[] {};
        java.lang.String[] strArray44 = python3Target39.getTokenTypesAsTargetLabels(grammar42, intArray43);
        java.lang.String[] strArray45 = python3Target31.getTokenTypesAsTargetLabels(grammar38, intArray43);
        java.lang.String str46 = python3Target31.getLanguage();
        java.lang.String str47 = python3Target31.getLanguage();
        java.lang.String str49 = python3Target31.getTargetStringLiteralFromString("\"i\"");
        org.antlr.v4.tool.Grammar grammar50 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target51 = new org.antlr.v4.codegen.target.Python3Target();
        int int52 = python3Target51.getInlineTestSetWordSize();
        java.lang.String[] strArray55 = new java.lang.String[] { "hi!", "" };
        python3Target51.targetCharValueEscape = strArray55;
        java.util.Set<java.lang.String> strSet57 = python3Target51.badWords;
        org.stringtemplate.v4.STGroup sTGroup58 = python3Target51.templates;
        org.antlr.v4.tool.Grammar grammar59 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target60 = new org.antlr.v4.codegen.target.Python3Target();
        int int61 = python3Target60.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup62 = python3Target60.templates;
        org.antlr.v4.tool.Grammar grammar63 = null;
        int[] intArray64 = new int[] {};
        java.lang.String[] strArray65 = python3Target60.getTokenTypesAsTargetLabels(grammar63, intArray64);
        java.lang.String[] strArray66 = python3Target51.getTokenTypesAsTargetLabels(grammar59, intArray64);
        java.lang.String[] strArray67 = python3Target31.getTokenTypesAsTargetLabels(grammar50, intArray64);
        java.lang.String[] strArray68 = python3Target19.getTokenTypesAsTargetLabels(grammar30, intArray64);
        python3Target0.targetCharValueEscape = strArray68;
        java.util.Set<java.lang.String> strSet70 = python3Target0.badWords;
        boolean boolean71 = python3Target0.wantsBaseListener();
        org.antlr.v4.tool.Rule rule72 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str73 = python3Target0.getRuleFunctionContextStructName(rule72);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "4.5.2.1" + "'", str3, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"@\"" + "'", str6, "\"@\"");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 64 + "'", int8 == 64);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "4.5.2.1" + "'", str10, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 64 + "'", int11 == 64);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(codeGenerator13);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "\"\"\"\"" + "'", str21, "\"\"\"\"");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 64 + "'", int22 == 64);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "\\12" + "'", str25, "\\12");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 64 + "'", int32 == 64);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "4.5.2.1" + "'", str34, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 64 + "'", int35 == 64);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(codeGenerator37);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 64 + "'", int40 == 64);
        org.junit.Assert.assertNull(sTGroup41);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[]");
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "\"\"i\"\"" + "'", str49, "\"\"i\"\"");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 64 + "'", int52 == 64);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertNotNull(strSet57);
        org.junit.Assert.assertNull(sTGroup58);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 64 + "'", int61 == 64);
        org.junit.Assert.assertNull(sTGroup62);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[]");
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertNotNull(strSet70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
    }

    @Test
    public void test06741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06741");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        boolean boolean2 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.gen;
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = null;
        python3Target0.gen = codeGenerator4;
        org.antlr.v4.tool.Grammar grammar6 = null;
        org.stringtemplate.v4.ST sT7 = null;
        // The following exception was thrown during execution in test generation
        try {
            python3Target0.genListenerFile(grammar6, sT7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(codeGenerator3);
    }

    @Test
    public void test06742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06742");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        java.lang.String str3 = python3Target0.getLanguage();
        java.lang.String str5 = python3Target0.getTargetStringLiteralFromString("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        java.lang.String str9 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator6, "hi!", true);
        int int10 = python3Target0.getSerializedATNSegmentLimit();
        java.lang.String str11 = python3Target0.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = null;
        python3Target0.gen = codeGenerator12;
        boolean boolean14 = python3Target0.wantsBaseVisitor();
        org.antlr.v4.codegen.target.Python3Target python3Target15 = new org.antlr.v4.codegen.target.Python3Target();
        int int16 = python3Target15.getInlineTestSetWordSize();
        java.lang.String str17 = python3Target15.language;
        java.lang.String str18 = python3Target15.getLanguage();
        java.lang.String str20 = python3Target15.getTargetStringLiteralFromString("");
        java.lang.String str21 = python3Target15.getVersion();
        org.antlr.v4.codegen.target.Python3Target python3Target22 = new org.antlr.v4.codegen.target.Python3Target();
        int int23 = python3Target22.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup24 = python3Target22.templates;
        org.antlr.v4.tool.Grammar grammar25 = null;
        int[] intArray26 = new int[] {};
        java.lang.String[] strArray27 = python3Target22.getTokenTypesAsTargetLabels(grammar25, intArray26);
        python3Target15.targetCharValueEscape = strArray27;
        org.antlr.v4.codegen.target.Python3Target python3Target29 = new org.antlr.v4.codegen.target.Python3Target();
        int int30 = python3Target29.getInlineTestSetWordSize();
        java.lang.String str31 = python3Target29.language;
        org.antlr.v4.codegen.CodeGenerator codeGenerator32 = python3Target29.getCodeGenerator();
        java.util.Set<java.lang.String> strSet33 = python3Target29.getBadWords();
        java.lang.String[] strArray34 = python3Target29.targetCharValueEscape;
        python3Target15.targetCharValueEscape = strArray34;
        python3Target0.targetCharValueEscape = strArray34;
        org.stringtemplate.v4.STGroup sTGroup37 = null;
        python3Target0.templates = sTGroup37;
        boolean boolean39 = python3Target0.wantsBaseVisitor();
        // The following exception was thrown during execution in test generation
        try {
            org.stringtemplate.v4.STGroup sTGroup40 = python3Target0.loadTemplates();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\"\"" + "'", str5, "\"\"");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"i\"" + "'", str9, "\"i\"");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 29 + "'", int10 == 29);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 64 + "'", int16 == 64);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "\"\"" + "'", str20, "\"\"");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "4.5.2.1" + "'", str21, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 64 + "'", int23 == 64);
        org.junit.Assert.assertNull(sTGroup24);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[]");
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 64 + "'", int30 == 64);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNull(codeGenerator32);
        org.junit.Assert.assertNotNull(strSet33);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    }

    @Test
    public void test06743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06743");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str2 = python3Target0.getTargetStringLiteralFromString("\"\"");
        int int3 = python3Target0.getInlineTestSetWordSize();
        boolean boolean4 = python3Target0.supportsOverloadedMethods();
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromString("\"i\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        java.lang.String str10 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator7, "\"\"\\\"\\\"4.5.2.1\\\"\\\"\"\"", true);
        java.util.Set<java.lang.String> strSet11 = python3Target0.badWords;
        boolean boolean12 = python3Target0.templatesExist();
        // The following exception was thrown during execution in test generation
        try {
            org.stringtemplate.v4.STGroup sTGroup13 = python3Target0.loadTemplates();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "\"\"\"\"" + "'", str2, "\"\"\"\"");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 64 + "'", int3 == 64);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"i\"\"" + "'", str6, "\"\"i\"\"");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"\\\"\\\"\\\"4.5.2.1\\\"\\\"\\\"\"" + "'", str10, "\"\\\"\\\"\\\"4.5.2.1\\\"\\\"\\\"\"");
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test06744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06744");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.getCodeGenerator();
        java.util.Set<java.lang.String> strSet4 = python3Target0.getBadWords();
        java.lang.String[] strArray5 = python3Target0.targetCharValueEscape;
        java.lang.String str7 = python3Target0.getTargetStringLiteralFromString("\"\"i\"\"");
        python3Target0.addBadWords();
        org.antlr.v4.codegen.target.Python3Target python3Target9 = new org.antlr.v4.codegen.target.Python3Target();
        int int10 = python3Target9.getInlineTestSetWordSize();
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "" };
        python3Target9.targetCharValueEscape = strArray13;
        java.util.Set<java.lang.String> strSet15 = python3Target9.badWords;
        org.stringtemplate.v4.STGroup sTGroup16 = python3Target9.templates;
        org.antlr.v4.tool.Grammar grammar17 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target18 = new org.antlr.v4.codegen.target.Python3Target();
        int int19 = python3Target18.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup20 = python3Target18.templates;
        org.antlr.v4.tool.Grammar grammar21 = null;
        int[] intArray22 = new int[] {};
        java.lang.String[] strArray23 = python3Target18.getTokenTypesAsTargetLabels(grammar21, intArray22);
        java.lang.String[] strArray24 = python3Target9.getTokenTypesAsTargetLabels(grammar17, intArray22);
        python3Target0.targetCharValueEscape = strArray24;
        org.antlr.v4.tool.Grammar grammar26 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str28 = python3Target0.getTokenTypeAsTargetLabel(grammar26, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"\"\"i\"\"\"" + "'", str7, "\"\"\"i\"\"\"");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 64 + "'", int10 == 64);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertNull(sTGroup16);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 64 + "'", int19 == 64);
        org.junit.Assert.assertNull(sTGroup20);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[]");
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(strArray24);
    }

    @Test
    public void test06745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06745");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "", true);
        org.antlr.v4.tool.Grammar grammar7 = null;
        org.stringtemplate.v4.ST sT8 = null;
        python3Target0.genRecognizerHeaderFile(grammar7, sT8, "");
        org.antlr.v4.tool.Grammar grammar11 = null;
        org.stringtemplate.v4.ST sT12 = null;
        python3Target0.genRecognizerHeaderFile(grammar11, sT12, "\"i\"");
        int int15 = python3Target0.getSerializedATNSegmentLimit();
        java.util.Set<java.lang.String> strSet16 = python3Target0.getBadWords();
        boolean boolean17 = python3Target0.wantsBaseListener();
        boolean boolean18 = python3Target0.wantsBaseListener();
        java.lang.String str19 = python3Target0.language;
        org.antlr.v4.codegen.target.Python3Target python3Target20 = new org.antlr.v4.codegen.target.Python3Target();
        int int21 = python3Target20.getInlineTestSetWordSize();
        java.lang.String str22 = python3Target20.language;
        java.lang.String str23 = python3Target20.getVersion();
        org.antlr.v4.tool.Grammar grammar24 = null;
        org.stringtemplate.v4.ST sT25 = null;
        python3Target20.genRecognizerHeaderFile(grammar24, sT25, "\"\"\"\"");
        boolean boolean28 = python3Target20.wantsBaseListener();
        python3Target20.language = "hi!";
        org.antlr.v4.codegen.target.Python3Target python3Target31 = new org.antlr.v4.codegen.target.Python3Target();
        int int32 = python3Target31.getInlineTestSetWordSize();
        java.lang.String str33 = python3Target31.language;
        java.lang.String str34 = python3Target31.getVersion();
        int int35 = python3Target31.getInlineTestSetWordSize();
        java.lang.String str36 = python3Target31.getLanguage();
        java.lang.String str39 = python3Target31.getTargetStringLiteralFromString("4.5.2.1", true);
        boolean boolean40 = python3Target31.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet41 = python3Target31.badWords;
        org.antlr.v4.tool.Grammar grammar42 = null;
        org.stringtemplate.v4.ST sT43 = null;
        python3Target31.genRecognizerHeaderFile(grammar42, sT43, "\"4.5.2.1\"");
        java.util.Set<java.lang.String> strSet46 = python3Target31.getBadWords();
        python3Target20.badWords = strSet46;
        java.util.Set<java.lang.String> strSet48 = python3Target20.badWords;
        python3Target0.badWords = strSet48;
        java.util.Set<java.lang.String> strSet50 = python3Target0.badWords;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"" + "'", str6, "\"\"");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 29 + "'", int15 == 29);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 64 + "'", int21 == 64);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "4.5.2.1" + "'", str23, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 64 + "'", int32 == 64);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "4.5.2.1" + "'", str34, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 64 + "'", int35 == 64);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "\"4.5.2.1\"" + "'", str39, "\"4.5.2.1\"");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(strSet41);
        org.junit.Assert.assertNotNull(strSet46);
        org.junit.Assert.assertNotNull(strSet48);
        org.junit.Assert.assertNotNull(strSet50);
    }

    @Test
    public void test06746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06746");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String str3 = python3Target0.language;
        java.lang.String str5 = python3Target0.getTargetStringLiteralFromString("");
        org.antlr.v4.tool.ast.GrammarAST grammarAST6 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str7 = python3Target0.getLoopCounter(grammarAST6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\"\"" + "'", str5, "\"\"");
    }

    @Test
    public void test06747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06747");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!", "" };
        python3Target0.targetCharValueEscape = strArray4;
        java.lang.String[] strArray6 = python3Target0.targetCharValueEscape;
        int int7 = python3Target0.getSerializedATNSegmentLimit();
        org.antlr.v4.codegen.target.Python3Target python3Target8 = new org.antlr.v4.codegen.target.Python3Target();
        int int9 = python3Target8.getInlineTestSetWordSize();
        java.lang.String str10 = python3Target8.language;
        java.lang.String str11 = python3Target8.getVersion();
        int int12 = python3Target8.getInlineTestSetWordSize();
        java.lang.String str13 = python3Target8.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = python3Target8.gen;
        org.antlr.v4.tool.Grammar grammar15 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target16 = new org.antlr.v4.codegen.target.Python3Target();
        int int17 = python3Target16.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup18 = python3Target16.templates;
        org.antlr.v4.tool.Grammar grammar19 = null;
        int[] intArray20 = new int[] {};
        java.lang.String[] strArray21 = python3Target16.getTokenTypesAsTargetLabels(grammar19, intArray20);
        java.lang.String[] strArray22 = python3Target8.getTokenTypesAsTargetLabels(grammar15, intArray20);
        java.lang.String str23 = python3Target8.getLanguage();
        java.lang.String str24 = python3Target8.getLanguage();
        java.lang.String str26 = python3Target8.getTargetStringLiteralFromString("\"i\"");
        java.util.Set<java.lang.String> strSet27 = python3Target8.badWords;
        boolean boolean28 = python3Target8.wantsBaseVisitor();
        java.lang.String str31 = python3Target8.getTargetStringLiteralFromString("\"\\\"\\\"\\\"i\\\"\\\"\\\"\"", true);
        java.util.Set<java.lang.String> strSet32 = python3Target8.badWords;
        python3Target0.badWords = strSet32;
        java.lang.String str35 = python3Target0.getTargetStringLiteralFromString("\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"4.5.2.1\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"");
        org.antlr.v4.tool.ast.GrammarAST grammarAST36 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str37 = python3Target0.getLoopCounter(grammarAST36);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 29 + "'", int7 == 29);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 64 + "'", int9 == 64);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "4.5.2.1" + "'", str11, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 64 + "'", int12 == 64);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(codeGenerator14);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 64 + "'", int17 == 64);
        org.junit.Assert.assertNull(sTGroup18);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[]");
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\"\"i\"\"" + "'", str26, "\"\"i\"\"");
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "\"\"\\\"\\\"\\\"i\\\"\\\"\\\"\"\"" + "'", str31, "\"\"\\\"\\\"\\\"i\\\"\\\"\\\"\"\"");
        org.junit.Assert.assertNotNull(strSet32);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"4.5.2.1\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\"" + "'", str35, "\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"4.5.2.1\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\"");
    }

    @Test
    public void test06748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06748");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        java.lang.String str3 = python3Target0.getLanguage();
        java.lang.String str5 = python3Target0.getTargetStringLiteralFromString("");
        java.lang.String str6 = python3Target0.getVersion();
        org.antlr.v4.codegen.target.Python3Target python3Target7 = new org.antlr.v4.codegen.target.Python3Target();
        int int8 = python3Target7.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup9 = python3Target7.templates;
        org.antlr.v4.tool.Grammar grammar10 = null;
        int[] intArray11 = new int[] {};
        java.lang.String[] strArray12 = python3Target7.getTokenTypesAsTargetLabels(grammar10, intArray11);
        python3Target0.targetCharValueEscape = strArray12;
        java.lang.String str14 = python3Target0.getLanguage();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\"\"" + "'", str5, "\"\"");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "4.5.2.1" + "'", str6, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 64 + "'", int8 == 64);
        org.junit.Assert.assertNull(sTGroup9);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[]");
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNull(str14);
    }

    @Test
    public void test06749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06749");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        boolean boolean2 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.gen;
        boolean boolean4 = python3Target0.wantsBaseVisitor();
        java.lang.String str5 = python3Target0.language;
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromString("\\0", false);
        int int9 = python3Target0.getSerializedATNSegmentLimit();
        org.stringtemplate.v4.STGroup sTGroup10 = null;
        python3Target0.templates = sTGroup10;
        boolean boolean12 = python3Target0.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar13 = null;
        org.stringtemplate.v4.ST sT14 = null;
        python3Target0.genRecognizerHeaderFile(grammar13, sT14, "\"\"hi!\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = python3Target0.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup18 = null;
        python3Target0.templates = sTGroup18;
        org.antlr.v4.tool.Grammar grammar20 = null;
        org.stringtemplate.v4.ST sT21 = null;
        python3Target0.genRecognizerHeaderFile(grammar20, sT21, "");
        boolean boolean24 = python3Target0.supportsOverloadedMethods();
        boolean boolean25 = python3Target0.wantsBaseListener();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str27 = python3Target0.getImplicitRuleLabel("\"\"\\\"\\\"4.5.2.1\\\"\\\"\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\\0" + "'", str8, "\\0");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 29 + "'", int9 == 29);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(codeGenerator17);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test06750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06750");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "", true);
        org.antlr.v4.tool.Grammar grammar7 = null;
        org.stringtemplate.v4.ST sT8 = null;
        python3Target0.genRecognizerHeaderFile(grammar7, sT8, "");
        org.antlr.v4.tool.Grammar grammar11 = null;
        org.stringtemplate.v4.ST sT12 = null;
        python3Target0.genRecognizerHeaderFile(grammar11, sT12, "\"i\"");
        int int15 = python3Target0.getSerializedATNSegmentLimit();
        java.util.Set<java.lang.String> strSet16 = python3Target0.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = null;
        python3Target0.gen = codeGenerator17;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str20 = python3Target0.getImplicitRuleLabel("\"\\\"\\\"d\\\"\\\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"" + "'", str6, "\"\"");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 29 + "'", int15 == 29);
        org.junit.Assert.assertNotNull(strSet16);
    }

    @Test
    public void test06751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06751");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        java.lang.String str3 = python3Target0.getVersion();
        int int4 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str5 = python3Target0.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = python3Target0.gen;
        python3Target0.addBadWords();
        python3Target0.language = "\\0";
        boolean boolean10 = python3Target0.wantsBaseVisitor();
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = python3Target0.getCodeGenerator();
        int int12 = python3Target0.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar13 = null;
        org.stringtemplate.v4.ST sT14 = null;
        python3Target0.genRecognizerHeaderFile(grammar13, sT14, "\"\"\"4.5.2.1\"\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = null;
        java.lang.String str20 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator17, "\"\\\"\\\"\\\"4.5.2.1\\\"\\\"\\\"\"", true);
        org.antlr.v4.tool.ast.GrammarAST grammarAST21 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str22 = python3Target0.getLoopLabel(grammarAST21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "4.5.2.1" + "'", str3, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(codeGenerator6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(codeGenerator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 29 + "'", int12 == 29);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "\"\\\"\\\"\\\"4.5.2.1\\\"\\\"\\\"\"" + "'", str20, "\"\\\"\\\"\\\"4.5.2.1\\\"\\\"\\\"\"");
    }

    @Test
    public void test06752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06752");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        java.lang.String str3 = python3Target0.getLanguage();
        java.lang.String str5 = python3Target0.getTargetStringLiteralFromString("");
        java.lang.String str6 = python3Target0.getVersion();
        org.antlr.v4.codegen.target.Python3Target python3Target7 = new org.antlr.v4.codegen.target.Python3Target();
        int int8 = python3Target7.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup9 = python3Target7.templates;
        org.antlr.v4.tool.Grammar grammar10 = null;
        int[] intArray11 = new int[] {};
        java.lang.String[] strArray12 = python3Target7.getTokenTypesAsTargetLabels(grammar10, intArray11);
        python3Target0.targetCharValueEscape = strArray12;
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = null;
        java.lang.String str17 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator14, "\"\"", false);
        boolean boolean18 = python3Target0.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet19 = python3Target0.getBadWords();
        java.util.Set<java.lang.String> strSet20 = python3Target0.getBadWords();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str22 = python3Target0.getImplicitTokenLabel("\\\"#\\\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\"\"" + "'", str5, "\"\"");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "4.5.2.1" + "'", str6, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 64 + "'", int8 == 64);
        org.junit.Assert.assertNull(sTGroup9);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[]");
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertNotNull(strSet20);
    }

    @Test
    public void test06753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06753");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str2 = python3Target0.getTargetStringLiteralFromString("\"\"");
        int int3 = python3Target0.getInlineTestSetWordSize();
        boolean boolean4 = python3Target0.supportsOverloadedMethods();
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromString("\"i\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        java.lang.String str10 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator7, "\"\"\\\"\\\"4.5.2.1\\\"\\\"\"\"", true);
        org.antlr.v4.codegen.target.Python3Target python3Target11 = new org.antlr.v4.codegen.target.Python3Target();
        int int12 = python3Target11.getInlineTestSetWordSize();
        java.lang.String str13 = python3Target11.language;
        java.lang.String str14 = python3Target11.getVersion();
        int int15 = python3Target11.getInlineTestSetWordSize();
        java.lang.String str16 = python3Target11.getLanguage();
        java.lang.String str17 = python3Target11.getLanguage();
        java.lang.String[] strArray18 = python3Target11.targetCharValueEscape;
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray18;
        python3Target0.targetCharValueEscape = strArray18;
        java.util.Set<java.lang.String> strSet21 = python3Target0.getBadWords();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "\"\"\"\"" + "'", str2, "\"\"\"\"");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 64 + "'", int3 == 64);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"i\"\"" + "'", str6, "\"\"i\"\"");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"\\\"\\\"\\\"4.5.2.1\\\"\\\"\\\"\"" + "'", str10, "\"\\\"\\\"\\\"4.5.2.1\\\"\\\"\\\"\"");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 64 + "'", int12 == 64);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "4.5.2.1" + "'", str14, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 64 + "'", int15 == 64);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(strSet21);
    }

    @Test
    public void test06754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06754");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        java.lang.String str3 = python3Target0.getVersion();
        int int4 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str5 = python3Target0.getLanguage();
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromString("4.5.2.1", true);
        boolean boolean9 = python3Target0.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet10 = python3Target0.badWords;
        org.antlr.v4.codegen.target.Python3Target python3Target11 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str12 = python3Target11.language;
        java.lang.String[] strArray13 = python3Target11.targetCharValueEscape;
        python3Target0.targetCharValueEscape = strArray13;
        java.lang.String str16 = python3Target0.getTargetStringLiteralFromString("");
        org.antlr.v4.codegen.target.Python3Target python3Target17 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str19 = python3Target17.getTargetStringLiteralFromString("\"\"");
        int int20 = python3Target17.getInlineTestSetWordSize();
        boolean boolean21 = python3Target17.supportsOverloadedMethods();
        java.lang.String str23 = python3Target17.getTargetStringLiteralFromString("\"\"i\"\"");
        org.antlr.v4.codegen.target.Python3Target python3Target24 = new org.antlr.v4.codegen.target.Python3Target();
        int int25 = python3Target24.getInlineTestSetWordSize();
        boolean boolean26 = python3Target24.wantsBaseVisitor();
        java.lang.String str27 = python3Target24.getLanguage();
        int int28 = python3Target24.getInlineTestSetWordSize();
        python3Target24.addBadWords();
        org.antlr.v4.tool.Grammar grammar30 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target31 = new org.antlr.v4.codegen.target.Python3Target();
        int int32 = python3Target31.getInlineTestSetWordSize();
        java.lang.String str33 = python3Target31.language;
        java.lang.String str34 = python3Target31.getLanguage();
        java.lang.String str36 = python3Target31.getTargetStringLiteralFromString("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator37 = null;
        java.lang.String str40 = python3Target31.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator37, "hi!", true);
        int int41 = python3Target31.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar42 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target43 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str44 = python3Target43.language;
        org.antlr.v4.codegen.target.Python3Target python3Target45 = new org.antlr.v4.codegen.target.Python3Target();
        org.stringtemplate.v4.STGroup sTGroup46 = null;
        python3Target45.templates = sTGroup46;
        java.lang.String[] strArray51 = new java.lang.String[] { "", "\\0", "" };
        java.util.LinkedHashSet<java.lang.String> strSet52 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet52, strArray51);
        python3Target45.badWords = strSet52;
        python3Target43.badWords = strSet52;
        org.antlr.v4.tool.Grammar grammar56 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target57 = new org.antlr.v4.codegen.target.Python3Target();
        int int58 = python3Target57.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup59 = python3Target57.templates;
        org.antlr.v4.tool.Grammar grammar60 = null;
        int[] intArray61 = new int[] {};
        java.lang.String[] strArray62 = python3Target57.getTokenTypesAsTargetLabels(grammar60, intArray61);
        java.lang.String[] strArray63 = python3Target43.getTokenTypesAsTargetLabels(grammar56, intArray61);
        java.lang.String[] strArray64 = python3Target31.getTokenTypesAsTargetLabels(grammar42, intArray61);
        java.lang.String[] strArray65 = python3Target24.getTokenTypesAsTargetLabels(grammar30, intArray61);
        python3Target17.targetCharValueEscape = strArray65;
        python3Target0.targetCharValueEscape = strArray65;
        python3Target0.addBadWords();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "4.5.2.1" + "'", str3, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"4.5.2.1\"" + "'", str8, "\"4.5.2.1\"");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\"\"" + "'", str16, "\"\"");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "\"\"\"\"" + "'", str19, "\"\"\"\"");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 64 + "'", int20 == 64);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "\"\"\"i\"\"\"" + "'", str23, "\"\"\"i\"\"\"");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 64 + "'", int25 == 64);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 64 + "'", int28 == 64);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 64 + "'", int32 == 64);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "\"\"" + "'", str36, "\"\"");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "\"i\"" + "'", str40, "\"i\"");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 29 + "'", int41 == 29);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 64 + "'", int58 == 64);
        org.junit.Assert.assertNull(sTGroup59);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[]");
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertNotNull(strArray65);
    }

    @Test
    public void test06755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06755");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "", true);
        java.lang.String str8 = python3Target0.encodeIntAsCharEscape((int) (short) 100);
        org.stringtemplate.v4.STGroup sTGroup9 = python3Target0.templates;
        java.lang.String str11 = python3Target0.encodeIntAsCharEscape(29);
        java.lang.String str13 = python3Target0.getTargetStringLiteralFromString("");
        java.lang.String str14 = python3Target0.getLanguage();
        org.antlr.v4.codegen.model.RuleFunction ruleFunction15 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str16 = python3Target0.getRuleFunctionContextStructName(ruleFunction15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"" + "'", str6, "\"\"");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "d" + "'", str8, "d");
        org.junit.Assert.assertNull(sTGroup9);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\\35" + "'", str11, "\\35");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"\"" + "'", str13, "\"\"");
        org.junit.Assert.assertNull(str14);
    }

    @Test
    public void test06756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06756");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        java.lang.String str4 = python3Target0.encodeIntAsCharEscape((int) (byte) 1);
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = null;
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator5, "\"\"i\"\"", true);
        boolean boolean9 = python3Target0.wantsBaseVisitor();
        java.lang.String str10 = python3Target0.getVersion();
        org.antlr.v4.tool.ast.GrammarAST grammarAST11 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str12 = python3Target0.getLoopCounter(grammarAST11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\\1" + "'", str4, "\\1");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\\\"i\\\"\"" + "'", str8, "\"\\\"i\\\"\"");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "4.5.2.1" + "'", str10, "4.5.2.1");
    }

    @Test
    public void test06757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06757");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        java.lang.String str3 = python3Target0.getVersion();
        boolean boolean4 = python3Target0.wantsBaseListener();
        java.lang.String str5 = python3Target0.getVersion();
        org.antlr.v4.codegen.target.Python3Target python3Target6 = new org.antlr.v4.codegen.target.Python3Target();
        int int7 = python3Target6.getInlineTestSetWordSize();
        java.lang.String str8 = python3Target6.language;
        java.lang.String str9 = python3Target6.getLanguage();
        java.lang.String str11 = python3Target6.getTargetStringLiteralFromString("");
        java.lang.String str13 = python3Target6.getTargetStringLiteralFromString("\\1");
        boolean boolean14 = python3Target6.wantsBaseVisitor();
        boolean boolean15 = python3Target6.templatesExist();
        java.lang.String[] strArray16 = python3Target6.targetCharValueEscape;
        python3Target0.targetCharValueEscape = strArray16;
        org.antlr.v4.tool.ast.GrammarAST grammarAST18 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean19 = python3Target0.visibleGrammarSymbolCausesIssueInGeneratedCode(grammarAST18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "4.5.2.1" + "'", str3, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "4.5.2.1" + "'", str5, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 64 + "'", int7 == 64);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"\"" + "'", str11, "\"\"");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"\\1\"" + "'", str13, "\"\\1\"");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strArray16);
    }

    @Test
    public void test06758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06758");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        java.lang.String str3 = python3Target0.getVersion();
        int int4 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str5 = python3Target0.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = python3Target0.gen;
        org.antlr.v4.tool.Grammar grammar7 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target8 = new org.antlr.v4.codegen.target.Python3Target();
        int int9 = python3Target8.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup10 = python3Target8.templates;
        org.antlr.v4.tool.Grammar grammar11 = null;
        int[] intArray12 = new int[] {};
        java.lang.String[] strArray13 = python3Target8.getTokenTypesAsTargetLabels(grammar11, intArray12);
        java.lang.String[] strArray14 = python3Target0.getTokenTypesAsTargetLabels(grammar7, intArray12);
        java.lang.String str17 = python3Target0.getTargetStringLiteralFromString("", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator18 = null;
        java.lang.String str21 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator18, "\"i\"", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator22 = python3Target0.gen;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str24 = python3Target0.getListLabel("\"\\\"\\\"\\\"\\\"4.5.2.1\\\"\\\"\\\"\\\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "4.5.2.1" + "'", str3, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(codeGenerator6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 64 + "'", int9 == 64);
        org.junit.Assert.assertNull(sTGroup10);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[]");
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "\"i\"" + "'", str21, "\"i\"");
        org.junit.Assert.assertNull(codeGenerator22);
    }

    @Test
    public void test06759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06759");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "", true);
        org.antlr.v4.tool.Grammar grammar7 = null;
        org.stringtemplate.v4.ST sT8 = null;
        python3Target0.genRecognizerHeaderFile(grammar7, sT8, "");
        org.antlr.v4.tool.Grammar grammar11 = null;
        org.stringtemplate.v4.ST sT12 = null;
        python3Target0.genRecognizerHeaderFile(grammar11, sT12, "\"i\"");
        int int15 = python3Target0.getSerializedATNSegmentLimit();
        python3Target0.language = "";
        java.lang.String str18 = python3Target0.getLanguage();
        // The following exception was thrown during execution in test generation
        try {
            org.stringtemplate.v4.STGroup sTGroup19 = python3Target0.loadTemplates();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"" + "'", str6, "\"\"");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 29 + "'", int15 == 29);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
    }

    @Test
    public void test06760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06760");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str1 = python3Target0.language;
        org.antlr.v4.codegen.target.Python3Target python3Target2 = new org.antlr.v4.codegen.target.Python3Target();
        org.stringtemplate.v4.STGroup sTGroup3 = null;
        python3Target2.templates = sTGroup3;
        java.lang.String[] strArray8 = new java.lang.String[] { "", "\\0", "" };
        java.util.LinkedHashSet<java.lang.String> strSet9 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet9, strArray8);
        python3Target2.badWords = strSet9;
        python3Target0.badWords = strSet9;
        python3Target0.language = "\"\"i\"\"";
        java.lang.String str15 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator16 = null;
        java.lang.String str19 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator16, "\"i\"", false);
        java.lang.String str22 = python3Target0.getTargetStringLiteralFromString("\"\\12\"", false);
        java.lang.String str25 = python3Target0.getTargetStringLiteralFromString("\\\"\\\"\\\"\\\"0\\\"\\\"\\\"\\\"", true);
        python3Target0.addBadWords();
        int int27 = python3Target0.getSerializedATNSegmentLimit();
        org.antlr.v4.codegen.CodeGenerator codeGenerator28 = python3Target0.getCodeGenerator();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "4.5.2.1" + "'", str15, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "i" + "'", str19, "i");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "\"\\12\"" + "'", str22, "\"\\12\"");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "\"\\\"\\\"\\\"\\\"0\\\"\\\"\\\"\\\"\"" + "'", str25, "\"\\\"\\\"\\\"\\\"0\\\"\\\"\\\"\\\"\"");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 29 + "'", int27 == 29);
        org.junit.Assert.assertNull(codeGenerator28);
    }

    @Test
    public void test06761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06761");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        java.lang.String str3 = python3Target0.getVersion();
        int int4 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str5 = python3Target0.getLanguage();
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromString("4.5.2.1", true);
        java.util.Set<java.lang.String> strSet9 = python3Target0.badWords;
        java.lang.String str12 = python3Target0.getTargetStringLiteralFromString("\"\"\"\"", false);
        java.util.Set<java.lang.String> strSet13 = python3Target0.badWords;
        java.lang.String[] strArray14 = python3Target0.targetCharValueEscape;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "4.5.2.1" + "'", str3, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"4.5.2.1\"" + "'", str8, "\"4.5.2.1\"");
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"\"\"\"" + "'", str12, "\"\"\"\"");
        org.junit.Assert.assertNotNull(strSet13);
        org.junit.Assert.assertNotNull(strArray14);
    }

    @Test
    public void test06762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06762");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        java.lang.String str3 = python3Target0.getLanguage();
        java.lang.String str5 = python3Target0.getTargetStringLiteralFromString("");
        java.lang.String str7 = python3Target0.getTargetStringLiteralFromString("\\1");
        boolean boolean8 = python3Target0.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup9 = python3Target0.templates;
        boolean boolean10 = python3Target0.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup11 = null;
        python3Target0.templates = sTGroup11;
        org.stringtemplate.v4.STGroup sTGroup13 = python3Target0.templates;
        java.lang.String str14 = python3Target0.getVersion();
        org.antlr.v4.tool.Grammar grammar15 = null;
        org.stringtemplate.v4.ST sT16 = null;
        // The following exception was thrown during execution in test generation
        try {
            python3Target0.genFile(grammar15, sT16, "\\\"\\\"\\\" \\\"\\\"\\\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\"\"" + "'", str5, "\"\"");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"\\1\"" + "'", str7, "\"\\1\"");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(sTGroup9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(sTGroup13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "4.5.2.1" + "'", str14, "4.5.2.1");
    }

    @Test
    public void test06763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06763");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        java.lang.String str3 = python3Target0.getVersion();
        int int4 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str5 = python3Target0.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = python3Target0.gen;
        python3Target0.addBadWords();
        python3Target0.language = "\\0";
        boolean boolean10 = python3Target0.wantsBaseVisitor();
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = python3Target0.getCodeGenerator();
        int int12 = python3Target0.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar13 = null;
        org.stringtemplate.v4.ST sT14 = null;
        python3Target0.genRecognizerHeaderFile(grammar13, sT14, "\"\"\"4.5.2.1\"\"\"");
        org.antlr.v4.tool.ast.GrammarAST grammarAST17 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean18 = python3Target0.visibleGrammarSymbolCausesIssueInGeneratedCode(grammarAST17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "4.5.2.1" + "'", str3, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(codeGenerator6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(codeGenerator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 29 + "'", int12 == 29);
    }

    @Test
    public void test06764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06764");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        org.antlr.v4.codegen.CodeGenerator codeGenerator1 = null;
        python3Target0.gen = codeGenerator1;
        org.stringtemplate.v4.STGroup sTGroup3 = null;
        python3Target0.templates = sTGroup3;
        java.lang.String str5 = python3Target0.language;
        org.antlr.v4.tool.ast.GrammarAST grammarAST6 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str7 = python3Target0.getLoopCounter(grammarAST6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str5);
    }

    @Test
    public void test06765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06765");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        org.stringtemplate.v4.STGroup sTGroup1 = null;
        python3Target0.templates = sTGroup1;
        java.util.Set<java.lang.String> strSet3 = null;
        python3Target0.badWords = strSet3;
        boolean boolean5 = python3Target0.templatesExist();
        org.antlr.v4.tool.Grammar grammar6 = null;
        org.stringtemplate.v4.ST sT7 = null;
        python3Target0.genRecognizerHeaderFile(grammar6, sT7, "\"\"\"4.5.2.1\"\"\"");
        org.antlr.v4.codegen.target.Python3Target python3Target10 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean11 = python3Target10.wantsBaseVisitor();
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = null;
        python3Target10.gen = codeGenerator12;
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = python3Target10.gen;
        java.util.Set<java.lang.String> strSet15 = python3Target10.badWords;
        org.antlr.v4.codegen.target.Python3Target python3Target16 = new org.antlr.v4.codegen.target.Python3Target();
        int int17 = python3Target16.getInlineTestSetWordSize();
        java.lang.String str18 = python3Target16.language;
        java.lang.String str19 = python3Target16.getVersion();
        int int20 = python3Target16.getInlineTestSetWordSize();
        java.lang.String str21 = python3Target16.getLanguage();
        java.lang.String str24 = python3Target16.getTargetStringLiteralFromString("4.5.2.1", true);
        boolean boolean25 = python3Target16.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet26 = python3Target16.badWords;
        org.antlr.v4.tool.Grammar grammar27 = null;
        org.stringtemplate.v4.ST sT28 = null;
        python3Target16.genRecognizerHeaderFile(grammar27, sT28, "\"4.5.2.1\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator31 = null;
        java.lang.String str34 = python3Target16.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator31, "i", true);
        org.antlr.v4.codegen.target.Python3Target python3Target35 = new org.antlr.v4.codegen.target.Python3Target();
        org.stringtemplate.v4.STGroup sTGroup36 = null;
        python3Target35.templates = sTGroup36;
        java.lang.String[] strArray41 = new java.lang.String[] { "", "\\0", "" };
        java.util.LinkedHashSet<java.lang.String> strSet42 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet42, strArray41);
        python3Target35.badWords = strSet42;
        python3Target16.badWords = strSet42;
        python3Target10.badWords = strSet42;
        python3Target0.badWords = strSet42;
        boolean boolean48 = python3Target0.supportsOverloadedMethods();
        python3Target0.language = "\"\"\"\"\"4.5.2.1\"\"\"\"\"";
        // The following exception was thrown during execution in test generation
        try {
            org.stringtemplate.v4.STGroup sTGroup51 = python3Target0.getTemplates();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(codeGenerator14);
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 64 + "'", int17 == 64);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "4.5.2.1" + "'", str19, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 64 + "'", int20 == 64);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "\"4.5.2.1\"" + "'", str24, "\"4.5.2.1\"");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(strSet26);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "\"\"" + "'", str34, "\"\"");
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
    }

    @Test
    public void test06766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06766");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        java.lang.String str3 = python3Target0.getVersion();
        int int4 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str5 = python3Target0.getLanguage();
        boolean boolean6 = python3Target0.templatesExist();
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        python3Target0.gen = codeGenerator7;
        python3Target0.language = "\"\"\\\"hi!\\\"\"\"";
        boolean boolean11 = python3Target0.templatesExist();
        java.lang.String str12 = python3Target0.language;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str14 = python3Target0.getImplicitTokenLabel("\\\"12\\\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "4.5.2.1" + "'", str3, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"\"\\\"hi!\\\"\"\"" + "'", str12, "\"\"\\\"hi!\\\"\"\"");
    }

    @Test
    public void test06767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06767");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        java.lang.String str3 = python3Target0.getVersion();
        int int4 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str5 = python3Target0.getLanguage();
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromString("4.5.2.1", true);
        boolean boolean9 = python3Target0.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet10 = python3Target0.badWords;
        org.antlr.v4.tool.Grammar grammar11 = null;
        org.stringtemplate.v4.ST sT12 = null;
        python3Target0.genRecognizerHeaderFile(grammar11, sT12, "\"4.5.2.1\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator15 = null;
        java.lang.String str18 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator15, "i", true);
        org.antlr.v4.codegen.target.Python3Target python3Target19 = new org.antlr.v4.codegen.target.Python3Target();
        org.stringtemplate.v4.STGroup sTGroup20 = null;
        python3Target19.templates = sTGroup20;
        java.lang.String[] strArray25 = new java.lang.String[] { "", "\\0", "" };
        java.util.LinkedHashSet<java.lang.String> strSet26 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet26, strArray25);
        python3Target19.badWords = strSet26;
        python3Target0.badWords = strSet26;
        org.antlr.v4.tool.Grammar grammar30 = null;
        org.stringtemplate.v4.ST sT31 = null;
        python3Target0.genRecognizerHeaderFile(grammar30, sT31, "\"i\"");
        int int34 = python3Target0.getSerializedATNSegmentLimit();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "4.5.2.1" + "'", str3, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"4.5.2.1\"" + "'", str8, "\"4.5.2.1\"");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "\"\"" + "'", str18, "\"\"");
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 29 + "'", int34 == 29);
    }

    @Test
    public void test06768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06768");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        org.antlr.v4.codegen.CodeGenerator codeGenerator1 = null;
        python3Target0.gen = codeGenerator1;
        java.lang.String str3 = python3Target0.getVersion();
        java.util.Set<java.lang.String> strSet4 = python3Target0.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = python3Target0.getCodeGenerator();
        boolean boolean6 = python3Target0.wantsBaseListener();
        java.lang.String str7 = python3Target0.getLanguage();
        org.antlr.v4.tool.Grammar grammar8 = null;
        org.stringtemplate.v4.ST sT9 = null;
        python3Target0.genRecognizerHeaderFile(grammar8, sT9, ".5.2.");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "4.5.2.1" + "'", str3, "4.5.2.1");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNull(codeGenerator5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test06769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06769");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str2 = python3Target0.getTargetStringLiteralFromString("\"\"");
        int int3 = python3Target0.getInlineTestSetWordSize();
        boolean boolean4 = python3Target0.supportsOverloadedMethods();
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromString("\"i\"");
        python3Target0.addBadWords();
        java.util.Set<java.lang.String> strSet8 = python3Target0.badWords;
        java.lang.String str9 = python3Target0.language;
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        python3Target0.gen = codeGenerator10;
        boolean boolean12 = python3Target0.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar13 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str15 = python3Target0.getTokenTypeAsTargetLabel(grammar13, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "\"\"\"\"" + "'", str2, "\"\"\"\"");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 64 + "'", int3 == 64);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"i\"\"" + "'", str6, "\"\"i\"\"");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test06770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06770");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "", true);
        org.antlr.v4.tool.Grammar grammar7 = null;
        org.stringtemplate.v4.ST sT8 = null;
        python3Target0.genRecognizerHeaderFile(grammar7, sT8, "");
        org.antlr.v4.tool.Grammar grammar11 = null;
        org.stringtemplate.v4.ST sT12 = null;
        python3Target0.genRecognizerHeaderFile(grammar11, sT12, "\"i\"");
        boolean boolean15 = python3Target0.wantsBaseListener();
        org.antlr.v4.codegen.CodeGenerator codeGenerator16 = python3Target0.getCodeGenerator();
        int int17 = python3Target0.getSerializedATNSegmentLimit();
        python3Target0.addBadWords();
        java.lang.String[] strArray19 = python3Target0.targetCharValueEscape;
        java.util.Set<java.lang.String> strSet20 = python3Target0.getBadWords();
        org.stringtemplate.v4.STGroup sTGroup21 = python3Target0.templates;
        java.lang.String str24 = python3Target0.getTargetStringLiteralFromString("12", true);
        org.antlr.v4.tool.ast.GrammarAST grammarAST25 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str26 = python3Target0.getLoopLabel(grammarAST25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"" + "'", str6, "\"\"");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(codeGenerator16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 29 + "'", int17 == 29);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertNull(sTGroup21);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "\"12\"" + "'", str24, "\"12\"");
    }

    @Test
    public void test06771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06771");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "", true);
        org.antlr.v4.tool.Grammar grammar7 = null;
        org.stringtemplate.v4.ST sT8 = null;
        python3Target0.genRecognizerHeaderFile(grammar7, sT8, "");
        org.antlr.v4.tool.Grammar grammar11 = null;
        org.stringtemplate.v4.ST sT12 = null;
        python3Target0.genRecognizerHeaderFile(grammar11, sT12, "\"i\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator15 = python3Target0.gen;
        org.antlr.v4.codegen.CodeGenerator codeGenerator16 = python3Target0.getCodeGenerator();
        java.lang.String str18 = python3Target0.encodeIntAsCharEscape((int) '4');
        org.antlr.v4.codegen.model.RuleFunction ruleFunction19 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str20 = python3Target0.getRuleFunctionContextStructName(ruleFunction19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"" + "'", str6, "\"\"");
        org.junit.Assert.assertNull(codeGenerator15);
        org.junit.Assert.assertNull(codeGenerator16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "\\64" + "'", str18, "\\64");
    }

    @Test
    public void test06772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06772");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str2 = python3Target0.getTargetStringLiteralFromString("\"\"");
        int int3 = python3Target0.getInlineTestSetWordSize();
        boolean boolean4 = python3Target0.supportsOverloadedMethods();
        boolean boolean5 = python3Target0.wantsBaseVisitor();
        python3Target0.language = "\"\"\"\"\"\"\"4.5.2.1\"\"\"\"\"\"\"";
        boolean boolean8 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.tool.ast.GrammarAST grammarAST9 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean10 = python3Target0.visibleGrammarSymbolCausesIssueInGeneratedCode(grammarAST9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "\"\"\"\"" + "'", str2, "\"\"\"\"");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 64 + "'", int3 == 64);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test06773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06773");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        org.stringtemplate.v4.STGroup sTGroup3 = python3Target0.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = python3Target0.gen;
        java.util.Set<java.lang.String> strSet5 = python3Target0.badWords;
        java.util.Set<java.lang.String> strSet6 = python3Target0.badWords;
        org.antlr.v4.codegen.target.Python3Target python3Target7 = new org.antlr.v4.codegen.target.Python3Target();
        int int8 = python3Target7.getInlineTestSetWordSize();
        java.lang.String str9 = python3Target7.language;
        java.lang.String str10 = python3Target7.getVersion();
        org.stringtemplate.v4.STGroup sTGroup11 = null;
        python3Target7.templates = sTGroup11;
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = null;
        java.lang.String str16 = python3Target7.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator13, "d", false);
        java.lang.String str17 = python3Target7.getVersion();
        java.lang.String str18 = python3Target7.getLanguage();
        org.antlr.v4.tool.Grammar grammar19 = null;
        org.stringtemplate.v4.ST sT20 = null;
        python3Target7.genRecognizerHeaderFile(grammar19, sT20, "1");
        org.antlr.v4.codegen.CodeGenerator codeGenerator23 = null;
        python3Target7.gen = codeGenerator23;
        java.lang.String str25 = python3Target7.getVersion();
        org.antlr.v4.codegen.target.Python3Target python3Target26 = new org.antlr.v4.codegen.target.Python3Target();
        int int27 = python3Target26.getInlineTestSetWordSize();
        java.lang.String str28 = python3Target26.language;
        java.lang.String str29 = python3Target26.getVersion();
        int int30 = python3Target26.getInlineTestSetWordSize();
        java.lang.String str31 = python3Target26.getLanguage();
        java.lang.String str34 = python3Target26.getTargetStringLiteralFromString("4.5.2.1", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator35 = null;
        python3Target26.gen = codeGenerator35;
        python3Target26.language = "\"\\1\"";
        java.util.Set<java.lang.String> strSet39 = python3Target26.getBadWords();
        python3Target7.badWords = strSet39;
        python3Target0.badWords = strSet39;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str43 = python3Target0.getAltLabelContextStructName("\"\\\"4.5.2.1\\\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(sTGroup3);
        org.junit.Assert.assertNull(codeGenerator4);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 64 + "'", int8 == 64);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "4.5.2.1" + "'", str10, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "4.5.2.1" + "'", str17, "4.5.2.1");
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "4.5.2.1" + "'", str25, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 64 + "'", int27 == 64);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "4.5.2.1" + "'", str29, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 64 + "'", int30 == 64);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "\"4.5.2.1\"" + "'", str34, "\"4.5.2.1\"");
        org.junit.Assert.assertNotNull(strSet39);
    }

    @Test
    public void test06774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06774");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        org.stringtemplate.v4.STGroup sTGroup3 = python3Target0.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = python3Target0.gen;
        java.util.Set<java.lang.String> strSet5 = python3Target0.badWords;
        org.stringtemplate.v4.STGroup sTGroup6 = python3Target0.templates;
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromString("\"1\"");
        boolean boolean9 = python3Target0.wantsBaseVisitor();
        boolean boolean10 = python3Target0.wantsBaseListener();
        org.antlr.v4.tool.ast.GrammarAST grammarAST11 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean12 = python3Target0.visibleGrammarSymbolCausesIssueInGeneratedCode(grammarAST11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(sTGroup3);
        org.junit.Assert.assertNull(codeGenerator4);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNull(sTGroup6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\"1\"\"" + "'", str8, "\"\"1\"\"");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test06775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06775");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        java.lang.String str3 = python3Target0.getVersion();
        int int4 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str5 = python3Target0.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = python3Target0.gen;
        org.antlr.v4.tool.Grammar grammar7 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target8 = new org.antlr.v4.codegen.target.Python3Target();
        int int9 = python3Target8.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup10 = python3Target8.templates;
        org.antlr.v4.tool.Grammar grammar11 = null;
        int[] intArray12 = new int[] {};
        java.lang.String[] strArray13 = python3Target8.getTokenTypesAsTargetLabels(grammar11, intArray12);
        java.lang.String[] strArray14 = python3Target0.getTokenTypesAsTargetLabels(grammar7, intArray12);
        java.lang.String str16 = python3Target0.encodeIntAsCharEscape((int) (byte) 100);
        java.util.Set<java.lang.String> strSet17 = python3Target0.badWords;
        java.util.Set<java.lang.String> strSet18 = python3Target0.badWords;
        java.util.Set<java.lang.String> strSet19 = python3Target0.badWords;
        int int20 = python3Target0.getInlineTestSetWordSize();
        org.antlr.v4.tool.Grammar grammar21 = null;
        org.stringtemplate.v4.ST sT22 = null;
        python3Target0.genRecognizerHeaderFile(grammar21, sT22, "\"\"_\\\"1\\\"\"\"");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "4.5.2.1" + "'", str3, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(codeGenerator6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 64 + "'", int9 == 64);
        org.junit.Assert.assertNull(sTGroup10);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[]");
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "d" + "'", str16, "d");
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertNotNull(strSet18);
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 64 + "'", int20 == 64);
    }

    @Test
    public void test06776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06776");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str2 = python3Target0.encodeIntAsCharEscape(100);
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target4 = new org.antlr.v4.codegen.target.Python3Target();
        int int5 = python3Target4.getInlineTestSetWordSize();
        java.lang.String str6 = python3Target4.language;
        java.lang.String str7 = python3Target4.getVersion();
        int int8 = python3Target4.getInlineTestSetWordSize();
        java.lang.String str9 = python3Target4.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = python3Target4.gen;
        org.antlr.v4.tool.Grammar grammar11 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target12 = new org.antlr.v4.codegen.target.Python3Target();
        int int13 = python3Target12.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup14 = python3Target12.templates;
        org.antlr.v4.tool.Grammar grammar15 = null;
        int[] intArray16 = new int[] {};
        java.lang.String[] strArray17 = python3Target12.getTokenTypesAsTargetLabels(grammar15, intArray16);
        java.lang.String[] strArray18 = python3Target4.getTokenTypesAsTargetLabels(grammar11, intArray16);
        java.lang.String[] strArray19 = python3Target0.getTokenTypesAsTargetLabels(grammar3, intArray16);
        int int20 = python3Target0.getSerializedATNSegmentLimit();
        org.antlr.v4.codegen.CodeGenerator codeGenerator21 = python3Target0.getCodeGenerator();
        int int22 = python3Target0.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator23 = null;
        java.lang.String str26 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator23, "\"\"4.5.2.1\"\"", false);
        int int27 = python3Target0.getSerializedATNSegmentLimit();
        java.lang.String str29 = python3Target0.encodeIntAsCharEscape((int) 'a');
        boolean boolean30 = python3Target0.supportsOverloadedMethods();
        boolean boolean31 = python3Target0.templatesExist();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str33 = python3Target0.getElementListName("\\\"\\\"\\\".5.2.\\\"\\\"\\\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "d" + "'", str2, "d");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 64 + "'", int5 == 64);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4.5.2.1" + "'", str7, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 64 + "'", int8 == 64);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(codeGenerator10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 64 + "'", int13 == 64);
        org.junit.Assert.assertNull(sTGroup14);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]");
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 29 + "'", int20 == 29);
        org.junit.Assert.assertNull(codeGenerator21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 64 + "'", int22 == 64);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\\\"4.5.2.1\\\"" + "'", str26, "\\\"4.5.2.1\\\"");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 29 + "'", int27 == 29);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "a" + "'", str29, "a");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test06777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06777");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        boolean boolean2 = python3Target0.supportsOverloadedMethods();
        java.lang.String str3 = python3Target0.getLanguage();
        java.lang.String str4 = python3Target0.getLanguage();
        org.antlr.v4.tool.Grammar grammar5 = null;
        org.stringtemplate.v4.ST sT6 = null;
        python3Target0.genRecognizerHeaderFile(grammar5, sT6, "\"\"\"\\\" \\\"\"\"\"");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
    }

    @Test
    public void test06778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06778");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = python3Target0.gen;
        java.lang.String str8 = python3Target0.getLanguage();
        boolean boolean9 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.tool.Grammar grammar10 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target11 = new org.antlr.v4.codegen.target.Python3Target();
        int int12 = python3Target11.getInlineTestSetWordSize();
        java.lang.String str13 = python3Target11.language;
        java.lang.String str14 = python3Target11.getVersion();
        int int15 = python3Target11.getInlineTestSetWordSize();
        java.lang.String str16 = python3Target11.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = python3Target11.gen;
        python3Target11.addBadWords();
        python3Target11.language = "\\0";
        boolean boolean21 = python3Target11.wantsBaseVisitor();
        org.antlr.v4.codegen.CodeGenerator codeGenerator22 = python3Target11.getCodeGenerator();
        int int23 = python3Target11.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar24 = null;
        org.stringtemplate.v4.ST sT25 = null;
        python3Target11.genRecognizerHeaderFile(grammar24, sT25, "\"\"\"4.5.2.1\"\"\"");
        java.util.Set<java.lang.String> strSet28 = python3Target11.badWords;
        org.antlr.v4.tool.Grammar grammar29 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target30 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str32 = python3Target30.encodeIntAsCharEscape(100);
        org.antlr.v4.tool.Grammar grammar33 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target34 = new org.antlr.v4.codegen.target.Python3Target();
        int int35 = python3Target34.getInlineTestSetWordSize();
        java.lang.String str36 = python3Target34.language;
        java.lang.String str37 = python3Target34.getVersion();
        int int38 = python3Target34.getInlineTestSetWordSize();
        java.lang.String str39 = python3Target34.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator40 = python3Target34.gen;
        org.antlr.v4.tool.Grammar grammar41 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target42 = new org.antlr.v4.codegen.target.Python3Target();
        int int43 = python3Target42.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup44 = python3Target42.templates;
        org.antlr.v4.tool.Grammar grammar45 = null;
        int[] intArray46 = new int[] {};
        java.lang.String[] strArray47 = python3Target42.getTokenTypesAsTargetLabels(grammar45, intArray46);
        java.lang.String[] strArray48 = python3Target34.getTokenTypesAsTargetLabels(grammar41, intArray46);
        java.lang.String[] strArray49 = python3Target30.getTokenTypesAsTargetLabels(grammar33, intArray46);
        java.lang.String[] strArray50 = python3Target11.getTokenTypesAsTargetLabels(grammar29, intArray46);
        java.lang.String[] strArray51 = python3Target0.getTokenTypesAsTargetLabels(grammar10, intArray46);
        java.lang.String str53 = python3Target0.getTargetStringLiteralFromString(".5.2.");
        python3Target0.language = "\\\"\\\"\\\"\\\"\\\"\\\"4.5.2.1\\\"\\\"\\\"\\\"\\\"\\\"";
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"" + "'", str6, "\"\"");
        org.junit.Assert.assertNull(codeGenerator7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 64 + "'", int12 == 64);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "4.5.2.1" + "'", str14, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 64 + "'", int15 == 64);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(codeGenerator17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(codeGenerator22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 29 + "'", int23 == 29);
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "d" + "'", str32, "d");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 64 + "'", int35 == 64);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "4.5.2.1" + "'", str37, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 64 + "'", int38 == 64);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(codeGenerator40);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 64 + "'", int43 == 64);
        org.junit.Assert.assertNull(sTGroup44);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[]");
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "\".5.2.\"" + "'", str53, "\".5.2.\"");
    }

    @Test
    public void test06779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06779");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "", true);
        org.antlr.v4.tool.Grammar grammar7 = null;
        org.stringtemplate.v4.ST sT8 = null;
        python3Target0.genRecognizerHeaderFile(grammar7, sT8, "\"\"\"\"");
        python3Target0.language = "\"\"\"4.5.2.1\"\"\"";
        org.antlr.v4.tool.Grammar grammar13 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target14 = new org.antlr.v4.codegen.target.Python3Target();
        int int15 = python3Target14.getInlineTestSetWordSize();
        java.lang.String str16 = python3Target14.language;
        java.lang.String str17 = python3Target14.getVersion();
        python3Target14.language = "@";
        org.antlr.v4.tool.Grammar grammar20 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target21 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str23 = python3Target21.encodeIntAsCharEscape(100);
        org.antlr.v4.tool.Grammar grammar24 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target25 = new org.antlr.v4.codegen.target.Python3Target();
        int int26 = python3Target25.getInlineTestSetWordSize();
        java.lang.String str27 = python3Target25.language;
        java.lang.String str28 = python3Target25.getVersion();
        int int29 = python3Target25.getInlineTestSetWordSize();
        java.lang.String str30 = python3Target25.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator31 = python3Target25.gen;
        org.antlr.v4.tool.Grammar grammar32 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target33 = new org.antlr.v4.codegen.target.Python3Target();
        int int34 = python3Target33.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup35 = python3Target33.templates;
        org.antlr.v4.tool.Grammar grammar36 = null;
        int[] intArray37 = new int[] {};
        java.lang.String[] strArray38 = python3Target33.getTokenTypesAsTargetLabels(grammar36, intArray37);
        java.lang.String[] strArray39 = python3Target25.getTokenTypesAsTargetLabels(grammar32, intArray37);
        java.lang.String[] strArray40 = python3Target21.getTokenTypesAsTargetLabels(grammar24, intArray37);
        java.lang.String[] strArray41 = python3Target14.getTokenTypesAsTargetLabels(grammar20, intArray37);
        java.lang.String[] strArray42 = python3Target0.getTokenTypesAsTargetLabels(grammar13, intArray37);
        python3Target0.addBadWords();
        org.antlr.v4.codegen.target.Python3Target python3Target44 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str46 = python3Target44.getTargetStringLiteralFromString("\"\"");
        int int47 = python3Target44.getInlineTestSetWordSize();
        boolean boolean48 = python3Target44.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup49 = python3Target44.templates;
        java.lang.String str52 = python3Target44.getTargetStringLiteralFromString("i", true);
        java.lang.String str54 = python3Target44.encodeIntAsCharEscape(10);
        boolean boolean55 = python3Target44.supportsOverloadedMethods();
        org.antlr.v4.tool.Grammar grammar56 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target57 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str59 = python3Target57.getTargetStringLiteralFromString("\"\"");
        int int60 = python3Target57.getInlineTestSetWordSize();
        java.lang.String str62 = python3Target57.encodeIntAsCharEscape(0);
        java.util.Set<java.lang.String> strSet63 = python3Target57.badWords;
        java.lang.String str65 = python3Target57.getTargetStringLiteralFromString("\"\"\"\\0\"\"\"");
        org.antlr.v4.tool.Grammar grammar66 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target67 = new org.antlr.v4.codegen.target.Python3Target();
        org.stringtemplate.v4.STGroup sTGroup68 = null;
        python3Target67.templates = sTGroup68;
        java.lang.String[] strArray73 = new java.lang.String[] { "", "\\0", "" };
        java.util.LinkedHashSet<java.lang.String> strSet74 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet74, strArray73);
        python3Target67.badWords = strSet74;
        python3Target67.language = "\\0";
        python3Target67.addBadWords();
        python3Target67.addBadWords();
        java.lang.String[] strArray81 = python3Target67.targetCharValueEscape;
        org.antlr.v4.tool.Grammar grammar82 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target83 = new org.antlr.v4.codegen.target.Python3Target();
        int int84 = python3Target83.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup85 = python3Target83.templates;
        org.antlr.v4.tool.Grammar grammar86 = null;
        int[] intArray87 = new int[] {};
        java.lang.String[] strArray88 = python3Target83.getTokenTypesAsTargetLabels(grammar86, intArray87);
        java.lang.String[] strArray89 = python3Target67.getTokenTypesAsTargetLabels(grammar82, intArray87);
        java.lang.String[] strArray90 = python3Target57.getTokenTypesAsTargetLabels(grammar66, intArray87);
        java.lang.String[] strArray91 = python3Target44.getTokenTypesAsTargetLabels(grammar56, intArray87);
        java.util.Set<java.lang.String> strSet92 = python3Target44.badWords;
        python3Target0.badWords = strSet92;
        boolean boolean94 = python3Target0.wantsBaseListener();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str96 = python3Target0.getListLabel("\\\"4.5.2.1\\\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"" + "'", str6, "\"\"");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 64 + "'", int15 == 64);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "4.5.2.1" + "'", str17, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "d" + "'", str23, "d");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 64 + "'", int26 == 64);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "4.5.2.1" + "'", str28, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 64 + "'", int29 == 64);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(codeGenerator31);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 64 + "'", int34 == 64);
        org.junit.Assert.assertNull(sTGroup35);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[]");
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "\"\"\"\"" + "'", str46, "\"\"\"\"");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 64 + "'", int47 == 64);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(sTGroup49);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "\"i\"" + "'", str52, "\"i\"");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "\\12" + "'", str54, "\\12");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "\"\"\"\"" + "'", str59, "\"\"\"\"");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 64 + "'", int60 == 64);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "\\0" + "'", str62, "\\0");
        org.junit.Assert.assertNotNull(strSet63);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "\"\"\"\"\\0\"\"\"\"" + "'", str65, "\"\"\"\"\\0\"\"\"\"");
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 64 + "'", int84 == 64);
        org.junit.Assert.assertNull(sTGroup85);
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[]");
        org.junit.Assert.assertNotNull(strArray88);
        org.junit.Assert.assertNotNull(strArray89);
        org.junit.Assert.assertNotNull(strArray90);
        org.junit.Assert.assertNotNull(strArray91);
        org.junit.Assert.assertNotNull(strSet92);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
    }

    @Test
    public void test06780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06780");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "", true);
        java.lang.String str8 = python3Target0.encodeIntAsCharEscape((int) (short) 100);
        org.stringtemplate.v4.STGroup sTGroup9 = python3Target0.templates;
        java.lang.String str11 = python3Target0.encodeIntAsCharEscape(29);
        boolean boolean12 = python3Target0.wantsBaseVisitor();
        boolean boolean13 = python3Target0.wantsBaseListener();
        org.stringtemplate.v4.STGroup sTGroup14 = python3Target0.templates;
        boolean boolean15 = python3Target0.supportsOverloadedMethods();
        python3Target0.addBadWords();
        org.antlr.v4.tool.Grammar grammar17 = null;
        org.stringtemplate.v4.ST sT18 = null;
        python3Target0.genRecognizerHeaderFile(grammar17, sT18, "\\1");
        org.antlr.v4.tool.Grammar grammar21 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target22 = new org.antlr.v4.codegen.target.Python3Target();
        int int23 = python3Target22.getInlineTestSetWordSize();
        java.lang.String str24 = python3Target22.language;
        org.antlr.v4.codegen.CodeGenerator codeGenerator25 = null;
        java.lang.String str28 = python3Target22.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator25, "", true);
        org.antlr.v4.tool.Grammar grammar29 = null;
        org.stringtemplate.v4.ST sT30 = null;
        python3Target22.genRecognizerHeaderFile(grammar29, sT30, "");
        org.antlr.v4.tool.Grammar grammar33 = null;
        org.stringtemplate.v4.ST sT34 = null;
        python3Target22.genRecognizerHeaderFile(grammar33, sT34, "\"i\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator37 = python3Target22.gen;
        org.antlr.v4.codegen.CodeGenerator codeGenerator38 = null;
        python3Target22.gen = codeGenerator38;
        java.lang.String str41 = python3Target22.encodeIntAsCharEscape(1);
        org.antlr.v4.tool.Grammar grammar42 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target43 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str45 = python3Target43.encodeIntAsCharEscape(100);
        org.antlr.v4.tool.Grammar grammar46 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target47 = new org.antlr.v4.codegen.target.Python3Target();
        int int48 = python3Target47.getInlineTestSetWordSize();
        java.lang.String str49 = python3Target47.language;
        java.lang.String str50 = python3Target47.getVersion();
        int int51 = python3Target47.getInlineTestSetWordSize();
        java.lang.String str52 = python3Target47.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator53 = python3Target47.gen;
        org.antlr.v4.tool.Grammar grammar54 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target55 = new org.antlr.v4.codegen.target.Python3Target();
        int int56 = python3Target55.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup57 = python3Target55.templates;
        org.antlr.v4.tool.Grammar grammar58 = null;
        int[] intArray59 = new int[] {};
        java.lang.String[] strArray60 = python3Target55.getTokenTypesAsTargetLabels(grammar58, intArray59);
        java.lang.String[] strArray61 = python3Target47.getTokenTypesAsTargetLabels(grammar54, intArray59);
        java.lang.String[] strArray62 = python3Target43.getTokenTypesAsTargetLabels(grammar46, intArray59);
        java.lang.String[] strArray63 = python3Target22.getTokenTypesAsTargetLabels(grammar42, intArray59);
        java.lang.String[] strArray64 = python3Target0.getTokenTypesAsTargetLabels(grammar21, intArray59);
        // The following exception was thrown during execution in test generation
        try {
            org.stringtemplate.v4.STGroup sTGroup65 = python3Target0.getTemplates();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"" + "'", str6, "\"\"");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "d" + "'", str8, "d");
        org.junit.Assert.assertNull(sTGroup9);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\\35" + "'", str11, "\\35");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(sTGroup14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 64 + "'", int23 == 64);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "\"\"" + "'", str28, "\"\"");
        org.junit.Assert.assertNull(codeGenerator37);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "\\1" + "'", str41, "\\1");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "d" + "'", str45, "d");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 64 + "'", int48 == 64);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "4.5.2.1" + "'", str50, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 64 + "'", int51 == 64);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNull(codeGenerator53);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 64 + "'", int56 == 64);
        org.junit.Assert.assertNull(sTGroup57);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[]");
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertNotNull(strArray64);
    }

    @Test
    public void test06781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06781");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        java.lang.String str3 = python3Target0.getVersion();
        int int4 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str5 = python3Target0.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = python3Target0.gen;
        org.antlr.v4.tool.Grammar grammar7 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target8 = new org.antlr.v4.codegen.target.Python3Target();
        int int9 = python3Target8.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup10 = python3Target8.templates;
        org.antlr.v4.tool.Grammar grammar11 = null;
        int[] intArray12 = new int[] {};
        java.lang.String[] strArray13 = python3Target8.getTokenTypesAsTargetLabels(grammar11, intArray12);
        java.lang.String[] strArray14 = python3Target0.getTokenTypesAsTargetLabels(grammar7, intArray12);
        java.lang.String str15 = python3Target0.getLanguage();
        java.lang.String str16 = python3Target0.getLanguage();
        java.lang.String str18 = python3Target0.getTargetStringLiteralFromString("\"i\"");
        java.lang.String str20 = python3Target0.getTargetStringLiteralFromString("\"4.5.2.1\"");
        int int21 = python3Target0.getSerializedATNSegmentLimit();
        org.antlr.v4.codegen.target.Python3Target python3Target22 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str24 = python3Target22.getTargetStringLiteralFromString("\"\"");
        int int25 = python3Target22.getInlineTestSetWordSize();
        boolean boolean26 = python3Target22.supportsOverloadedMethods();
        java.lang.String str28 = python3Target22.getTargetStringLiteralFromString("\"i\"");
        python3Target22.addBadWords();
        org.antlr.v4.codegen.target.Python3Target python3Target30 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str31 = python3Target30.language;
        java.lang.String[] strArray32 = python3Target30.targetCharValueEscape;
        python3Target22.targetCharValueEscape = strArray32;
        org.stringtemplate.v4.STGroup sTGroup34 = null;
        python3Target22.templates = sTGroup34;
        org.antlr.v4.codegen.target.Python3Target python3Target36 = new org.antlr.v4.codegen.target.Python3Target();
        int int37 = python3Target36.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup38 = python3Target36.templates;
        org.antlr.v4.codegen.target.Python3Target python3Target39 = new org.antlr.v4.codegen.target.Python3Target();
        int int40 = python3Target39.getInlineTestSetWordSize();
        java.lang.String[] strArray43 = new java.lang.String[] { "hi!", "" };
        python3Target39.targetCharValueEscape = strArray43;
        python3Target36.targetCharValueEscape = strArray43;
        python3Target22.targetCharValueEscape = strArray43;
        python3Target0.targetCharValueEscape = strArray43;
        python3Target0.language = "3";
        python3Target0.language = "\\1";
        org.stringtemplate.v4.STGroup sTGroup52 = python3Target0.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator53 = python3Target0.gen;
        java.lang.String str54 = python3Target0.getLanguage();
        org.antlr.v4.tool.Grammar grammar55 = null;
        org.stringtemplate.v4.ST sT56 = null;
        // The following exception was thrown during execution in test generation
        try {
            python3Target0.genListenerFile(grammar55, sT56);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "4.5.2.1" + "'", str3, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(codeGenerator6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 64 + "'", int9 == 64);
        org.junit.Assert.assertNull(sTGroup10);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[]");
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "\"\"i\"\"" + "'", str18, "\"\"i\"\"");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "\"\"4.5.2.1\"\"" + "'", str20, "\"\"4.5.2.1\"\"");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 29 + "'", int21 == 29);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "\"\"\"\"" + "'", str24, "\"\"\"\"");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 64 + "'", int25 == 64);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "\"\"i\"\"" + "'", str28, "\"\"i\"\"");
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 64 + "'", int37 == 64);
        org.junit.Assert.assertNull(sTGroup38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 64 + "'", int40 == 64);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNull(sTGroup52);
        org.junit.Assert.assertNull(codeGenerator53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "\\1" + "'", str54, "\\1");
    }

    @Test
    public void test06782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06782");
        org.antlr.v4.codegen.target.Python3Target.PythonStringRenderer pythonStringRenderer0 = new org.antlr.v4.codegen.target.Python3Target.PythonStringRenderer();
        java.lang.Object obj1 = null;
        java.util.Locale locale3 = null;
        java.lang.String str4 = pythonStringRenderer0.toString(obj1, "d", locale3);
        java.util.Locale locale7 = null;
        java.lang.String str8 = pythonStringRenderer0.toString((java.lang.Object) "\"\"\"i\"\"\"", "4.5.2.1", locale7);
        java.lang.Object obj9 = null;
        java.util.Locale locale11 = null;
        java.lang.String str12 = pythonStringRenderer0.toString(obj9, "\"\"\"4.5.2.1\"\"\"", locale11);
        org.antlr.v4.codegen.target.Python3Target python3Target13 = new org.antlr.v4.codegen.target.Python3Target();
        int int14 = python3Target13.getInlineTestSetWordSize();
        java.lang.String str15 = python3Target13.language;
        org.antlr.v4.codegen.CodeGenerator codeGenerator16 = null;
        java.lang.String str19 = python3Target13.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator16, "", true);
        java.util.Set<java.lang.String> strSet20 = python3Target13.badWords;
        org.antlr.v4.codegen.CodeGenerator codeGenerator21 = null;
        python3Target13.gen = codeGenerator21;
        java.lang.String str23 = python3Target13.getLanguage();
        python3Target13.addBadWords();
        java.util.Locale locale26 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str27 = pythonStringRenderer0.toString((java.lang.Object) python3Target13, "\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"", locale26);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: org.antlr.v4.codegen.target.Python3Target cannot be cast to java.lang.String");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "d" + "'", str4, "d");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "4.5.2.1" + "'", str8, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"\"\"4.5.2.1\"\"\"" + "'", str12, "\"\"\"4.5.2.1\"\"\"");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 64 + "'", int14 == 64);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "\"\"" + "'", str19, "\"\"");
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertNull(str23);
    }

    @Test
    public void test06783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06783");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        java.lang.String str3 = python3Target0.getVersion();
        int int4 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str5 = python3Target0.getLanguage();
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromString("hi!", false);
        org.antlr.v4.tool.Grammar grammar9 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target10 = new org.antlr.v4.codegen.target.Python3Target();
        int int11 = python3Target10.getInlineTestSetWordSize();
        java.lang.String str12 = python3Target10.language;
        java.lang.String str13 = python3Target10.getVersion();
        int int14 = python3Target10.getInlineTestSetWordSize();
        java.lang.String str15 = python3Target10.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator16 = python3Target10.gen;
        org.antlr.v4.tool.Grammar grammar17 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target18 = new org.antlr.v4.codegen.target.Python3Target();
        int int19 = python3Target18.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup20 = python3Target18.templates;
        org.antlr.v4.tool.Grammar grammar21 = null;
        int[] intArray22 = new int[] {};
        java.lang.String[] strArray23 = python3Target18.getTokenTypesAsTargetLabels(grammar21, intArray22);
        java.lang.String[] strArray24 = python3Target10.getTokenTypesAsTargetLabels(grammar17, intArray22);
        java.lang.String str25 = python3Target10.getLanguage();
        java.lang.String str26 = python3Target10.getLanguage();
        java.lang.String str28 = python3Target10.getTargetStringLiteralFromString("\"i\"");
        org.antlr.v4.tool.Grammar grammar29 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target30 = new org.antlr.v4.codegen.target.Python3Target();
        int int31 = python3Target30.getInlineTestSetWordSize();
        java.lang.String[] strArray34 = new java.lang.String[] { "hi!", "" };
        python3Target30.targetCharValueEscape = strArray34;
        java.util.Set<java.lang.String> strSet36 = python3Target30.badWords;
        org.stringtemplate.v4.STGroup sTGroup37 = python3Target30.templates;
        org.antlr.v4.tool.Grammar grammar38 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target39 = new org.antlr.v4.codegen.target.Python3Target();
        int int40 = python3Target39.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup41 = python3Target39.templates;
        org.antlr.v4.tool.Grammar grammar42 = null;
        int[] intArray43 = new int[] {};
        java.lang.String[] strArray44 = python3Target39.getTokenTypesAsTargetLabels(grammar42, intArray43);
        java.lang.String[] strArray45 = python3Target30.getTokenTypesAsTargetLabels(grammar38, intArray43);
        java.lang.String[] strArray46 = python3Target10.getTokenTypesAsTargetLabels(grammar29, intArray43);
        java.lang.String[] strArray47 = python3Target0.getTokenTypesAsTargetLabels(grammar9, intArray43);
        org.stringtemplate.v4.STGroup sTGroup48 = python3Target0.templates;
        java.lang.String str49 = python3Target0.language;
        org.antlr.v4.codegen.CodeGenerator codeGenerator50 = null;
        java.lang.String str53 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator50, "\"\"\\\"\\\"\"\"", false);
        java.lang.String str55 = python3Target0.getTargetStringLiteralFromString("i");
        java.lang.String str57 = python3Target0.encodeIntAsCharEscape((int) (short) 0);
        int int58 = python3Target0.getSerializedATNSegmentLimit();
        java.util.Set<java.lang.String> strSet59 = python3Target0.getBadWords();
        org.antlr.v4.tool.ast.GrammarAST grammarAST60 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str61 = python3Target0.getLoopCounter(grammarAST60);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "4.5.2.1" + "'", str3, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 64 + "'", int11 == 64);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "4.5.2.1" + "'", str13, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 64 + "'", int14 == 64);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(codeGenerator16);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 64 + "'", int19 == 64);
        org.junit.Assert.assertNull(sTGroup20);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[]");
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "\"\"i\"\"" + "'", str28, "\"\"i\"\"");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 64 + "'", int31 == 64);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(strSet36);
        org.junit.Assert.assertNull(sTGroup37);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 64 + "'", int40 == 64);
        org.junit.Assert.assertNull(sTGroup41);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[]");
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNull(sTGroup48);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "\\\"\\\"\\\"\\\"" + "'", str53, "\\\"\\\"\\\"\\\"");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "\"i\"" + "'", str55, "\"i\"");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "\\0" + "'", str57, "\\0");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 29 + "'", int58 == 29);
        org.junit.Assert.assertNotNull(strSet59);
    }

    @Test
    public void test06784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06784");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        boolean boolean3 = python3Target0.templatesExist();
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = null;
        python3Target0.gen = codeGenerator4;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str7 = python3Target0.getImplicitRuleLabel("\"\\\"\\\"12\\\"\\\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test06785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06785");
        org.antlr.v4.codegen.target.Python3Target.PythonStringRenderer pythonStringRenderer0 = new org.antlr.v4.codegen.target.Python3Target.PythonStringRenderer();
        java.lang.Object obj1 = null;
        java.util.Locale locale3 = null;
        java.lang.String str4 = pythonStringRenderer0.toString(obj1, "d", locale3);
        java.util.Locale locale7 = null;
        java.lang.String str8 = pythonStringRenderer0.toString((java.lang.Object) "\".5.2.\"", "@", locale7);
        org.antlr.v4.codegen.target.Python3Target python3Target9 = new org.antlr.v4.codegen.target.Python3Target();
        int int10 = python3Target9.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup11 = python3Target9.templates;
        java.util.Locale locale13 = null;
        java.lang.String str14 = pythonStringRenderer0.toString((java.lang.Object) sTGroup11, "\"\"\"hi!\"\"\"", locale13);
        org.antlr.v4.codegen.target.Python3Target python3Target15 = new org.antlr.v4.codegen.target.Python3Target();
        int int16 = python3Target15.getInlineTestSetWordSize();
        java.lang.String str17 = python3Target15.language;
        java.lang.String str18 = python3Target15.getVersion();
        int int19 = python3Target15.getInlineTestSetWordSize();
        java.lang.String str20 = python3Target15.getLanguage();
        java.lang.String str23 = python3Target15.getTargetStringLiteralFromString("hi!", false);
        python3Target15.language = "\"\"i\"\"";
        java.lang.String str27 = python3Target15.getTargetStringLiteralFromString("\"4.5.2.1\"");
        java.lang.String str30 = python3Target15.getTargetStringLiteralFromString("\"\".5.2.\"\"", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator31 = python3Target15.getCodeGenerator();
        java.util.Locale locale33 = null;
        java.lang.String str34 = pythonStringRenderer0.toString((java.lang.Object) codeGenerator31, "\"\"\\\"\\\"\\\".5.2.\\\"\\\"\\\"\"\"", locale33);
        org.antlr.v4.codegen.target.Python3Target python3Target35 = new org.antlr.v4.codegen.target.Python3Target();
        int int36 = python3Target35.getInlineTestSetWordSize();
        java.lang.String str37 = python3Target35.language;
        org.stringtemplate.v4.STGroup sTGroup38 = python3Target35.templates;
        boolean boolean39 = python3Target35.templatesExist();
        java.lang.String[] strArray40 = python3Target35.targetCharValueEscape;
        java.lang.String str41 = python3Target35.language;
        java.lang.String str42 = python3Target35.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator43 = null;
        python3Target35.gen = codeGenerator43;
        org.antlr.v4.tool.Grammar grammar45 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target46 = new org.antlr.v4.codegen.target.Python3Target();
        int int47 = python3Target46.getInlineTestSetWordSize();
        java.lang.String str48 = python3Target46.language;
        org.stringtemplate.v4.STGroup sTGroup49 = python3Target46.templates;
        java.lang.String str51 = python3Target46.getTargetStringLiteralFromString("\"hi!\"");
        java.lang.String str53 = python3Target46.getTargetStringLiteralFromString("");
        org.antlr.v4.tool.Grammar grammar54 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target55 = new org.antlr.v4.codegen.target.Python3Target();
        int int56 = python3Target55.getInlineTestSetWordSize();
        boolean boolean57 = python3Target55.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator58 = python3Target55.gen;
        boolean boolean59 = python3Target55.wantsBaseVisitor();
        boolean boolean60 = python3Target55.supportsOverloadedMethods();
        java.lang.String str63 = python3Target55.getTargetStringLiteralFromString("\\0", false);
        boolean boolean64 = python3Target55.templatesExist();
        python3Target55.addBadWords();
        org.antlr.v4.tool.Grammar grammar66 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target67 = new org.antlr.v4.codegen.target.Python3Target();
        int int68 = python3Target67.getInlineTestSetWordSize();
        java.lang.String str69 = python3Target67.language;
        java.lang.String str70 = python3Target67.getVersion();
        int int71 = python3Target67.getInlineTestSetWordSize();
        java.lang.String str72 = python3Target67.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator73 = python3Target67.gen;
        org.antlr.v4.tool.Grammar grammar74 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target75 = new org.antlr.v4.codegen.target.Python3Target();
        int int76 = python3Target75.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup77 = python3Target75.templates;
        org.antlr.v4.tool.Grammar grammar78 = null;
        int[] intArray79 = new int[] {};
        java.lang.String[] strArray80 = python3Target75.getTokenTypesAsTargetLabels(grammar78, intArray79);
        java.lang.String[] strArray81 = python3Target67.getTokenTypesAsTargetLabels(grammar74, intArray79);
        java.lang.String[] strArray82 = python3Target55.getTokenTypesAsTargetLabels(grammar66, intArray79);
        java.lang.String[] strArray83 = python3Target46.getTokenTypesAsTargetLabels(grammar54, intArray79);
        java.lang.String[] strArray84 = python3Target35.getTokenTypesAsTargetLabels(grammar45, intArray79);
        java.lang.String str85 = python3Target35.getLanguage();
        java.util.Locale locale87 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str88 = pythonStringRenderer0.toString((java.lang.Object) python3Target35, "\\12", locale87);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: org.antlr.v4.codegen.target.Python3Target cannot be cast to java.lang.String");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "d" + "'", str4, "d");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "@" + "'", str8, "@");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 64 + "'", int10 == 64);
        org.junit.Assert.assertNull(sTGroup11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\"\"\"hi!\"\"\"" + "'", str14, "\"\"\"hi!\"\"\"");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 64 + "'", int16 == 64);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "4.5.2.1" + "'", str18, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 64 + "'", int19 == 64);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "\"\"4.5.2.1\"\"" + "'", str27, "\"\"4.5.2.1\"\"");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "\"\"\".5.2.\"\"\"" + "'", str30, "\"\"\".5.2.\"\"\"");
        org.junit.Assert.assertNull(codeGenerator31);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "\"\"\\\"\\\"\\\".5.2.\\\"\\\"\\\"\"\"" + "'", str34, "\"\"\\\"\\\"\\\".5.2.\\\"\\\"\\\"\"\"");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 64 + "'", int36 == 64);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNull(sTGroup38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "4.5.2.1" + "'", str42, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 64 + "'", int47 == 64);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNull(sTGroup49);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "\"\"hi!\"\"" + "'", str51, "\"\"hi!\"\"");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "\"\"" + "'", str53, "\"\"");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 64 + "'", int56 == 64);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNull(codeGenerator58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "\\0" + "'", str63, "\\0");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 64 + "'", int68 == 64);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "4.5.2.1" + "'", str70, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 64 + "'", int71 == 64);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertNull(codeGenerator73);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 64 + "'", int76 == 64);
        org.junit.Assert.assertNull(sTGroup77);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[]");
        org.junit.Assert.assertNotNull(strArray80);
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertNotNull(strArray83);
        org.junit.Assert.assertNotNull(strArray84);
        org.junit.Assert.assertNull(str85);
    }

    @Test
    public void test06786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06786");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        org.stringtemplate.v4.STGroup sTGroup3 = python3Target0.templates;
        boolean boolean4 = python3Target0.templatesExist();
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = null;
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator5, "", false);
        java.util.Set<java.lang.String> strSet9 = null;
        python3Target0.badWords = strSet9;
        java.lang.String str13 = python3Target0.getTargetStringLiteralFromString("@", true);
        java.lang.String str14 = python3Target0.getLanguage();
        java.lang.String str16 = python3Target0.getTargetStringLiteralFromString("\"\"_tseta\"\"");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(sTGroup3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"@\"" + "'", str13, "\"@\"");
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\"\"\"_tseta\"\"\"" + "'", str16, "\"\"\"_tseta\"\"\"");
    }

    @Test
    public void test06787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06787");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str2 = python3Target0.getTargetStringLiteralFromString("\"\"");
        int int3 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str5 = python3Target0.encodeIntAsCharEscape(0);
        java.lang.String str7 = python3Target0.getTargetStringLiteralFromString("");
        java.lang.String str8 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = python3Target0.gen;
        boolean boolean10 = python3Target0.templatesExist();
        java.lang.String[] strArray11 = python3Target0.targetCharValueEscape;
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = python3Target0.gen;
        org.stringtemplate.v4.STGroup sTGroup13 = python3Target0.templates;
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "\"\"\"\"" + "'", str2, "\"\"\"\"");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 64 + "'", int3 == 64);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\\0" + "'", str5, "\\0");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"\"" + "'", str7, "\"\"");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "4.5.2.1" + "'", str8, "4.5.2.1");
        org.junit.Assert.assertNull(codeGenerator9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNull(codeGenerator12);
        org.junit.Assert.assertNull(sTGroup13);
    }

    @Test
    public void test06788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06788");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        org.stringtemplate.v4.STGroup sTGroup1 = null;
        python3Target0.templates = sTGroup1;
        java.util.Set<java.lang.String> strSet3 = null;
        python3Target0.badWords = strSet3;
        boolean boolean5 = python3Target0.wantsBaseListener();
        boolean boolean6 = python3Target0.supportsOverloadedMethods();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str8 = python3Target0.getImplicitTokenLabel("\"\"\"\"\"\"\"\"\"4.5.2.1\"\"\"\"\"\"\"\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test06789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06789");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        java.lang.String str3 = python3Target0.getLanguage();
        java.lang.String str5 = python3Target0.getTargetStringLiteralFromString("");
        java.lang.String str6 = python3Target0.getVersion();
        org.antlr.v4.codegen.target.Python3Target python3Target7 = new org.antlr.v4.codegen.target.Python3Target();
        int int8 = python3Target7.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup9 = python3Target7.templates;
        org.antlr.v4.tool.Grammar grammar10 = null;
        int[] intArray11 = new int[] {};
        java.lang.String[] strArray12 = python3Target7.getTokenTypesAsTargetLabels(grammar10, intArray11);
        python3Target0.targetCharValueEscape = strArray12;
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = null;
        java.lang.String str17 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator14, "\"\"", false);
        boolean boolean18 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.codegen.target.Python3Target python3Target19 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str20 = python3Target19.language;
        int int21 = python3Target19.getSerializedATNSegmentLimit();
        java.lang.String str23 = python3Target19.getTargetStringLiteralFromString("i");
        int int24 = python3Target19.getSerializedATNSegmentLimit();
        org.antlr.v4.codegen.target.Python3Target python3Target25 = new org.antlr.v4.codegen.target.Python3Target();
        int int26 = python3Target25.getInlineTestSetWordSize();
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!", "" };
        python3Target25.targetCharValueEscape = strArray29;
        org.antlr.v4.codegen.CodeGenerator codeGenerator31 = null;
        java.lang.String str34 = python3Target25.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator31, "\"\"", false);
        java.lang.String[] strArray35 = python3Target25.targetCharValueEscape;
        python3Target19.targetCharValueEscape = strArray35;
        python3Target0.targetCharValueEscape = strArray35;
        java.util.Set<java.lang.String> strSet38 = python3Target0.getBadWords();
        boolean boolean39 = python3Target0.templatesExist();
        java.lang.String str41 = python3Target0.getTargetStringLiteralFromString("\"\"\"\"\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator42 = null;
        java.lang.String str45 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator42, "\"\"\"\"4.5.2.1\"\"\"\"", false);
        boolean boolean46 = python3Target0.wantsBaseListener();
        int int47 = python3Target0.getSerializedATNSegmentLimit();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\"\"" + "'", str5, "\"\"");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "4.5.2.1" + "'", str6, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 64 + "'", int8 == 64);
        org.junit.Assert.assertNull(sTGroup9);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[]");
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 29 + "'", int21 == 29);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "\"i\"" + "'", str23, "\"i\"");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 29 + "'", int24 == 29);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 64 + "'", int26 == 64);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(strSet38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "\"\"\"\"\"\"\"\"" + "'", str41, "\"\"\"\"\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "\\\"\\\"\\\"4.5.2.1\\\"\\\"\\\"" + "'", str45, "\\\"\\\"\\\"4.5.2.1\\\"\\\"\\\"");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 29 + "'", int47 == 29);
    }

    @Test
    public void test06790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06790");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        java.lang.String str3 = python3Target0.getLanguage();
        java.lang.String str5 = python3Target0.getTargetStringLiteralFromString("");
        java.lang.String str6 = python3Target0.getVersion();
        org.antlr.v4.codegen.target.Python3Target python3Target7 = new org.antlr.v4.codegen.target.Python3Target();
        int int8 = python3Target7.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup9 = python3Target7.templates;
        org.antlr.v4.tool.Grammar grammar10 = null;
        int[] intArray11 = new int[] {};
        java.lang.String[] strArray12 = python3Target7.getTokenTypesAsTargetLabels(grammar10, intArray11);
        python3Target0.targetCharValueEscape = strArray12;
        org.stringtemplate.v4.STGroup sTGroup14 = null;
        python3Target0.templates = sTGroup14;
        org.antlr.v4.tool.ast.GrammarAST grammarAST16 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str17 = python3Target0.getLoopLabel(grammarAST16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\"\"" + "'", str5, "\"\"");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "4.5.2.1" + "'", str6, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 64 + "'", int8 == 64);
        org.junit.Assert.assertNull(sTGroup9);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[]");
        org.junit.Assert.assertNotNull(strArray12);
    }

    @Test
    public void test06791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06791");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        java.lang.String str3 = python3Target0.getVersion();
        int int4 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str5 = python3Target0.getLanguage();
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromString("hi!", false);
        python3Target0.language = "\"\"i\"\"";
        java.lang.String str12 = python3Target0.getTargetStringLiteralFromString("\"4.5.2.1\"");
        org.stringtemplate.v4.STGroup sTGroup13 = null;
        python3Target0.templates = sTGroup13;
        python3Target0.addBadWords();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str17 = python3Target0.getImplicitTokenLabel("\\\"\\\"\\\"\\\"\\\"\\\"\\\"4.5.2.1\\\"\\\"\\\"\\\"\\\"\\\"\\\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "4.5.2.1" + "'", str3, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"\"4.5.2.1\"\"" + "'", str12, "\"\"4.5.2.1\"\"");
    }

    @Test
    public void test06792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06792");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        boolean boolean2 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.gen;
        boolean boolean4 = python3Target0.supportsOverloadedMethods();
        boolean boolean5 = python3Target0.supportsOverloadedMethods();
        python3Target0.language = "\"\"\"\"";
        python3Target0.language = "hi!";
        org.antlr.v4.codegen.target.Python3Target python3Target10 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str12 = python3Target10.getTargetStringLiteralFromString("\"\"");
        int int13 = python3Target10.getInlineTestSetWordSize();
        boolean boolean14 = python3Target10.supportsOverloadedMethods();
        java.lang.String str16 = python3Target10.encodeIntAsCharEscape(10);
        org.antlr.v4.tool.Grammar grammar17 = null;
        org.stringtemplate.v4.ST sT18 = null;
        python3Target10.genRecognizerHeaderFile(grammar17, sT18, "\"\"");
        java.lang.String[] strArray21 = python3Target10.targetCharValueEscape;
        python3Target0.targetCharValueEscape = strArray21;
        org.antlr.v4.codegen.model.RuleFunction ruleFunction23 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str24 = python3Target0.getRuleFunctionContextStructName(ruleFunction23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"\"\"\"" + "'", str12, "\"\"\"\"");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 64 + "'", int13 == 64);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\\12" + "'", str16, "\\12");
        org.junit.Assert.assertNotNull(strArray21);
    }

    @Test
    public void test06793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06793");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        org.stringtemplate.v4.STGroup sTGroup3 = python3Target0.templates;
        boolean boolean4 = python3Target0.templatesExist();
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = null;
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator5, "", false);
        java.util.Set<java.lang.String> strSet9 = null;
        python3Target0.badWords = strSet9;
        java.lang.String str13 = python3Target0.getTargetStringLiteralFromString("@", true);
        org.antlr.v4.tool.Grammar grammar14 = null;
        org.stringtemplate.v4.ST sT15 = null;
        // The following exception was thrown during execution in test generation
        try {
            python3Target0.genListenerFile(grammar14, sT15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(sTGroup3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"@\"" + "'", str13, "\"@\"");
    }

    @Test
    public void test06794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06794");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        boolean boolean2 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.gen;
        boolean boolean4 = python3Target0.wantsBaseVisitor();
        java.lang.String str5 = python3Target0.getLanguage();
        python3Target0.language = "\"\"\"4.5.2.1\"\"\"";
        org.antlr.v4.codegen.target.Python3Target python3Target8 = new org.antlr.v4.codegen.target.Python3Target();
        org.stringtemplate.v4.STGroup sTGroup9 = null;
        python3Target8.templates = sTGroup9;
        java.lang.String[] strArray14 = new java.lang.String[] { "", "\\0", "" };
        java.util.LinkedHashSet<java.lang.String> strSet15 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet15, strArray14);
        python3Target8.badWords = strSet15;
        boolean boolean18 = python3Target8.templatesExist();
        java.lang.String str20 = python3Target8.encodeIntAsCharEscape(64);
        org.antlr.v4.tool.Grammar grammar21 = null;
        org.stringtemplate.v4.ST sT22 = null;
        python3Target8.genRecognizerHeaderFile(grammar21, sT22, "\"\\\"\\\"\\\"i\\\"\\\"\\\"\"");
        java.lang.String[] strArray25 = python3Target8.targetCharValueEscape;
        python3Target0.targetCharValueEscape = strArray25;
        java.lang.String str27 = python3Target0.getVersion();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "@" + "'", str20, "@");
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "4.5.2.1" + "'", str27, "4.5.2.1");
    }

    @Test
    public void test06795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06795");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        boolean boolean2 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.gen;
        boolean boolean4 = python3Target0.wantsBaseVisitor();
        java.lang.String str5 = python3Target0.language;
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromString("\\0", false);
        int int9 = python3Target0.getSerializedATNSegmentLimit();
        org.stringtemplate.v4.STGroup sTGroup10 = null;
        python3Target0.templates = sTGroup10;
        boolean boolean12 = python3Target0.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar13 = null;
        org.stringtemplate.v4.ST sT14 = null;
        python3Target0.genRecognizerHeaderFile(grammar13, sT14, "\"\"hi!\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = python3Target0.getCodeGenerator();
        org.antlr.v4.tool.Grammar grammar18 = null;
        org.stringtemplate.v4.ST sT19 = null;
        python3Target0.genRecognizerHeaderFile(grammar18, sT19, "\"\"");
        java.lang.String str24 = python3Target0.getTargetStringLiteralFromString("\"\"5.2\"\"", false);
        org.antlr.v4.tool.Grammar grammar25 = null;
        org.stringtemplate.v4.ST sT26 = null;
        // The following exception was thrown during execution in test generation
        try {
            python3Target0.genListenerFile(grammar25, sT26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\\0" + "'", str8, "\\0");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 29 + "'", int9 == 29);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(codeGenerator17);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "\"\"5.2\"\"" + "'", str24, "\"\"5.2\"\"");
    }

    @Test
    public void test06796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06796");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "", true);
        org.antlr.v4.tool.Grammar grammar7 = null;
        org.stringtemplate.v4.ST sT8 = null;
        python3Target0.genRecognizerHeaderFile(grammar7, sT8, "");
        org.antlr.v4.tool.Grammar grammar11 = null;
        org.stringtemplate.v4.ST sT12 = null;
        python3Target0.genRecognizerHeaderFile(grammar11, sT12, "\"i\"");
        boolean boolean15 = python3Target0.wantsBaseListener();
        org.antlr.v4.codegen.CodeGenerator codeGenerator16 = null;
        python3Target0.gen = codeGenerator16;
        boolean boolean18 = python3Target0.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup19 = null;
        python3Target0.templates = sTGroup19;
        python3Target0.addBadWords();
        int int22 = python3Target0.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar23 = null;
        org.stringtemplate.v4.ST sT24 = null;
        // The following exception was thrown during execution in test generation
        try {
            python3Target0.genListenerFile(grammar23, sT24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"" + "'", str6, "\"\"");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 29 + "'", int22 == 29);
    }

    @Test
    public void test06797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06797");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        int int3 = python3Target0.getInlineTestSetWordSize();
        boolean boolean4 = python3Target0.wantsBaseListener();
        java.lang.String str6 = python3Target0.encodeIntAsCharEscape((int) (byte) 10);
        org.antlr.v4.tool.Grammar grammar7 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target8 = new org.antlr.v4.codegen.target.Python3Target();
        int int9 = python3Target8.getInlineTestSetWordSize();
        boolean boolean10 = python3Target8.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = python3Target8.gen;
        boolean boolean12 = python3Target8.wantsBaseVisitor();
        boolean boolean13 = python3Target8.supportsOverloadedMethods();
        java.lang.String str16 = python3Target8.getTargetStringLiteralFromString("\\0", false);
        boolean boolean17 = python3Target8.templatesExist();
        python3Target8.addBadWords();
        org.antlr.v4.tool.Grammar grammar19 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target20 = new org.antlr.v4.codegen.target.Python3Target();
        int int21 = python3Target20.getInlineTestSetWordSize();
        java.lang.String str22 = python3Target20.language;
        java.lang.String str23 = python3Target20.getVersion();
        int int24 = python3Target20.getInlineTestSetWordSize();
        java.lang.String str25 = python3Target20.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator26 = python3Target20.gen;
        org.antlr.v4.tool.Grammar grammar27 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target28 = new org.antlr.v4.codegen.target.Python3Target();
        int int29 = python3Target28.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup30 = python3Target28.templates;
        org.antlr.v4.tool.Grammar grammar31 = null;
        int[] intArray32 = new int[] {};
        java.lang.String[] strArray33 = python3Target28.getTokenTypesAsTargetLabels(grammar31, intArray32);
        java.lang.String[] strArray34 = python3Target20.getTokenTypesAsTargetLabels(grammar27, intArray32);
        java.lang.String[] strArray35 = python3Target8.getTokenTypesAsTargetLabels(grammar19, intArray32);
        java.lang.String[] strArray36 = python3Target0.getTokenTypesAsTargetLabels(grammar7, intArray32);
        org.antlr.v4.codegen.target.Python3Target python3Target37 = new org.antlr.v4.codegen.target.Python3Target();
        int int38 = python3Target37.getInlineTestSetWordSize();
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!", "" };
        python3Target37.targetCharValueEscape = strArray41;
        java.lang.String[] strArray43 = python3Target37.targetCharValueEscape;
        python3Target37.addBadWords();
        java.lang.String str45 = python3Target37.language;
        org.stringtemplate.v4.STGroup sTGroup46 = python3Target37.templates;
        org.antlr.v4.codegen.target.Python3Target python3Target47 = new org.antlr.v4.codegen.target.Python3Target();
        int int48 = python3Target47.getInlineTestSetWordSize();
        java.lang.String str49 = python3Target47.language;
        java.lang.String str50 = python3Target47.getVersion();
        int int51 = python3Target47.getInlineTestSetWordSize();
        java.lang.String str52 = python3Target47.getLanguage();
        java.lang.String str53 = python3Target47.getLanguage();
        java.util.Set<java.lang.String> strSet54 = python3Target47.badWords;
        org.antlr.v4.codegen.target.Python3Target python3Target55 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray57 = new java.lang.String[] { "" };
        java.util.LinkedHashSet<java.lang.String> strSet58 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet58, strArray57);
        python3Target55.badWords = strSet58;
        org.stringtemplate.v4.STGroup sTGroup61 = python3Target55.templates;
        boolean boolean62 = python3Target55.templatesExist();
        org.antlr.v4.tool.Grammar grammar63 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target64 = new org.antlr.v4.codegen.target.Python3Target();
        int int65 = python3Target64.getInlineTestSetWordSize();
        java.lang.String str66 = python3Target64.language;
        org.stringtemplate.v4.STGroup sTGroup67 = python3Target64.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator68 = python3Target64.gen;
        boolean boolean69 = python3Target64.wantsBaseListener();
        org.antlr.v4.tool.Grammar grammar70 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target71 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str72 = python3Target71.language;
        org.antlr.v4.codegen.target.Python3Target python3Target73 = new org.antlr.v4.codegen.target.Python3Target();
        org.stringtemplate.v4.STGroup sTGroup74 = null;
        python3Target73.templates = sTGroup74;
        java.lang.String[] strArray79 = new java.lang.String[] { "", "\\0", "" };
        java.util.LinkedHashSet<java.lang.String> strSet80 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet80, strArray79);
        python3Target73.badWords = strSet80;
        python3Target71.badWords = strSet80;
        org.antlr.v4.tool.Grammar grammar84 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target85 = new org.antlr.v4.codegen.target.Python3Target();
        int int86 = python3Target85.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup87 = python3Target85.templates;
        org.antlr.v4.tool.Grammar grammar88 = null;
        int[] intArray89 = new int[] {};
        java.lang.String[] strArray90 = python3Target85.getTokenTypesAsTargetLabels(grammar88, intArray89);
        java.lang.String[] strArray91 = python3Target71.getTokenTypesAsTargetLabels(grammar84, intArray89);
        java.lang.String[] strArray92 = python3Target64.getTokenTypesAsTargetLabels(grammar70, intArray89);
        java.lang.String[] strArray93 = python3Target55.getTokenTypesAsTargetLabels(grammar63, intArray89);
        java.util.Set<java.lang.String> strSet94 = python3Target55.badWords;
        java.lang.String[] strArray95 = python3Target55.targetCharValueEscape;
        python3Target47.targetCharValueEscape = strArray95;
        python3Target37.targetCharValueEscape = strArray95;
        python3Target0.targetCharValueEscape = strArray95;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 64 + "'", int3 == 64);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\\12" + "'", str6, "\\12");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 64 + "'", int9 == 64);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(codeGenerator11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\\0" + "'", str16, "\\0");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 64 + "'", int21 == 64);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "4.5.2.1" + "'", str23, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 64 + "'", int24 == 64);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(codeGenerator26);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 64 + "'", int29 == 64);
        org.junit.Assert.assertNull(sTGroup30);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[]");
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 64 + "'", int38 == 64);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNull(sTGroup46);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 64 + "'", int48 == 64);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "4.5.2.1" + "'", str50, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 64 + "'", int51 == 64);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNotNull(strSet54);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNull(sTGroup61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 64 + "'", int65 == 64);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertNull(sTGroup67);
        org.junit.Assert.assertNull(codeGenerator68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 64 + "'", int86 == 64);
        org.junit.Assert.assertNull(sTGroup87);
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[]");
        org.junit.Assert.assertNotNull(strArray90);
        org.junit.Assert.assertNotNull(strArray91);
        org.junit.Assert.assertNotNull(strArray92);
        org.junit.Assert.assertNotNull(strArray93);
        org.junit.Assert.assertNotNull(strSet94);
        org.junit.Assert.assertNotNull(strArray95);
    }

    @Test
    public void test06798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06798");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        org.stringtemplate.v4.STGroup sTGroup1 = null;
        python3Target0.templates = sTGroup1;
        java.lang.String[] strArray6 = new java.lang.String[] { "", "\\0", "" };
        java.util.LinkedHashSet<java.lang.String> strSet7 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet7, strArray6);
        python3Target0.badWords = strSet7;
        java.util.Set<java.lang.String> strSet10 = python3Target0.badWords;
        java.lang.String str11 = python3Target0.language;
        boolean boolean12 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.tool.Grammar grammar13 = null;
        org.stringtemplate.v4.ST sT14 = null;
        python3Target0.genRecognizerHeaderFile(grammar13, sT14, "\"\"\\\"\\\"0\\\"\\\"\"\"");
        org.antlr.v4.tool.Grammar grammar17 = null;
        org.stringtemplate.v4.ST sT18 = null;
        python3Target0.genRecognizerHeaderFile(grammar17, sT18, "\"\\\"\\\"\\\"i\\\"\\\"\\\"\"");
        java.lang.String str22 = python3Target0.getTargetStringLiteralFromString("\"\"\"\"\\1\"\"\"\"");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str24 = python3Target0.getListLabel("\"\"\"\\1\"\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "\"\"\"\"\"\\1\"\"\"\"\"" + "'", str22, "\"\"\"\"\"\\1\"\"\"\"\"");
    }

    @Test
    public void test06799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06799");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        boolean boolean2 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.gen;
        boolean boolean4 = python3Target0.wantsBaseVisitor();
        boolean boolean5 = python3Target0.supportsOverloadedMethods();
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromString("\\0", false);
        java.lang.String str11 = python3Target0.getTargetStringLiteralFromString("\"d\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = null;
        java.lang.String str15 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator12, "\"\"\"\"4.5.2.1\"\"\"\"", false);
        boolean boolean16 = python3Target0.supportsOverloadedMethods();
        java.lang.String str19 = python3Target0.getTargetStringLiteralFromString("\\\"hi!\\\"", false);
        org.antlr.v4.codegen.target.Python3Target python3Target20 = new org.antlr.v4.codegen.target.Python3Target();
        int int21 = python3Target20.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator22 = python3Target20.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator23 = null;
        python3Target20.gen = codeGenerator23;
        org.antlr.v4.codegen.target.Python3Target python3Target25 = new org.antlr.v4.codegen.target.Python3Target();
        int int26 = python3Target25.getInlineTestSetWordSize();
        java.lang.String str27 = python3Target25.language;
        org.stringtemplate.v4.STGroup sTGroup28 = python3Target25.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator29 = python3Target25.gen;
        java.util.Set<java.lang.String> strSet30 = python3Target25.badWords;
        org.stringtemplate.v4.STGroup sTGroup31 = null;
        python3Target25.templates = sTGroup31;
        java.util.Set<java.lang.String> strSet33 = python3Target25.badWords;
        java.lang.String str34 = python3Target25.getLanguage();
        org.antlr.v4.codegen.target.Python3Target python3Target35 = new org.antlr.v4.codegen.target.Python3Target();
        int int36 = python3Target35.getInlineTestSetWordSize();
        java.lang.String str37 = python3Target35.language;
        java.lang.String str38 = python3Target35.getVersion();
        int int39 = python3Target35.getInlineTestSetWordSize();
        java.lang.String str40 = python3Target35.getLanguage();
        java.lang.String str43 = python3Target35.getTargetStringLiteralFromString("4.5.2.1", true);
        boolean boolean44 = python3Target35.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet45 = python3Target35.badWords;
        org.antlr.v4.codegen.CodeGenerator codeGenerator46 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target47 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator46);
        java.lang.String str49 = python3Target47.encodeIntAsCharEscape((int) (short) 1);
        org.stringtemplate.v4.STGroup sTGroup50 = python3Target47.loadTemplates();
        python3Target35.templates = sTGroup50;
        python3Target25.templates = sTGroup50;
        python3Target20.templates = sTGroup50;
        python3Target0.templates = sTGroup50;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str56 = python3Target0.getImplicitTokenLabel("\\\"\\\"\\\"\\\"\\\"0\\\"\\\"\\\"\\\"\\\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\\0" + "'", str8, "\\0");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"d\"" + "'", str11, "\"d\"");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\\\"\\\"\\\"4.5.2.1\\\"\\\"\\\"" + "'", str15, "\\\"\\\"\\\"4.5.2.1\\\"\\\"\\\"");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "\\\"hi!\\\"" + "'", str19, "\\\"hi!\\\"");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 64 + "'", int21 == 64);
        org.junit.Assert.assertNull(codeGenerator22);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 64 + "'", int26 == 64);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(sTGroup28);
        org.junit.Assert.assertNull(codeGenerator29);
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertNotNull(strSet33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 64 + "'", int36 == 64);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "4.5.2.1" + "'", str38, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 64 + "'", int39 == 64);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "\"4.5.2.1\"" + "'", str43, "\"4.5.2.1\"");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(strSet45);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "\\1" + "'", str49, "\\1");
        org.junit.Assert.assertNotNull(sTGroup50);
    }

    @Test
    public void test06800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06800");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        java.lang.String str3 = python3Target0.getVersion();
        int int4 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str5 = python3Target0.getLanguage();
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromString("hi!", false);
        python3Target0.language = "\"\"i\"\"";
        java.lang.String str12 = python3Target0.getTargetStringLiteralFromString("\"4.5.2.1\"");
        java.lang.String str15 = python3Target0.getTargetStringLiteralFromString("\"\".5.2.\"\"", true);
        java.util.Set<java.lang.String> strSet16 = python3Target0.getBadWords();
        org.antlr.v4.codegen.target.Python3Target python3Target17 = new org.antlr.v4.codegen.target.Python3Target();
        int int18 = python3Target17.getInlineTestSetWordSize();
        java.lang.String str19 = python3Target17.language;
        org.stringtemplate.v4.STGroup sTGroup20 = python3Target17.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator21 = python3Target17.gen;
        java.lang.String str22 = python3Target17.getVersion();
        java.lang.String str23 = python3Target17.getLanguage();
        java.lang.String str24 = python3Target17.getLanguage();
        org.antlr.v4.codegen.target.Python3Target python3Target25 = new org.antlr.v4.codegen.target.Python3Target();
        int int26 = python3Target25.getInlineTestSetWordSize();
        java.lang.String str27 = python3Target25.language;
        java.lang.String str28 = python3Target25.getVersion();
        int int29 = python3Target25.getInlineTestSetWordSize();
        java.lang.String str30 = python3Target25.getLanguage();
        java.lang.String str33 = python3Target25.getTargetStringLiteralFromString("4.5.2.1", true);
        boolean boolean34 = python3Target25.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet35 = python3Target25.getBadWords();
        boolean boolean36 = python3Target25.wantsBaseVisitor();
        org.antlr.v4.codegen.target.Python3Target python3Target37 = new org.antlr.v4.codegen.target.Python3Target();
        int int38 = python3Target37.getInlineTestSetWordSize();
        java.lang.String str39 = python3Target37.language;
        org.antlr.v4.codegen.CodeGenerator codeGenerator40 = null;
        java.lang.String str43 = python3Target37.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator40, "", true);
        java.util.Set<java.lang.String> strSet44 = python3Target37.getBadWords();
        python3Target25.badWords = strSet44;
        python3Target17.badWords = strSet44;
        python3Target0.badWords = strSet44;
        org.antlr.v4.tool.Grammar grammar48 = null;
        org.stringtemplate.v4.ST sT49 = null;
        // The following exception was thrown during execution in test generation
        try {
            python3Target0.genFile(grammar48, sT49, "\"\\\"\\\"\\\"\\\"\\\"64\\\"\\\"\\\"\\\"\\\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "4.5.2.1" + "'", str3, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"\"4.5.2.1\"\"" + "'", str12, "\"\"4.5.2.1\"\"");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\"\"\".5.2.\"\"\"" + "'", str15, "\"\"\".5.2.\"\"\"");
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 64 + "'", int18 == 64);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(sTGroup20);
        org.junit.Assert.assertNull(codeGenerator21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "4.5.2.1" + "'", str22, "4.5.2.1");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 64 + "'", int26 == 64);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "4.5.2.1" + "'", str28, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 64 + "'", int29 == 64);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "\"4.5.2.1\"" + "'", str33, "\"4.5.2.1\"");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 64 + "'", int38 == 64);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "\"\"" + "'", str43, "\"\"");
        org.junit.Assert.assertNotNull(strSet44);
    }

    @Test
    public void test06801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06801");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        java.lang.String str3 = python3Target0.getLanguage();
        java.lang.String str5 = python3Target0.getTargetStringLiteralFromString("");
        java.lang.String str6 = python3Target0.getVersion();
        org.antlr.v4.codegen.target.Python3Target python3Target7 = new org.antlr.v4.codegen.target.Python3Target();
        int int8 = python3Target7.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup9 = python3Target7.templates;
        org.antlr.v4.tool.Grammar grammar10 = null;
        int[] intArray11 = new int[] {};
        java.lang.String[] strArray12 = python3Target7.getTokenTypesAsTargetLabels(grammar10, intArray11);
        python3Target0.targetCharValueEscape = strArray12;
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = null;
        java.lang.String str17 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator14, "\"\"", false);
        boolean boolean18 = python3Target0.supportsOverloadedMethods();
        java.lang.String str20 = python3Target0.encodeIntAsCharEscape((int) (short) 0);
        java.lang.String str23 = python3Target0.getTargetStringLiteralFromString("d", false);
        java.lang.String str24 = python3Target0.getLanguage();
        boolean boolean25 = python3Target0.wantsBaseListener();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\"\"" + "'", str5, "\"\"");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "4.5.2.1" + "'", str6, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 64 + "'", int8 == 64);
        org.junit.Assert.assertNull(sTGroup9);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[]");
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "\\0" + "'", str20, "\\0");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "d" + "'", str23, "d");
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test06802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06802");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        boolean boolean2 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.gen;
        boolean boolean4 = python3Target0.wantsBaseVisitor();
        java.lang.String str5 = python3Target0.getLanguage();
        java.lang.String[] strArray6 = python3Target0.targetCharValueEscape;
        java.lang.String str8 = python3Target0.encodeIntAsCharEscape((int) '#');
        org.antlr.v4.tool.Grammar grammar9 = null;
        org.stringtemplate.v4.ST sT10 = null;
        // The following exception was thrown during execution in test generation
        try {
            python3Target0.genFile(grammar9, sT10, "\"\"\\\" \\\"\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "#" + "'", str8, "#");
    }

    @Test
    public void test06803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06803");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        org.stringtemplate.v4.STGroup sTGroup3 = python3Target0.templates;
        java.lang.String str5 = python3Target0.getTargetStringLiteralFromString("\"hi!\"");
        java.lang.String str7 = python3Target0.getTargetStringLiteralFromString("");
        boolean boolean8 = python3Target0.templatesExist();
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = python3Target0.gen;
        boolean boolean10 = python3Target0.templatesExist();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(sTGroup3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\"\"hi!\"\"" + "'", str5, "\"\"hi!\"\"");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"\"" + "'", str7, "\"\"");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(codeGenerator9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test06804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06804");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        java.lang.String str3 = python3Target0.getVersion();
        int int4 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str5 = python3Target0.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = python3Target0.gen;
        org.antlr.v4.tool.Grammar grammar7 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target8 = new org.antlr.v4.codegen.target.Python3Target();
        int int9 = python3Target8.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup10 = python3Target8.templates;
        org.antlr.v4.tool.Grammar grammar11 = null;
        int[] intArray12 = new int[] {};
        java.lang.String[] strArray13 = python3Target8.getTokenTypesAsTargetLabels(grammar11, intArray12);
        java.lang.String[] strArray14 = python3Target0.getTokenTypesAsTargetLabels(grammar7, intArray12);
        java.lang.String str15 = python3Target0.getLanguage();
        int int16 = python3Target0.getSerializedATNSegmentLimit();
        int int17 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str20 = python3Target0.getTargetStringLiteralFromString("\"\"\"\\\"\\\"0\\\"\\\"\"\"\"", true);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "4.5.2.1" + "'", str3, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(codeGenerator6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 64 + "'", int9 == 64);
        org.junit.Assert.assertNull(sTGroup10);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[]");
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 29 + "'", int16 == 29);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 64 + "'", int17 == 64);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "\"\"\"\"\\\"\\\"0\\\"\\\"\"\"\"\"" + "'", str20, "\"\"\"\"\\\"\\\"0\\\"\\\"\"\"\"\"");
    }

    @Test
    public void test06805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06805");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!", "" };
        python3Target0.targetCharValueEscape = strArray4;
        java.util.Set<java.lang.String> strSet6 = python3Target0.badWords;
        org.stringtemplate.v4.STGroup sTGroup7 = python3Target0.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target0.gen;
        java.util.Set<java.lang.String> strSet9 = python3Target0.getBadWords();
        python3Target0.addBadWords();
        java.util.Set<java.lang.String> strSet11 = python3Target0.badWords;
        boolean boolean12 = python3Target0.wantsBaseVisitor();
        java.lang.String str14 = python3Target0.encodeIntAsCharEscape((int) (short) 10);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertNull(sTGroup7);
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\\12" + "'", str14, "\\12");
    }

    @Test
    public void test06806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06806");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        java.lang.String str3 = python3Target0.getVersion();
        int int4 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str5 = python3Target0.getLanguage();
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromString("4.5.2.1", true);
        boolean boolean9 = python3Target0.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet10 = python3Target0.badWords;
        java.lang.String[] strArray11 = null;
        python3Target0.targetCharValueEscape = strArray11;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "4.5.2.1" + "'", str3, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"4.5.2.1\"" + "'", str8, "\"4.5.2.1\"");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strSet10);
    }

    @Test
    public void test06807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06807");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        java.lang.String str3 = python3Target0.getVersion();
        int int4 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str5 = python3Target0.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = python3Target0.gen;
        org.antlr.v4.tool.Grammar grammar7 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target8 = new org.antlr.v4.codegen.target.Python3Target();
        int int9 = python3Target8.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup10 = python3Target8.templates;
        org.antlr.v4.tool.Grammar grammar11 = null;
        int[] intArray12 = new int[] {};
        java.lang.String[] strArray13 = python3Target8.getTokenTypesAsTargetLabels(grammar11, intArray12);
        java.lang.String[] strArray14 = python3Target0.getTokenTypesAsTargetLabels(grammar7, intArray12);
        java.lang.String str16 = python3Target0.encodeIntAsCharEscape((int) (byte) 100);
        java.util.Set<java.lang.String> strSet17 = python3Target0.badWords;
        org.antlr.v4.tool.Grammar grammar18 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target19 = new org.antlr.v4.codegen.target.Python3Target();
        int int20 = python3Target19.getInlineTestSetWordSize();
        java.lang.String str21 = python3Target19.language;
        org.antlr.v4.codegen.CodeGenerator codeGenerator22 = null;
        java.lang.String str25 = python3Target19.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator22, "", true);
        org.antlr.v4.tool.Grammar grammar26 = null;
        org.stringtemplate.v4.ST sT27 = null;
        python3Target19.genRecognizerHeaderFile(grammar26, sT27, "");
        org.antlr.v4.tool.Grammar grammar30 = null;
        org.stringtemplate.v4.ST sT31 = null;
        python3Target19.genRecognizerHeaderFile(grammar30, sT31, "\"i\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator34 = python3Target19.gen;
        org.antlr.v4.codegen.CodeGenerator codeGenerator35 = null;
        python3Target19.gen = codeGenerator35;
        java.lang.String str38 = python3Target19.encodeIntAsCharEscape(1);
        org.antlr.v4.tool.Grammar grammar39 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target40 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str42 = python3Target40.encodeIntAsCharEscape(100);
        org.antlr.v4.tool.Grammar grammar43 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target44 = new org.antlr.v4.codegen.target.Python3Target();
        int int45 = python3Target44.getInlineTestSetWordSize();
        java.lang.String str46 = python3Target44.language;
        java.lang.String str47 = python3Target44.getVersion();
        int int48 = python3Target44.getInlineTestSetWordSize();
        java.lang.String str49 = python3Target44.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator50 = python3Target44.gen;
        org.antlr.v4.tool.Grammar grammar51 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target52 = new org.antlr.v4.codegen.target.Python3Target();
        int int53 = python3Target52.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup54 = python3Target52.templates;
        org.antlr.v4.tool.Grammar grammar55 = null;
        int[] intArray56 = new int[] {};
        java.lang.String[] strArray57 = python3Target52.getTokenTypesAsTargetLabels(grammar55, intArray56);
        java.lang.String[] strArray58 = python3Target44.getTokenTypesAsTargetLabels(grammar51, intArray56);
        java.lang.String[] strArray59 = python3Target40.getTokenTypesAsTargetLabels(grammar43, intArray56);
        java.lang.String[] strArray60 = python3Target19.getTokenTypesAsTargetLabels(grammar39, intArray56);
        java.lang.String[] strArray61 = python3Target0.getTokenTypesAsTargetLabels(grammar18, intArray56);
        boolean boolean62 = python3Target0.wantsBaseListener();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str64 = python3Target0.getImplicitTokenLabel("\"\\\"\\\"\\\"0\\\"\\\"\\\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "4.5.2.1" + "'", str3, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(codeGenerator6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 64 + "'", int9 == 64);
        org.junit.Assert.assertNull(sTGroup10);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[]");
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "d" + "'", str16, "d");
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 64 + "'", int20 == 64);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "\"\"" + "'", str25, "\"\"");
        org.junit.Assert.assertNull(codeGenerator34);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "\\1" + "'", str38, "\\1");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "d" + "'", str42, "d");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 64 + "'", int45 == 64);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "4.5.2.1" + "'", str47, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 64 + "'", int48 == 64);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNull(codeGenerator50);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 64 + "'", int53 == 64);
        org.junit.Assert.assertNull(sTGroup54);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[]");
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
    }

    @Test
    public void test06808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06808");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        org.stringtemplate.v4.STGroup sTGroup3 = python3Target0.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = python3Target0.gen;
        java.lang.String str5 = python3Target0.getVersion();
        java.lang.String str6 = python3Target0.getLanguage();
        java.lang.String str7 = python3Target0.getLanguage();
        java.util.Set<java.lang.String> strSet8 = python3Target0.getBadWords();
        java.lang.Class<?> wildcardClass9 = python3Target0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(sTGroup3);
        org.junit.Assert.assertNull(codeGenerator4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "4.5.2.1" + "'", str5, "4.5.2.1");
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test06809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06809");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str2 = python3Target0.getTargetStringLiteralFromString("\"\"");
        int int3 = python3Target0.getInlineTestSetWordSize();
        boolean boolean4 = python3Target0.supportsOverloadedMethods();
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromString("\"i\"");
        python3Target0.addBadWords();
        org.antlr.v4.codegen.target.Python3Target python3Target8 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str9 = python3Target8.language;
        java.lang.String[] strArray10 = python3Target8.targetCharValueEscape;
        python3Target0.targetCharValueEscape = strArray10;
        org.stringtemplate.v4.STGroup sTGroup12 = null;
        python3Target0.templates = sTGroup12;
        java.lang.String str15 = python3Target0.getTargetStringLiteralFromString("\"\\\"\\\"\\\"\\\"64\\\"\\\"\\\"\\\"\"");
        // The following exception was thrown during execution in test generation
        try {
            org.stringtemplate.v4.STGroup sTGroup16 = python3Target0.getTemplates();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "\"\"\"\"" + "'", str2, "\"\"\"\"");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 64 + "'", int3 == 64);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"i\"\"" + "'", str6, "\"\"i\"\"");
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\"\"\\\"\\\"\\\"\\\"64\\\"\\\"\\\"\\\"\"\"" + "'", str15, "\"\"\\\"\\\"\\\"\\\"64\\\"\\\"\\\"\\\"\"\"");
    }

    @Test
    public void test06810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06810");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        org.stringtemplate.v4.STGroup sTGroup1 = null;
        python3Target0.templates = sTGroup1;
        java.lang.String[] strArray6 = new java.lang.String[] { "", "\\0", "" };
        java.util.LinkedHashSet<java.lang.String> strSet7 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet7, strArray6);
        python3Target0.badWords = strSet7;
        python3Target0.language = "1";
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = python3Target0.getCodeGenerator();
        java.lang.String str13 = python3Target0.language;
        boolean boolean14 = python3Target0.wantsBaseListener();
        python3Target0.addBadWords();
        java.lang.String str16 = python3Target0.getVersion();
        java.lang.String str17 = python3Target0.language;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str19 = python3Target0.getImplicitTokenLabel("\"_\\\"1\\\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(codeGenerator12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "1" + "'", str13, "1");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "4.5.2.1" + "'", str16, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "1" + "'", str17, "1");
    }

    @Test
    public void test06811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06811");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        java.lang.String str3 = python3Target0.getVersion();
        int int4 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str5 = python3Target0.getLanguage();
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromString("4.5.2.1", true);
        java.util.Set<java.lang.String> strSet9 = python3Target0.badWords;
        int int10 = python3Target0.getSerializedATNSegmentLimit();
        java.lang.String str11 = python3Target0.language;
        boolean boolean12 = python3Target0.wantsBaseVisitor();
        java.lang.String[] strArray13 = python3Target0.targetCharValueEscape;
        org.antlr.v4.tool.ast.GrammarAST grammarAST14 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean15 = python3Target0.visibleGrammarSymbolCausesIssueInGeneratedCode(grammarAST14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "4.5.2.1" + "'", str3, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"4.5.2.1\"" + "'", str8, "\"4.5.2.1\"");
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 29 + "'", int10 == 29);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strArray13);
    }

    @Test
    public void test06812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06812");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str2 = python3Target0.getTargetStringLiteralFromString("\"\"");
        int int3 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str5 = python3Target0.encodeIntAsCharEscape(0);
        java.lang.String str7 = python3Target0.getTargetStringLiteralFromString("");
        int int8 = python3Target0.getInlineTestSetWordSize();
        python3Target0.language = "\"\"\"\"\"\"";
        java.lang.String str11 = python3Target0.getVersion();
        boolean boolean12 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.tool.Grammar grammar13 = null;
        org.stringtemplate.v4.ST sT14 = null;
        // The following exception was thrown during execution in test generation
        try {
            python3Target0.genListenerFile(grammar13, sT14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "\"\"\"\"" + "'", str2, "\"\"\"\"");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 64 + "'", int3 == 64);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\\0" + "'", str5, "\\0");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"\"" + "'", str7, "\"\"");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 64 + "'", int8 == 64);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "4.5.2.1" + "'", str11, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test06813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06813");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!", "" };
        python3Target0.targetCharValueEscape = strArray4;
        java.lang.String[] strArray6 = python3Target0.targetCharValueEscape;
        boolean boolean7 = python3Target0.supportsOverloadedMethods();
        java.lang.String[] strArray8 = new java.lang.String[] {};
        python3Target0.targetCharValueEscape = strArray8;
        org.antlr.v4.codegen.target.Python3Target python3Target10 = new org.antlr.v4.codegen.target.Python3Target();
        int int11 = python3Target10.getInlineTestSetWordSize();
        java.lang.String str12 = python3Target10.language;
        java.lang.String str13 = python3Target10.getVersion();
        int int14 = python3Target10.getInlineTestSetWordSize();
        java.lang.String str15 = python3Target10.getLanguage();
        java.lang.String str18 = python3Target10.getTargetStringLiteralFromString("4.5.2.1", true);
        java.util.Set<java.lang.String> strSet19 = python3Target10.badWords;
        python3Target0.badWords = strSet19;
        java.lang.String str23 = python3Target0.getTargetStringLiteralFromString("\"\"\"\"\"\"\"\"4.5.2.1\"\"\"\"\"\"\"\"", true);
        java.util.Set<java.lang.String> strSet24 = python3Target0.badWords;
        python3Target0.addBadWords();
        org.antlr.v4.tool.ast.GrammarAST grammarAST26 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean27 = python3Target0.grammarSymbolCausesIssueInGeneratedCode(grammarAST26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 64 + "'", int11 == 64);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "4.5.2.1" + "'", str13, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 64 + "'", int14 == 64);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "\"4.5.2.1\"" + "'", str18, "\"4.5.2.1\"");
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "\"\"\"\"\"\"\"\"\"4.5.2.1\"\"\"\"\"\"\"\"\"" + "'", str23, "\"\"\"\"\"\"\"\"\"4.5.2.1\"\"\"\"\"\"\"\"\"");
        org.junit.Assert.assertNotNull(strSet24);
    }

    @Test
    public void test06814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06814");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        java.lang.String str3 = python3Target0.getVersion();
        org.stringtemplate.v4.STGroup sTGroup4 = null;
        python3Target0.templates = sTGroup4;
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        java.lang.String str9 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator6, "\"hi!\"", true);
        org.antlr.v4.codegen.target.Python3Target python3Target10 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean11 = python3Target10.wantsBaseVisitor();
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = null;
        python3Target10.gen = codeGenerator12;
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = python3Target10.gen;
        org.antlr.v4.codegen.target.Python3Target python3Target15 = new org.antlr.v4.codegen.target.Python3Target();
        int int16 = python3Target15.getInlineTestSetWordSize();
        java.lang.String str17 = python3Target15.language;
        org.antlr.v4.codegen.CodeGenerator codeGenerator18 = python3Target15.getCodeGenerator();
        java.util.Set<java.lang.String> strSet19 = python3Target15.getBadWords();
        java.lang.String[] strArray20 = python3Target15.targetCharValueEscape;
        python3Target10.targetCharValueEscape = strArray20;
        python3Target0.targetCharValueEscape = strArray20;
        org.antlr.v4.codegen.CodeGenerator codeGenerator23 = null;
        java.lang.String str26 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator23, "\"\"Python3\"\"", true);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "4.5.2.1" + "'", str3, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"hi!\"" + "'", str9, "\"hi!\"");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(codeGenerator14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 64 + "'", int16 == 64);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(codeGenerator18);
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\"\\\"Python3\\\"\"" + "'", str26, "\"\\\"Python3\\\"\"");
    }

    @Test
    public void test06815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06815");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "", true);
        java.lang.String[] strArray7 = python3Target0.targetCharValueEscape;
        int int8 = python3Target0.getSerializedATNSegmentLimit();
        boolean boolean9 = python3Target0.wantsBaseListener();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str11 = python3Target0.getImplicitTokenLabel("\"\"\\\"\\\"\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"" + "'", str6, "\"\"");
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 29 + "'", int8 == 29);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test06816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06816");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str2 = python3Target0.getTargetStringLiteralFromString("\"\"");
        int int3 = python3Target0.getInlineTestSetWordSize();
        boolean boolean4 = python3Target0.supportsOverloadedMethods();
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromString("\"i\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        java.lang.String str10 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator7, "\"\"\\\"\\\"4.5.2.1\\\"\\\"\"\"", true);
        python3Target0.language = "\\\"hi!\\\"";
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = python3Target0.gen;
        java.lang.String str16 = python3Target0.getTargetStringLiteralFromString("\\12", false);
        boolean boolean17 = python3Target0.wantsBaseVisitor();
        java.lang.String str19 = python3Target0.encodeIntAsCharEscape((int) ' ');
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "\"\"\"\"" + "'", str2, "\"\"\"\"");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 64 + "'", int3 == 64);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"i\"\"" + "'", str6, "\"\"i\"\"");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"\\\"\\\"\\\"4.5.2.1\\\"\\\"\\\"\"" + "'", str10, "\"\\\"\\\"\\\"4.5.2.1\\\"\\\"\\\"\"");
        org.junit.Assert.assertNull(codeGenerator13);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\\12" + "'", str16, "\\12");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + " " + "'", str19, " ");
    }

    @Test
    public void test06817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06817");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        org.stringtemplate.v4.STGroup sTGroup1 = null;
        python3Target0.templates = sTGroup1;
        java.lang.String[] strArray6 = new java.lang.String[] { "", "\\0", "" };
        java.util.LinkedHashSet<java.lang.String> strSet7 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet7, strArray6);
        python3Target0.badWords = strSet7;
        java.util.Set<java.lang.String> strSet10 = python3Target0.badWords;
        java.lang.String str11 = python3Target0.language;
        java.lang.String str12 = python3Target0.language;
        java.lang.String str14 = python3Target0.encodeIntAsCharEscape((int) (short) 1);
        boolean boolean15 = python3Target0.supportsOverloadedMethods();
        java.lang.Class<?> wildcardClass16 = python3Target0.getClass();
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\\1" + "'", str14, "\\1");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test06818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06818");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str1 = python3Target0.language;
        org.antlr.v4.codegen.target.Python3Target python3Target2 = new org.antlr.v4.codegen.target.Python3Target();
        org.stringtemplate.v4.STGroup sTGroup3 = null;
        python3Target2.templates = sTGroup3;
        java.lang.String[] strArray8 = new java.lang.String[] { "", "\\0", "" };
        java.util.LinkedHashSet<java.lang.String> strSet9 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet9, strArray8);
        python3Target2.badWords = strSet9;
        python3Target0.badWords = strSet9;
        python3Target0.language = "\"\"i\"\"";
        java.lang.String str15 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator16 = null;
        python3Target0.gen = codeGenerator16;
        java.lang.String str18 = python3Target0.getVersion();
        java.lang.String str21 = python3Target0.getTargetStringLiteralFromString("\"\"\\\"\\\"\\\"4.5.2.1\\\"\\\"\\\"\"\"", false);
        int int22 = python3Target0.getInlineTestSetWordSize();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str24 = python3Target0.getImplicitRuleLabel("\"\\\"\\\"\\\"\\\"\\\"\\\"4.5.2.1\\\"\\\"\\\"\\\"\\\"\\\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "4.5.2.1" + "'", str15, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "4.5.2.1" + "'", str18, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "\"\"\\\"\\\"\\\"4.5.2.1\\\"\\\"\\\"\"\"" + "'", str21, "\"\"\\\"\\\"\\\"4.5.2.1\\\"\\\"\\\"\"\"");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 64 + "'", int22 == 64);
    }

    @Test
    public void test06819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06819");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.getCodeGenerator();
        java.util.Set<java.lang.String> strSet4 = python3Target0.getBadWords();
        java.lang.String[] strArray5 = python3Target0.targetCharValueEscape;
        java.lang.String str7 = python3Target0.getTargetStringLiteralFromString("\"\"i\"\"");
        python3Target0.addBadWords();
        org.antlr.v4.codegen.target.Python3Target python3Target9 = new org.antlr.v4.codegen.target.Python3Target();
        int int10 = python3Target9.getInlineTestSetWordSize();
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "" };
        python3Target9.targetCharValueEscape = strArray13;
        java.util.Set<java.lang.String> strSet15 = python3Target9.badWords;
        org.stringtemplate.v4.STGroup sTGroup16 = python3Target9.templates;
        org.antlr.v4.tool.Grammar grammar17 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target18 = new org.antlr.v4.codegen.target.Python3Target();
        int int19 = python3Target18.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup20 = python3Target18.templates;
        org.antlr.v4.tool.Grammar grammar21 = null;
        int[] intArray22 = new int[] {};
        java.lang.String[] strArray23 = python3Target18.getTokenTypesAsTargetLabels(grammar21, intArray22);
        java.lang.String[] strArray24 = python3Target9.getTokenTypesAsTargetLabels(grammar17, intArray22);
        python3Target0.targetCharValueEscape = strArray24;
        java.lang.String[] strArray26 = python3Target0.targetCharValueEscape;
        org.antlr.v4.codegen.CodeGenerator codeGenerator27 = null;
        java.lang.String str30 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator27, "\"\"\"\"#\"\"\"\"", true);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str32 = python3Target0.getAltLabelContextStructName("\\\"5.2\\\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"\"\"i\"\"\"" + "'", str7, "\"\"\"i\"\"\"");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 64 + "'", int10 == 64);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertNull(sTGroup16);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 64 + "'", int19 == 64);
        org.junit.Assert.assertNull(sTGroup20);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[]");
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "\"\\\"\\\"\\\"#\\\"\\\"\\\"\"" + "'", str30, "\"\\\"\\\"\\\"#\\\"\\\"\\\"\"");
    }

    @Test
    public void test06820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06820");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        org.stringtemplate.v4.STGroup sTGroup3 = python3Target0.templates;
        java.lang.String str5 = python3Target0.getTargetStringLiteralFromString("\"hi!\"");
        java.lang.String str7 = python3Target0.getTargetStringLiteralFromString("");
        org.stringtemplate.v4.STGroup sTGroup8 = python3Target0.templates;
        java.util.Set<java.lang.String> strSet9 = python3Target0.getBadWords();
        boolean boolean10 = python3Target0.wantsBaseListener();
        java.util.Set<java.lang.String> strSet11 = python3Target0.badWords;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(sTGroup3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\"\"hi!\"\"" + "'", str5, "\"\"hi!\"\"");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"\"" + "'", str7, "\"\"");
        org.junit.Assert.assertNull(sTGroup8);
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strSet11);
    }

    @Test
    public void test06821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06821");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "", true);
        java.lang.String str8 = python3Target0.encodeIntAsCharEscape((int) (short) 100);
        org.stringtemplate.v4.STGroup sTGroup9 = python3Target0.templates;
        org.stringtemplate.v4.STGroup sTGroup10 = null;
        python3Target0.templates = sTGroup10;
        java.lang.String str12 = python3Target0.getVersion();
        org.antlr.v4.tool.Grammar grammar13 = null;
        org.stringtemplate.v4.ST sT14 = null;
        python3Target0.genRecognizerHeaderFile(grammar13, sT14, "\"\"\\\"hi!\\\"\"\"");
        python3Target0.addBadWords();
        int int18 = python3Target0.getSerializedATNSegmentLimit();
        // The following exception was thrown during execution in test generation
        try {
            org.stringtemplate.v4.STGroup sTGroup19 = python3Target0.getTemplates();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"" + "'", str6, "\"\"");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "d" + "'", str8, "d");
        org.junit.Assert.assertNull(sTGroup9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "4.5.2.1" + "'", str12, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 29 + "'", int18 == 29);
    }

    @Test
    public void test06822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06822");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str2 = python3Target0.getTargetStringLiteralFromString("\"\"");
        int int3 = python3Target0.getInlineTestSetWordSize();
        boolean boolean4 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup5 = python3Target0.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = python3Target0.getCodeGenerator();
        org.antlr.v4.tool.Grammar grammar7 = null;
        org.stringtemplate.v4.ST sT8 = null;
        python3Target0.genRecognizerHeaderFile(grammar7, sT8, "\"4.5.2.1\"");
        java.util.Set<java.lang.String> strSet11 = python3Target0.badWords;
        boolean boolean12 = python3Target0.templatesExist();
        boolean boolean13 = python3Target0.supportsOverloadedMethods();
        java.lang.String str14 = python3Target0.language;
        org.antlr.v4.tool.ast.GrammarAST grammarAST15 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean16 = python3Target0.grammarSymbolCausesIssueInGeneratedCode(grammarAST15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "\"\"\"\"" + "'", str2, "\"\"\"\"");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 64 + "'", int3 == 64);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(sTGroup5);
        org.junit.Assert.assertNull(codeGenerator6);
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(str14);
    }

    @Test
    public void test06823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06823");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        java.lang.String str3 = python3Target0.getVersion();
        int int4 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str5 = python3Target0.getLanguage();
        java.lang.String str6 = python3Target0.getLanguage();
        java.lang.String str7 = python3Target0.getVersion();
        java.lang.String str9 = python3Target0.getTargetStringLiteralFromString("\\\"\\\"\\\"4.5.2.1\\\"\\\"\\\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = python3Target0.getCodeGenerator();
        java.lang.String str11 = python3Target0.language;
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = python3Target0.gen;
        int int13 = python3Target0.getSerializedATNSegmentLimit();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "4.5.2.1" + "'", str3, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4.5.2.1" + "'", str7, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\\\"\\\"\\\"4.5.2.1\\\"\\\"\\\"\"" + "'", str9, "\"\\\"\\\"\\\"4.5.2.1\\\"\\\"\\\"\"");
        org.junit.Assert.assertNull(codeGenerator10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(codeGenerator12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 29 + "'", int13 == 29);
    }

    @Test
    public void test06824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06824");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        org.stringtemplate.v4.STGroup sTGroup1 = null;
        python3Target0.templates = sTGroup1;
        java.lang.String[] strArray6 = new java.lang.String[] { "", "\\0", "" };
        java.util.LinkedHashSet<java.lang.String> strSet7 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet7, strArray6);
        python3Target0.badWords = strSet7;
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        java.lang.String str13 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator10, "\\1", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = python3Target0.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator15 = null;
        java.lang.String str18 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator15, "d", false);
        org.antlr.v4.codegen.target.Python3Target python3Target19 = new org.antlr.v4.codegen.target.Python3Target();
        int int20 = python3Target19.getInlineTestSetWordSize();
        java.lang.String str21 = python3Target19.language;
        java.lang.String str22 = python3Target19.getVersion();
        int int23 = python3Target19.getInlineTestSetWordSize();
        java.lang.String str24 = python3Target19.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator25 = python3Target19.gen;
        org.antlr.v4.tool.Grammar grammar26 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target27 = new org.antlr.v4.codegen.target.Python3Target();
        int int28 = python3Target27.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup29 = python3Target27.templates;
        org.antlr.v4.tool.Grammar grammar30 = null;
        int[] intArray31 = new int[] {};
        java.lang.String[] strArray32 = python3Target27.getTokenTypesAsTargetLabels(grammar30, intArray31);
        java.lang.String[] strArray33 = python3Target19.getTokenTypesAsTargetLabels(grammar26, intArray31);
        java.lang.String str34 = python3Target19.getLanguage();
        java.lang.String str35 = python3Target19.getLanguage();
        java.lang.String str37 = python3Target19.getTargetStringLiteralFromString("\"i\"");
        java.lang.String str39 = python3Target19.getTargetStringLiteralFromString("\"4.5.2.1\"");
        int int40 = python3Target19.getSerializedATNSegmentLimit();
        org.antlr.v4.codegen.target.Python3Target python3Target41 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str43 = python3Target41.getTargetStringLiteralFromString("\"\"");
        int int44 = python3Target41.getInlineTestSetWordSize();
        boolean boolean45 = python3Target41.supportsOverloadedMethods();
        java.lang.String str47 = python3Target41.getTargetStringLiteralFromString("\"i\"");
        python3Target41.addBadWords();
        org.antlr.v4.codegen.target.Python3Target python3Target49 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str50 = python3Target49.language;
        java.lang.String[] strArray51 = python3Target49.targetCharValueEscape;
        python3Target41.targetCharValueEscape = strArray51;
        org.stringtemplate.v4.STGroup sTGroup53 = null;
        python3Target41.templates = sTGroup53;
        org.antlr.v4.codegen.target.Python3Target python3Target55 = new org.antlr.v4.codegen.target.Python3Target();
        int int56 = python3Target55.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup57 = python3Target55.templates;
        org.antlr.v4.codegen.target.Python3Target python3Target58 = new org.antlr.v4.codegen.target.Python3Target();
        int int59 = python3Target58.getInlineTestSetWordSize();
        java.lang.String[] strArray62 = new java.lang.String[] { "hi!", "" };
        python3Target58.targetCharValueEscape = strArray62;
        python3Target55.targetCharValueEscape = strArray62;
        python3Target41.targetCharValueEscape = strArray62;
        python3Target19.targetCharValueEscape = strArray62;
        python3Target0.targetCharValueEscape = strArray62;
        boolean boolean68 = python3Target0.templatesExist();
        java.lang.String[] strArray69 = python3Target0.targetCharValueEscape;
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray69;
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNull(codeGenerator14);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 64 + "'", int20 == 64);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "4.5.2.1" + "'", str22, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 64 + "'", int23 == 64);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(codeGenerator25);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 64 + "'", int28 == 64);
        org.junit.Assert.assertNull(sTGroup29);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[]");
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "\"\"i\"\"" + "'", str37, "\"\"i\"\"");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "\"\"4.5.2.1\"\"" + "'", str39, "\"\"4.5.2.1\"\"");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 29 + "'", int40 == 29);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "\"\"\"\"" + "'", str43, "\"\"\"\"");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 64 + "'", int44 == 64);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "\"\"i\"\"" + "'", str47, "\"\"i\"\"");
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 64 + "'", int56 == 64);
        org.junit.Assert.assertNull(sTGroup57);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 64 + "'", int59 == 64);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(strArray69);
    }

    @Test
    public void test06825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06825");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        org.stringtemplate.v4.STGroup sTGroup1 = null;
        python3Target0.templates = sTGroup1;
        java.lang.String[] strArray6 = new java.lang.String[] { "", "\\0", "" };
        java.util.LinkedHashSet<java.lang.String> strSet7 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet7, strArray6);
        python3Target0.badWords = strSet7;
        python3Target0.language = "\\0";
        org.antlr.v4.codegen.target.Python3Target python3Target12 = new org.antlr.v4.codegen.target.Python3Target();
        int int13 = python3Target12.getInlineTestSetWordSize();
        java.lang.String str14 = python3Target12.language;
        java.lang.String str15 = python3Target12.getVersion();
        org.stringtemplate.v4.STGroup sTGroup16 = null;
        python3Target12.templates = sTGroup16;
        org.antlr.v4.codegen.CodeGenerator codeGenerator18 = null;
        java.lang.String str21 = python3Target12.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator18, "d", false);
        java.util.Set<java.lang.String> strSet22 = python3Target12.getBadWords();
        python3Target0.badWords = strSet22;
        org.antlr.v4.codegen.CodeGenerator codeGenerator24 = python3Target0.gen;
        java.lang.String str26 = python3Target0.getTargetStringLiteralFromString("");
        // The following exception was thrown during execution in test generation
        try {
            org.stringtemplate.v4.STGroup sTGroup27 = python3Target0.getTemplates();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 64 + "'", int13 == 64);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "4.5.2.1" + "'", str15, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertNull(codeGenerator24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\"\"" + "'", str26, "\"\"");
    }

    @Test
    public void test06826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06826");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        boolean boolean2 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.gen;
        boolean boolean4 = python3Target0.wantsBaseVisitor();
        java.lang.String str5 = python3Target0.language;
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromString("\\0", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = null;
        python3Target0.gen = codeGenerator9;
        java.lang.String str11 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = python3Target0.gen;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\\0" + "'", str8, "\\0");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "4.5.2.1" + "'", str11, "4.5.2.1");
        org.junit.Assert.assertNull(codeGenerator12);
    }

    @Test
    public void test06827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06827");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        java.lang.String str3 = python3Target0.getVersion();
        int int4 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromString("@");
        python3Target0.language = "d";
        boolean boolean9 = python3Target0.wantsBaseListener();
        java.lang.String str11 = python3Target0.getTargetStringLiteralFromString("");
        python3Target0.addBadWords();
        org.antlr.v4.codegen.target.Python3Target python3Target13 = new org.antlr.v4.codegen.target.Python3Target();
        int int14 = python3Target13.getInlineTestSetWordSize();
        java.lang.String str15 = python3Target13.language;
        java.lang.String str16 = python3Target13.getVersion();
        int int17 = python3Target13.getInlineTestSetWordSize();
        java.lang.String str18 = python3Target13.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator19 = python3Target13.gen;
        org.antlr.v4.tool.Grammar grammar20 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target21 = new org.antlr.v4.codegen.target.Python3Target();
        int int22 = python3Target21.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup23 = python3Target21.templates;
        org.antlr.v4.tool.Grammar grammar24 = null;
        int[] intArray25 = new int[] {};
        java.lang.String[] strArray26 = python3Target21.getTokenTypesAsTargetLabels(grammar24, intArray25);
        java.lang.String[] strArray27 = python3Target13.getTokenTypesAsTargetLabels(grammar20, intArray25);
        java.lang.String str30 = python3Target13.getTargetStringLiteralFromString("", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator31 = null;
        java.lang.String str34 = python3Target13.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator31, "\"i\"", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator35 = python3Target13.gen;
        python3Target13.language = "\"\"\"\\\"\\\"\"\"\"";
        java.util.Set<java.lang.String> strSet38 = python3Target13.getBadWords();
        java.util.Set<java.lang.String> strSet39 = python3Target13.getBadWords();
        python3Target0.badWords = strSet39;
        org.antlr.v4.tool.ast.GrammarAST grammarAST41 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean42 = python3Target0.grammarSymbolCausesIssueInGeneratedCode(grammarAST41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "4.5.2.1" + "'", str3, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"@\"" + "'", str6, "\"@\"");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"\"" + "'", str11, "\"\"");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 64 + "'", int14 == 64);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "4.5.2.1" + "'", str16, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 64 + "'", int17 == 64);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(codeGenerator19);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 64 + "'", int22 == 64);
        org.junit.Assert.assertNull(sTGroup23);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]");
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "\"i\"" + "'", str34, "\"i\"");
        org.junit.Assert.assertNull(codeGenerator35);
        org.junit.Assert.assertNotNull(strSet38);
        org.junit.Assert.assertNotNull(strSet39);
    }

    @Test
    public void test06828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06828");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        boolean boolean2 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.gen;
        boolean boolean4 = python3Target0.wantsBaseVisitor();
        java.lang.String str5 = python3Target0.getLanguage();
        java.lang.String str6 = python3Target0.getVersion();
        python3Target0.addBadWords();
        int int8 = python3Target0.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet9 = python3Target0.badWords;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "4.5.2.1" + "'", str6, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 64 + "'", int8 == 64);
        org.junit.Assert.assertNotNull(strSet9);
    }

    @Test
    public void test06829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06829");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.badWords;
        java.lang.String str3 = python3Target1.getLanguage();
        java.lang.String str5 = python3Target1.getImplicitRuleLabel("\\\"1\\\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        python3Target1.gen = codeGenerator6;
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Python3" + "'", str3, "Python3");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "_\\\"1\\\"" + "'", str5, "_\\\"1\\\"");
    }

    @Test
    public void test06830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06830");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        boolean boolean3 = python3Target0.templatesExist();
        org.antlr.v4.tool.Grammar grammar4 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target5 = new org.antlr.v4.codegen.target.Python3Target();
        int int6 = python3Target5.getInlineTestSetWordSize();
        boolean boolean7 = python3Target5.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target5.gen;
        boolean boolean9 = python3Target5.wantsBaseVisitor();
        boolean boolean10 = python3Target5.supportsOverloadedMethods();
        java.lang.String str13 = python3Target5.getTargetStringLiteralFromString("\\0", false);
        boolean boolean14 = python3Target5.templatesExist();
        python3Target5.addBadWords();
        org.antlr.v4.tool.Grammar grammar16 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target17 = new org.antlr.v4.codegen.target.Python3Target();
        int int18 = python3Target17.getInlineTestSetWordSize();
        java.lang.String str19 = python3Target17.language;
        java.lang.String str20 = python3Target17.getVersion();
        int int21 = python3Target17.getInlineTestSetWordSize();
        java.lang.String str22 = python3Target17.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator23 = python3Target17.gen;
        org.antlr.v4.tool.Grammar grammar24 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target25 = new org.antlr.v4.codegen.target.Python3Target();
        int int26 = python3Target25.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup27 = python3Target25.templates;
        org.antlr.v4.tool.Grammar grammar28 = null;
        int[] intArray29 = new int[] {};
        java.lang.String[] strArray30 = python3Target25.getTokenTypesAsTargetLabels(grammar28, intArray29);
        java.lang.String[] strArray31 = python3Target17.getTokenTypesAsTargetLabels(grammar24, intArray29);
        java.lang.String[] strArray32 = python3Target5.getTokenTypesAsTargetLabels(grammar16, intArray29);
        java.lang.String[] strArray33 = python3Target0.getTokenTypesAsTargetLabels(grammar4, intArray29);
        org.antlr.v4.codegen.target.Python3Target python3Target34 = new org.antlr.v4.codegen.target.Python3Target();
        int int35 = python3Target34.getInlineTestSetWordSize();
        java.lang.String str36 = python3Target34.language;
        java.lang.String str37 = python3Target34.getVersion();
        int int38 = python3Target34.getInlineTestSetWordSize();
        java.lang.String str39 = python3Target34.getLanguage();
        java.lang.String str42 = python3Target34.getTargetStringLiteralFromString("4.5.2.1", true);
        java.util.Set<java.lang.String> strSet43 = python3Target34.getBadWords();
        java.lang.String str45 = python3Target34.encodeIntAsCharEscape(29);
        org.antlr.v4.tool.Grammar grammar46 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target47 = new org.antlr.v4.codegen.target.Python3Target();
        int int48 = python3Target47.getInlineTestSetWordSize();
        java.lang.String str49 = python3Target47.language;
        java.lang.String str50 = python3Target47.getVersion();
        boolean boolean51 = python3Target47.wantsBaseListener();
        org.antlr.v4.tool.Grammar grammar52 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target53 = new org.antlr.v4.codegen.target.Python3Target();
        int int54 = python3Target53.getInlineTestSetWordSize();
        java.lang.String str55 = python3Target53.language;
        org.stringtemplate.v4.STGroup sTGroup56 = python3Target53.templates;
        java.lang.String str58 = python3Target53.getTargetStringLiteralFromString("\"hi!\"");
        java.lang.String str60 = python3Target53.getTargetStringLiteralFromString("");
        org.antlr.v4.tool.Grammar grammar61 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target62 = new org.antlr.v4.codegen.target.Python3Target();
        int int63 = python3Target62.getInlineTestSetWordSize();
        boolean boolean64 = python3Target62.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator65 = python3Target62.gen;
        boolean boolean66 = python3Target62.wantsBaseVisitor();
        boolean boolean67 = python3Target62.supportsOverloadedMethods();
        java.lang.String str70 = python3Target62.getTargetStringLiteralFromString("\\0", false);
        boolean boolean71 = python3Target62.templatesExist();
        python3Target62.addBadWords();
        org.antlr.v4.tool.Grammar grammar73 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target74 = new org.antlr.v4.codegen.target.Python3Target();
        int int75 = python3Target74.getInlineTestSetWordSize();
        java.lang.String str76 = python3Target74.language;
        java.lang.String str77 = python3Target74.getVersion();
        int int78 = python3Target74.getInlineTestSetWordSize();
        java.lang.String str79 = python3Target74.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator80 = python3Target74.gen;
        org.antlr.v4.tool.Grammar grammar81 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target82 = new org.antlr.v4.codegen.target.Python3Target();
        int int83 = python3Target82.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup84 = python3Target82.templates;
        org.antlr.v4.tool.Grammar grammar85 = null;
        int[] intArray86 = new int[] {};
        java.lang.String[] strArray87 = python3Target82.getTokenTypesAsTargetLabels(grammar85, intArray86);
        java.lang.String[] strArray88 = python3Target74.getTokenTypesAsTargetLabels(grammar81, intArray86);
        java.lang.String[] strArray89 = python3Target62.getTokenTypesAsTargetLabels(grammar73, intArray86);
        java.lang.String[] strArray90 = python3Target53.getTokenTypesAsTargetLabels(grammar61, intArray86);
        java.lang.String[] strArray91 = python3Target47.getTokenTypesAsTargetLabels(grammar52, intArray86);
        java.lang.String[] strArray92 = python3Target34.getTokenTypesAsTargetLabels(grammar46, intArray86);
        python3Target0.targetCharValueEscape = strArray92;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 64 + "'", int6 == 64);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\\0" + "'", str13, "\\0");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 64 + "'", int18 == 64);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "4.5.2.1" + "'", str20, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 64 + "'", int21 == 64);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(codeGenerator23);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 64 + "'", int26 == 64);
        org.junit.Assert.assertNull(sTGroup27);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[]");
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 64 + "'", int35 == 64);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "4.5.2.1" + "'", str37, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 64 + "'", int38 == 64);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "\"4.5.2.1\"" + "'", str42, "\"4.5.2.1\"");
        org.junit.Assert.assertNotNull(strSet43);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "\\35" + "'", str45, "\\35");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 64 + "'", int48 == 64);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "4.5.2.1" + "'", str50, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 64 + "'", int54 == 64);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNull(sTGroup56);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "\"\"hi!\"\"" + "'", str58, "\"\"hi!\"\"");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "\"\"" + "'", str60, "\"\"");
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 64 + "'", int63 == 64);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNull(codeGenerator65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "\\0" + "'", str70, "\\0");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 64 + "'", int75 == 64);
        org.junit.Assert.assertNull(str76);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "4.5.2.1" + "'", str77, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 64 + "'", int78 == 64);
        org.junit.Assert.assertNull(str79);
        org.junit.Assert.assertNull(codeGenerator80);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 64 + "'", int83 == 64);
        org.junit.Assert.assertNull(sTGroup84);
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[]");
        org.junit.Assert.assertNotNull(strArray87);
        org.junit.Assert.assertNotNull(strArray88);
        org.junit.Assert.assertNotNull(strArray89);
        org.junit.Assert.assertNotNull(strArray90);
        org.junit.Assert.assertNotNull(strArray91);
        org.junit.Assert.assertNotNull(strArray92);
    }

    @Test
    public void test06831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06831");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!", "" };
        python3Target0.targetCharValueEscape = strArray4;
        java.util.Set<java.lang.String> strSet6 = python3Target0.badWords;
        org.stringtemplate.v4.STGroup sTGroup7 = python3Target0.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target0.gen;
        java.util.Set<java.lang.String> strSet9 = python3Target0.getBadWords();
        python3Target0.addBadWords();
        org.stringtemplate.v4.STGroup sTGroup11 = null;
        python3Target0.templates = sTGroup11;
        java.lang.String str14 = python3Target0.getTargetStringLiteralFromString("\"\"64\"\"");
        boolean boolean15 = python3Target0.wantsBaseVisitor();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertNull(sTGroup7);
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\"\"\"64\"\"\"" + "'", str14, "\"\"\"64\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test06832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06832");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        java.lang.String str3 = python3Target0.getVersion();
        int int4 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str5 = python3Target0.getLanguage();
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromString("4.5.2.1", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = null;
        python3Target0.gen = codeGenerator9;
        org.antlr.v4.codegen.target.Python3Target python3Target11 = new org.antlr.v4.codegen.target.Python3Target();
        int int12 = python3Target11.getInlineTestSetWordSize();
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!", "" };
        python3Target11.targetCharValueEscape = strArray15;
        java.lang.String[] strArray17 = python3Target11.targetCharValueEscape;
        python3Target11.addBadWords();
        org.antlr.v4.codegen.target.Python3Target python3Target19 = new org.antlr.v4.codegen.target.Python3Target();
        int int20 = python3Target19.getInlineTestSetWordSize();
        java.lang.String str21 = python3Target19.language;
        org.antlr.v4.codegen.CodeGenerator codeGenerator22 = null;
        java.lang.String str25 = python3Target19.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator22, "", true);
        org.antlr.v4.tool.Grammar grammar26 = null;
        org.stringtemplate.v4.ST sT27 = null;
        python3Target19.genRecognizerHeaderFile(grammar26, sT27, "");
        org.antlr.v4.tool.Grammar grammar30 = null;
        org.stringtemplate.v4.ST sT31 = null;
        python3Target19.genRecognizerHeaderFile(grammar30, sT31, "\"i\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator34 = python3Target19.gen;
        org.antlr.v4.codegen.CodeGenerator codeGenerator35 = null;
        python3Target19.gen = codeGenerator35;
        java.lang.String str38 = python3Target19.encodeIntAsCharEscape(1);
        org.antlr.v4.tool.Grammar grammar39 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target40 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str42 = python3Target40.encodeIntAsCharEscape(100);
        org.antlr.v4.tool.Grammar grammar43 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target44 = new org.antlr.v4.codegen.target.Python3Target();
        int int45 = python3Target44.getInlineTestSetWordSize();
        java.lang.String str46 = python3Target44.language;
        java.lang.String str47 = python3Target44.getVersion();
        int int48 = python3Target44.getInlineTestSetWordSize();
        java.lang.String str49 = python3Target44.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator50 = python3Target44.gen;
        org.antlr.v4.tool.Grammar grammar51 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target52 = new org.antlr.v4.codegen.target.Python3Target();
        int int53 = python3Target52.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup54 = python3Target52.templates;
        org.antlr.v4.tool.Grammar grammar55 = null;
        int[] intArray56 = new int[] {};
        java.lang.String[] strArray57 = python3Target52.getTokenTypesAsTargetLabels(grammar55, intArray56);
        java.lang.String[] strArray58 = python3Target44.getTokenTypesAsTargetLabels(grammar51, intArray56);
        java.lang.String[] strArray59 = python3Target40.getTokenTypesAsTargetLabels(grammar43, intArray56);
        java.lang.String[] strArray60 = python3Target19.getTokenTypesAsTargetLabels(grammar39, intArray56);
        python3Target11.targetCharValueEscape = strArray60;
        python3Target0.targetCharValueEscape = strArray60;
        java.lang.String str63 = python3Target0.language;
        boolean boolean64 = python3Target0.wantsBaseVisitor();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "4.5.2.1" + "'", str3, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"4.5.2.1\"" + "'", str8, "\"4.5.2.1\"");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 64 + "'", int12 == 64);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 64 + "'", int20 == 64);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "\"\"" + "'", str25, "\"\"");
        org.junit.Assert.assertNull(codeGenerator34);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "\\1" + "'", str38, "\\1");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "d" + "'", str42, "d");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 64 + "'", int45 == 64);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "4.5.2.1" + "'", str47, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 64 + "'", int48 == 64);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNull(codeGenerator50);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 64 + "'", int53 == 64);
        org.junit.Assert.assertNull(sTGroup54);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[]");
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
    }

    @Test
    public void test06833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06833");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        java.lang.String str3 = python3Target0.getLanguage();
        java.lang.String str5 = python3Target0.getTargetStringLiteralFromString("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        java.lang.String str9 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator6, "hi!", true);
        int int10 = python3Target0.getSerializedATNSegmentLimit();
        boolean boolean11 = python3Target0.templatesExist();
        org.stringtemplate.v4.STGroup sTGroup12 = null;
        python3Target0.templates = sTGroup12;
        java.lang.String[] strArray14 = python3Target0.targetCharValueEscape;
        boolean boolean15 = python3Target0.supportsOverloadedMethods();
        boolean boolean16 = python3Target0.supportsOverloadedMethods();
        python3Target0.language = "\\\"1\\\"";
        java.lang.String[] strArray19 = python3Target0.targetCharValueEscape;
        org.antlr.v4.codegen.CodeGenerator codeGenerator20 = null;
        java.lang.String str23 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator20, "\"\\\"\\\"\\\"0\\\"\\\"\\\"\"", false);
        boolean boolean24 = python3Target0.templatesExist();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str26 = python3Target0.getListLabel("\"64\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\"\"" + "'", str5, "\"\"");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"i\"" + "'", str9, "\"i\"");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 29 + "'", int10 == 29);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "\\\"\\\"\\\"0\\\"\\\"\\\"" + "'", str23, "\\\"\\\"\\\"0\\\"\\\"\\\"");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test06834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06834");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str2 = python3Target0.getTargetStringLiteralFromString("\"\"");
        int int3 = python3Target0.getInlineTestSetWordSize();
        boolean boolean4 = python3Target0.supportsOverloadedMethods();
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromString("\"i\"");
        python3Target0.addBadWords();
        org.antlr.v4.codegen.target.Python3Target python3Target8 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str9 = python3Target8.language;
        java.lang.String[] strArray10 = python3Target8.targetCharValueEscape;
        python3Target0.targetCharValueEscape = strArray10;
        boolean boolean12 = python3Target0.wantsBaseVisitor();
        java.lang.String str14 = python3Target0.encodeIntAsCharEscape(1);
        org.antlr.v4.codegen.target.Python3Target python3Target15 = new org.antlr.v4.codegen.target.Python3Target();
        int int16 = python3Target15.getInlineTestSetWordSize();
        java.lang.String str17 = python3Target15.language;
        java.lang.String str18 = python3Target15.getLanguage();
        java.lang.String str20 = python3Target15.getTargetStringLiteralFromString("");
        java.lang.String str21 = python3Target15.getVersion();
        org.antlr.v4.codegen.target.Python3Target python3Target22 = new org.antlr.v4.codegen.target.Python3Target();
        int int23 = python3Target22.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup24 = python3Target22.templates;
        org.antlr.v4.tool.Grammar grammar25 = null;
        int[] intArray26 = new int[] {};
        java.lang.String[] strArray27 = python3Target22.getTokenTypesAsTargetLabels(grammar25, intArray26);
        python3Target15.targetCharValueEscape = strArray27;
        org.antlr.v4.codegen.target.Python3Target python3Target29 = new org.antlr.v4.codegen.target.Python3Target();
        int int30 = python3Target29.getInlineTestSetWordSize();
        java.lang.String str31 = python3Target29.language;
        org.antlr.v4.codegen.CodeGenerator codeGenerator32 = python3Target29.getCodeGenerator();
        java.util.Set<java.lang.String> strSet33 = python3Target29.getBadWords();
        java.lang.String[] strArray34 = python3Target29.targetCharValueEscape;
        python3Target15.targetCharValueEscape = strArray34;
        java.lang.String str36 = python3Target15.getVersion();
        org.antlr.v4.codegen.target.Python3Target python3Target37 = new org.antlr.v4.codegen.target.Python3Target();
        org.stringtemplate.v4.STGroup sTGroup38 = null;
        python3Target37.templates = sTGroup38;
        java.lang.String[] strArray43 = new java.lang.String[] { "", "\\0", "" };
        java.util.LinkedHashSet<java.lang.String> strSet44 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet44, strArray43);
        python3Target37.badWords = strSet44;
        java.lang.String str49 = python3Target37.getTargetStringLiteralFromString("hi!", true);
        java.util.Set<java.lang.String> strSet50 = python3Target37.badWords;
        python3Target15.badWords = strSet50;
        java.lang.String str53 = python3Target15.getTargetStringLiteralFromString("\"\"");
        java.lang.String str56 = python3Target15.getTargetStringLiteralFromString("\"\"\"\\1\"\"\"", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator57 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target58 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator57);
        int int59 = python3Target58.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup60 = python3Target58.loadTemplates();
        python3Target15.templates = sTGroup60;
        python3Target0.templates = sTGroup60;
        java.lang.String str64 = python3Target0.encodeIntAsCharEscape((int) (byte) 100);
        java.util.Set<java.lang.String> strSet65 = python3Target0.badWords;
        java.lang.String str67 = python3Target0.encodeIntAsCharEscape((int) (byte) 100);
        org.stringtemplate.v4.STGroup sTGroup68 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar69 = null;
        org.stringtemplate.v4.ST sT70 = null;
        python3Target0.genRecognizerHeaderFile(grammar69, sT70, "\\\"12\\\"");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "\"\"\"\"" + "'", str2, "\"\"\"\"");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 64 + "'", int3 == 64);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"i\"\"" + "'", str6, "\"\"i\"\"");
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\\1" + "'", str14, "\\1");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 64 + "'", int16 == 64);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "\"\"" + "'", str20, "\"\"");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "4.5.2.1" + "'", str21, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 64 + "'", int23 == 64);
        org.junit.Assert.assertNull(sTGroup24);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[]");
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 64 + "'", int30 == 64);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNull(codeGenerator32);
        org.junit.Assert.assertNotNull(strSet33);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "4.5.2.1" + "'", str36, "4.5.2.1");
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "\"hi!\"" + "'", str49, "\"hi!\"");
        org.junit.Assert.assertNotNull(strSet50);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "\"\"\"\"" + "'", str53, "\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "\"\"\"\"\\1\"\"\"\"" + "'", str56, "\"\"\"\"\\1\"\"\"\"");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 64 + "'", int59 == 64);
        org.junit.Assert.assertNotNull(sTGroup60);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "d" + "'", str64, "d");
        org.junit.Assert.assertNotNull(strSet65);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "d" + "'", str67, "d");
        org.junit.Assert.assertNotNull(sTGroup68);
    }

    @Test
    public void test06835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06835");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str2 = python3Target0.getTargetStringLiteralFromString("\"\"");
        int int3 = python3Target0.getInlineTestSetWordSize();
        boolean boolean4 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup5 = python3Target0.templates;
        java.lang.String str7 = python3Target0.getTargetStringLiteralFromString("\"\"\"\"");
        int int8 = python3Target0.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = null;
        java.lang.String str12 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator9, "\\64", true);
        org.antlr.v4.tool.Grammar grammar13 = null;
        org.stringtemplate.v4.ST sT14 = null;
        python3Target0.genRecognizerHeaderFile(grammar13, sT14, "12");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "\"\"\"\"" + "'", str2, "\"\"\"\"");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 64 + "'", int3 == 64);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(sTGroup5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"\"\"\"\"\"" + "'", str7, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 64 + "'", int8 == 64);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"6\"" + "'", str12, "\"6\"");
    }

    @Test
    public void test06836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06836");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.wantsBaseVisitor();
        org.antlr.v4.codegen.CodeGenerator codeGenerator2 = null;
        python3Target0.gen = codeGenerator2;
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = python3Target0.gen;
        java.util.Set<java.lang.String> strSet5 = python3Target0.badWords;
        org.antlr.v4.codegen.target.Python3Target python3Target6 = new org.antlr.v4.codegen.target.Python3Target();
        int int7 = python3Target6.getInlineTestSetWordSize();
        java.lang.String str8 = python3Target6.language;
        java.lang.String str9 = python3Target6.getVersion();
        int int10 = python3Target6.getInlineTestSetWordSize();
        java.lang.String str11 = python3Target6.getLanguage();
        java.lang.String str14 = python3Target6.getTargetStringLiteralFromString("4.5.2.1", true);
        boolean boolean15 = python3Target6.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet16 = python3Target6.badWords;
        org.antlr.v4.tool.Grammar grammar17 = null;
        org.stringtemplate.v4.ST sT18 = null;
        python3Target6.genRecognizerHeaderFile(grammar17, sT18, "\"4.5.2.1\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator21 = null;
        java.lang.String str24 = python3Target6.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator21, "i", true);
        org.antlr.v4.codegen.target.Python3Target python3Target25 = new org.antlr.v4.codegen.target.Python3Target();
        org.stringtemplate.v4.STGroup sTGroup26 = null;
        python3Target25.templates = sTGroup26;
        java.lang.String[] strArray31 = new java.lang.String[] { "", "\\0", "" };
        java.util.LinkedHashSet<java.lang.String> strSet32 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet32, strArray31);
        python3Target25.badWords = strSet32;
        python3Target6.badWords = strSet32;
        python3Target0.badWords = strSet32;
        boolean boolean37 = python3Target0.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup38 = python3Target0.templates;
        java.lang.String str39 = python3Target0.getVersion();
        org.antlr.v4.tool.Grammar grammar40 = null;
        org.stringtemplate.v4.ST sT41 = null;
        // The following exception was thrown during execution in test generation
        try {
            python3Target0.genFile(grammar40, sT41, "\"\\\"\\\"\\\"d\\\"\\\"\\\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(codeGenerator4);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 64 + "'", int7 == 64);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "4.5.2.1" + "'", str9, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 64 + "'", int10 == 64);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\"4.5.2.1\"" + "'", str14, "\"4.5.2.1\"");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "\"\"" + "'", str24, "\"\"");
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(sTGroup38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "4.5.2.1" + "'", str39, "4.5.2.1");
    }

    @Test
    public void test06837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06837");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        java.lang.String str3 = python3Target0.getVersion();
        int int4 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str5 = python3Target0.getLanguage();
        boolean boolean6 = python3Target0.templatesExist();
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        python3Target0.gen = codeGenerator7;
        python3Target0.language = "\"\"\"\"\"\"4.5.2.1\"\"\"\"\"\"";
        org.antlr.v4.tool.ast.GrammarAST grammarAST11 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean12 = python3Target0.visibleGrammarSymbolCausesIssueInGeneratedCode(grammarAST11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "4.5.2.1" + "'", str3, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test06838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06838");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        java.lang.String str3 = python3Target0.getVersion();
        int int4 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str5 = python3Target0.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = python3Target0.gen;
        python3Target0.addBadWords();
        python3Target0.language = "\\0";
        boolean boolean10 = python3Target0.wantsBaseVisitor();
        org.antlr.v4.codegen.target.Python3Target python3Target11 = new org.antlr.v4.codegen.target.Python3Target();
        int int12 = python3Target11.getInlineTestSetWordSize();
        java.lang.String str13 = python3Target11.language;
        java.lang.String str14 = python3Target11.getVersion();
        int int15 = python3Target11.getInlineTestSetWordSize();
        java.lang.String str16 = python3Target11.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = python3Target11.gen;
        org.antlr.v4.tool.Grammar grammar18 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target19 = new org.antlr.v4.codegen.target.Python3Target();
        int int20 = python3Target19.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup21 = python3Target19.templates;
        org.antlr.v4.tool.Grammar grammar22 = null;
        int[] intArray23 = new int[] {};
        java.lang.String[] strArray24 = python3Target19.getTokenTypesAsTargetLabels(grammar22, intArray23);
        java.lang.String[] strArray25 = python3Target11.getTokenTypesAsTargetLabels(grammar18, intArray23);
        java.lang.String str26 = python3Target11.getLanguage();
        java.lang.String str27 = python3Target11.getLanguage();
        java.lang.String str29 = python3Target11.getTargetStringLiteralFromString("\"i\"");
        java.util.Set<java.lang.String> strSet30 = python3Target11.badWords;
        python3Target0.badWords = strSet30;
        org.antlr.v4.codegen.CodeGenerator codeGenerator32 = null;
        python3Target0.gen = codeGenerator32;
        java.util.Set<java.lang.String> strSet34 = python3Target0.getBadWords();
        java.util.Set<java.lang.String> strSet35 = python3Target0.getBadWords();
        org.antlr.v4.tool.Grammar grammar36 = null;
        org.stringtemplate.v4.ST sT37 = null;
        // The following exception was thrown during execution in test generation
        try {
            python3Target0.genFile(grammar36, sT37, "d");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "4.5.2.1" + "'", str3, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(codeGenerator6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 64 + "'", int12 == 64);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "4.5.2.1" + "'", str14, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 64 + "'", int15 == 64);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(codeGenerator17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 64 + "'", int20 == 64);
        org.junit.Assert.assertNull(sTGroup21);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[]");
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "\"\"i\"\"" + "'", str29, "\"\"i\"\"");
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertNotNull(strSet35);
    }

    @Test
    public void test06839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06839");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        java.lang.String str3 = python3Target0.getVersion();
        int int4 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str5 = python3Target0.getLanguage();
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromString("4.5.2.1", true);
        boolean boolean9 = python3Target0.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet10 = python3Target0.badWords;
        org.antlr.v4.tool.Grammar grammar11 = null;
        org.stringtemplate.v4.ST sT12 = null;
        python3Target0.genRecognizerHeaderFile(grammar11, sT12, "\"4.5.2.1\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator15 = null;
        java.lang.String str18 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator15, "i", true);
        boolean boolean19 = python3Target0.wantsBaseVisitor();
        boolean boolean20 = python3Target0.templatesExist();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str22 = python3Target0.getElementName("");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "4.5.2.1" + "'", str3, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"4.5.2.1\"" + "'", str8, "\"4.5.2.1\"");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "\"\"" + "'", str18, "\"\"");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test06840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06840");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = python3Target0.gen;
        java.lang.String str8 = python3Target0.language;
        java.lang.String str9 = python3Target0.getVersion();
        python3Target0.language = "\"\\\"hi!\\\"\"";
        org.antlr.v4.tool.ast.GrammarAST grammarAST12 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str13 = python3Target0.getLoopLabel(grammarAST12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"" + "'", str6, "\"\"");
        org.junit.Assert.assertNull(codeGenerator7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "4.5.2.1" + "'", str9, "4.5.2.1");
    }

    @Test
    public void test06841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06841");
        org.antlr.v4.codegen.target.Python3Target.PythonStringRenderer pythonStringRenderer0 = new org.antlr.v4.codegen.target.Python3Target.PythonStringRenderer();
        java.lang.Object obj1 = null;
        java.util.Locale locale3 = null;
        java.lang.String str4 = pythonStringRenderer0.toString(obj1, "d", locale3);
        java.util.Locale locale7 = null;
        java.lang.String str8 = pythonStringRenderer0.toString((java.lang.Object) "\".5.2.\"", "@", locale7);
        org.antlr.v4.codegen.target.Python3Target python3Target9 = new org.antlr.v4.codegen.target.Python3Target();
        int int10 = python3Target9.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup11 = python3Target9.templates;
        java.util.Locale locale13 = null;
        java.lang.String str14 = pythonStringRenderer0.toString((java.lang.Object) sTGroup11, "\"\"\"hi!\"\"\"", locale13);
        java.lang.Object obj15 = null;
        java.util.Locale locale17 = null;
        java.lang.String str18 = pythonStringRenderer0.toString(obj15, "\"\"\"\"4.5.2.1\"\"\"\"", locale17);
        org.antlr.v4.codegen.target.Python3Target python3Target19 = new org.antlr.v4.codegen.target.Python3Target();
        int int20 = python3Target19.getInlineTestSetWordSize();
        java.lang.String str21 = python3Target19.language;
        org.antlr.v4.codegen.CodeGenerator codeGenerator22 = null;
        java.lang.String str25 = python3Target19.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator22, "", true);
        org.antlr.v4.tool.Grammar grammar26 = null;
        org.stringtemplate.v4.ST sT27 = null;
        python3Target19.genRecognizerHeaderFile(grammar26, sT27, "");
        java.util.Locale locale31 = null;
        java.lang.String str32 = pythonStringRenderer0.toString((java.lang.Object) sT27, "\"\"hi!\"\"", locale31);
        org.antlr.v4.codegen.target.Python3Target python3Target33 = new org.antlr.v4.codegen.target.Python3Target();
        int int34 = python3Target33.getInlineTestSetWordSize();
        java.lang.String str35 = python3Target33.language;
        org.stringtemplate.v4.STGroup sTGroup36 = python3Target33.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator37 = python3Target33.gen;
        boolean boolean38 = python3Target33.wantsBaseListener();
        org.antlr.v4.tool.Grammar grammar39 = null;
        org.stringtemplate.v4.ST sT40 = null;
        python3Target33.genRecognizerHeaderFile(grammar39, sT40, "\"4.5.2.1\"");
        boolean boolean43 = python3Target33.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet44 = python3Target33.badWords;
        java.util.Locale locale46 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str47 = pythonStringRenderer0.toString((java.lang.Object) strSet44, "\"\"\"\\\"\\\" \\\"\\\"\"\"\"", locale46);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.util.HashSet cannot be cast to java.lang.String");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "d" + "'", str4, "d");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "@" + "'", str8, "@");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 64 + "'", int10 == 64);
        org.junit.Assert.assertNull(sTGroup11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\"\"\"hi!\"\"\"" + "'", str14, "\"\"\"hi!\"\"\"");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "\"\"\"\"4.5.2.1\"\"\"\"" + "'", str18, "\"\"\"\"4.5.2.1\"\"\"\"");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 64 + "'", int20 == 64);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "\"\"" + "'", str25, "\"\"");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "\"\"hi!\"\"" + "'", str32, "\"\"hi!\"\"");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 64 + "'", int34 == 64);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(sTGroup36);
        org.junit.Assert.assertNull(codeGenerator37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(strSet44);
    }

    @Test
    public void test06842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06842");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        boolean boolean2 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.gen;
        boolean boolean4 = python3Target0.wantsBaseVisitor();
        java.lang.String str5 = python3Target0.getLanguage();
        java.lang.String str6 = python3Target0.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup7 = null;
        python3Target0.templates = sTGroup7;
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = python3Target0.gen;
        int int10 = python3Target0.getInlineTestSetWordSize();
        org.antlr.v4.codegen.target.Python3Target python3Target11 = new org.antlr.v4.codegen.target.Python3Target();
        int int12 = python3Target11.getInlineTestSetWordSize();
        java.lang.String str13 = python3Target11.language;
        java.lang.String str14 = python3Target11.getVersion();
        int int15 = python3Target11.getInlineTestSetWordSize();
        java.lang.String str16 = python3Target11.getLanguage();
        java.lang.String str19 = python3Target11.getTargetStringLiteralFromString("4.5.2.1", true);
        java.util.Set<java.lang.String> strSet20 = python3Target11.badWords;
        int int21 = python3Target11.getSerializedATNSegmentLimit();
        java.lang.String str22 = python3Target11.getVersion();
        java.lang.String[] strArray23 = new java.lang.String[] {};
        python3Target11.targetCharValueEscape = strArray23;
        org.antlr.v4.codegen.CodeGenerator codeGenerator25 = null;
        java.lang.String str28 = python3Target11.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator25, "\"\"i\"\"", true);
        java.lang.String[] strArray29 = python3Target11.targetCharValueEscape;
        java.lang.String str31 = python3Target11.getTargetStringLiteralFromString("\"\\64\"");
        java.util.Set<java.lang.String> strSet32 = python3Target11.getBadWords();
        python3Target0.badWords = strSet32;
        java.lang.String str35 = python3Target0.encodeIntAsCharEscape((int) (short) 0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(codeGenerator9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 64 + "'", int10 == 64);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 64 + "'", int12 == 64);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "4.5.2.1" + "'", str14, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 64 + "'", int15 == 64);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "\"4.5.2.1\"" + "'", str19, "\"4.5.2.1\"");
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 29 + "'", int21 == 29);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "4.5.2.1" + "'", str22, "4.5.2.1");
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "\"\\\"i\\\"\"" + "'", str28, "\"\\\"i\\\"\"");
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "\"\"\\64\"\"" + "'", str31, "\"\"\\64\"\"");
        org.junit.Assert.assertNotNull(strSet32);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "\\0" + "'", str35, "\\0");
    }

    @Test
    public void test06843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06843");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "", true);
        org.antlr.v4.tool.Grammar grammar7 = null;
        org.stringtemplate.v4.ST sT8 = null;
        python3Target0.genRecognizerHeaderFile(grammar7, sT8, "");
        org.antlr.v4.tool.Grammar grammar11 = null;
        org.stringtemplate.v4.ST sT12 = null;
        python3Target0.genRecognizerHeaderFile(grammar11, sT12, "\"i\"");
        boolean boolean15 = python3Target0.wantsBaseListener();
        org.antlr.v4.codegen.CodeGenerator codeGenerator16 = null;
        python3Target0.gen = codeGenerator16;
        boolean boolean18 = python3Target0.wantsBaseVisitor();
        python3Target0.addBadWords();
        boolean boolean20 = python3Target0.supportsOverloadedMethods();
        java.lang.String str21 = python3Target0.getVersion();
        int int22 = python3Target0.getInlineTestSetWordSize();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str24 = python3Target0.getAltLabelContextStructName("\"\"\\\".5.2.\\\"\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"" + "'", str6, "\"\"");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "4.5.2.1" + "'", str21, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 64 + "'", int22 == 64);
    }

    @Test
    public void test06844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06844");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        java.lang.String str3 = python3Target0.getLanguage();
        java.lang.String str5 = python3Target0.getTargetStringLiteralFromString("");
        java.lang.String str6 = python3Target0.getVersion();
        org.antlr.v4.codegen.target.Python3Target python3Target7 = new org.antlr.v4.codegen.target.Python3Target();
        int int8 = python3Target7.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup9 = python3Target7.templates;
        org.antlr.v4.tool.Grammar grammar10 = null;
        int[] intArray11 = new int[] {};
        java.lang.String[] strArray12 = python3Target7.getTokenTypesAsTargetLabels(grammar10, intArray11);
        python3Target0.targetCharValueEscape = strArray12;
        java.lang.String str15 = python3Target0.encodeIntAsCharEscape((int) ' ');
        java.lang.String str16 = python3Target0.language;
        boolean boolean17 = python3Target0.wantsBaseVisitor();
        org.antlr.v4.codegen.CodeGenerator codeGenerator18 = python3Target0.gen;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\"\"" + "'", str5, "\"\"");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "4.5.2.1" + "'", str6, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 64 + "'", int8 == 64);
        org.junit.Assert.assertNull(sTGroup9);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[]");
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + " " + "'", str15, " ");
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(codeGenerator18);
    }

    @Test
    public void test06845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06845");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!", "" };
        python3Target0.targetCharValueEscape = strArray4;
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        java.lang.String str9 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator6, "\"\"", false);
        int int10 = python3Target0.getSerializedATNSegmentLimit();
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = python3Target0.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = python3Target0.getCodeGenerator();
        boolean boolean13 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.codegen.target.Python3Target python3Target14 = new org.antlr.v4.codegen.target.Python3Target();
        int int15 = python3Target14.getInlineTestSetWordSize();
        java.lang.String str16 = python3Target14.language;
        java.lang.String str17 = python3Target14.getVersion();
        int int18 = python3Target14.getInlineTestSetWordSize();
        java.lang.String str19 = python3Target14.getLanguage();
        java.lang.String str22 = python3Target14.getTargetStringLiteralFromString("4.5.2.1", true);
        java.util.Set<java.lang.String> strSet23 = python3Target14.getBadWords();
        python3Target0.badWords = strSet23;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str26 = python3Target0.getElementListName("\"\"\\\"\\\"\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 29 + "'", int10 == 29);
        org.junit.Assert.assertNull(codeGenerator11);
        org.junit.Assert.assertNull(codeGenerator12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 64 + "'", int15 == 64);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "4.5.2.1" + "'", str17, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 64 + "'", int18 == 64);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "\"4.5.2.1\"" + "'", str22, "\"4.5.2.1\"");
        org.junit.Assert.assertNotNull(strSet23);
    }

    @Test
    public void test06846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06846");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        org.stringtemplate.v4.STGroup sTGroup3 = python3Target0.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = python3Target0.gen;
        boolean boolean5 = python3Target0.wantsBaseListener();
        org.antlr.v4.tool.Grammar grammar6 = null;
        org.stringtemplate.v4.ST sT7 = null;
        python3Target0.genRecognizerHeaderFile(grammar6, sT7, "\"4.5.2.1\"");
        python3Target0.language = "\"\"\"\"\"\"4.5.2.1\"\"\"\"\"\"";
        java.lang.String str13 = python3Target0.encodeIntAsCharEscape(1);
        org.antlr.v4.tool.ast.GrammarAST grammarAST14 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean15 = python3Target0.grammarSymbolCausesIssueInGeneratedCode(grammarAST14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(sTGroup3);
        org.junit.Assert.assertNull(codeGenerator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\\1" + "'", str13, "\\1");
    }

    @Test
    public void test06847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06847");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        java.lang.String str3 = python3Target0.getVersion();
        int int4 = python3Target0.getInlineTestSetWordSize();
        boolean boolean5 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup6 = python3Target0.templates;
        java.util.Set<java.lang.String> strSet7 = python3Target0.getBadWords();
        org.antlr.v4.tool.ast.GrammarAST grammarAST8 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str9 = python3Target0.getLoopCounter(grammarAST8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "4.5.2.1" + "'", str3, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(sTGroup6);
        org.junit.Assert.assertNotNull(strSet7);
    }

    @Test
    public void test06848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06848");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        java.lang.String str3 = python3Target0.getLanguage();
        java.lang.String str5 = python3Target0.getTargetStringLiteralFromString("");
        java.lang.String str6 = python3Target0.getVersion();
        java.lang.String str9 = python3Target0.getTargetStringLiteralFromString("\"hi!\"", false);
        boolean boolean10 = python3Target0.templatesExist();
        java.lang.String str12 = python3Target0.getTargetStringLiteralFromString("\"d\"");
        org.antlr.v4.tool.Grammar grammar13 = null;
        org.stringtemplate.v4.ST sT14 = null;
        // The following exception was thrown during execution in test generation
        try {
            python3Target0.genFile(grammar13, sT14, "\"\"\"\"\\\"\\\"\\\"\\\"\"\"\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\"\"" + "'", str5, "\"\"");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "4.5.2.1" + "'", str6, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"hi!\"" + "'", str9, "\"hi!\"");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"\"d\"\"" + "'", str12, "\"\"d\"\"");
    }

    @Test
    public void test06849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06849");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str2 = python3Target0.getTargetStringLiteralFromString("\"\"");
        int int3 = python3Target0.getInlineTestSetWordSize();
        boolean boolean4 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup5 = python3Target0.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = python3Target0.getCodeGenerator();
        org.antlr.v4.tool.Grammar grammar7 = null;
        org.stringtemplate.v4.ST sT8 = null;
        python3Target0.genRecognizerHeaderFile(grammar7, sT8, "\"4.5.2.1\"");
        java.util.Set<java.lang.String> strSet11 = python3Target0.badWords;
        java.lang.String str12 = python3Target0.getLanguage();
        java.util.Set<java.lang.String> strSet13 = python3Target0.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = null;
        java.lang.String str17 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator14, "\"\\\"\\\"\\\"i\\\"\\\"\\\"\"Context", false);
        org.antlr.v4.tool.ast.GrammarAST grammarAST18 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str19 = python3Target0.getLoopCounter(grammarAST18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "\"\"\"\"" + "'", str2, "\"\"\"\"");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 64 + "'", int3 == 64);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(sTGroup5);
        org.junit.Assert.assertNull(codeGenerator6);
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strSet13);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\\\"\\\"\\\"i\\\"\\\"\\\"\\\"Contex" + "'", str17, "\\\"\\\"\\\"i\\\"\\\"\\\"\\\"Contex");
    }

    @Test
    public void test06850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06850");
        org.antlr.v4.codegen.target.Python3Target.PythonStringRenderer pythonStringRenderer0 = new org.antlr.v4.codegen.target.Python3Target.PythonStringRenderer();
        java.lang.Object obj1 = null;
        java.util.Locale locale3 = null;
        java.lang.String str4 = pythonStringRenderer0.toString(obj1, "d", locale3);
        java.util.Locale locale7 = null;
        java.lang.String str8 = pythonStringRenderer0.toString((java.lang.Object) "\".5.2.\"", "@", locale7);
        java.lang.Object obj9 = null;
        java.util.Locale locale11 = null;
        java.lang.String str12 = pythonStringRenderer0.toString(obj9, "\"\"1\"\"", locale11);
        org.antlr.v4.codegen.target.Python3Target python3Target13 = new org.antlr.v4.codegen.target.Python3Target();
        int int14 = python3Target13.getInlineTestSetWordSize();
        java.lang.String str15 = python3Target13.language;
        java.lang.String str16 = python3Target13.getVersion();
        int int17 = python3Target13.getInlineTestSetWordSize();
        java.lang.String str18 = python3Target13.getLanguage();
        java.lang.String str21 = python3Target13.getTargetStringLiteralFromString("4.5.2.1", true);
        boolean boolean22 = python3Target13.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet23 = python3Target13.badWords;
        org.antlr.v4.tool.Grammar grammar24 = null;
        org.stringtemplate.v4.ST sT25 = null;
        python3Target13.genRecognizerHeaderFile(grammar24, sT25, "\"4.5.2.1\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator28 = null;
        java.lang.String str31 = python3Target13.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator28, "i", true);
        org.antlr.v4.codegen.target.Python3Target python3Target32 = new org.antlr.v4.codegen.target.Python3Target();
        org.stringtemplate.v4.STGroup sTGroup33 = null;
        python3Target32.templates = sTGroup33;
        java.lang.String[] strArray38 = new java.lang.String[] { "", "\\0", "" };
        java.util.LinkedHashSet<java.lang.String> strSet39 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet39, strArray38);
        python3Target32.badWords = strSet39;
        python3Target13.badWords = strSet39;
        org.antlr.v4.tool.Grammar grammar43 = null;
        org.stringtemplate.v4.ST sT44 = null;
        python3Target13.genRecognizerHeaderFile(grammar43, sT44, "\"i\"");
        java.util.Locale locale48 = null;
        java.lang.String str49 = pythonStringRenderer0.toString((java.lang.Object) "\"i\"", "12", locale48);
        org.antlr.v4.codegen.target.Python3Target python3Target50 = new org.antlr.v4.codegen.target.Python3Target();
        org.stringtemplate.v4.STGroup sTGroup51 = null;
        python3Target50.templates = sTGroup51;
        java.lang.String[] strArray56 = new java.lang.String[] { "", "\\0", "" };
        java.util.LinkedHashSet<java.lang.String> strSet57 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet57, strArray56);
        python3Target50.badWords = strSet57;
        python3Target50.language = "1";
        org.antlr.v4.codegen.CodeGenerator codeGenerator62 = python3Target50.getCodeGenerator();
        java.lang.String str63 = python3Target50.language;
        boolean boolean64 = python3Target50.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar65 = null;
        org.stringtemplate.v4.ST sT66 = null;
        python3Target50.genRecognizerHeaderFile(grammar65, sT66, "\\1");
        java.util.Locale locale70 = null;
        java.lang.String str71 = pythonStringRenderer0.toString((java.lang.Object) "\\1", "\\0", locale70);
        org.antlr.v4.codegen.target.Python3Target python3Target72 = new org.antlr.v4.codegen.target.Python3Target();
        int int73 = python3Target72.getInlineTestSetWordSize();
        boolean boolean74 = python3Target72.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator75 = python3Target72.gen;
        boolean boolean76 = python3Target72.wantsBaseVisitor();
        java.lang.String str77 = python3Target72.language;
        java.lang.String str80 = python3Target72.getTargetStringLiteralFromString("\\0", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator81 = python3Target72.gen;
        org.antlr.v4.codegen.CodeGenerator codeGenerator82 = null;
        java.lang.String str85 = python3Target72.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator82, "\"\\\"\\\"4.5.2.1\\\"\\\"\"", true);
        python3Target72.addBadWords();
        int int87 = python3Target72.getInlineTestSetWordSize();
        java.lang.String str89 = python3Target72.encodeIntAsCharEscape((int) ' ');
        java.util.Locale locale91 = null;
        java.lang.String str92 = pythonStringRenderer0.toString((java.lang.Object) str89, "\"Python3\"", locale91);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "d" + "'", str4, "d");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "@" + "'", str8, "@");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"\"1\"\"" + "'", str12, "\"\"1\"\"");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 64 + "'", int14 == 64);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "4.5.2.1" + "'", str16, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 64 + "'", int17 == 64);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "\"4.5.2.1\"" + "'", str21, "\"4.5.2.1\"");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "\"\"" + "'", str31, "\"\"");
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "12" + "'", str49, "12");
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNull(codeGenerator62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "1" + "'", str63, "1");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "\\0" + "'", str71, "\\0");
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 64 + "'", int73 == 64);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNull(codeGenerator75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNull(str77);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "\\0" + "'", str80, "\\0");
        org.junit.Assert.assertNull(codeGenerator81);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "\"\\\"\\\"4.5.2.1\\\"\\\"\"" + "'", str85, "\"\\\"\\\"4.5.2.1\\\"\\\"\"");
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 64 + "'", int87 == 64);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + " " + "'", str89, " ");
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "\"Python3\"" + "'", str92, "\"Python3\"");
    }

    @Test
    public void test06851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06851");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "", true);
        org.antlr.v4.tool.Grammar grammar7 = null;
        org.stringtemplate.v4.ST sT8 = null;
        python3Target0.genRecognizerHeaderFile(grammar7, sT8, "");
        org.antlr.v4.tool.Grammar grammar11 = null;
        org.stringtemplate.v4.ST sT12 = null;
        python3Target0.genRecognizerHeaderFile(grammar11, sT12, "\"i\"");
        boolean boolean15 = python3Target0.wantsBaseListener();
        org.antlr.v4.codegen.CodeGenerator codeGenerator16 = null;
        python3Target0.gen = codeGenerator16;
        boolean boolean18 = python3Target0.wantsBaseVisitor();
        python3Target0.language = "\"\"\"\"4.5.2.1\"\"\"\"";
        boolean boolean21 = python3Target0.templatesExist();
        java.lang.String str22 = python3Target0.getLanguage();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str24 = python3Target0.getElementListName("\"\\\"\\\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"" + "'", str6, "\"\"");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "\"\"\"\"4.5.2.1\"\"\"\"" + "'", str22, "\"\"\"\"4.5.2.1\"\"\"\"");
    }

    @Test
    public void test06852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06852");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        boolean boolean2 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.gen;
        boolean boolean4 = python3Target0.wantsBaseVisitor();
        org.antlr.v4.codegen.target.Python3Target python3Target5 = new org.antlr.v4.codegen.target.Python3Target();
        int int6 = python3Target5.getInlineTestSetWordSize();
        java.lang.String str7 = python3Target5.language;
        java.lang.String str8 = python3Target5.getVersion();
        org.stringtemplate.v4.STGroup sTGroup9 = null;
        python3Target5.templates = sTGroup9;
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = null;
        java.lang.String str14 = python3Target5.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator11, "d", false);
        java.util.Set<java.lang.String> strSet15 = python3Target5.getBadWords();
        python3Target0.badWords = strSet15;
        org.stringtemplate.v4.STGroup sTGroup17 = python3Target0.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator18 = python3Target0.getCodeGenerator();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 64 + "'", int6 == 64);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "4.5.2.1" + "'", str8, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertNull(sTGroup17);
        org.junit.Assert.assertNull(codeGenerator18);
    }

    @Test
    public void test06853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06853");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        java.lang.String str3 = python3Target0.getVersion();
        org.antlr.v4.tool.Grammar grammar4 = null;
        org.stringtemplate.v4.ST sT5 = null;
        python3Target0.genRecognizerHeaderFile(grammar4, sT5, "\"\"\"\"");
        boolean boolean8 = python3Target0.wantsBaseListener();
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = python3Target0.gen;
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        java.lang.String str13 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator10, "\"\"\"\"i\"\"\"\"", true);
        java.lang.String str14 = python3Target0.getLanguage();
        boolean boolean15 = python3Target0.wantsBaseListener();
        boolean boolean16 = python3Target0.wantsBaseVisitor();
        java.lang.String str18 = python3Target0.encodeIntAsCharEscape((int) (short) 0);
        org.antlr.v4.codegen.CodeGenerator codeGenerator19 = null;
        python3Target0.gen = codeGenerator19;
        boolean boolean21 = python3Target0.wantsBaseListener();
        // The following exception was thrown during execution in test generation
        try {
            org.stringtemplate.v4.STGroup sTGroup22 = python3Target0.getTemplates();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "4.5.2.1" + "'", str3, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(codeGenerator9);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"\\\"\\\"\\\"i\\\"\\\"\\\"\"" + "'", str13, "\"\\\"\\\"\\\"i\\\"\\\"\\\"\"");
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "\\0" + "'", str18, "\\0");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test06854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06854");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "", true);
        java.lang.String str8 = python3Target0.encodeIntAsCharEscape((int) (short) 100);
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = null;
        java.lang.String str12 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator9, "\"\\64\"", true);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str14 = python3Target0.getImplicitSetLabel("");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"" + "'", str6, "\"\"");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "d" + "'", str8, "d");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"64\"" + "'", str12, "\"64\"");
    }

    @Test
    public void test06855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06855");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        org.stringtemplate.v4.STGroup sTGroup1 = null;
        python3Target0.templates = sTGroup1;
        java.lang.String[] strArray6 = new java.lang.String[] { "", "\\0", "" };
        java.util.LinkedHashSet<java.lang.String> strSet7 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet7, strArray6);
        python3Target0.badWords = strSet7;
        java.util.Set<java.lang.String> strSet10 = python3Target0.badWords;
        java.lang.String str11 = python3Target0.language;
        boolean boolean12 = python3Target0.supportsOverloadedMethods();
        java.lang.String str13 = python3Target0.language;
        org.antlr.v4.codegen.target.Python3Target python3Target14 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str16 = python3Target14.getTargetStringLiteralFromString("\"\"");
        int int17 = python3Target14.getInlineTestSetWordSize();
        boolean boolean18 = python3Target14.supportsOverloadedMethods();
        java.lang.String str20 = python3Target14.getTargetStringLiteralFromString("\"i\"");
        python3Target14.addBadWords();
        org.antlr.v4.codegen.target.Python3Target python3Target22 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str23 = python3Target22.language;
        java.lang.String[] strArray24 = python3Target22.targetCharValueEscape;
        python3Target14.targetCharValueEscape = strArray24;
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray24;
        python3Target0.targetCharValueEscape = strArray24;
        boolean boolean28 = python3Target0.wantsBaseListener();
        java.lang.String str30 = python3Target0.getTargetStringLiteralFromString("\"\"\"4.5.2.1\"\"\"");
        org.antlr.v4.tool.Grammar grammar31 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str33 = python3Target0.getTokenTypeAsTargetLabel(grammar31, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\"\"\"\"" + "'", str16, "\"\"\"\"");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 64 + "'", int17 == 64);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "\"\"i\"\"" + "'", str20, "\"\"i\"\"");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "\"\"\"\"4.5.2.1\"\"\"\"" + "'", str30, "\"\"\"\"4.5.2.1\"\"\"\"");
    }

    @Test
    public void test06856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06856");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "", true);
        org.antlr.v4.tool.Grammar grammar7 = null;
        org.stringtemplate.v4.ST sT8 = null;
        python3Target0.genRecognizerHeaderFile(grammar7, sT8, "\"\"\"\"");
        org.stringtemplate.v4.STGroup sTGroup11 = null;
        python3Target0.templates = sTGroup11;
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = null;
        java.lang.String str16 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator13, "\"\"", true);
        java.lang.String str17 = python3Target0.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup18 = python3Target0.templates;
        python3Target0.language = "\"\"\\\"\\\"\"\"";
        python3Target0.addBadWords();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"" + "'", str6, "\"\"");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\"\"" + "'", str16, "\"\"");
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(sTGroup18);
    }

    @Test
    public void test06857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06857");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str1 = python3Target0.language;
        int int2 = python3Target0.getSerializedATNSegmentLimit();
        java.lang.String str3 = python3Target0.getLanguage();
        java.util.Set<java.lang.String> strSet4 = python3Target0.getBadWords();
        org.stringtemplate.v4.STGroup sTGroup5 = null;
        python3Target0.templates = sTGroup5;
        org.antlr.v4.codegen.target.Python3Target python3Target7 = new org.antlr.v4.codegen.target.Python3Target();
        int int8 = python3Target7.getInlineTestSetWordSize();
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "" };
        python3Target7.targetCharValueEscape = strArray11;
        java.lang.String[] strArray13 = python3Target7.targetCharValueEscape;
        boolean boolean14 = python3Target7.supportsOverloadedMethods();
        java.lang.String[] strArray15 = new java.lang.String[] {};
        python3Target7.targetCharValueEscape = strArray15;
        org.antlr.v4.codegen.target.Python3Target python3Target17 = new org.antlr.v4.codegen.target.Python3Target();
        int int18 = python3Target17.getInlineTestSetWordSize();
        java.lang.String str19 = python3Target17.language;
        java.lang.String str20 = python3Target17.getVersion();
        int int21 = python3Target17.getInlineTestSetWordSize();
        java.lang.String str22 = python3Target17.getLanguage();
        java.lang.String str25 = python3Target17.getTargetStringLiteralFromString("4.5.2.1", true);
        java.util.Set<java.lang.String> strSet26 = python3Target17.badWords;
        python3Target7.badWords = strSet26;
        python3Target0.badWords = strSet26;
        org.antlr.v4.codegen.CodeGenerator codeGenerator29 = null;
        java.lang.String str32 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator29, "\\\"\\\"\\\"i\\\"\\\"\\\"", true);
        // The following exception was thrown during execution in test generation
        try {
            org.stringtemplate.v4.STGroup sTGroup33 = python3Target0.loadTemplates();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 29 + "'", int2 == 29);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 64 + "'", int8 == 64);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 64 + "'", int18 == 64);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "4.5.2.1" + "'", str20, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 64 + "'", int21 == 64);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "\"4.5.2.1\"" + "'", str25, "\"4.5.2.1\"");
        org.junit.Assert.assertNotNull(strSet26);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "\"\\\"\\\"\\\"i\\\"\\\"\\\"\"" + "'", str32, "\"\\\"\\\"\\\"i\\\"\\\"\\\"\"");
    }

    @Test
    public void test06858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06858");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        boolean boolean2 = python3Target0.wantsBaseVisitor();
        java.lang.String str3 = python3Target0.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = null;
        python3Target0.gen = codeGenerator4;
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        java.lang.String str9 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator6, "a", true);
        org.antlr.v4.tool.ast.GrammarAST grammarAST10 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean11 = python3Target0.visibleGrammarSymbolCausesIssueInGeneratedCode(grammarAST10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\"" + "'", str9, "\"\"");
    }

    @Test
    public void test06859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06859");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        org.stringtemplate.v4.STGroup sTGroup3 = python3Target0.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = python3Target0.gen;
        boolean boolean5 = python3Target0.wantsBaseListener();
        org.antlr.v4.tool.Grammar grammar6 = null;
        org.stringtemplate.v4.ST sT7 = null;
        python3Target0.genRecognizerHeaderFile(grammar6, sT7, "\"4.5.2.1\"");
        org.antlr.v4.codegen.target.Python3Target python3Target10 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str11 = python3Target10.language;
        org.antlr.v4.codegen.target.Python3Target python3Target12 = new org.antlr.v4.codegen.target.Python3Target();
        org.stringtemplate.v4.STGroup sTGroup13 = null;
        python3Target12.templates = sTGroup13;
        java.lang.String[] strArray18 = new java.lang.String[] { "", "\\0", "" };
        java.util.LinkedHashSet<java.lang.String> strSet19 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet19, strArray18);
        python3Target12.badWords = strSet19;
        python3Target10.badWords = strSet19;
        python3Target10.language = "\"\"i\"\"";
        java.lang.String str25 = python3Target10.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator26 = null;
        python3Target10.gen = codeGenerator26;
        org.antlr.v4.codegen.target.Python3Target python3Target28 = new org.antlr.v4.codegen.target.Python3Target();
        int int29 = python3Target28.getInlineTestSetWordSize();
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!", "" };
        python3Target28.targetCharValueEscape = strArray32;
        java.lang.String[] strArray34 = python3Target28.targetCharValueEscape;
        boolean boolean35 = python3Target28.supportsOverloadedMethods();
        java.lang.String[] strArray36 = new java.lang.String[] {};
        python3Target28.targetCharValueEscape = strArray36;
        org.antlr.v4.codegen.target.Python3Target python3Target38 = new org.antlr.v4.codegen.target.Python3Target();
        int int39 = python3Target38.getInlineTestSetWordSize();
        java.lang.String str40 = python3Target38.language;
        java.lang.String str41 = python3Target38.getVersion();
        int int42 = python3Target38.getInlineTestSetWordSize();
        java.lang.String str43 = python3Target38.getLanguage();
        java.lang.String str46 = python3Target38.getTargetStringLiteralFromString("4.5.2.1", true);
        java.util.Set<java.lang.String> strSet47 = python3Target38.badWords;
        python3Target28.badWords = strSet47;
        python3Target10.badWords = strSet47;
        python3Target0.badWords = strSet47;
        org.antlr.v4.tool.ast.GrammarAST grammarAST51 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str52 = python3Target0.getLoopLabel(grammarAST51);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(sTGroup3);
        org.junit.Assert.assertNull(codeGenerator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "4.5.2.1" + "'", str25, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 64 + "'", int29 == 64);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 64 + "'", int39 == 64);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "4.5.2.1" + "'", str41, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 64 + "'", int42 == 64);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "\"4.5.2.1\"" + "'", str46, "\"4.5.2.1\"");
        org.junit.Assert.assertNotNull(strSet47);
    }

    @Test
    public void test06860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06860");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        java.lang.String str3 = python3Target0.getLanguage();
        java.lang.String str5 = python3Target0.getTargetStringLiteralFromString("");
        java.lang.String str6 = python3Target0.getVersion();
        java.lang.String str9 = python3Target0.getTargetStringLiteralFromString("\"hi!\"", false);
        boolean boolean10 = python3Target0.templatesExist();
        java.lang.String str12 = python3Target0.getTargetStringLiteralFromString("\"d\"");
        boolean boolean13 = python3Target0.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar14 = null;
        org.stringtemplate.v4.ST sT15 = null;
        python3Target0.genRecognizerHeaderFile(grammar14, sT15, "\"\\\"\\\"12\\\"\\\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator18 = python3Target0.getCodeGenerator();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\"\"" + "'", str5, "\"\"");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "4.5.2.1" + "'", str6, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"hi!\"" + "'", str9, "\"hi!\"");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"\"d\"\"" + "'", str12, "\"\"d\"\"");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(codeGenerator18);
    }

    @Test
    public void test06861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06861");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        java.lang.String str3 = python3Target0.getLanguage();
        java.lang.String str5 = python3Target0.getTargetStringLiteralFromString("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        java.lang.String str9 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator6, "hi!", true);
        int int10 = python3Target0.getSerializedATNSegmentLimit();
        java.lang.String str13 = python3Target0.getTargetStringLiteralFromString("\"i\"", true);
        int int14 = python3Target0.getInlineTestSetWordSize();
        boolean boolean15 = python3Target0.templatesExist();
        // The following exception was thrown during execution in test generation
        try {
            org.stringtemplate.v4.STGroup sTGroup16 = python3Target0.getTemplates();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\"\"" + "'", str5, "\"\"");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"i\"" + "'", str9, "\"i\"");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 29 + "'", int10 == 29);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"\"i\"\"" + "'", str13, "\"\"i\"\"");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 64 + "'", int14 == 64);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test06862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06862");
        org.antlr.v4.codegen.target.Python3Target.PythonStringRenderer pythonStringRenderer0 = new org.antlr.v4.codegen.target.Python3Target.PythonStringRenderer();
        java.lang.Object obj1 = null;
        java.util.Locale locale3 = null;
        java.lang.String str4 = pythonStringRenderer0.toString(obj1, "d", locale3);
        java.util.Locale locale7 = null;
        java.lang.String str8 = pythonStringRenderer0.toString((java.lang.Object) "\".5.2.\"", "@", locale7);
        org.antlr.v4.codegen.target.Python3Target python3Target9 = new org.antlr.v4.codegen.target.Python3Target();
        int int10 = python3Target9.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup11 = python3Target9.templates;
        java.util.Locale locale13 = null;
        java.lang.String str14 = pythonStringRenderer0.toString((java.lang.Object) sTGroup11, "\"\"\"hi!\"\"\"", locale13);
        java.lang.Object obj15 = null;
        java.util.Locale locale17 = null;
        java.lang.String str18 = pythonStringRenderer0.toString(obj15, "\"\"\"\"4.5.2.1\"\"\"\"", locale17);
        org.antlr.v4.codegen.target.Python3Target python3Target19 = new org.antlr.v4.codegen.target.Python3Target();
        int int20 = python3Target19.getInlineTestSetWordSize();
        java.lang.String str21 = python3Target19.language;
        java.lang.String str22 = python3Target19.getVersion();
        int int23 = python3Target19.getInlineTestSetWordSize();
        java.lang.String str24 = python3Target19.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator25 = python3Target19.gen;
        org.antlr.v4.tool.Grammar grammar26 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target27 = new org.antlr.v4.codegen.target.Python3Target();
        int int28 = python3Target27.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup29 = python3Target27.templates;
        org.antlr.v4.tool.Grammar grammar30 = null;
        int[] intArray31 = new int[] {};
        java.lang.String[] strArray32 = python3Target27.getTokenTypesAsTargetLabels(grammar30, intArray31);
        java.lang.String[] strArray33 = python3Target19.getTokenTypesAsTargetLabels(grammar26, intArray31);
        java.lang.String str36 = python3Target19.getTargetStringLiteralFromString("", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator37 = null;
        java.lang.String str40 = python3Target19.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator37, "\"i\"", true);
        boolean boolean41 = python3Target19.templatesExist();
        java.lang.String str42 = python3Target19.language;
        java.util.Locale locale44 = null;
        java.lang.String str45 = pythonStringRenderer0.toString((java.lang.Object) str42, "\"\\\"\\\"0\\\"\\\"\"", locale44);
        org.antlr.v4.codegen.target.Python3Target python3Target46 = new org.antlr.v4.codegen.target.Python3Target();
        int int47 = python3Target46.getInlineTestSetWordSize();
        java.lang.String str48 = python3Target46.language;
        java.lang.String str49 = python3Target46.getVersion();
        int int50 = python3Target46.getInlineTestSetWordSize();
        java.lang.String str51 = python3Target46.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator52 = python3Target46.gen;
        org.antlr.v4.tool.Grammar grammar53 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target54 = new org.antlr.v4.codegen.target.Python3Target();
        int int55 = python3Target54.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup56 = python3Target54.templates;
        org.antlr.v4.tool.Grammar grammar57 = null;
        int[] intArray58 = new int[] {};
        java.lang.String[] strArray59 = python3Target54.getTokenTypesAsTargetLabels(grammar57, intArray58);
        java.lang.String[] strArray60 = python3Target46.getTokenTypesAsTargetLabels(grammar53, intArray58);
        java.lang.String str61 = python3Target46.getLanguage();
        java.lang.String str62 = python3Target46.getLanguage();
        java.lang.String str64 = python3Target46.getTargetStringLiteralFromString("\"i\"");
        java.lang.String str66 = python3Target46.getTargetStringLiteralFromString("\"4.5.2.1\"");
        int int67 = python3Target46.getSerializedATNSegmentLimit();
        org.antlr.v4.codegen.target.Python3Target python3Target68 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str70 = python3Target68.getTargetStringLiteralFromString("\"\"");
        int int71 = python3Target68.getInlineTestSetWordSize();
        boolean boolean72 = python3Target68.supportsOverloadedMethods();
        java.lang.String str74 = python3Target68.getTargetStringLiteralFromString("\"i\"");
        python3Target68.addBadWords();
        org.antlr.v4.codegen.target.Python3Target python3Target76 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str77 = python3Target76.language;
        java.lang.String[] strArray78 = python3Target76.targetCharValueEscape;
        python3Target68.targetCharValueEscape = strArray78;
        org.stringtemplate.v4.STGroup sTGroup80 = null;
        python3Target68.templates = sTGroup80;
        org.antlr.v4.codegen.target.Python3Target python3Target82 = new org.antlr.v4.codegen.target.Python3Target();
        int int83 = python3Target82.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup84 = python3Target82.templates;
        org.antlr.v4.codegen.target.Python3Target python3Target85 = new org.antlr.v4.codegen.target.Python3Target();
        int int86 = python3Target85.getInlineTestSetWordSize();
        java.lang.String[] strArray89 = new java.lang.String[] { "hi!", "" };
        python3Target85.targetCharValueEscape = strArray89;
        python3Target82.targetCharValueEscape = strArray89;
        python3Target68.targetCharValueEscape = strArray89;
        python3Target46.targetCharValueEscape = strArray89;
        java.util.Set<java.lang.String> strSet94 = python3Target46.getBadWords();
        java.util.Locale locale96 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str97 = pythonStringRenderer0.toString((java.lang.Object) python3Target46, "\"hi!\"", locale96);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: org.antlr.v4.codegen.target.Python3Target cannot be cast to java.lang.String");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "d" + "'", str4, "d");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "@" + "'", str8, "@");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 64 + "'", int10 == 64);
        org.junit.Assert.assertNull(sTGroup11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\"\"\"hi!\"\"\"" + "'", str14, "\"\"\"hi!\"\"\"");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "\"\"\"\"4.5.2.1\"\"\"\"" + "'", str18, "\"\"\"\"4.5.2.1\"\"\"\"");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 64 + "'", int20 == 64);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "4.5.2.1" + "'", str22, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 64 + "'", int23 == 64);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(codeGenerator25);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 64 + "'", int28 == 64);
        org.junit.Assert.assertNull(sTGroup29);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[]");
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "\"i\"" + "'", str40, "\"i\"");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "\"\\\"\\\"0\\\"\\\"\"" + "'", str45, "\"\\\"\\\"0\\\"\\\"\"");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 64 + "'", int47 == 64);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "4.5.2.1" + "'", str49, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 64 + "'", int50 == 64);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNull(codeGenerator52);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 64 + "'", int55 == 64);
        org.junit.Assert.assertNull(sTGroup56);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[]");
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "\"\"i\"\"" + "'", str64, "\"\"i\"\"");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "\"\"4.5.2.1\"\"" + "'", str66, "\"\"4.5.2.1\"\"");
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 29 + "'", int67 == 29);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "\"\"\"\"" + "'", str70, "\"\"\"\"");
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 64 + "'", int71 == 64);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "\"\"i\"\"" + "'", str74, "\"\"i\"\"");
        org.junit.Assert.assertNull(str77);
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 64 + "'", int83 == 64);
        org.junit.Assert.assertNull(sTGroup84);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 64 + "'", int86 == 64);
        org.junit.Assert.assertNotNull(strArray89);
        org.junit.Assert.assertNotNull(strSet94);
    }

    @Test
    public void test06863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06863");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        org.stringtemplate.v4.STGroup sTGroup1 = null;
        python3Target0.templates = sTGroup1;
        java.lang.String[] strArray6 = new java.lang.String[] { "", "\\0", "" };
        java.util.LinkedHashSet<java.lang.String> strSet7 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet7, strArray6);
        python3Target0.badWords = strSet7;
        boolean boolean10 = python3Target0.templatesExist();
        java.lang.String str12 = python3Target0.encodeIntAsCharEscape(64);
        org.antlr.v4.codegen.target.Python3Target python3Target13 = new org.antlr.v4.codegen.target.Python3Target();
        int int14 = python3Target13.getInlineTestSetWordSize();
        boolean boolean15 = python3Target13.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator16 = python3Target13.gen;
        java.lang.String str17 = python3Target13.getVersion();
        java.lang.String[] strArray18 = python3Target13.targetCharValueEscape;
        python3Target0.targetCharValueEscape = strArray18;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str21 = python3Target0.getImplicitTokenLabel("\"\\\"\\\"\\\"64\\\"\\\"\\\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "@" + "'", str12, "@");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 64 + "'", int14 == 64);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(codeGenerator16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "4.5.2.1" + "'", str17, "4.5.2.1");
        org.junit.Assert.assertNotNull(strArray18);
    }

    @Test
    public void test06864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06864");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        java.lang.String str3 = python3Target0.getVersion();
        int int4 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str5 = python3Target0.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = python3Target0.gen;
        python3Target0.addBadWords();
        org.antlr.v4.codegen.target.Python3Target python3Target8 = new org.antlr.v4.codegen.target.Python3Target();
        int int9 = python3Target8.getInlineTestSetWordSize();
        java.lang.String str10 = python3Target8.language;
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = python3Target8.getCodeGenerator();
        java.util.Set<java.lang.String> strSet12 = python3Target8.getBadWords();
        org.antlr.v4.codegen.target.Python3Target python3Target13 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray15 = new java.lang.String[] { "" };
        java.util.LinkedHashSet<java.lang.String> strSet16 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet16, strArray15);
        python3Target13.badWords = strSet16;
        python3Target8.badWords = strSet16;
        python3Target0.badWords = strSet16;
        boolean boolean21 = python3Target0.wantsBaseVisitor();
        java.util.Set<java.lang.String> strSet22 = python3Target0.badWords;
        python3Target0.language = "\"i\"";
        boolean boolean25 = python3Target0.templatesExist();
        org.stringtemplate.v4.STGroup sTGroup26 = python3Target0.templates;
        java.util.Set<java.lang.String> strSet27 = python3Target0.badWords;
        org.antlr.v4.tool.Grammar grammar28 = null;
        org.stringtemplate.v4.ST sT29 = null;
        // The following exception was thrown during execution in test generation
        try {
            python3Target0.genListenerFile(grammar28, sT29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "4.5.2.1" + "'", str3, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(codeGenerator6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 64 + "'", int9 == 64);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(codeGenerator11);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(sTGroup26);
        org.junit.Assert.assertNotNull(strSet27);
    }

    @Test
    public void test06865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06865");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str1 = python3Target0.language;
        org.antlr.v4.codegen.target.Python3Target python3Target2 = new org.antlr.v4.codegen.target.Python3Target();
        org.stringtemplate.v4.STGroup sTGroup3 = null;
        python3Target2.templates = sTGroup3;
        java.lang.String[] strArray8 = new java.lang.String[] { "", "\\0", "" };
        java.util.LinkedHashSet<java.lang.String> strSet9 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet9, strArray8);
        python3Target2.badWords = strSet9;
        python3Target0.badWords = strSet9;
        python3Target0.language = "\"\"i\"\"";
        java.lang.String str15 = python3Target0.getVersion();
        int int16 = python3Target0.getSerializedATNSegmentLimit();
        java.lang.String str18 = python3Target0.getTargetStringLiteralFromString("\"\\\"i\\\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator19 = null;
        python3Target0.gen = codeGenerator19;
        org.antlr.v4.codegen.CodeGenerator codeGenerator21 = python3Target0.gen;
        org.antlr.v4.codegen.model.RuleFunction ruleFunction22 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str23 = python3Target0.getRuleFunctionContextStructName(ruleFunction22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "4.5.2.1" + "'", str15, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 29 + "'", int16 == 29);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "\"\"\\\"i\\\"\"\"" + "'", str18, "\"\"\\\"i\\\"\"\"");
        org.junit.Assert.assertNull(codeGenerator21);
    }

    @Test
    public void test06866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06866");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        java.lang.String str3 = python3Target0.getVersion();
        org.stringtemplate.v4.STGroup sTGroup4 = null;
        python3Target0.templates = sTGroup4;
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        java.lang.String str9 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator6, "d", false);
        java.lang.String str10 = python3Target0.getVersion();
        int int11 = python3Target0.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup12 = python3Target0.templates;
        java.lang.String str15 = python3Target0.getTargetStringLiteralFromString("\"\\\"4.5.2.1\\\"\"", true);
        python3Target0.language = "";
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "4.5.2.1" + "'", str3, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "4.5.2.1" + "'", str10, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 64 + "'", int11 == 64);
        org.junit.Assert.assertNull(sTGroup12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\"\"\\\"4.5.2.1\\\"\"\"" + "'", str15, "\"\"\\\"4.5.2.1\\\"\"\"");
    }

    @Test
    public void test06867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06867");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        java.lang.String str3 = python3Target0.getVersion();
        boolean boolean4 = python3Target0.wantsBaseListener();
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = null;
        python3Target0.gen = codeGenerator5;
        boolean boolean7 = python3Target0.supportsOverloadedMethods();
        java.lang.String[] strArray8 = python3Target0.targetCharValueEscape;
        int int9 = python3Target0.getInlineTestSetWordSize();
        // The following exception was thrown during execution in test generation
        try {
            org.stringtemplate.v4.STGroup sTGroup10 = python3Target0.getTemplates();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "4.5.2.1" + "'", str3, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 64 + "'", int9 == 64);
    }

    @Test
    public void test06868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06868");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        org.stringtemplate.v4.STGroup sTGroup1 = null;
        python3Target0.templates = sTGroup1;
        java.lang.String[] strArray6 = new java.lang.String[] { "", "\\0", "" };
        java.util.LinkedHashSet<java.lang.String> strSet7 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet7, strArray6);
        python3Target0.badWords = strSet7;
        python3Target0.addBadWords();
        boolean boolean11 = python3Target0.supportsOverloadedMethods();
        python3Target0.addBadWords();
        java.lang.String str13 = python3Target0.getVersion();
        org.antlr.v4.tool.Grammar grammar14 = null;
        org.stringtemplate.v4.ST sT15 = null;
        python3Target0.genRecognizerHeaderFile(grammar14, sT15, "\\\"1\\\"");
        python3Target0.addBadWords();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str20 = python3Target0.getElementName("\"\"\"\\\"\\\"\\\"\\\"4.5.2.1\\\"\\\"\\\"\\\"\"\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "4.5.2.1" + "'", str13, "4.5.2.1");
    }

    @Test
    public void test06869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06869");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str2 = python3Target0.getTargetStringLiteralFromString("\"\"");
        int int3 = python3Target0.getInlineTestSetWordSize();
        boolean boolean4 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup5 = python3Target0.templates;
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromString("i", true);
        java.lang.String str10 = python3Target0.encodeIntAsCharEscape(10);
        java.lang.String str11 = python3Target0.getVersion();
        java.lang.String str12 = python3Target0.getLanguage();
        java.lang.Class<?> wildcardClass13 = python3Target0.getClass();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "\"\"\"\"" + "'", str2, "\"\"\"\"");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 64 + "'", int3 == 64);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(sTGroup5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"i\"" + "'", str8, "\"i\"");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\\12" + "'", str10, "\\12");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "4.5.2.1" + "'", str11, "4.5.2.1");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test06870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06870");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str2 = python3Target0.encodeIntAsCharEscape(100);
        java.lang.String str3 = python3Target0.language;
        org.antlr.v4.tool.ast.GrammarAST grammarAST4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str5 = python3Target0.getLoopLabel(grammarAST4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "d" + "'", str2, "d");
        org.junit.Assert.assertNull(str3);
    }

    @Test
    public void test06871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06871");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str2 = python3Target0.getTargetStringLiteralFromString("\"\"");
        java.lang.String str4 = python3Target0.encodeIntAsCharEscape((int) (byte) 10);
        java.util.Set<java.lang.String> strSet5 = python3Target0.getBadWords();
        org.stringtemplate.v4.STGroup sTGroup6 = python3Target0.templates;
        python3Target0.language = "\"\"\"i\"\"\"";
        org.antlr.v4.tool.Grammar grammar9 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target10 = new org.antlr.v4.codegen.target.Python3Target();
        int int11 = python3Target10.getInlineTestSetWordSize();
        java.lang.String str12 = python3Target10.language;
        java.lang.String str13 = python3Target10.getVersion();
        int int14 = python3Target10.getInlineTestSetWordSize();
        java.lang.String str15 = python3Target10.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator16 = python3Target10.gen;
        python3Target10.addBadWords();
        python3Target10.language = "\\0";
        boolean boolean20 = python3Target10.wantsBaseVisitor();
        org.antlr.v4.codegen.CodeGenerator codeGenerator21 = python3Target10.getCodeGenerator();
        int int22 = python3Target10.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar23 = null;
        org.stringtemplate.v4.ST sT24 = null;
        python3Target10.genRecognizerHeaderFile(grammar23, sT24, "\"\"\"4.5.2.1\"\"\"");
        java.util.Set<java.lang.String> strSet27 = python3Target10.badWords;
        org.antlr.v4.tool.Grammar grammar28 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target29 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str31 = python3Target29.encodeIntAsCharEscape(100);
        org.antlr.v4.tool.Grammar grammar32 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target33 = new org.antlr.v4.codegen.target.Python3Target();
        int int34 = python3Target33.getInlineTestSetWordSize();
        java.lang.String str35 = python3Target33.language;
        java.lang.String str36 = python3Target33.getVersion();
        int int37 = python3Target33.getInlineTestSetWordSize();
        java.lang.String str38 = python3Target33.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator39 = python3Target33.gen;
        org.antlr.v4.tool.Grammar grammar40 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target41 = new org.antlr.v4.codegen.target.Python3Target();
        int int42 = python3Target41.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup43 = python3Target41.templates;
        org.antlr.v4.tool.Grammar grammar44 = null;
        int[] intArray45 = new int[] {};
        java.lang.String[] strArray46 = python3Target41.getTokenTypesAsTargetLabels(grammar44, intArray45);
        java.lang.String[] strArray47 = python3Target33.getTokenTypesAsTargetLabels(grammar40, intArray45);
        java.lang.String[] strArray48 = python3Target29.getTokenTypesAsTargetLabels(grammar32, intArray45);
        java.lang.String[] strArray49 = python3Target10.getTokenTypesAsTargetLabels(grammar28, intArray45);
        java.lang.String[] strArray50 = python3Target0.getTokenTypesAsTargetLabels(grammar9, intArray45);
        python3Target0.addBadWords();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "\"\"\"\"" + "'", str2, "\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\\12" + "'", str4, "\\12");
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNull(sTGroup6);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 64 + "'", int11 == 64);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "4.5.2.1" + "'", str13, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 64 + "'", int14 == 64);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(codeGenerator16);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(codeGenerator21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 29 + "'", int22 == 29);
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "d" + "'", str31, "d");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 64 + "'", int34 == 64);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "4.5.2.1" + "'", str36, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 64 + "'", int37 == 64);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(codeGenerator39);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 64 + "'", int42 == 64);
        org.junit.Assert.assertNull(sTGroup43);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[]");
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertNotNull(strArray50);
    }

    @Test
    public void test06872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06872");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        java.lang.String str3 = python3Target0.getVersion();
        int int4 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str5 = python3Target0.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = python3Target0.gen;
        python3Target0.addBadWords();
        org.antlr.v4.codegen.target.Python3Target python3Target8 = new org.antlr.v4.codegen.target.Python3Target();
        int int9 = python3Target8.getInlineTestSetWordSize();
        java.lang.String str10 = python3Target8.language;
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = python3Target8.getCodeGenerator();
        java.util.Set<java.lang.String> strSet12 = python3Target8.getBadWords();
        org.antlr.v4.codegen.target.Python3Target python3Target13 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray15 = new java.lang.String[] { "" };
        java.util.LinkedHashSet<java.lang.String> strSet16 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet16, strArray15);
        python3Target13.badWords = strSet16;
        python3Target8.badWords = strSet16;
        python3Target0.badWords = strSet16;
        java.lang.String str23 = python3Target0.getTargetStringLiteralFromString("\".5.2.\"", true);
        java.lang.String str25 = python3Target0.getTargetStringLiteralFromString("\".5.2.\"");
        java.lang.String str26 = python3Target0.getLanguage();
        boolean boolean27 = python3Target0.wantsBaseVisitor();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "4.5.2.1" + "'", str3, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(codeGenerator6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 64 + "'", int9 == 64);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(codeGenerator11);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "\"\".5.2.\"\"" + "'", str23, "\"\".5.2.\"\"");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "\"\".5.2.\"\"" + "'", str25, "\"\".5.2.\"\"");
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test06873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06873");
        java.lang.String str1 = org.stringtemplate.v4.StringRenderer.escapeHTML("\"\"\"\"\\\"\\\"\\\"i\\\"\\\"\\\"\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "\"\"\"\"\\\"\\\"\\\"i\\\"\\\"\\\"\"\"\"\"" + "'", str1, "\"\"\"\"\\\"\\\"\\\"i\\\"\\\"\\\"\"\"\"\"");
    }

    @Test
    public void test06874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06874");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        java.lang.String str3 = python3Target0.getVersion();
        int int4 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str5 = python3Target0.getLanguage();
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromString("4.5.2.1", true);
        boolean boolean9 = python3Target0.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet10 = python3Target0.badWords;
        org.antlr.v4.tool.Grammar grammar11 = null;
        org.stringtemplate.v4.ST sT12 = null;
        python3Target0.genRecognizerHeaderFile(grammar11, sT12, "\"4.5.2.1\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator15 = null;
        java.lang.String str18 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator15, "i", true);
        org.antlr.v4.codegen.target.Python3Target python3Target19 = new org.antlr.v4.codegen.target.Python3Target();
        org.stringtemplate.v4.STGroup sTGroup20 = null;
        python3Target19.templates = sTGroup20;
        java.lang.String[] strArray25 = new java.lang.String[] { "", "\\0", "" };
        java.util.LinkedHashSet<java.lang.String> strSet26 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet26, strArray25);
        python3Target19.badWords = strSet26;
        python3Target0.badWords = strSet26;
        boolean boolean30 = python3Target0.templatesExist();
        org.antlr.v4.tool.ast.GrammarAST grammarAST31 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean32 = python3Target0.grammarSymbolCausesIssueInGeneratedCode(grammarAST31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "4.5.2.1" + "'", str3, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"4.5.2.1\"" + "'", str8, "\"4.5.2.1\"");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "\"\"" + "'", str18, "\"\"");
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test06875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06875");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = python3Target0.gen;
        int int8 = python3Target0.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar9 = null;
        org.stringtemplate.v4.ST sT10 = null;
        python3Target0.genRecognizerHeaderFile(grammar9, sT10, "\"\\\"\\\"\\\"4.5.2.1\\\"\\\"\\\"\"");
        org.antlr.v4.tool.ast.GrammarAST grammarAST13 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str14 = python3Target0.getLoopLabel(grammarAST13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"" + "'", str6, "\"\"");
        org.junit.Assert.assertNull(codeGenerator7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 29 + "'", int8 == 29);
    }

    @Test
    public void test06876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06876");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str2 = python3Target0.getTargetStringLiteralFromString("\"\"");
        int int3 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str5 = python3Target0.encodeIntAsCharEscape(0);
        java.lang.String str7 = python3Target0.getTargetStringLiteralFromString("");
        java.lang.String str8 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = python3Target0.gen;
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        java.lang.String str13 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator10, "\\35", false);
        boolean boolean14 = python3Target0.templatesExist();
        java.lang.String str16 = python3Target0.encodeIntAsCharEscape((int) ' ');
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str18 = python3Target0.getListLabel("\"1\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "\"\"\"\"" + "'", str2, "\"\"\"\"");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 64 + "'", int3 == 64);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\\0" + "'", str5, "\\0");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"\"" + "'", str7, "\"\"");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "4.5.2.1" + "'", str8, "4.5.2.1");
        org.junit.Assert.assertNull(codeGenerator9);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "3" + "'", str13, "3");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + " " + "'", str16, " ");
    }

    @Test
    public void test06877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06877");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!", "" };
        python3Target0.targetCharValueEscape = strArray4;
        java.util.Set<java.lang.String> strSet6 = python3Target0.badWords;
        boolean boolean7 = python3Target0.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup8 = python3Target0.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = python3Target0.getCodeGenerator();
        java.lang.String[] strArray10 = python3Target0.targetCharValueEscape;
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray10;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(sTGroup8);
        org.junit.Assert.assertNull(codeGenerator9);
        org.junit.Assert.assertNotNull(strArray10);
    }

    @Test
    public void test06878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06878");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "", true);
        org.antlr.v4.tool.Grammar grammar7 = null;
        org.stringtemplate.v4.ST sT8 = null;
        python3Target0.genRecognizerHeaderFile(grammar7, sT8, "");
        org.antlr.v4.tool.Grammar grammar11 = null;
        org.stringtemplate.v4.ST sT12 = null;
        python3Target0.genRecognizerHeaderFile(grammar11, sT12, "\"i\"");
        int int15 = python3Target0.getSerializedATNSegmentLimit();
        java.util.Set<java.lang.String> strSet16 = python3Target0.getBadWords();
        boolean boolean17 = python3Target0.wantsBaseListener();
        boolean boolean18 = python3Target0.wantsBaseListener();
        java.util.Set<java.lang.String> strSet19 = python3Target0.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator20 = null;
        java.lang.String str23 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator20, "\"\"4.5.2.1\"\"", false);
        java.util.Set<java.lang.String> strSet24 = python3Target0.badWords;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str26 = python3Target0.getImplicitSetLabel("\"\\\"5.2\\\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"" + "'", str6, "\"\"");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 29 + "'", int15 == 29);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "\\\"4.5.2.1\\\"" + "'", str23, "\\\"4.5.2.1\\\"");
        org.junit.Assert.assertNotNull(strSet24);
    }

    @Test
    public void test06879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06879");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        boolean boolean2 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.gen;
        boolean boolean4 = python3Target0.wantsBaseVisitor();
        boolean boolean5 = python3Target0.supportsOverloadedMethods();
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromString("\\0", false);
        java.lang.String str11 = python3Target0.getTargetStringLiteralFromString("\"d\"", false);
        python3Target0.addBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = python3Target0.getCodeGenerator();
        java.util.Set<java.lang.String> strSet14 = python3Target0.badWords;
        java.lang.String str16 = python3Target0.getTargetStringLiteralFromString("\"\\\"\\\"\\\"#\\\"\\\"\\\"\"");
        org.antlr.v4.tool.ast.GrammarAST grammarAST17 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str18 = python3Target0.getLoopCounter(grammarAST17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\\0" + "'", str8, "\\0");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"d\"" + "'", str11, "\"d\"");
        org.junit.Assert.assertNull(codeGenerator13);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\"\"\\\"\\\"\\\"#\\\"\\\"\\\"\"\"" + "'", str16, "\"\"\\\"\\\"\\\"#\\\"\\\"\\\"\"\"");
    }

    @Test
    public void test06880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06880");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "", true);
        java.util.Set<java.lang.String> strSet7 = python3Target0.badWords;
        java.lang.String str8 = python3Target0.language;
        org.stringtemplate.v4.STGroup sTGroup9 = null;
        python3Target0.templates = sTGroup9;
        org.antlr.v4.tool.ast.GrammarAST grammarAST11 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean12 = python3Target0.visibleGrammarSymbolCausesIssueInGeneratedCode(grammarAST11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"" + "'", str6, "\"\"");
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test06881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06881");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet2 = python3Target0.badWords;
        org.antlr.v4.codegen.target.Python3Target python3Target3 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str5 = python3Target3.encodeIntAsCharEscape(100);
        org.antlr.v4.tool.Grammar grammar6 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target7 = new org.antlr.v4.codegen.target.Python3Target();
        int int8 = python3Target7.getInlineTestSetWordSize();
        java.lang.String str9 = python3Target7.language;
        java.lang.String str10 = python3Target7.getVersion();
        int int11 = python3Target7.getInlineTestSetWordSize();
        java.lang.String str12 = python3Target7.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = python3Target7.gen;
        org.antlr.v4.tool.Grammar grammar14 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target15 = new org.antlr.v4.codegen.target.Python3Target();
        int int16 = python3Target15.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup17 = python3Target15.templates;
        org.antlr.v4.tool.Grammar grammar18 = null;
        int[] intArray19 = new int[] {};
        java.lang.String[] strArray20 = python3Target15.getTokenTypesAsTargetLabels(grammar18, intArray19);
        java.lang.String[] strArray21 = python3Target7.getTokenTypesAsTargetLabels(grammar14, intArray19);
        java.lang.String[] strArray22 = python3Target3.getTokenTypesAsTargetLabels(grammar6, intArray19);
        org.antlr.v4.codegen.target.Python3Target python3Target23 = new org.antlr.v4.codegen.target.Python3Target();
        int int24 = python3Target23.getInlineTestSetWordSize();
        boolean boolean25 = python3Target23.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator26 = python3Target23.gen;
        boolean boolean27 = python3Target23.wantsBaseVisitor();
        boolean boolean28 = python3Target23.supportsOverloadedMethods();
        java.lang.String str31 = python3Target23.getTargetStringLiteralFromString("\\0", false);
        java.lang.String str33 = python3Target23.encodeIntAsCharEscape(10);
        java.util.Set<java.lang.String> strSet34 = python3Target23.getBadWords();
        python3Target3.badWords = strSet34;
        org.antlr.v4.tool.Grammar grammar36 = null;
        org.stringtemplate.v4.ST sT37 = null;
        python3Target3.genRecognizerHeaderFile(grammar36, sT37, "i");
        java.lang.String[] strArray43 = new java.lang.String[] { "\"\"\\0\"\"", "\"\"\"\"\"\"", "\"i\"" };
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray43;
        python3Target3.targetCharValueEscape = strArray43;
        python3Target0.targetCharValueEscape = strArray43;
        // The following exception was thrown during execution in test generation
        try {
            org.stringtemplate.v4.STGroup sTGroup47 = python3Target0.getTemplates();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "d" + "'", str5, "d");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 64 + "'", int8 == 64);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "4.5.2.1" + "'", str10, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 64 + "'", int11 == 64);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(codeGenerator13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 64 + "'", int16 == 64);
        org.junit.Assert.assertNull(sTGroup17);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[]");
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 64 + "'", int24 == 64);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(codeGenerator26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "\\0" + "'", str31, "\\0");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "\\12" + "'", str33, "\\12");
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertNotNull(strArray43);
    }

    @Test
    public void test06882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06882");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        java.lang.String str3 = python3Target0.getVersion();
        boolean boolean4 = python3Target0.wantsBaseListener();
        java.lang.String str5 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        python3Target0.gen = codeGenerator6;
        org.antlr.v4.tool.ast.GrammarAST grammarAST8 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str9 = python3Target0.getLoopLabel(grammarAST8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "4.5.2.1" + "'", str3, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "4.5.2.1" + "'", str5, "4.5.2.1");
    }

    @Test
    public void test06883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06883");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        boolean boolean2 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.gen;
        boolean boolean4 = python3Target0.wantsBaseVisitor();
        java.lang.String str5 = python3Target0.language;
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromString("\\0", false);
        int int9 = python3Target0.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet10 = python3Target0.getBadWords();
        python3Target0.addBadWords();
        org.antlr.v4.tool.Grammar grammar12 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target13 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str14 = python3Target13.language;
        int int15 = python3Target13.getSerializedATNSegmentLimit();
        java.lang.String str17 = python3Target13.getTargetStringLiteralFromString("i");
        int int18 = python3Target13.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar19 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target20 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str21 = python3Target20.language;
        org.antlr.v4.codegen.target.Python3Target python3Target22 = new org.antlr.v4.codegen.target.Python3Target();
        org.stringtemplate.v4.STGroup sTGroup23 = null;
        python3Target22.templates = sTGroup23;
        java.lang.String[] strArray28 = new java.lang.String[] { "", "\\0", "" };
        java.util.LinkedHashSet<java.lang.String> strSet29 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet29, strArray28);
        python3Target22.badWords = strSet29;
        python3Target20.badWords = strSet29;
        python3Target20.language = "\"\"i\"\"";
        org.stringtemplate.v4.STGroup sTGroup35 = null;
        python3Target20.templates = sTGroup35;
        org.antlr.v4.tool.Grammar grammar37 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target38 = new org.antlr.v4.codegen.target.Python3Target();
        int int39 = python3Target38.getInlineTestSetWordSize();
        boolean boolean40 = python3Target38.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator41 = python3Target38.gen;
        java.lang.String str42 = python3Target38.getVersion();
        org.stringtemplate.v4.STGroup sTGroup43 = null;
        python3Target38.templates = sTGroup43;
        org.antlr.v4.tool.Grammar grammar45 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target46 = new org.antlr.v4.codegen.target.Python3Target();
        int int47 = python3Target46.getInlineTestSetWordSize();
        java.lang.String str48 = python3Target46.language;
        java.lang.String str49 = python3Target46.getVersion();
        python3Target46.language = "@";
        org.antlr.v4.tool.Grammar grammar52 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target53 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str55 = python3Target53.encodeIntAsCharEscape(100);
        org.antlr.v4.tool.Grammar grammar56 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target57 = new org.antlr.v4.codegen.target.Python3Target();
        int int58 = python3Target57.getInlineTestSetWordSize();
        java.lang.String str59 = python3Target57.language;
        java.lang.String str60 = python3Target57.getVersion();
        int int61 = python3Target57.getInlineTestSetWordSize();
        java.lang.String str62 = python3Target57.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator63 = python3Target57.gen;
        org.antlr.v4.tool.Grammar grammar64 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target65 = new org.antlr.v4.codegen.target.Python3Target();
        int int66 = python3Target65.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup67 = python3Target65.templates;
        org.antlr.v4.tool.Grammar grammar68 = null;
        int[] intArray69 = new int[] {};
        java.lang.String[] strArray70 = python3Target65.getTokenTypesAsTargetLabels(grammar68, intArray69);
        java.lang.String[] strArray71 = python3Target57.getTokenTypesAsTargetLabels(grammar64, intArray69);
        java.lang.String[] strArray72 = python3Target53.getTokenTypesAsTargetLabels(grammar56, intArray69);
        java.lang.String[] strArray73 = python3Target46.getTokenTypesAsTargetLabels(grammar52, intArray69);
        java.lang.String[] strArray74 = python3Target38.getTokenTypesAsTargetLabels(grammar45, intArray69);
        java.lang.String[] strArray75 = python3Target20.getTokenTypesAsTargetLabels(grammar37, intArray69);
        java.lang.String[] strArray76 = python3Target13.getTokenTypesAsTargetLabels(grammar19, intArray69);
        java.lang.String[] strArray77 = python3Target0.getTokenTypesAsTargetLabels(grammar12, intArray69);
        // The following exception was thrown during execution in test generation
        try {
            org.stringtemplate.v4.STGroup sTGroup78 = python3Target0.loadTemplates();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\\0" + "'", str8, "\\0");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 64 + "'", int9 == 64);
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 29 + "'", int15 == 29);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\"i\"" + "'", str17, "\"i\"");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 29 + "'", int18 == 29);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 64 + "'", int39 == 64);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(codeGenerator41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "4.5.2.1" + "'", str42, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 64 + "'", int47 == 64);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "4.5.2.1" + "'", str49, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "d" + "'", str55, "d");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 64 + "'", int58 == 64);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "4.5.2.1" + "'", str60, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 64 + "'", int61 == 64);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertNull(codeGenerator63);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 64 + "'", int66 == 64);
        org.junit.Assert.assertNull(sTGroup67);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[]");
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertNotNull(strArray77);
    }

    @Test
    public void test06884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06884");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        java.lang.String str3 = python3Target0.getVersion();
        org.antlr.v4.tool.Grammar grammar4 = null;
        org.stringtemplate.v4.ST sT5 = null;
        python3Target0.genRecognizerHeaderFile(grammar4, sT5, "\"\"\"\"");
        boolean boolean8 = python3Target0.wantsBaseListener();
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = python3Target0.gen;
        python3Target0.addBadWords();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "4.5.2.1" + "'", str3, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(codeGenerator9);
    }

    @Test
    public void test06885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06885");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str1 = python3Target0.language;
        int int2 = python3Target0.getSerializedATNSegmentLimit();
        java.lang.String str4 = python3Target0.getTargetStringLiteralFromString("i");
        org.antlr.v4.tool.Grammar grammar5 = null;
        org.stringtemplate.v4.ST sT6 = null;
        python3Target0.genRecognizerHeaderFile(grammar5, sT6, "");
        org.antlr.v4.tool.Grammar grammar9 = null;
        org.stringtemplate.v4.ST sT10 = null;
        python3Target0.genRecognizerHeaderFile(grammar9, sT10, "\"\"\"\\\"hi!\\\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar13 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str15 = python3Target0.getTokenTypeAsTargetLabel(grammar13, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 29 + "'", int2 == 29);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\"i\"" + "'", str4, "\"i\"");
    }

    @Test
    public void test06886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06886");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        java.lang.String str3 = python3Target0.getVersion();
        int int4 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str5 = python3Target0.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = python3Target0.gen;
        python3Target0.addBadWords();
        python3Target0.language = "\\0";
        boolean boolean10 = python3Target0.wantsBaseVisitor();
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = python3Target0.getCodeGenerator();
        int int12 = python3Target0.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar13 = null;
        org.stringtemplate.v4.ST sT14 = null;
        python3Target0.genRecognizerHeaderFile(grammar13, sT14, "\"\"\"4.5.2.1\"\"\"");
        java.lang.String[] strArray17 = python3Target0.targetCharValueEscape;
        org.antlr.v4.codegen.target.Python3Target python3Target18 = new org.antlr.v4.codegen.target.Python3Target();
        int int19 = python3Target18.getInlineTestSetWordSize();
        boolean boolean20 = python3Target18.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator21 = python3Target18.gen;
        boolean boolean22 = python3Target18.wantsBaseVisitor();
        org.antlr.v4.codegen.target.Python3Target python3Target23 = new org.antlr.v4.codegen.target.Python3Target();
        int int24 = python3Target23.getInlineTestSetWordSize();
        java.lang.String str25 = python3Target23.language;
        java.lang.String str26 = python3Target23.getVersion();
        org.stringtemplate.v4.STGroup sTGroup27 = null;
        python3Target23.templates = sTGroup27;
        org.antlr.v4.codegen.CodeGenerator codeGenerator29 = null;
        java.lang.String str32 = python3Target23.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator29, "d", false);
        java.util.Set<java.lang.String> strSet33 = python3Target23.getBadWords();
        python3Target18.badWords = strSet33;
        java.util.Set<java.lang.String> strSet35 = python3Target18.badWords;
        java.util.Set<java.lang.String> strSet36 = python3Target18.getBadWords();
        python3Target0.badWords = strSet36;
        // The following exception was thrown during execution in test generation
        try {
            org.stringtemplate.v4.STGroup sTGroup38 = python3Target0.loadTemplates();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "4.5.2.1" + "'", str3, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(codeGenerator6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(codeGenerator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 29 + "'", int12 == 29);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 64 + "'", int19 == 64);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(codeGenerator21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 64 + "'", int24 == 64);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "4.5.2.1" + "'", str26, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertNotNull(strSet33);
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertNotNull(strSet36);
    }

    @Test
    public void test06887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06887");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String str3 = python3Target0.language;
        java.lang.String str4 = python3Target0.getVersion();
        python3Target0.language = "\"\"\\\"\\\"\"\"";
        java.lang.String str8 = python3Target0.encodeIntAsCharEscape(29);
        java.lang.String str9 = python3Target0.language;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str11 = python3Target0.encodeIntAsCharEscape((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot encode the specified value: -1");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "4.5.2.1" + "'", str4, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\\35" + "'", str8, "\\35");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\"\\\"\\\"\"\"" + "'", str9, "\"\"\\\"\\\"\"\"");
    }

    @Test
    public void test06888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06888");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        boolean boolean2 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.gen;
        boolean boolean4 = python3Target0.wantsBaseVisitor();
        boolean boolean5 = python3Target0.supportsOverloadedMethods();
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromString("\\0", false);
        boolean boolean9 = python3Target0.templatesExist();
        python3Target0.addBadWords();
        org.antlr.v4.tool.Grammar grammar11 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target12 = new org.antlr.v4.codegen.target.Python3Target();
        int int13 = python3Target12.getInlineTestSetWordSize();
        java.lang.String str14 = python3Target12.language;
        java.lang.String str15 = python3Target12.getVersion();
        int int16 = python3Target12.getInlineTestSetWordSize();
        java.lang.String str17 = python3Target12.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator18 = python3Target12.gen;
        org.antlr.v4.tool.Grammar grammar19 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target20 = new org.antlr.v4.codegen.target.Python3Target();
        int int21 = python3Target20.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup22 = python3Target20.templates;
        org.antlr.v4.tool.Grammar grammar23 = null;
        int[] intArray24 = new int[] {};
        java.lang.String[] strArray25 = python3Target20.getTokenTypesAsTargetLabels(grammar23, intArray24);
        java.lang.String[] strArray26 = python3Target12.getTokenTypesAsTargetLabels(grammar19, intArray24);
        java.lang.String[] strArray27 = python3Target0.getTokenTypesAsTargetLabels(grammar11, intArray24);
        org.antlr.v4.codegen.CodeGenerator codeGenerator28 = python3Target0.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator29 = python3Target0.gen;
        java.util.Set<java.lang.String> strSet30 = python3Target0.badWords;
        java.lang.String str32 = python3Target0.encodeIntAsCharEscape((int) (byte) 10);
        org.antlr.v4.tool.Grammar grammar33 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str35 = python3Target0.getTokenTypeAsTargetLabel(grammar33, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\\0" + "'", str8, "\\0");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 64 + "'", int13 == 64);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "4.5.2.1" + "'", str15, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 64 + "'", int16 == 64);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(codeGenerator18);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 64 + "'", int21 == 64);
        org.junit.Assert.assertNull(sTGroup22);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[]");
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNull(codeGenerator28);
        org.junit.Assert.assertNull(codeGenerator29);
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "\\12" + "'", str32, "\\12");
    }

    @Test
    public void test06889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06889");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        java.lang.String str3 = python3Target0.getLanguage();
        java.lang.String str5 = python3Target0.getTargetStringLiteralFromString("");
        java.lang.String str6 = python3Target0.getVersion();
        org.antlr.v4.codegen.target.Python3Target python3Target7 = new org.antlr.v4.codegen.target.Python3Target();
        int int8 = python3Target7.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup9 = python3Target7.templates;
        org.antlr.v4.tool.Grammar grammar10 = null;
        int[] intArray11 = new int[] {};
        java.lang.String[] strArray12 = python3Target7.getTokenTypesAsTargetLabels(grammar10, intArray11);
        python3Target0.targetCharValueEscape = strArray12;
        org.antlr.v4.codegen.target.Python3Target python3Target14 = new org.antlr.v4.codegen.target.Python3Target();
        int int15 = python3Target14.getInlineTestSetWordSize();
        java.lang.String str16 = python3Target14.language;
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = python3Target14.getCodeGenerator();
        java.util.Set<java.lang.String> strSet18 = python3Target14.getBadWords();
        java.lang.String[] strArray19 = python3Target14.targetCharValueEscape;
        python3Target0.targetCharValueEscape = strArray19;
        java.lang.String str21 = python3Target0.getVersion();
        org.antlr.v4.codegen.target.Python3Target python3Target22 = new org.antlr.v4.codegen.target.Python3Target();
        org.stringtemplate.v4.STGroup sTGroup23 = null;
        python3Target22.templates = sTGroup23;
        java.lang.String[] strArray28 = new java.lang.String[] { "", "\\0", "" };
        java.util.LinkedHashSet<java.lang.String> strSet29 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet29, strArray28);
        python3Target22.badWords = strSet29;
        java.lang.String str34 = python3Target22.getTargetStringLiteralFromString("hi!", true);
        java.util.Set<java.lang.String> strSet35 = python3Target22.badWords;
        python3Target0.badWords = strSet35;
        java.lang.String str38 = python3Target0.getTargetStringLiteralFromString("\"\"");
        java.lang.String str41 = python3Target0.getTargetStringLiteralFromString("\"\"\"\\1\"\"\"", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator42 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target43 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator42);
        int int44 = python3Target43.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup45 = python3Target43.loadTemplates();
        python3Target0.templates = sTGroup45;
        java.lang.String str48 = python3Target0.getImplicitRuleLabel("");
        org.antlr.v4.tool.Grammar grammar49 = null;
        org.stringtemplate.v4.ST sT50 = null;
        python3Target0.genRecognizerHeaderFile(grammar49, sT50, "\\\"\\\"\\\"0\\\"\\\"\\\"");
        int int53 = python3Target0.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator54 = null;
        python3Target0.gen = codeGenerator54;
        org.antlr.v4.tool.ast.GrammarAST grammarAST56 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str57 = python3Target0.getLoopLabel(grammarAST56);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\"\"" + "'", str5, "\"\"");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "4.5.2.1" + "'", str6, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 64 + "'", int8 == 64);
        org.junit.Assert.assertNull(sTGroup9);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[]");
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 64 + "'", int15 == 64);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(codeGenerator17);
        org.junit.Assert.assertNotNull(strSet18);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "4.5.2.1" + "'", str21, "4.5.2.1");
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "\"hi!\"" + "'", str34, "\"hi!\"");
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "\"\"\"\"" + "'", str38, "\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "\"\"\"\"\\1\"\"\"\"" + "'", str41, "\"\"\"\"\\1\"\"\"\"");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 64 + "'", int44 == 64);
        org.junit.Assert.assertNotNull(sTGroup45);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "_" + "'", str48, "_");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 64 + "'", int53 == 64);
    }

    @Test
    public void test06890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06890");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str1 = python3Target0.language;
        int int2 = python3Target0.getSerializedATNSegmentLimit();
        java.lang.String str3 = python3Target0.getLanguage();
        java.util.Set<java.lang.String> strSet4 = python3Target0.getBadWords();
        org.stringtemplate.v4.STGroup sTGroup5 = null;
        python3Target0.templates = sTGroup5;
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromString("\"\"\\0\"\"");
        int int9 = python3Target0.getSerializedATNSegmentLimit();
        java.lang.String str10 = python3Target0.getLanguage();
        org.antlr.v4.tool.ast.GrammarAST grammarAST11 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean12 = python3Target0.grammarSymbolCausesIssueInGeneratedCode(grammarAST11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 29 + "'", int2 == 29);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\"\"\\0\"\"\"" + "'", str8, "\"\"\"\\0\"\"\"");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 29 + "'", int9 == 29);
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test06891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06891");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        boolean boolean2 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.gen;
        boolean boolean4 = python3Target0.wantsBaseVisitor();
        boolean boolean5 = python3Target0.supportsOverloadedMethods();
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromString("\\0", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = python3Target0.gen;
        boolean boolean10 = python3Target0.wantsBaseListener();
        boolean boolean11 = python3Target0.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet12 = python3Target0.badWords;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\\0" + "'", str8, "\\0");
        org.junit.Assert.assertNull(codeGenerator9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(strSet12);
    }

    @Test
    public void test06892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06892");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        org.stringtemplate.v4.STGroup sTGroup1 = null;
        python3Target0.templates = sTGroup1;
        java.lang.String[] strArray6 = new java.lang.String[] { "", "\\0", "" };
        java.util.LinkedHashSet<java.lang.String> strSet7 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet7, strArray6);
        python3Target0.badWords = strSet7;
        python3Target0.addBadWords();
        org.antlr.v4.codegen.target.Python3Target python3Target11 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean12 = python3Target11.wantsBaseVisitor();
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = null;
        python3Target11.gen = codeGenerator13;
        org.antlr.v4.codegen.CodeGenerator codeGenerator15 = python3Target11.gen;
        java.util.Set<java.lang.String> strSet16 = python3Target11.badWords;
        org.antlr.v4.codegen.target.Python3Target python3Target17 = new org.antlr.v4.codegen.target.Python3Target();
        int int18 = python3Target17.getInlineTestSetWordSize();
        java.lang.String str19 = python3Target17.language;
        java.lang.String str20 = python3Target17.getVersion();
        int int21 = python3Target17.getInlineTestSetWordSize();
        java.lang.String str22 = python3Target17.getLanguage();
        java.lang.String str25 = python3Target17.getTargetStringLiteralFromString("4.5.2.1", true);
        boolean boolean26 = python3Target17.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet27 = python3Target17.badWords;
        org.antlr.v4.tool.Grammar grammar28 = null;
        org.stringtemplate.v4.ST sT29 = null;
        python3Target17.genRecognizerHeaderFile(grammar28, sT29, "\"4.5.2.1\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator32 = null;
        java.lang.String str35 = python3Target17.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator32, "i", true);
        org.antlr.v4.codegen.target.Python3Target python3Target36 = new org.antlr.v4.codegen.target.Python3Target();
        org.stringtemplate.v4.STGroup sTGroup37 = null;
        python3Target36.templates = sTGroup37;
        java.lang.String[] strArray42 = new java.lang.String[] { "", "\\0", "" };
        java.util.LinkedHashSet<java.lang.String> strSet43 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet43, strArray42);
        python3Target36.badWords = strSet43;
        python3Target17.badWords = strSet43;
        python3Target11.badWords = strSet43;
        python3Target0.badWords = strSet43;
        org.antlr.v4.codegen.CodeGenerator codeGenerator49 = null;
        python3Target0.gen = codeGenerator49;
        java.util.Set<java.lang.String> strSet51 = python3Target0.badWords;
        boolean boolean52 = python3Target0.supportsOverloadedMethods();
        java.lang.String[] strArray53 = python3Target0.targetCharValueEscape;
        boolean boolean54 = python3Target0.supportsOverloadedMethods();
        boolean boolean55 = python3Target0.supportsOverloadedMethods();
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(codeGenerator15);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 64 + "'", int18 == 64);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "4.5.2.1" + "'", str20, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 64 + "'", int21 == 64);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "\"4.5.2.1\"" + "'", str25, "\"4.5.2.1\"");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "\"\"" + "'", str35, "\"\"");
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(strSet51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
    }

    @Test
    public void test06893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06893");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        boolean boolean2 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.gen;
        boolean boolean4 = python3Target0.wantsBaseVisitor();
        java.lang.String str5 = python3Target0.language;
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromString("\\0", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = python3Target0.gen;
        int int10 = python3Target0.getSerializedATNSegmentLimit();
        java.lang.String str12 = python3Target0.getTargetStringLiteralFromString("\"\"5.2\"\"");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\\0" + "'", str8, "\\0");
        org.junit.Assert.assertNull(codeGenerator9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 29 + "'", int10 == 29);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"\"\"5.2\"\"\"" + "'", str12, "\"\"\"5.2\"\"\"");
    }

    @Test
    public void test06894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06894");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str1 = python3Target0.language;
        org.antlr.v4.codegen.target.Python3Target python3Target2 = new org.antlr.v4.codegen.target.Python3Target();
        org.stringtemplate.v4.STGroup sTGroup3 = null;
        python3Target2.templates = sTGroup3;
        java.lang.String[] strArray8 = new java.lang.String[] { "", "\\0", "" };
        java.util.LinkedHashSet<java.lang.String> strSet9 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet9, strArray8);
        python3Target2.badWords = strSet9;
        python3Target0.badWords = strSet9;
        python3Target0.language = "\"\"i\"\"";
        java.lang.String str15 = python3Target0.language;
        int int16 = python3Target0.getSerializedATNSegmentLimit();
        java.lang.String str18 = python3Target0.encodeIntAsCharEscape((int) '4');
        org.antlr.v4.tool.Grammar grammar19 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target20 = new org.antlr.v4.codegen.target.Python3Target();
        int int21 = python3Target20.getInlineTestSetWordSize();
        java.lang.String str22 = python3Target20.language;
        java.lang.String str23 = python3Target20.getVersion();
        int int24 = python3Target20.getInlineTestSetWordSize();
        java.lang.String str25 = python3Target20.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator26 = python3Target20.gen;
        python3Target20.addBadWords();
        python3Target20.language = "\\0";
        boolean boolean30 = python3Target20.wantsBaseVisitor();
        org.antlr.v4.codegen.CodeGenerator codeGenerator31 = python3Target20.getCodeGenerator();
        int int32 = python3Target20.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar33 = null;
        org.stringtemplate.v4.ST sT34 = null;
        python3Target20.genRecognizerHeaderFile(grammar33, sT34, "\"\"\"4.5.2.1\"\"\"");
        org.antlr.v4.tool.Grammar grammar37 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target38 = new org.antlr.v4.codegen.target.Python3Target();
        int int39 = python3Target38.getInlineTestSetWordSize();
        java.lang.String str40 = python3Target38.language;
        java.lang.String str41 = python3Target38.getVersion();
        python3Target38.language = "@";
        org.antlr.v4.tool.Grammar grammar44 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target45 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str47 = python3Target45.encodeIntAsCharEscape(100);
        org.antlr.v4.tool.Grammar grammar48 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target49 = new org.antlr.v4.codegen.target.Python3Target();
        int int50 = python3Target49.getInlineTestSetWordSize();
        java.lang.String str51 = python3Target49.language;
        java.lang.String str52 = python3Target49.getVersion();
        int int53 = python3Target49.getInlineTestSetWordSize();
        java.lang.String str54 = python3Target49.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator55 = python3Target49.gen;
        org.antlr.v4.tool.Grammar grammar56 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target57 = new org.antlr.v4.codegen.target.Python3Target();
        int int58 = python3Target57.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup59 = python3Target57.templates;
        org.antlr.v4.tool.Grammar grammar60 = null;
        int[] intArray61 = new int[] {};
        java.lang.String[] strArray62 = python3Target57.getTokenTypesAsTargetLabels(grammar60, intArray61);
        java.lang.String[] strArray63 = python3Target49.getTokenTypesAsTargetLabels(grammar56, intArray61);
        java.lang.String[] strArray64 = python3Target45.getTokenTypesAsTargetLabels(grammar48, intArray61);
        java.lang.String[] strArray65 = python3Target38.getTokenTypesAsTargetLabels(grammar44, intArray61);
        java.lang.String[] strArray66 = python3Target20.getTokenTypesAsTargetLabels(grammar37, intArray61);
        java.lang.String[] strArray67 = python3Target0.getTokenTypesAsTargetLabels(grammar19, intArray61);
        python3Target0.language = "\"\"\"\"\"\"\"\"\"\"\"\"\"\"";
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\"\"i\"\"" + "'", str15, "\"\"i\"\"");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 29 + "'", int16 == 29);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "\\64" + "'", str18, "\\64");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 64 + "'", int21 == 64);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "4.5.2.1" + "'", str23, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 64 + "'", int24 == 64);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(codeGenerator26);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(codeGenerator31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 29 + "'", int32 == 29);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 64 + "'", int39 == 64);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "4.5.2.1" + "'", str41, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "d" + "'", str47, "d");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 64 + "'", int50 == 64);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "4.5.2.1" + "'", str52, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 64 + "'", int53 == 64);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNull(codeGenerator55);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 64 + "'", int58 == 64);
        org.junit.Assert.assertNull(sTGroup59);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[]");
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertNotNull(strArray67);
    }

    @Test
    public void test06895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06895");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str2 = python3Target0.getTargetStringLiteralFromString("\"\"");
        int int3 = python3Target0.getInlineTestSetWordSize();
        boolean boolean4 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup5 = python3Target0.templates;
        java.lang.String str7 = python3Target0.getTargetStringLiteralFromString("\"\"\"\"");
        int int8 = python3Target0.getInlineTestSetWordSize();
        boolean boolean9 = python3Target0.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet10 = python3Target0.badWords;
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = null;
        python3Target0.gen = codeGenerator11;
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "\"\"\"\"" + "'", str2, "\"\"\"\"");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 64 + "'", int3 == 64);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(sTGroup5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"\"\"\"\"\"" + "'", str7, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 64 + "'", int8 == 64);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strSet10);
    }

    @Test
    public void test06896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06896");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        boolean boolean2 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.gen;
        boolean boolean4 = python3Target0.wantsBaseVisitor();
        java.lang.String str5 = python3Target0.language;
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromString("\\0", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = python3Target0.gen;
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        java.lang.String str13 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator10, "\"\\\"\\\"4.5.2.1\\\"\\\"\"", true);
        python3Target0.language = "\"\"12\"\"";
        org.antlr.v4.tool.Rule rule16 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str17 = python3Target0.getRuleFunctionContextStructName(rule16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\\0" + "'", str8, "\\0");
        org.junit.Assert.assertNull(codeGenerator9);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"\\\"\\\"4.5.2.1\\\"\\\"\"" + "'", str13, "\"\\\"\\\"4.5.2.1\\\"\\\"\"");
    }

    @Test
    public void test06897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06897");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!", "" };
        python3Target0.targetCharValueEscape = strArray4;
        java.lang.String[] strArray6 = python3Target0.targetCharValueEscape;
        boolean boolean7 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = null;
        java.lang.String str11 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator8, "\"\"\"\"", true);
        org.antlr.v4.tool.Grammar grammar12 = null;
        org.stringtemplate.v4.ST sT13 = null;
        python3Target0.genRecognizerHeaderFile(grammar12, sT13, "6");
        org.antlr.v4.tool.Rule rule16 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str17 = python3Target0.getRuleFunctionContextStructName(rule16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"\\\"\\\"\"" + "'", str11, "\"\\\"\\\"\"");
    }

    @Test
    public void test06898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06898");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        org.stringtemplate.v4.STGroup sTGroup1 = null;
        python3Target0.templates = sTGroup1;
        java.lang.String[] strArray6 = new java.lang.String[] { "", "\\0", "" };
        java.util.LinkedHashSet<java.lang.String> strSet7 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet7, strArray6);
        python3Target0.badWords = strSet7;
        python3Target0.addBadWords();
        org.antlr.v4.codegen.target.Python3Target python3Target11 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean12 = python3Target11.wantsBaseVisitor();
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = null;
        python3Target11.gen = codeGenerator13;
        org.antlr.v4.codegen.CodeGenerator codeGenerator15 = python3Target11.gen;
        java.util.Set<java.lang.String> strSet16 = python3Target11.badWords;
        org.antlr.v4.codegen.target.Python3Target python3Target17 = new org.antlr.v4.codegen.target.Python3Target();
        int int18 = python3Target17.getInlineTestSetWordSize();
        java.lang.String str19 = python3Target17.language;
        java.lang.String str20 = python3Target17.getVersion();
        int int21 = python3Target17.getInlineTestSetWordSize();
        java.lang.String str22 = python3Target17.getLanguage();
        java.lang.String str25 = python3Target17.getTargetStringLiteralFromString("4.5.2.1", true);
        boolean boolean26 = python3Target17.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet27 = python3Target17.badWords;
        org.antlr.v4.tool.Grammar grammar28 = null;
        org.stringtemplate.v4.ST sT29 = null;
        python3Target17.genRecognizerHeaderFile(grammar28, sT29, "\"4.5.2.1\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator32 = null;
        java.lang.String str35 = python3Target17.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator32, "i", true);
        org.antlr.v4.codegen.target.Python3Target python3Target36 = new org.antlr.v4.codegen.target.Python3Target();
        org.stringtemplate.v4.STGroup sTGroup37 = null;
        python3Target36.templates = sTGroup37;
        java.lang.String[] strArray42 = new java.lang.String[] { "", "\\0", "" };
        java.util.LinkedHashSet<java.lang.String> strSet43 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet43, strArray42);
        python3Target36.badWords = strSet43;
        python3Target17.badWords = strSet43;
        python3Target11.badWords = strSet43;
        python3Target0.badWords = strSet43;
        org.antlr.v4.codegen.CodeGenerator codeGenerator49 = null;
        python3Target0.gen = codeGenerator49;
        org.antlr.v4.tool.Grammar grammar51 = null;
        org.stringtemplate.v4.ST sT52 = null;
        python3Target0.genRecognizerHeaderFile(grammar51, sT52, "\"\"1\"\"");
        boolean boolean55 = python3Target0.wantsBaseVisitor();
        java.lang.String str58 = python3Target0.getTargetStringLiteralFromString("", true);
        python3Target0.addBadWords();
        org.antlr.v4.tool.ast.GrammarAST grammarAST60 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str61 = python3Target0.getLoopLabel(grammarAST60);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(codeGenerator15);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 64 + "'", int18 == 64);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "4.5.2.1" + "'", str20, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 64 + "'", int21 == 64);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "\"4.5.2.1\"" + "'", str25, "\"4.5.2.1\"");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "\"\"" + "'", str35, "\"\"");
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "\"\"" + "'", str58, "\"\"");
    }

    @Test
    public void test06899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06899");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        java.lang.String str3 = python3Target0.getLanguage();
        java.lang.String str5 = python3Target0.getTargetStringLiteralFromString("");
        java.lang.String str6 = python3Target0.getVersion();
        org.stringtemplate.v4.STGroup sTGroup7 = null;
        python3Target0.templates = sTGroup7;
        java.util.Set<java.lang.String> strSet9 = python3Target0.getBadWords();
        java.lang.String str12 = python3Target0.getTargetStringLiteralFromString("", true);
        java.lang.String str13 = python3Target0.getVersion();
        org.antlr.v4.tool.Grammar grammar14 = null;
        org.stringtemplate.v4.ST sT15 = null;
        python3Target0.genRecognizerHeaderFile(grammar14, sT15, "\"\"\"\\1\"\"\"");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str19 = python3Target0.getElementListName("\"\"i\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\"\"" + "'", str5, "\"\"");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "4.5.2.1" + "'", str6, "4.5.2.1");
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"\"" + "'", str12, "\"\"");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "4.5.2.1" + "'", str13, "4.5.2.1");
    }

    @Test
    public void test06900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06900");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        org.stringtemplate.v4.STGroup sTGroup1 = null;
        python3Target0.templates = sTGroup1;
        java.util.Set<java.lang.String> strSet3 = null;
        python3Target0.badWords = strSet3;
        boolean boolean5 = python3Target0.supportsOverloadedMethods();
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromString("\\12", true);
        int int9 = python3Target0.getInlineTestSetWordSize();
        int int10 = python3Target0.getSerializedATNSegmentLimit();
        boolean boolean11 = python3Target0.templatesExist();
        java.lang.String[] strArray12 = python3Target0.targetCharValueEscape;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str14 = python3Target0.getElementListName("\"\"\"\"\\64\"\"\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\\12\"" + "'", str8, "\"\\12\"");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 64 + "'", int9 == 64);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 29 + "'", int10 == 29);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(strArray12);
    }

    @Test
    public void test06901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06901");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        org.stringtemplate.v4.STGroup sTGroup1 = null;
        python3Target0.templates = sTGroup1;
        java.util.Set<java.lang.String> strSet3 = null;
        python3Target0.badWords = strSet3;
        boolean boolean5 = python3Target0.supportsOverloadedMethods();
        java.lang.String str6 = python3Target0.getVersion();
        java.util.Set<java.lang.String> strSet7 = python3Target0.badWords;
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "4.5.2.1" + "'", str6, "4.5.2.1");
        org.junit.Assert.assertNull(strSet7);
    }

    @Test
    public void test06902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06902");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str2 = python3Target0.getTargetStringLiteralFromString("\"\"");
        int int3 = python3Target0.getInlineTestSetWordSize();
        boolean boolean4 = python3Target0.supportsOverloadedMethods();
        java.lang.String str6 = python3Target0.encodeIntAsCharEscape(10);
        org.antlr.v4.tool.Grammar grammar7 = null;
        org.stringtemplate.v4.ST sT8 = null;
        python3Target0.genRecognizerHeaderFile(grammar7, sT8, "\"\"");
        org.antlr.v4.codegen.target.Python3Target python3Target11 = new org.antlr.v4.codegen.target.Python3Target();
        int int12 = python3Target11.getInlineTestSetWordSize();
        boolean boolean13 = python3Target11.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = python3Target11.gen;
        boolean boolean15 = python3Target11.wantsBaseVisitor();
        java.lang.String str16 = python3Target11.language;
        java.lang.String str19 = python3Target11.getTargetStringLiteralFromString("\\0", false);
        int int20 = python3Target11.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet21 = python3Target11.getBadWords();
        python3Target0.badWords = strSet21;
        org.antlr.v4.codegen.CodeGenerator codeGenerator23 = null;
        python3Target0.gen = codeGenerator23;
        java.lang.Class<?> wildcardClass25 = python3Target0.getClass();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "\"\"\"\"" + "'", str2, "\"\"\"\"");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 64 + "'", int3 == 64);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\\12" + "'", str6, "\\12");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 64 + "'", int12 == 64);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(codeGenerator14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "\\0" + "'", str19, "\\0");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 64 + "'", int20 == 64);
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test06903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06903");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        java.lang.String str3 = python3Target0.getVersion();
        int int4 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str5 = python3Target0.getLanguage();
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromString("hi!", false);
        org.antlr.v4.tool.Grammar grammar9 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target10 = new org.antlr.v4.codegen.target.Python3Target();
        int int11 = python3Target10.getInlineTestSetWordSize();
        java.lang.String str12 = python3Target10.language;
        java.lang.String str13 = python3Target10.getVersion();
        int int14 = python3Target10.getInlineTestSetWordSize();
        java.lang.String str15 = python3Target10.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator16 = python3Target10.gen;
        org.antlr.v4.tool.Grammar grammar17 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target18 = new org.antlr.v4.codegen.target.Python3Target();
        int int19 = python3Target18.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup20 = python3Target18.templates;
        org.antlr.v4.tool.Grammar grammar21 = null;
        int[] intArray22 = new int[] {};
        java.lang.String[] strArray23 = python3Target18.getTokenTypesAsTargetLabels(grammar21, intArray22);
        java.lang.String[] strArray24 = python3Target10.getTokenTypesAsTargetLabels(grammar17, intArray22);
        java.lang.String str25 = python3Target10.getLanguage();
        java.lang.String str26 = python3Target10.getLanguage();
        java.lang.String str28 = python3Target10.getTargetStringLiteralFromString("\"i\"");
        org.antlr.v4.tool.Grammar grammar29 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target30 = new org.antlr.v4.codegen.target.Python3Target();
        int int31 = python3Target30.getInlineTestSetWordSize();
        java.lang.String[] strArray34 = new java.lang.String[] { "hi!", "" };
        python3Target30.targetCharValueEscape = strArray34;
        java.util.Set<java.lang.String> strSet36 = python3Target30.badWords;
        org.stringtemplate.v4.STGroup sTGroup37 = python3Target30.templates;
        org.antlr.v4.tool.Grammar grammar38 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target39 = new org.antlr.v4.codegen.target.Python3Target();
        int int40 = python3Target39.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup41 = python3Target39.templates;
        org.antlr.v4.tool.Grammar grammar42 = null;
        int[] intArray43 = new int[] {};
        java.lang.String[] strArray44 = python3Target39.getTokenTypesAsTargetLabels(grammar42, intArray43);
        java.lang.String[] strArray45 = python3Target30.getTokenTypesAsTargetLabels(grammar38, intArray43);
        java.lang.String[] strArray46 = python3Target10.getTokenTypesAsTargetLabels(grammar29, intArray43);
        java.lang.String[] strArray47 = python3Target0.getTokenTypesAsTargetLabels(grammar9, intArray43);
        org.stringtemplate.v4.STGroup sTGroup48 = python3Target0.templates;
        java.lang.String str49 = python3Target0.language;
        org.antlr.v4.codegen.CodeGenerator codeGenerator50 = null;
        java.lang.String str53 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator50, "\"\"\\\"\\\"\"\"", false);
        java.lang.String str55 = python3Target0.getTargetStringLiteralFromString("i");
        java.lang.String str57 = python3Target0.encodeIntAsCharEscape((int) (short) 0);
        int int58 = python3Target0.getSerializedATNSegmentLimit();
        java.util.Set<java.lang.String> strSet59 = python3Target0.getBadWords();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str61 = python3Target0.getListLabel("\"\"\\12\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "4.5.2.1" + "'", str3, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 64 + "'", int11 == 64);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "4.5.2.1" + "'", str13, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 64 + "'", int14 == 64);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(codeGenerator16);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 64 + "'", int19 == 64);
        org.junit.Assert.assertNull(sTGroup20);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[]");
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "\"\"i\"\"" + "'", str28, "\"\"i\"\"");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 64 + "'", int31 == 64);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(strSet36);
        org.junit.Assert.assertNull(sTGroup37);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 64 + "'", int40 == 64);
        org.junit.Assert.assertNull(sTGroup41);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[]");
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNull(sTGroup48);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "\\\"\\\"\\\"\\\"" + "'", str53, "\\\"\\\"\\\"\\\"");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "\"i\"" + "'", str55, "\"i\"");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "\\0" + "'", str57, "\\0");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 29 + "'", int58 == 29);
        org.junit.Assert.assertNotNull(strSet59);
    }

    @Test
    public void test06904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06904");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        org.stringtemplate.v4.STGroup sTGroup1 = null;
        python3Target0.templates = sTGroup1;
        java.util.Set<java.lang.String> strSet3 = null;
        python3Target0.badWords = strSet3;
        boolean boolean5 = python3Target0.supportsOverloadedMethods();
        java.lang.String str6 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = python3Target0.getCodeGenerator();
        org.antlr.v4.tool.Grammar grammar8 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target9 = new org.antlr.v4.codegen.target.Python3Target();
        int int10 = python3Target9.getInlineTestSetWordSize();
        java.lang.String str11 = python3Target9.language;
        java.lang.String str12 = python3Target9.getVersion();
        int int13 = python3Target9.getInlineTestSetWordSize();
        java.lang.String str15 = python3Target9.getTargetStringLiteralFromString("@");
        org.antlr.v4.codegen.target.Python3Target python3Target16 = new org.antlr.v4.codegen.target.Python3Target();
        int int17 = python3Target16.getInlineTestSetWordSize();
        java.lang.String str18 = python3Target16.language;
        java.lang.String str19 = python3Target16.getVersion();
        int int20 = python3Target16.getInlineTestSetWordSize();
        java.lang.String str21 = python3Target16.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator22 = python3Target16.gen;
        python3Target16.addBadWords();
        python3Target16.language = "\\0";
        java.lang.String[] strArray26 = python3Target16.targetCharValueEscape;
        python3Target9.targetCharValueEscape = strArray26;
        org.antlr.v4.tool.Grammar grammar28 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target29 = new org.antlr.v4.codegen.target.Python3Target();
        int int30 = python3Target29.getInlineTestSetWordSize();
        java.lang.String str31 = python3Target29.language;
        org.antlr.v4.codegen.CodeGenerator codeGenerator32 = null;
        java.lang.String str35 = python3Target29.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator32, "", true);
        org.antlr.v4.tool.Grammar grammar36 = null;
        org.stringtemplate.v4.ST sT37 = null;
        python3Target29.genRecognizerHeaderFile(grammar36, sT37, "\"\"\"\"");
        org.stringtemplate.v4.STGroup sTGroup40 = null;
        python3Target29.templates = sTGroup40;
        org.stringtemplate.v4.STGroup sTGroup42 = null;
        python3Target29.templates = sTGroup42;
        org.antlr.v4.tool.Grammar grammar44 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target45 = new org.antlr.v4.codegen.target.Python3Target();
        int int46 = python3Target45.getInlineTestSetWordSize();
        java.lang.String str47 = python3Target45.language;
        java.lang.String str48 = python3Target45.getVersion();
        int int49 = python3Target45.getInlineTestSetWordSize();
        java.lang.String str50 = python3Target45.getLanguage();
        java.lang.String str53 = python3Target45.getTargetStringLiteralFromString("4.5.2.1", true);
        java.util.Set<java.lang.String> strSet54 = python3Target45.badWords;
        int int55 = python3Target45.getSerializedATNSegmentLimit();
        java.lang.String str56 = python3Target45.getVersion();
        org.antlr.v4.tool.Grammar grammar57 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target58 = new org.antlr.v4.codegen.target.Python3Target();
        int int59 = python3Target58.getInlineTestSetWordSize();
        java.lang.String str60 = python3Target58.language;
        java.lang.String str61 = python3Target58.getVersion();
        int int62 = python3Target58.getInlineTestSetWordSize();
        java.lang.String str63 = python3Target58.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator64 = python3Target58.gen;
        org.antlr.v4.tool.Grammar grammar65 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target66 = new org.antlr.v4.codegen.target.Python3Target();
        int int67 = python3Target66.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup68 = python3Target66.templates;
        org.antlr.v4.tool.Grammar grammar69 = null;
        int[] intArray70 = new int[] {};
        java.lang.String[] strArray71 = python3Target66.getTokenTypesAsTargetLabels(grammar69, intArray70);
        java.lang.String[] strArray72 = python3Target58.getTokenTypesAsTargetLabels(grammar65, intArray70);
        java.lang.String[] strArray73 = python3Target45.getTokenTypesAsTargetLabels(grammar57, intArray70);
        java.lang.String[] strArray74 = python3Target29.getTokenTypesAsTargetLabels(grammar44, intArray70);
        java.lang.String[] strArray75 = python3Target9.getTokenTypesAsTargetLabels(grammar28, intArray70);
        java.lang.String[] strArray76 = python3Target0.getTokenTypesAsTargetLabels(grammar8, intArray70);
        org.antlr.v4.codegen.CodeGenerator codeGenerator77 = python3Target0.getCodeGenerator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str79 = python3Target0.getListLabel("\\\"64\\\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "4.5.2.1" + "'", str6, "4.5.2.1");
        org.junit.Assert.assertNull(codeGenerator7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 64 + "'", int10 == 64);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "4.5.2.1" + "'", str12, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 64 + "'", int13 == 64);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\"@\"" + "'", str15, "\"@\"");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 64 + "'", int17 == 64);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "4.5.2.1" + "'", str19, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 64 + "'", int20 == 64);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(codeGenerator22);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 64 + "'", int30 == 64);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "\"\"" + "'", str35, "\"\"");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 64 + "'", int46 == 64);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "4.5.2.1" + "'", str48, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 64 + "'", int49 == 64);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "\"4.5.2.1\"" + "'", str53, "\"4.5.2.1\"");
        org.junit.Assert.assertNotNull(strSet54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 29 + "'", int55 == 29);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "4.5.2.1" + "'", str56, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 64 + "'", int59 == 64);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "4.5.2.1" + "'", str61, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 64 + "'", int62 == 64);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNull(codeGenerator64);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 64 + "'", int67 == 64);
        org.junit.Assert.assertNull(sTGroup68);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[]");
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertNull(codeGenerator77);
    }

    @Test
    public void test06905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06905");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.getCodeGenerator();
        java.util.Set<java.lang.String> strSet4 = python3Target0.getBadWords();
        org.antlr.v4.codegen.target.Python3Target python3Target5 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray7 = new java.lang.String[] { "" };
        java.util.LinkedHashSet<java.lang.String> strSet8 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet8, strArray7);
        python3Target5.badWords = strSet8;
        python3Target0.badWords = strSet8;
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = python3Target0.gen;
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = python3Target0.gen;
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = python3Target0.gen;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(codeGenerator12);
        org.junit.Assert.assertNull(codeGenerator13);
        org.junit.Assert.assertNull(codeGenerator14);
    }

    @Test
    public void test06906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06906");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "", true);
        java.lang.String str8 = python3Target0.encodeIntAsCharEscape((int) (short) 100);
        java.util.Set<java.lang.String> strSet9 = python3Target0.badWords;
        python3Target0.language = "@";
        python3Target0.addBadWords();
        org.antlr.v4.tool.Grammar grammar13 = null;
        org.stringtemplate.v4.ST sT14 = null;
        // The following exception was thrown during execution in test generation
        try {
            python3Target0.genFile(grammar13, sT14, "\"\".5.2.\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"" + "'", str6, "\"\"");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "d" + "'", str8, "d");
        org.junit.Assert.assertNotNull(strSet9);
    }

    @Test
    public void test06907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06907");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        java.lang.String str3 = python3Target0.getLanguage();
        java.lang.String str5 = python3Target0.getTargetStringLiteralFromString("");
        java.lang.String str6 = python3Target0.getVersion();
        org.antlr.v4.codegen.target.Python3Target python3Target7 = new org.antlr.v4.codegen.target.Python3Target();
        int int8 = python3Target7.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup9 = python3Target7.templates;
        org.antlr.v4.tool.Grammar grammar10 = null;
        int[] intArray11 = new int[] {};
        java.lang.String[] strArray12 = python3Target7.getTokenTypesAsTargetLabels(grammar10, intArray11);
        python3Target0.targetCharValueEscape = strArray12;
        org.antlr.v4.codegen.target.Python3Target python3Target14 = new org.antlr.v4.codegen.target.Python3Target();
        int int15 = python3Target14.getInlineTestSetWordSize();
        java.lang.String str16 = python3Target14.language;
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = python3Target14.getCodeGenerator();
        java.util.Set<java.lang.String> strSet18 = python3Target14.getBadWords();
        java.lang.String[] strArray19 = python3Target14.targetCharValueEscape;
        python3Target0.targetCharValueEscape = strArray19;
        java.lang.String str21 = python3Target0.getVersion();
        int int22 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str25 = python3Target0.getTargetStringLiteralFromString("\"\"\" \"\"\"", true);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str27 = python3Target0.getElementName("\"\"\"\"\\\"4.5.2.1\\\"\"\"\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\"\"" + "'", str5, "\"\"");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "4.5.2.1" + "'", str6, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 64 + "'", int8 == 64);
        org.junit.Assert.assertNull(sTGroup9);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[]");
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 64 + "'", int15 == 64);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(codeGenerator17);
        org.junit.Assert.assertNotNull(strSet18);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "4.5.2.1" + "'", str21, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 64 + "'", int22 == 64);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "\"\"\"\" \"\"\"\"" + "'", str25, "\"\"\"\" \"\"\"\"");
    }

    @Test
    public void test06908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06908");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        java.lang.String str3 = python3Target0.getVersion();
        int int4 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str5 = python3Target0.getLanguage();
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromString("4.5.2.1", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = null;
        python3Target0.gen = codeGenerator9;
        org.antlr.v4.codegen.target.Python3Target python3Target11 = new org.antlr.v4.codegen.target.Python3Target();
        int int12 = python3Target11.getInlineTestSetWordSize();
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!", "" };
        python3Target11.targetCharValueEscape = strArray15;
        java.lang.String[] strArray17 = python3Target11.targetCharValueEscape;
        python3Target11.addBadWords();
        org.antlr.v4.codegen.target.Python3Target python3Target19 = new org.antlr.v4.codegen.target.Python3Target();
        int int20 = python3Target19.getInlineTestSetWordSize();
        java.lang.String str21 = python3Target19.language;
        org.antlr.v4.codegen.CodeGenerator codeGenerator22 = null;
        java.lang.String str25 = python3Target19.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator22, "", true);
        org.antlr.v4.tool.Grammar grammar26 = null;
        org.stringtemplate.v4.ST sT27 = null;
        python3Target19.genRecognizerHeaderFile(grammar26, sT27, "");
        org.antlr.v4.tool.Grammar grammar30 = null;
        org.stringtemplate.v4.ST sT31 = null;
        python3Target19.genRecognizerHeaderFile(grammar30, sT31, "\"i\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator34 = python3Target19.gen;
        org.antlr.v4.codegen.CodeGenerator codeGenerator35 = null;
        python3Target19.gen = codeGenerator35;
        java.lang.String str38 = python3Target19.encodeIntAsCharEscape(1);
        org.antlr.v4.tool.Grammar grammar39 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target40 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str42 = python3Target40.encodeIntAsCharEscape(100);
        org.antlr.v4.tool.Grammar grammar43 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target44 = new org.antlr.v4.codegen.target.Python3Target();
        int int45 = python3Target44.getInlineTestSetWordSize();
        java.lang.String str46 = python3Target44.language;
        java.lang.String str47 = python3Target44.getVersion();
        int int48 = python3Target44.getInlineTestSetWordSize();
        java.lang.String str49 = python3Target44.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator50 = python3Target44.gen;
        org.antlr.v4.tool.Grammar grammar51 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target52 = new org.antlr.v4.codegen.target.Python3Target();
        int int53 = python3Target52.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup54 = python3Target52.templates;
        org.antlr.v4.tool.Grammar grammar55 = null;
        int[] intArray56 = new int[] {};
        java.lang.String[] strArray57 = python3Target52.getTokenTypesAsTargetLabels(grammar55, intArray56);
        java.lang.String[] strArray58 = python3Target44.getTokenTypesAsTargetLabels(grammar51, intArray56);
        java.lang.String[] strArray59 = python3Target40.getTokenTypesAsTargetLabels(grammar43, intArray56);
        java.lang.String[] strArray60 = python3Target19.getTokenTypesAsTargetLabels(grammar39, intArray56);
        python3Target11.targetCharValueEscape = strArray60;
        python3Target0.targetCharValueEscape = strArray60;
        org.antlr.v4.codegen.CodeGenerator codeGenerator63 = null;
        java.lang.String str66 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator63, "\\\"\\\"\\\"\\\"", true);
        org.stringtemplate.v4.STGroup sTGroup67 = python3Target0.templates;
        java.lang.String str68 = python3Target0.getVersion();
        java.lang.String str70 = python3Target0.getTargetStringLiteralFromString("\"\"\"\"\"_tseta\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "4.5.2.1" + "'", str3, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"4.5.2.1\"" + "'", str8, "\"4.5.2.1\"");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 64 + "'", int12 == 64);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 64 + "'", int20 == 64);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "\"\"" + "'", str25, "\"\"");
        org.junit.Assert.assertNull(codeGenerator34);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "\\1" + "'", str38, "\\1");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "d" + "'", str42, "d");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 64 + "'", int45 == 64);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "4.5.2.1" + "'", str47, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 64 + "'", int48 == 64);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNull(codeGenerator50);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 64 + "'", int53 == 64);
        org.junit.Assert.assertNull(sTGroup54);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[]");
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "\"\\\"\\\"\\\"\\\"\"" + "'", str66, "\"\\\"\\\"\\\"\\\"\"");
        org.junit.Assert.assertNull(sTGroup67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "4.5.2.1" + "'", str68, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "\"\"\"\"\"\"_tseta\"\"\"\"\"\"" + "'", str70, "\"\"\"\"\"\"_tseta\"\"\"\"\"\"");
    }

    @Test
    public void test06909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06909");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        java.lang.String str3 = python3Target0.getVersion();
        org.antlr.v4.tool.Grammar grammar4 = null;
        org.stringtemplate.v4.ST sT5 = null;
        python3Target0.genRecognizerHeaderFile(grammar4, sT5, "\"\"\"\"");
        boolean boolean8 = python3Target0.wantsBaseListener();
        boolean boolean9 = python3Target0.wantsBaseVisitor();
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        python3Target0.gen = codeGenerator10;
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = python3Target0.getCodeGenerator();
        boolean boolean13 = python3Target0.wantsBaseVisitor();
        java.lang.String str15 = python3Target0.encodeIntAsCharEscape((int) (byte) 100);
        int int16 = python3Target0.getSerializedATNSegmentLimit();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "4.5.2.1" + "'", str3, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(codeGenerator12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "d" + "'", str15, "d");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 29 + "'", int16 == 29);
    }

    @Test
    public void test06910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06910");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        boolean boolean2 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.gen;
        org.antlr.v4.codegen.target.Python3Target python3Target4 = new org.antlr.v4.codegen.target.Python3Target();
        int int5 = python3Target4.getInlineTestSetWordSize();
        java.lang.String str6 = python3Target4.language;
        java.lang.String str7 = python3Target4.getVersion();
        int int8 = python3Target4.getInlineTestSetWordSize();
        java.lang.String str9 = python3Target4.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = python3Target4.gen;
        org.antlr.v4.tool.Grammar grammar11 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target12 = new org.antlr.v4.codegen.target.Python3Target();
        int int13 = python3Target12.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup14 = python3Target12.templates;
        org.antlr.v4.tool.Grammar grammar15 = null;
        int[] intArray16 = new int[] {};
        java.lang.String[] strArray17 = python3Target12.getTokenTypesAsTargetLabels(grammar15, intArray16);
        java.lang.String[] strArray18 = python3Target4.getTokenTypesAsTargetLabels(grammar11, intArray16);
        java.lang.String str19 = python3Target4.getLanguage();
        java.lang.String str20 = python3Target4.getLanguage();
        java.lang.String str22 = python3Target4.getTargetStringLiteralFromString("\"i\"");
        java.util.Set<java.lang.String> strSet23 = python3Target4.badWords;
        boolean boolean24 = python3Target4.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup25 = python3Target4.templates;
        int int26 = python3Target4.getSerializedATNSegmentLimit();
        org.antlr.v4.codegen.target.Python3Target python3Target27 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str29 = python3Target27.getTargetStringLiteralFromString("\"\"");
        int int30 = python3Target27.getInlineTestSetWordSize();
        boolean boolean31 = python3Target27.supportsOverloadedMethods();
        java.lang.String str33 = python3Target27.getTargetStringLiteralFromString("\"\"i\"\"");
        org.antlr.v4.codegen.target.Python3Target python3Target34 = new org.antlr.v4.codegen.target.Python3Target();
        int int35 = python3Target34.getInlineTestSetWordSize();
        boolean boolean36 = python3Target34.wantsBaseVisitor();
        java.lang.String str37 = python3Target34.getLanguage();
        int int38 = python3Target34.getInlineTestSetWordSize();
        python3Target34.addBadWords();
        org.antlr.v4.tool.Grammar grammar40 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target41 = new org.antlr.v4.codegen.target.Python3Target();
        int int42 = python3Target41.getInlineTestSetWordSize();
        java.lang.String str43 = python3Target41.language;
        java.lang.String str44 = python3Target41.getLanguage();
        java.lang.String str46 = python3Target41.getTargetStringLiteralFromString("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator47 = null;
        java.lang.String str50 = python3Target41.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator47, "hi!", true);
        int int51 = python3Target41.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar52 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target53 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str54 = python3Target53.language;
        org.antlr.v4.codegen.target.Python3Target python3Target55 = new org.antlr.v4.codegen.target.Python3Target();
        org.stringtemplate.v4.STGroup sTGroup56 = null;
        python3Target55.templates = sTGroup56;
        java.lang.String[] strArray61 = new java.lang.String[] { "", "\\0", "" };
        java.util.LinkedHashSet<java.lang.String> strSet62 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet62, strArray61);
        python3Target55.badWords = strSet62;
        python3Target53.badWords = strSet62;
        org.antlr.v4.tool.Grammar grammar66 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target67 = new org.antlr.v4.codegen.target.Python3Target();
        int int68 = python3Target67.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup69 = python3Target67.templates;
        org.antlr.v4.tool.Grammar grammar70 = null;
        int[] intArray71 = new int[] {};
        java.lang.String[] strArray72 = python3Target67.getTokenTypesAsTargetLabels(grammar70, intArray71);
        java.lang.String[] strArray73 = python3Target53.getTokenTypesAsTargetLabels(grammar66, intArray71);
        java.lang.String[] strArray74 = python3Target41.getTokenTypesAsTargetLabels(grammar52, intArray71);
        java.lang.String[] strArray75 = python3Target34.getTokenTypesAsTargetLabels(grammar40, intArray71);
        python3Target27.targetCharValueEscape = strArray75;
        python3Target4.targetCharValueEscape = strArray75;
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray75;
        python3Target0.targetCharValueEscape = strArray75;
        java.lang.String str80 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator81 = python3Target0.gen;
        java.util.Set<java.lang.String> strSet82 = python3Target0.badWords;
        boolean boolean83 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator84 = null;
        java.lang.String str87 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator84, "\\\"\\\"\\\"1\\\"\\\"\\\"", true);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str89 = python3Target0.getElementName("6");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 64 + "'", int5 == 64);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4.5.2.1" + "'", str7, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 64 + "'", int8 == 64);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(codeGenerator10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 64 + "'", int13 == 64);
        org.junit.Assert.assertNull(sTGroup14);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]");
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "\"\"i\"\"" + "'", str22, "\"\"i\"\"");
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(sTGroup25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 29 + "'", int26 == 29);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "\"\"\"\"" + "'", str29, "\"\"\"\"");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 64 + "'", int30 == 64);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "\"\"\"i\"\"\"" + "'", str33, "\"\"\"i\"\"\"");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 64 + "'", int35 == 64);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 64 + "'", int38 == 64);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 64 + "'", int42 == 64);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "\"\"" + "'", str46, "\"\"");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "\"i\"" + "'", str50, "\"i\"");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 29 + "'", int51 == 29);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 64 + "'", int68 == 64);
        org.junit.Assert.assertNull(sTGroup69);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[]");
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "4.5.2.1" + "'", str80, "4.5.2.1");
        org.junit.Assert.assertNull(codeGenerator81);
        org.junit.Assert.assertNotNull(strSet82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "\"\\\"\\\"\\\"1\\\"\\\"\\\"\"" + "'", str87, "\"\\\"\\\"\\\"1\\\"\\\"\\\"\"");
    }

    @Test
    public void test06911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06911");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        java.lang.String str3 = python3Target0.getVersion();
        int int4 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str5 = python3Target0.getLanguage();
        java.lang.String str6 = python3Target0.getLanguage();
        java.lang.String str7 = python3Target0.getVersion();
        java.lang.String str9 = python3Target0.getTargetStringLiteralFromString("\\\"\\\"\\\"4.5.2.1\\\"\\\"\\\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = python3Target0.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = null;
        python3Target0.gen = codeGenerator11;
        org.antlr.v4.tool.Grammar grammar13 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target14 = new org.antlr.v4.codegen.target.Python3Target();
        int int15 = python3Target14.getInlineTestSetWordSize();
        java.lang.String str16 = python3Target14.language;
        java.lang.String str17 = python3Target14.getVersion();
        int int18 = python3Target14.getInlineTestSetWordSize();
        java.lang.String str19 = python3Target14.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator20 = python3Target14.gen;
        org.antlr.v4.tool.Grammar grammar21 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target22 = new org.antlr.v4.codegen.target.Python3Target();
        int int23 = python3Target22.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup24 = python3Target22.templates;
        org.antlr.v4.tool.Grammar grammar25 = null;
        int[] intArray26 = new int[] {};
        java.lang.String[] strArray27 = python3Target22.getTokenTypesAsTargetLabels(grammar25, intArray26);
        java.lang.String[] strArray28 = python3Target14.getTokenTypesAsTargetLabels(grammar21, intArray26);
        java.lang.String str29 = python3Target14.getLanguage();
        java.lang.String str30 = python3Target14.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator31 = null;
        python3Target14.gen = codeGenerator31;
        org.antlr.v4.tool.Grammar grammar33 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target34 = new org.antlr.v4.codegen.target.Python3Target();
        int int35 = python3Target34.getInlineTestSetWordSize();
        java.lang.String str36 = python3Target34.language;
        java.lang.String str37 = python3Target34.getVersion();
        int int38 = python3Target34.getInlineTestSetWordSize();
        java.lang.String str39 = python3Target34.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator40 = python3Target34.gen;
        org.antlr.v4.tool.Grammar grammar41 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target42 = new org.antlr.v4.codegen.target.Python3Target();
        int int43 = python3Target42.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup44 = python3Target42.templates;
        org.antlr.v4.tool.Grammar grammar45 = null;
        int[] intArray46 = new int[] {};
        java.lang.String[] strArray47 = python3Target42.getTokenTypesAsTargetLabels(grammar45, intArray46);
        java.lang.String[] strArray48 = python3Target34.getTokenTypesAsTargetLabels(grammar41, intArray46);
        java.lang.String str49 = python3Target34.getLanguage();
        java.lang.String str50 = python3Target34.getLanguage();
        java.lang.String str52 = python3Target34.getTargetStringLiteralFromString("\"i\"");
        org.antlr.v4.tool.Grammar grammar53 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target54 = new org.antlr.v4.codegen.target.Python3Target();
        int int55 = python3Target54.getInlineTestSetWordSize();
        java.lang.String[] strArray58 = new java.lang.String[] { "hi!", "" };
        python3Target54.targetCharValueEscape = strArray58;
        java.util.Set<java.lang.String> strSet60 = python3Target54.badWords;
        org.stringtemplate.v4.STGroup sTGroup61 = python3Target54.templates;
        org.antlr.v4.tool.Grammar grammar62 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target63 = new org.antlr.v4.codegen.target.Python3Target();
        int int64 = python3Target63.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup65 = python3Target63.templates;
        org.antlr.v4.tool.Grammar grammar66 = null;
        int[] intArray67 = new int[] {};
        java.lang.String[] strArray68 = python3Target63.getTokenTypesAsTargetLabels(grammar66, intArray67);
        java.lang.String[] strArray69 = python3Target54.getTokenTypesAsTargetLabels(grammar62, intArray67);
        java.lang.String[] strArray70 = python3Target34.getTokenTypesAsTargetLabels(grammar53, intArray67);
        java.lang.String[] strArray71 = python3Target14.getTokenTypesAsTargetLabels(grammar33, intArray67);
        java.lang.String[] strArray72 = python3Target0.getTokenTypesAsTargetLabels(grammar13, intArray67);
        org.antlr.v4.codegen.CodeGenerator codeGenerator73 = null;
        java.lang.String str76 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator73, "\"\"\"\"d\"\"\"\"", true);
        // The following exception was thrown during execution in test generation
        try {
            org.stringtemplate.v4.STGroup sTGroup77 = python3Target0.loadTemplates();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "4.5.2.1" + "'", str3, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4.5.2.1" + "'", str7, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\\\"\\\"\\\"4.5.2.1\\\"\\\"\\\"\"" + "'", str9, "\"\\\"\\\"\\\"4.5.2.1\\\"\\\"\\\"\"");
        org.junit.Assert.assertNull(codeGenerator10);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 64 + "'", int15 == 64);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "4.5.2.1" + "'", str17, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 64 + "'", int18 == 64);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(codeGenerator20);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 64 + "'", int23 == 64);
        org.junit.Assert.assertNull(sTGroup24);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[]");
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 64 + "'", int35 == 64);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "4.5.2.1" + "'", str37, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 64 + "'", int38 == 64);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(codeGenerator40);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 64 + "'", int43 == 64);
        org.junit.Assert.assertNull(sTGroup44);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[]");
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "\"\"i\"\"" + "'", str52, "\"\"i\"\"");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 64 + "'", int55 == 64);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertNotNull(strSet60);
        org.junit.Assert.assertNull(sTGroup61);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 64 + "'", int64 == 64);
        org.junit.Assert.assertNull(sTGroup65);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[]");
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "\"\\\"\\\"\\\"d\\\"\\\"\\\"\"" + "'", str76, "\"\\\"\\\"\\\"d\\\"\\\"\\\"\"");
    }

    @Test
    public void test06912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06912");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        boolean boolean2 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.gen;
        boolean boolean4 = python3Target0.wantsBaseVisitor();
        java.lang.String str5 = python3Target0.language;
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromString("\\0", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = python3Target0.gen;
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        java.lang.String str13 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator10, "\"\\\"\\\"4.5.2.1\\\"\\\"\"", true);
        python3Target0.addBadWords();
        org.antlr.v4.tool.Grammar grammar15 = null;
        org.stringtemplate.v4.ST sT16 = null;
        python3Target0.genRecognizerHeaderFile(grammar15, sT16, "\"\"\"\"4.5.2.1\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar19 = null;
        org.stringtemplate.v4.ST sT20 = null;
        // The following exception was thrown during execution in test generation
        try {
            python3Target0.genFile(grammar19, sT20, "\"\"\"#\"\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\\0" + "'", str8, "\\0");
        org.junit.Assert.assertNull(codeGenerator9);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"\\\"\\\"4.5.2.1\\\"\\\"\"" + "'", str13, "\"\\\"\\\"4.5.2.1\\\"\\\"\"");
    }

    @Test
    public void test06913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06913");
        java.lang.String str1 = org.stringtemplate.v4.StringRenderer.escapeHTML("\"\"\\\"12\\\"\"\"");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "\"\"\\\"12\\\"\"\"" + "'", str1, "\"\"\\\"12\\\"\"\"");
    }

    @Test
    public void test06914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06914");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        boolean boolean2 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.gen;
        java.lang.String str4 = python3Target0.getVersion();
        java.lang.String[] strArray5 = python3Target0.targetCharValueEscape;
        org.antlr.v4.tool.Grammar grammar6 = null;
        org.stringtemplate.v4.ST sT7 = null;
        python3Target0.genRecognizerHeaderFile(grammar6, sT7, "");
        python3Target0.addBadWords();
        java.util.Set<java.lang.String> strSet11 = python3Target0.badWords;
        org.stringtemplate.v4.STGroup sTGroup12 = python3Target0.templates;
        python3Target0.addBadWords();
        org.antlr.v4.tool.Grammar grammar14 = null;
        org.stringtemplate.v4.ST sT15 = null;
        // The following exception was thrown during execution in test generation
        try {
            python3Target0.genFile(grammar14, sT15, "\"\"\"\\\"\\\"\"\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "4.5.2.1" + "'", str4, "4.5.2.1");
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertNull(sTGroup12);
    }

    @Test
    public void test06915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06915");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        java.lang.String str3 = python3Target0.getLanguage();
        java.lang.String str5 = python3Target0.getTargetStringLiteralFromString("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        java.lang.String str9 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator6, "hi!", true);
        int int10 = python3Target0.getSerializedATNSegmentLimit();
        boolean boolean11 = python3Target0.templatesExist();
        org.stringtemplate.v4.STGroup sTGroup12 = null;
        python3Target0.templates = sTGroup12;
        java.lang.String[] strArray14 = python3Target0.targetCharValueEscape;
        boolean boolean15 = python3Target0.supportsOverloadedMethods();
        boolean boolean16 = python3Target0.supportsOverloadedMethods();
        python3Target0.language = "\\\"1\\\"";
        java.lang.String[] strArray19 = python3Target0.targetCharValueEscape;
        org.antlr.v4.codegen.CodeGenerator codeGenerator20 = null;
        java.lang.String str23 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator20, "\"\\\"\\\"\\\"0\\\"\\\"\\\"\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator24 = python3Target0.getCodeGenerator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str26 = python3Target0.getListLabel("\"\"\\\"\\\" \\\"\\\"\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\"\"" + "'", str5, "\"\"");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"i\"" + "'", str9, "\"i\"");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 29 + "'", int10 == 29);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "\\\"\\\"\\\"0\\\"\\\"\\\"" + "'", str23, "\\\"\\\"\\\"0\\\"\\\"\\\"");
        org.junit.Assert.assertNull(codeGenerator24);
    }

    @Test
    public void test06916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06916");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        boolean boolean2 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.gen;
        java.lang.String str4 = python3Target0.getVersion();
        java.lang.String[] strArray5 = python3Target0.targetCharValueEscape;
        boolean boolean6 = python3Target0.supportsOverloadedMethods();
        int int7 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str8 = python3Target0.getLanguage();
        java.lang.String str9 = python3Target0.getLanguage();
        boolean boolean10 = python3Target0.wantsBaseVisitor();
        int int11 = python3Target0.getSerializedATNSegmentLimit();
        org.antlr.v4.codegen.model.RuleFunction ruleFunction12 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str13 = python3Target0.getRuleFunctionContextStructName(ruleFunction12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "4.5.2.1" + "'", str4, "4.5.2.1");
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 64 + "'", int7 == 64);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 29 + "'", int11 == 29);
    }

    @Test
    public void test06917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06917");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        java.lang.String str3 = python3Target0.getVersion();
        int int4 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str5 = python3Target0.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = python3Target0.gen;
        python3Target0.addBadWords();
        org.antlr.v4.codegen.target.Python3Target python3Target8 = new org.antlr.v4.codegen.target.Python3Target();
        int int9 = python3Target8.getInlineTestSetWordSize();
        java.lang.String str10 = python3Target8.language;
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = python3Target8.getCodeGenerator();
        java.util.Set<java.lang.String> strSet12 = python3Target8.getBadWords();
        org.antlr.v4.codegen.target.Python3Target python3Target13 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray15 = new java.lang.String[] { "" };
        java.util.LinkedHashSet<java.lang.String> strSet16 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet16, strArray15);
        python3Target13.badWords = strSet16;
        python3Target8.badWords = strSet16;
        python3Target0.badWords = strSet16;
        boolean boolean21 = python3Target0.wantsBaseVisitor();
        boolean boolean22 = python3Target0.templatesExist();
        boolean boolean23 = python3Target0.templatesExist();
        int int24 = python3Target0.getSerializedATNSegmentLimit();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "4.5.2.1" + "'", str3, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(codeGenerator6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 64 + "'", int9 == 64);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(codeGenerator11);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 29 + "'", int24 == 29);
    }

    @Test
    public void test06918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06918");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        java.lang.String str3 = python3Target0.getVersion();
        int int4 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str5 = python3Target0.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = python3Target0.gen;
        org.antlr.v4.tool.Grammar grammar7 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target8 = new org.antlr.v4.codegen.target.Python3Target();
        int int9 = python3Target8.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup10 = python3Target8.templates;
        org.antlr.v4.tool.Grammar grammar11 = null;
        int[] intArray12 = new int[] {};
        java.lang.String[] strArray13 = python3Target8.getTokenTypesAsTargetLabels(grammar11, intArray12);
        java.lang.String[] strArray14 = python3Target0.getTokenTypesAsTargetLabels(grammar7, intArray12);
        java.lang.String str16 = python3Target0.encodeIntAsCharEscape((int) (byte) 100);
        java.util.Set<java.lang.String> strSet17 = python3Target0.badWords;
        java.util.Set<java.lang.String> strSet18 = python3Target0.badWords;
        java.util.Set<java.lang.String> strSet19 = python3Target0.badWords;
        int int20 = python3Target0.getInlineTestSetWordSize();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str22 = python3Target0.getElementName("\"\\\"\\\" \\\"\\\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "4.5.2.1" + "'", str3, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(codeGenerator6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 64 + "'", int9 == 64);
        org.junit.Assert.assertNull(sTGroup10);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[]");
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "d" + "'", str16, "d");
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertNotNull(strSet18);
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 64 + "'", int20 == 64);
    }

    @Test
    public void test06919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06919");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        java.lang.String str3 = python3Target0.getVersion();
        int int4 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str5 = python3Target0.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = python3Target0.gen;
        org.antlr.v4.tool.Grammar grammar7 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target8 = new org.antlr.v4.codegen.target.Python3Target();
        int int9 = python3Target8.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup10 = python3Target8.templates;
        org.antlr.v4.tool.Grammar grammar11 = null;
        int[] intArray12 = new int[] {};
        java.lang.String[] strArray13 = python3Target8.getTokenTypesAsTargetLabels(grammar11, intArray12);
        java.lang.String[] strArray14 = python3Target0.getTokenTypesAsTargetLabels(grammar7, intArray12);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str16 = python3Target0.getImplicitRuleLabel("\"\\\"\\\" \\\"\\\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "4.5.2.1" + "'", str3, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(codeGenerator6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 64 + "'", int9 == 64);
        org.junit.Assert.assertNull(sTGroup10);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[]");
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(strArray14);
    }

    @Test
    public void test06920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06920");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        java.lang.String str3 = python3Target0.getLanguage();
        java.lang.String str5 = python3Target0.getTargetStringLiteralFromString("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        java.lang.String str9 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator6, "hi!", true);
        int int10 = python3Target0.getSerializedATNSegmentLimit();
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = null;
        java.lang.String str14 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator11, "4.5.2.1", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator15 = null;
        java.lang.String str18 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator15, "\"\"\"\"", true);
        python3Target0.addBadWords();
        org.antlr.v4.tool.Grammar grammar20 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str22 = python3Target0.getTokenTypeAsTargetLabel(grammar20, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\"\"" + "'", str5, "\"\"");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"i\"" + "'", str9, "\"i\"");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 29 + "'", int10 == 29);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\".5.2.\"" + "'", str14, "\".5.2.\"");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "\"\\\"\\\"\"" + "'", str18, "\"\\\"\\\"\"");
    }

    @Test
    public void test06921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06921");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        java.lang.String str3 = python3Target0.getLanguage();
        java.lang.String str5 = python3Target0.getTargetStringLiteralFromString("");
        java.lang.String str6 = python3Target0.getVersion();
        org.antlr.v4.codegen.target.Python3Target python3Target7 = new org.antlr.v4.codegen.target.Python3Target();
        int int8 = python3Target7.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup9 = python3Target7.templates;
        org.antlr.v4.tool.Grammar grammar10 = null;
        int[] intArray11 = new int[] {};
        java.lang.String[] strArray12 = python3Target7.getTokenTypesAsTargetLabels(grammar10, intArray11);
        python3Target0.targetCharValueEscape = strArray12;
        java.lang.String str16 = python3Target0.getTargetStringLiteralFromString("d", true);
        java.lang.String str17 = python3Target0.getVersion();
        org.antlr.v4.tool.ast.GrammarAST grammarAST18 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str19 = python3Target0.getLoopCounter(grammarAST18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\"\"" + "'", str5, "\"\"");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "4.5.2.1" + "'", str6, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 64 + "'", int8 == 64);
        org.junit.Assert.assertNull(sTGroup9);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[]");
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\"d\"" + "'", str16, "\"d\"");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "4.5.2.1" + "'", str17, "4.5.2.1");
    }

    @Test
    public void test06922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06922");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        boolean boolean2 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.gen;
        java.lang.String str4 = python3Target0.getVersion();
        java.lang.String[] strArray5 = python3Target0.targetCharValueEscape;
        boolean boolean6 = python3Target0.supportsOverloadedMethods();
        int int7 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str8 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = python3Target0.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = python3Target0.gen;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "4.5.2.1" + "'", str4, "4.5.2.1");
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 64 + "'", int7 == 64);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "4.5.2.1" + "'", str8, "4.5.2.1");
        org.junit.Assert.assertNull(codeGenerator9);
        org.junit.Assert.assertNull(codeGenerator10);
    }

    @Test
    public void test06923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06923");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "", true);
        org.antlr.v4.tool.Grammar grammar7 = null;
        org.stringtemplate.v4.ST sT8 = null;
        python3Target0.genRecognizerHeaderFile(grammar7, sT8, "");
        org.antlr.v4.tool.Grammar grammar11 = null;
        org.stringtemplate.v4.ST sT12 = null;
        python3Target0.genRecognizerHeaderFile(grammar11, sT12, "\"i\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator15 = python3Target0.gen;
        org.antlr.v4.codegen.CodeGenerator codeGenerator16 = null;
        python3Target0.gen = codeGenerator16;
        java.lang.String str18 = python3Target0.getVersion();
        java.lang.String[] strArray19 = python3Target0.targetCharValueEscape;
        boolean boolean20 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.codegen.model.RuleFunction ruleFunction21 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str22 = python3Target0.getRuleFunctionContextStructName(ruleFunction21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"" + "'", str6, "\"\"");
        org.junit.Assert.assertNull(codeGenerator15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "4.5.2.1" + "'", str18, "4.5.2.1");
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test06924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06924");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        boolean boolean2 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.gen;
        boolean boolean4 = python3Target0.wantsBaseVisitor();
        java.lang.String str5 = python3Target0.language;
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromString("\\0", false);
        int int9 = python3Target0.getInlineTestSetWordSize();
        int int10 = python3Target0.getSerializedATNSegmentLimit();
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = python3Target0.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup12 = python3Target0.templates;
        java.lang.String str14 = python3Target0.encodeIntAsCharEscape((int) '#');
        org.antlr.v4.tool.ast.GrammarAST grammarAST15 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str16 = python3Target0.getLoopLabel(grammarAST15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\\0" + "'", str8, "\\0");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 64 + "'", int9 == 64);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 29 + "'", int10 == 29);
        org.junit.Assert.assertNull(codeGenerator11);
        org.junit.Assert.assertNull(sTGroup12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "#" + "'", str14, "#");
    }

    @Test
    public void test06925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06925");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        org.stringtemplate.v4.STGroup sTGroup3 = python3Target0.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = python3Target0.gen;
        java.lang.String str5 = python3Target0.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = python3Target0.gen;
        java.lang.String str7 = python3Target0.getLanguage();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(sTGroup3);
        org.junit.Assert.assertNull(codeGenerator4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(codeGenerator6);
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test06926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06926");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str2 = python3Target0.encodeIntAsCharEscape(100);
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target4 = new org.antlr.v4.codegen.target.Python3Target();
        int int5 = python3Target4.getInlineTestSetWordSize();
        java.lang.String str6 = python3Target4.language;
        java.lang.String str7 = python3Target4.getVersion();
        int int8 = python3Target4.getInlineTestSetWordSize();
        java.lang.String str9 = python3Target4.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = python3Target4.gen;
        org.antlr.v4.tool.Grammar grammar11 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target12 = new org.antlr.v4.codegen.target.Python3Target();
        int int13 = python3Target12.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup14 = python3Target12.templates;
        org.antlr.v4.tool.Grammar grammar15 = null;
        int[] intArray16 = new int[] {};
        java.lang.String[] strArray17 = python3Target12.getTokenTypesAsTargetLabels(grammar15, intArray16);
        java.lang.String[] strArray18 = python3Target4.getTokenTypesAsTargetLabels(grammar11, intArray16);
        java.lang.String[] strArray19 = python3Target0.getTokenTypesAsTargetLabels(grammar3, intArray16);
        int int20 = python3Target0.getSerializedATNSegmentLimit();
        boolean boolean21 = python3Target0.wantsBaseListener();
        java.lang.String[] strArray22 = python3Target0.targetCharValueEscape;
        int int23 = python3Target0.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator24 = null;
        java.lang.String str27 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator24, "", false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "d" + "'", str2, "d");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 64 + "'", int5 == 64);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4.5.2.1" + "'", str7, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 64 + "'", int8 == 64);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(codeGenerator10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 64 + "'", int13 == 64);
        org.junit.Assert.assertNull(sTGroup14);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]");
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 29 + "'", int20 == 29);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 64 + "'", int23 == 64);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
    }

    @Test
    public void test06927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06927");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!", "" };
        python3Target0.targetCharValueEscape = strArray4;
        java.util.Set<java.lang.String> strSet6 = python3Target0.badWords;
        org.stringtemplate.v4.STGroup sTGroup7 = python3Target0.templates;
        org.antlr.v4.codegen.target.Python3Target python3Target8 = new org.antlr.v4.codegen.target.Python3Target();
        int int9 = python3Target8.getInlineTestSetWordSize();
        java.lang.String str10 = python3Target8.language;
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = null;
        java.lang.String str14 = python3Target8.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator11, "", true);
        org.antlr.v4.tool.Grammar grammar15 = null;
        org.stringtemplate.v4.ST sT16 = null;
        python3Target8.genRecognizerHeaderFile(grammar15, sT16, "");
        org.antlr.v4.tool.Grammar grammar19 = null;
        org.stringtemplate.v4.ST sT20 = null;
        python3Target8.genRecognizerHeaderFile(grammar19, sT20, "\"i\"");
        boolean boolean23 = python3Target8.wantsBaseListener();
        org.antlr.v4.codegen.CodeGenerator codeGenerator24 = null;
        python3Target8.gen = codeGenerator24;
        boolean boolean26 = python3Target8.wantsBaseVisitor();
        java.lang.String str29 = python3Target8.getTargetStringLiteralFromString("\"\"\".5.2.\"\"\"", false);
        org.antlr.v4.codegen.target.Python3Target python3Target30 = new org.antlr.v4.codegen.target.Python3Target();
        int int31 = python3Target30.getInlineTestSetWordSize();
        java.lang.String str32 = python3Target30.language;
        java.lang.String str33 = python3Target30.getVersion();
        int int34 = python3Target30.getInlineTestSetWordSize();
        boolean boolean35 = python3Target30.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup36 = python3Target30.templates;
        java.util.Set<java.lang.String> strSet37 = python3Target30.getBadWords();
        python3Target8.badWords = strSet37;
        python3Target0.badWords = strSet37;
        java.lang.String str41 = python3Target0.getTargetStringLiteralFromString("\"\\\"hi!\\\"\"");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str43 = python3Target0.getListLabel("_tset\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertNull(sTGroup7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 64 + "'", int9 == 64);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\"\"" + "'", str14, "\"\"");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "\"\"\".5.2.\"\"\"" + "'", str29, "\"\"\".5.2.\"\"\"");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 64 + "'", int31 == 64);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "4.5.2.1" + "'", str33, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 64 + "'", int34 == 64);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(sTGroup36);
        org.junit.Assert.assertNotNull(strSet37);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "\"\"\\\"hi!\\\"\"\"" + "'", str41, "\"\"\\\"hi!\\\"\"\"");
    }

    @Test
    public void test06928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06928");
        java.lang.String str1 = org.stringtemplate.v4.StringRenderer.escapeHTML("tho");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "tho" + "'", str1, "tho");
    }

    @Test
    public void test06929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06929");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "", true);
        java.util.Set<java.lang.String> strSet7 = python3Target0.badWords;
        java.lang.String str8 = python3Target0.language;
        org.stringtemplate.v4.STGroup sTGroup9 = null;
        python3Target0.templates = sTGroup9;
        org.antlr.v4.tool.Grammar grammar11 = null;
        org.stringtemplate.v4.ST sT12 = null;
        python3Target0.genRecognizerHeaderFile(grammar11, sT12, "\"\\1\"");
        int int15 = python3Target0.getInlineTestSetWordSize();
        boolean boolean16 = python3Target0.templatesExist();
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = null;
        java.lang.String str20 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator17, "\\\"\\\"\\\"\\\"i\\\"\\\"\\\"\\\"", true);
        org.antlr.v4.tool.ast.GrammarAST grammarAST21 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean22 = python3Target0.grammarSymbolCausesIssueInGeneratedCode(grammarAST21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"" + "'", str6, "\"\"");
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 64 + "'", int15 == 64);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "\"\\\"\\\"\\\"\\\"i\\\"\\\"\\\"\\\"\"" + "'", str20, "\"\\\"\\\"\\\"\\\"i\\\"\\\"\\\"\\\"\"");
    }

    @Test
    public void test06930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06930");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        java.lang.String str3 = python3Target0.getVersion();
        org.antlr.v4.tool.Grammar grammar4 = null;
        org.stringtemplate.v4.ST sT5 = null;
        python3Target0.genRecognizerHeaderFile(grammar4, sT5, "\"\"\"\"");
        boolean boolean8 = python3Target0.wantsBaseListener();
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = python3Target0.gen;
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        java.lang.String str13 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator10, "\"\"\"\"i\"\"\"\"", true);
        java.lang.String str14 = python3Target0.getLanguage();
        boolean boolean15 = python3Target0.wantsBaseListener();
        org.stringtemplate.v4.STGroup sTGroup16 = python3Target0.templates;
        boolean boolean17 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.tool.ast.GrammarAST grammarAST18 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str19 = python3Target0.getLoopLabel(grammarAST18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "4.5.2.1" + "'", str3, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(codeGenerator9);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"\\\"\\\"\\\"i\\\"\\\"\\\"\"" + "'", str13, "\"\\\"\\\"\\\"i\\\"\\\"\\\"\"");
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(sTGroup16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test06931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06931");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str2 = python3Target0.getTargetStringLiteralFromString("\"\"");
        int int3 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str5 = python3Target0.encodeIntAsCharEscape(0);
        java.lang.String str7 = python3Target0.getTargetStringLiteralFromString("");
        java.util.Set<java.lang.String> strSet8 = python3Target0.getBadWords();
        java.lang.String str9 = python3Target0.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup10 = python3Target0.templates;
        int int11 = python3Target0.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = null;
        python3Target0.gen = codeGenerator12;
        org.antlr.v4.tool.Grammar grammar14 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str16 = python3Target0.getTokenTypeAsTargetLabel(grammar14, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "\"\"\"\"" + "'", str2, "\"\"\"\"");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 64 + "'", int3 == 64);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\\0" + "'", str5, "\\0");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"\"" + "'", str7, "\"\"");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(sTGroup10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 64 + "'", int11 == 64);
    }

    @Test
    public void test06932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06932");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!", "" };
        python3Target0.targetCharValueEscape = strArray4;
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        java.lang.String str9 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator6, "\"\"", false);
        org.antlr.v4.codegen.target.Python3Target python3Target10 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str11 = python3Target10.language;
        java.lang.String[] strArray12 = python3Target10.targetCharValueEscape;
        python3Target0.targetCharValueEscape = strArray12;
        org.antlr.v4.tool.Grammar grammar14 = null;
        org.stringtemplate.v4.ST sT15 = null;
        python3Target0.genRecognizerHeaderFile(grammar14, sT15, "\"\\\"\\\"4.5.2.1\\\"\\\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator18 = python3Target0.gen;
        java.lang.Class<?> wildcardClass19 = python3Target0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNull(codeGenerator18);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test06933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06933");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        java.lang.String str3 = python3Target0.getVersion();
        org.stringtemplate.v4.STGroup sTGroup4 = null;
        python3Target0.templates = sTGroup4;
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        java.lang.String str9 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator6, "d", false);
        java.lang.String str12 = python3Target0.getTargetStringLiteralFromString("\"\"\"\"", false);
        org.stringtemplate.v4.STGroup sTGroup13 = null;
        python3Target0.templates = sTGroup13;
        java.lang.String str17 = python3Target0.getTargetStringLiteralFromString("\"\"\"\\\"\\\"\\\"\\\"4.5.2.1\\\"\\\"\\\"\\\"\"\"\"", false);
        org.antlr.v4.tool.ast.GrammarAST grammarAST18 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str19 = python3Target0.getLoopLabel(grammarAST18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "4.5.2.1" + "'", str3, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"\"\"\"" + "'", str12, "\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\"\"\"\\\"\\\"\\\"\\\"4.5.2.1\\\"\\\"\\\"\\\"\"\"\"" + "'", str17, "\"\"\"\\\"\\\"\\\"\\\"4.5.2.1\\\"\\\"\\\"\\\"\"\"\"");
    }

    @Test
    public void test06934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06934");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        java.lang.String str3 = python3Target0.getLanguage();
        java.lang.String str5 = python3Target0.getTargetStringLiteralFromString("");
        java.lang.String str7 = python3Target0.getTargetStringLiteralFromString("\\1");
        boolean boolean8 = python3Target0.wantsBaseVisitor();
        boolean boolean9 = python3Target0.templatesExist();
        org.antlr.v4.codegen.target.Python3Target python3Target10 = new org.antlr.v4.codegen.target.Python3Target();
        int int11 = python3Target10.getInlineTestSetWordSize();
        java.lang.String str12 = python3Target10.language;
        java.lang.String str13 = python3Target10.getVersion();
        int int14 = python3Target10.getInlineTestSetWordSize();
        java.lang.String str15 = python3Target10.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator16 = python3Target10.gen;
        python3Target10.addBadWords();
        python3Target10.language = "\\0";
        boolean boolean20 = python3Target10.wantsBaseVisitor();
        org.antlr.v4.codegen.CodeGenerator codeGenerator21 = python3Target10.getCodeGenerator();
        int int22 = python3Target10.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar23 = null;
        org.stringtemplate.v4.ST sT24 = null;
        python3Target10.genRecognizerHeaderFile(grammar23, sT24, "\"\"\"4.5.2.1\"\"\"");
        java.util.Set<java.lang.String> strSet27 = python3Target10.badWords;
        python3Target0.badWords = strSet27;
        boolean boolean29 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.tool.Grammar grammar30 = null;
        org.stringtemplate.v4.ST sT31 = null;
        python3Target0.genRecognizerHeaderFile(grammar30, sT31, "4.5.2.1");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str35 = python3Target0.getListLabel("\"\\\"\\\"1\\\"\\\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\"\"" + "'", str5, "\"\"");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"\\1\"" + "'", str7, "\"\\1\"");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 64 + "'", int11 == 64);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "4.5.2.1" + "'", str13, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 64 + "'", int14 == 64);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(codeGenerator16);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(codeGenerator21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 29 + "'", int22 == 29);
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test06935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06935");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.gen;
        org.antlr.v4.codegen.target.Python3Target python3Target4 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str5 = python3Target4.language;
        org.antlr.v4.codegen.target.Python3Target python3Target6 = new org.antlr.v4.codegen.target.Python3Target();
        org.stringtemplate.v4.STGroup sTGroup7 = null;
        python3Target6.templates = sTGroup7;
        java.lang.String[] strArray12 = new java.lang.String[] { "", "\\0", "" };
        java.util.LinkedHashSet<java.lang.String> strSet13 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet13, strArray12);
        python3Target6.badWords = strSet13;
        python3Target4.badWords = strSet13;
        org.stringtemplate.v4.STGroup sTGroup17 = python3Target4.templates;
        org.antlr.v4.codegen.target.Python3Target python3Target18 = new org.antlr.v4.codegen.target.Python3Target();
        int int19 = python3Target18.getInlineTestSetWordSize();
        boolean boolean20 = python3Target18.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator21 = python3Target18.gen;
        boolean boolean22 = python3Target18.supportsOverloadedMethods();
        java.lang.String[] strArray23 = python3Target18.targetCharValueEscape;
        python3Target4.targetCharValueEscape = strArray23;
        org.antlr.v4.codegen.CodeGenerator codeGenerator25 = null;
        python3Target4.gen = codeGenerator25;
        java.lang.String[] strArray27 = python3Target4.targetCharValueEscape;
        python3Target0.targetCharValueEscape = strArray27;
        org.antlr.v4.codegen.CodeGenerator codeGenerator29 = python3Target0.gen;
        boolean boolean30 = python3Target0.wantsBaseVisitor();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str32 = python3Target0.getElementListName("\"\\1\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(sTGroup17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 64 + "'", int19 == 64);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(codeGenerator21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNull(codeGenerator29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test06936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06936");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        org.stringtemplate.v4.STGroup sTGroup1 = null;
        python3Target0.templates = sTGroup1;
        java.util.Set<java.lang.String> strSet3 = null;
        python3Target0.badWords = strSet3;
        boolean boolean5 = python3Target0.supportsOverloadedMethods();
        java.lang.String str6 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = python3Target0.getCodeGenerator();
        boolean boolean8 = python3Target0.wantsBaseVisitor();
        org.antlr.v4.codegen.target.Python3Target python3Target9 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str10 = python3Target9.language;
        int int11 = python3Target9.getSerializedATNSegmentLimit();
        java.lang.String str13 = python3Target9.getTargetStringLiteralFromString("i");
        int int14 = python3Target9.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar15 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target16 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str17 = python3Target16.language;
        org.antlr.v4.codegen.target.Python3Target python3Target18 = new org.antlr.v4.codegen.target.Python3Target();
        org.stringtemplate.v4.STGroup sTGroup19 = null;
        python3Target18.templates = sTGroup19;
        java.lang.String[] strArray24 = new java.lang.String[] { "", "\\0", "" };
        java.util.LinkedHashSet<java.lang.String> strSet25 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet25, strArray24);
        python3Target18.badWords = strSet25;
        python3Target16.badWords = strSet25;
        python3Target16.language = "\"\"i\"\"";
        org.stringtemplate.v4.STGroup sTGroup31 = null;
        python3Target16.templates = sTGroup31;
        org.antlr.v4.tool.Grammar grammar33 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target34 = new org.antlr.v4.codegen.target.Python3Target();
        int int35 = python3Target34.getInlineTestSetWordSize();
        boolean boolean36 = python3Target34.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator37 = python3Target34.gen;
        java.lang.String str38 = python3Target34.getVersion();
        org.stringtemplate.v4.STGroup sTGroup39 = null;
        python3Target34.templates = sTGroup39;
        org.antlr.v4.tool.Grammar grammar41 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target42 = new org.antlr.v4.codegen.target.Python3Target();
        int int43 = python3Target42.getInlineTestSetWordSize();
        java.lang.String str44 = python3Target42.language;
        java.lang.String str45 = python3Target42.getVersion();
        python3Target42.language = "@";
        org.antlr.v4.tool.Grammar grammar48 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target49 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str51 = python3Target49.encodeIntAsCharEscape(100);
        org.antlr.v4.tool.Grammar grammar52 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target53 = new org.antlr.v4.codegen.target.Python3Target();
        int int54 = python3Target53.getInlineTestSetWordSize();
        java.lang.String str55 = python3Target53.language;
        java.lang.String str56 = python3Target53.getVersion();
        int int57 = python3Target53.getInlineTestSetWordSize();
        java.lang.String str58 = python3Target53.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator59 = python3Target53.gen;
        org.antlr.v4.tool.Grammar grammar60 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target61 = new org.antlr.v4.codegen.target.Python3Target();
        int int62 = python3Target61.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup63 = python3Target61.templates;
        org.antlr.v4.tool.Grammar grammar64 = null;
        int[] intArray65 = new int[] {};
        java.lang.String[] strArray66 = python3Target61.getTokenTypesAsTargetLabels(grammar64, intArray65);
        java.lang.String[] strArray67 = python3Target53.getTokenTypesAsTargetLabels(grammar60, intArray65);
        java.lang.String[] strArray68 = python3Target49.getTokenTypesAsTargetLabels(grammar52, intArray65);
        java.lang.String[] strArray69 = python3Target42.getTokenTypesAsTargetLabels(grammar48, intArray65);
        java.lang.String[] strArray70 = python3Target34.getTokenTypesAsTargetLabels(grammar41, intArray65);
        java.lang.String[] strArray71 = python3Target16.getTokenTypesAsTargetLabels(grammar33, intArray65);
        java.lang.String[] strArray72 = python3Target9.getTokenTypesAsTargetLabels(grammar15, intArray65);
        java.lang.String str73 = python3Target9.getLanguage();
        java.lang.String str76 = python3Target9.getTargetStringLiteralFromString("\"\"64\"\"", true);
        org.antlr.v4.tool.Grammar grammar77 = null;
        org.stringtemplate.v4.ST sT78 = null;
        python3Target9.genRecognizerHeaderFile(grammar77, sT78, "\\\".5.2.\\\"");
        python3Target9.language = "\"\\12\"";
        java.lang.String[] strArray83 = python3Target9.targetCharValueEscape;
        python3Target0.targetCharValueEscape = strArray83;
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray83;
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "4.5.2.1" + "'", str6, "4.5.2.1");
        org.junit.Assert.assertNull(codeGenerator7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 29 + "'", int11 == 29);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"i\"" + "'", str13, "\"i\"");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 29 + "'", int14 == 29);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 64 + "'", int35 == 64);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(codeGenerator37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "4.5.2.1" + "'", str38, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 64 + "'", int43 == 64);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "4.5.2.1" + "'", str45, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "d" + "'", str51, "d");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 64 + "'", int54 == 64);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "4.5.2.1" + "'", str56, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 64 + "'", int57 == 64);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNull(codeGenerator59);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 64 + "'", int62 == 64);
        org.junit.Assert.assertNull(sTGroup63);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[]");
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "\"\"\"64\"\"\"" + "'", str76, "\"\"\"64\"\"\"");
        org.junit.Assert.assertNotNull(strArray83);
    }

    @Test
    public void test06937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06937");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        java.lang.String str3 = python3Target0.getVersion();
        boolean boolean4 = python3Target0.wantsBaseListener();
        org.antlr.v4.tool.Grammar grammar5 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target6 = new org.antlr.v4.codegen.target.Python3Target();
        int int7 = python3Target6.getInlineTestSetWordSize();
        java.lang.String str8 = python3Target6.language;
        org.stringtemplate.v4.STGroup sTGroup9 = python3Target6.templates;
        java.lang.String str11 = python3Target6.getTargetStringLiteralFromString("\"hi!\"");
        java.lang.String str13 = python3Target6.getTargetStringLiteralFromString("");
        org.antlr.v4.tool.Grammar grammar14 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target15 = new org.antlr.v4.codegen.target.Python3Target();
        int int16 = python3Target15.getInlineTestSetWordSize();
        boolean boolean17 = python3Target15.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator18 = python3Target15.gen;
        boolean boolean19 = python3Target15.wantsBaseVisitor();
        boolean boolean20 = python3Target15.supportsOverloadedMethods();
        java.lang.String str23 = python3Target15.getTargetStringLiteralFromString("\\0", false);
        boolean boolean24 = python3Target15.templatesExist();
        python3Target15.addBadWords();
        org.antlr.v4.tool.Grammar grammar26 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target27 = new org.antlr.v4.codegen.target.Python3Target();
        int int28 = python3Target27.getInlineTestSetWordSize();
        java.lang.String str29 = python3Target27.language;
        java.lang.String str30 = python3Target27.getVersion();
        int int31 = python3Target27.getInlineTestSetWordSize();
        java.lang.String str32 = python3Target27.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator33 = python3Target27.gen;
        org.antlr.v4.tool.Grammar grammar34 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target35 = new org.antlr.v4.codegen.target.Python3Target();
        int int36 = python3Target35.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup37 = python3Target35.templates;
        org.antlr.v4.tool.Grammar grammar38 = null;
        int[] intArray39 = new int[] {};
        java.lang.String[] strArray40 = python3Target35.getTokenTypesAsTargetLabels(grammar38, intArray39);
        java.lang.String[] strArray41 = python3Target27.getTokenTypesAsTargetLabels(grammar34, intArray39);
        java.lang.String[] strArray42 = python3Target15.getTokenTypesAsTargetLabels(grammar26, intArray39);
        java.lang.String[] strArray43 = python3Target6.getTokenTypesAsTargetLabels(grammar14, intArray39);
        java.lang.String[] strArray44 = python3Target0.getTokenTypesAsTargetLabels(grammar5, intArray39);
        java.lang.String[] strArray45 = org.antlr.v4.codegen.target.Python3Target.python3Keywords;
        python3Target0.targetCharValueEscape = strArray45;
        org.stringtemplate.v4.STGroup sTGroup47 = null;
        python3Target0.templates = sTGroup47;
        java.lang.Class<?> wildcardClass49 = python3Target0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "4.5.2.1" + "'", str3, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 64 + "'", int7 == 64);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(sTGroup9);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"\"hi!\"\"" + "'", str11, "\"\"hi!\"\"");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"\"" + "'", str13, "\"\"");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 64 + "'", int16 == 64);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(codeGenerator18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "\\0" + "'", str23, "\\0");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 64 + "'", int28 == 64);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "4.5.2.1" + "'", str30, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 64 + "'", int31 == 64);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(codeGenerator33);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 64 + "'", int36 == 64);
        org.junit.Assert.assertNull(sTGroup37);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[]");
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test06938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06938");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        java.lang.String str3 = python3Target0.getVersion();
        int int4 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str5 = python3Target0.getLanguage();
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromString("4.5.2.1", true);
        boolean boolean9 = python3Target0.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet10 = python3Target0.badWords;
        org.antlr.v4.codegen.target.Python3Target python3Target11 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str12 = python3Target11.language;
        java.lang.String[] strArray13 = python3Target11.targetCharValueEscape;
        python3Target0.targetCharValueEscape = strArray13;
        java.lang.String str16 = python3Target0.getTargetStringLiteralFromString("");
        org.antlr.v4.codegen.target.Python3Target python3Target17 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str19 = python3Target17.getTargetStringLiteralFromString("\"\"");
        int int20 = python3Target17.getInlineTestSetWordSize();
        boolean boolean21 = python3Target17.supportsOverloadedMethods();
        java.lang.String str23 = python3Target17.getTargetStringLiteralFromString("\"\"i\"\"");
        org.antlr.v4.codegen.target.Python3Target python3Target24 = new org.antlr.v4.codegen.target.Python3Target();
        int int25 = python3Target24.getInlineTestSetWordSize();
        boolean boolean26 = python3Target24.wantsBaseVisitor();
        java.lang.String str27 = python3Target24.getLanguage();
        int int28 = python3Target24.getInlineTestSetWordSize();
        python3Target24.addBadWords();
        org.antlr.v4.tool.Grammar grammar30 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target31 = new org.antlr.v4.codegen.target.Python3Target();
        int int32 = python3Target31.getInlineTestSetWordSize();
        java.lang.String str33 = python3Target31.language;
        java.lang.String str34 = python3Target31.getLanguage();
        java.lang.String str36 = python3Target31.getTargetStringLiteralFromString("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator37 = null;
        java.lang.String str40 = python3Target31.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator37, "hi!", true);
        int int41 = python3Target31.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar42 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target43 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str44 = python3Target43.language;
        org.antlr.v4.codegen.target.Python3Target python3Target45 = new org.antlr.v4.codegen.target.Python3Target();
        org.stringtemplate.v4.STGroup sTGroup46 = null;
        python3Target45.templates = sTGroup46;
        java.lang.String[] strArray51 = new java.lang.String[] { "", "\\0", "" };
        java.util.LinkedHashSet<java.lang.String> strSet52 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet52, strArray51);
        python3Target45.badWords = strSet52;
        python3Target43.badWords = strSet52;
        org.antlr.v4.tool.Grammar grammar56 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target57 = new org.antlr.v4.codegen.target.Python3Target();
        int int58 = python3Target57.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup59 = python3Target57.templates;
        org.antlr.v4.tool.Grammar grammar60 = null;
        int[] intArray61 = new int[] {};
        java.lang.String[] strArray62 = python3Target57.getTokenTypesAsTargetLabels(grammar60, intArray61);
        java.lang.String[] strArray63 = python3Target43.getTokenTypesAsTargetLabels(grammar56, intArray61);
        java.lang.String[] strArray64 = python3Target31.getTokenTypesAsTargetLabels(grammar42, intArray61);
        java.lang.String[] strArray65 = python3Target24.getTokenTypesAsTargetLabels(grammar30, intArray61);
        python3Target17.targetCharValueEscape = strArray65;
        python3Target0.targetCharValueEscape = strArray65;
        int int68 = python3Target0.getSerializedATNSegmentLimit();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str70 = python3Target0.getListLabel("\"\"\"\\\"\\\"\\\"\\\"4.5.2.1\\\"\\\"\\\"\\\"\"\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "4.5.2.1" + "'", str3, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"4.5.2.1\"" + "'", str8, "\"4.5.2.1\"");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\"\"" + "'", str16, "\"\"");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "\"\"\"\"" + "'", str19, "\"\"\"\"");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 64 + "'", int20 == 64);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "\"\"\"i\"\"\"" + "'", str23, "\"\"\"i\"\"\"");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 64 + "'", int25 == 64);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 64 + "'", int28 == 64);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 64 + "'", int32 == 64);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "\"\"" + "'", str36, "\"\"");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "\"i\"" + "'", str40, "\"i\"");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 29 + "'", int41 == 29);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 64 + "'", int58 == 64);
        org.junit.Assert.assertNull(sTGroup59);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[]");
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 29 + "'", int68 == 29);
    }

    @Test
    public void test06939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06939");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        java.lang.String str3 = python3Target0.getLanguage();
        java.lang.String str5 = python3Target0.getTargetStringLiteralFromString("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        java.lang.String str9 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator6, "hi!", true);
        int int10 = python3Target0.getSerializedATNSegmentLimit();
        java.lang.String str13 = python3Target0.getTargetStringLiteralFromString("\"i\"", true);
        org.antlr.v4.codegen.target.Python3Target python3Target14 = new org.antlr.v4.codegen.target.Python3Target();
        int int15 = python3Target14.getInlineTestSetWordSize();
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "" };
        python3Target14.targetCharValueEscape = strArray18;
        org.antlr.v4.codegen.CodeGenerator codeGenerator20 = null;
        java.lang.String str23 = python3Target14.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator20, "\"\"", false);
        int int24 = python3Target14.getSerializedATNSegmentLimit();
        org.antlr.v4.codegen.CodeGenerator codeGenerator25 = python3Target14.getCodeGenerator();
        java.lang.String[] strArray26 = python3Target14.targetCharValueEscape;
        python3Target0.targetCharValueEscape = strArray26;
        boolean boolean28 = python3Target0.templatesExist();
        org.antlr.v4.codegen.target.Python3Target python3Target29 = new org.antlr.v4.codegen.target.Python3Target();
        int int30 = python3Target29.getInlineTestSetWordSize();
        java.lang.String str31 = python3Target29.language;
        org.antlr.v4.codegen.CodeGenerator codeGenerator32 = null;
        java.lang.String str35 = python3Target29.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator32, "", true);
        org.antlr.v4.tool.Grammar grammar36 = null;
        org.stringtemplate.v4.ST sT37 = null;
        python3Target29.genRecognizerHeaderFile(grammar36, sT37, "");
        org.antlr.v4.tool.Grammar grammar40 = null;
        org.stringtemplate.v4.ST sT41 = null;
        python3Target29.genRecognizerHeaderFile(grammar40, sT41, "\"i\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator44 = python3Target29.gen;
        org.antlr.v4.codegen.CodeGenerator codeGenerator45 = python3Target29.getCodeGenerator();
        java.lang.String str47 = python3Target29.encodeIntAsCharEscape((int) '4');
        java.lang.String str49 = python3Target29.encodeIntAsCharEscape((int) '4');
        org.antlr.v4.codegen.target.Python3Target python3Target50 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str52 = python3Target50.getTargetStringLiteralFromString("\"\"");
        int int53 = python3Target50.getInlineTestSetWordSize();
        boolean boolean54 = python3Target50.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup55 = python3Target50.templates;
        java.util.Set<java.lang.String> strSet56 = python3Target50.getBadWords();
        python3Target29.badWords = strSet56;
        python3Target0.badWords = strSet56;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\"\"" + "'", str5, "\"\"");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"i\"" + "'", str9, "\"i\"");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 29 + "'", int10 == 29);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"\"i\"\"" + "'", str13, "\"\"i\"\"");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 64 + "'", int15 == 64);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 29 + "'", int24 == 29);
        org.junit.Assert.assertNull(codeGenerator25);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 64 + "'", int30 == 64);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "\"\"" + "'", str35, "\"\"");
        org.junit.Assert.assertNull(codeGenerator44);
        org.junit.Assert.assertNull(codeGenerator45);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "\\64" + "'", str47, "\\64");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "\\64" + "'", str49, "\\64");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "\"\"\"\"" + "'", str52, "\"\"\"\"");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 64 + "'", int53 == 64);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(sTGroup55);
        org.junit.Assert.assertNotNull(strSet56);
    }

    @Test
    public void test06940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06940");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        boolean boolean2 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.gen;
        boolean boolean4 = python3Target0.wantsBaseVisitor();
        java.lang.String str5 = python3Target0.language;
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromString("\\0", false);
        int int9 = python3Target0.getSerializedATNSegmentLimit();
        boolean boolean10 = python3Target0.wantsBaseListener();
        org.antlr.v4.codegen.target.Python3Target python3Target11 = new org.antlr.v4.codegen.target.Python3Target();
        org.stringtemplate.v4.STGroup sTGroup12 = null;
        python3Target11.templates = sTGroup12;
        java.util.Set<java.lang.String> strSet14 = null;
        python3Target11.badWords = strSet14;
        boolean boolean16 = python3Target11.wantsBaseListener();
        java.lang.String[] strArray17 = python3Target11.targetCharValueEscape;
        java.lang.String str19 = python3Target11.getTargetStringLiteralFromString("\"\\\"hi!\\\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator20 = python3Target11.getCodeGenerator();
        java.lang.String[] strArray21 = python3Target11.targetCharValueEscape;
        python3Target0.targetCharValueEscape = strArray21;
        java.lang.String str23 = python3Target0.language;
        org.antlr.v4.tool.ast.GrammarAST grammarAST24 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean25 = python3Target0.visibleGrammarSymbolCausesIssueInGeneratedCode(grammarAST24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\\0" + "'", str8, "\\0");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 29 + "'", int9 == 29);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "\"\"\\\"hi!\\\"\"\"" + "'", str19, "\"\"\\\"hi!\\\"\"\"");
        org.junit.Assert.assertNull(codeGenerator20);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNull(str23);
    }

    @Test
    public void test06941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06941");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        java.lang.String str3 = python3Target0.getVersion();
        int int4 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str5 = python3Target0.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = python3Target0.gen;
        org.antlr.v4.tool.Grammar grammar7 = null;
        org.stringtemplate.v4.ST sT8 = null;
        python3Target0.genRecognizerHeaderFile(grammar7, sT8, "\"\"\".5.2.\"\"\"");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str12 = python3Target0.getAltLabelContextStructName("\"\"\"hi!\"\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "4.5.2.1" + "'", str3, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(codeGenerator6);
    }

    @Test
    public void test06942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06942");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        java.lang.String str3 = python3Target0.getVersion();
        int int4 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str5 = python3Target0.getLanguage();
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromString("4.5.2.1", true);
        java.util.Set<java.lang.String> strSet9 = python3Target0.getBadWords();
        java.util.Set<java.lang.String> strSet10 = python3Target0.getBadWords();
        java.lang.String str13 = python3Target0.getTargetStringLiteralFromString("\"\"\"\\\"\\\"\\\"4.5.2.1\\\"\\\"\\\"\"\"\"", true);
        org.antlr.v4.tool.ast.GrammarAST grammarAST14 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str15 = python3Target0.getLoopLabel(grammarAST14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "4.5.2.1" + "'", str3, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"4.5.2.1\"" + "'", str8, "\"4.5.2.1\"");
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"\"\"\"\\\"\\\"\\\"4.5.2.1\\\"\\\"\\\"\"\"\"\"" + "'", str13, "\"\"\"\"\\\"\\\"\\\"4.5.2.1\\\"\\\"\\\"\"\"\"\"");
    }

    @Test
    public void test06943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06943");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str1 = python3Target0.language;
        int int2 = python3Target0.getSerializedATNSegmentLimit();
        java.lang.String str4 = python3Target0.getTargetStringLiteralFromString("i");
        int int5 = python3Target0.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar6 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target7 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str8 = python3Target7.language;
        org.antlr.v4.codegen.target.Python3Target python3Target9 = new org.antlr.v4.codegen.target.Python3Target();
        org.stringtemplate.v4.STGroup sTGroup10 = null;
        python3Target9.templates = sTGroup10;
        java.lang.String[] strArray15 = new java.lang.String[] { "", "\\0", "" };
        java.util.LinkedHashSet<java.lang.String> strSet16 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet16, strArray15);
        python3Target9.badWords = strSet16;
        python3Target7.badWords = strSet16;
        python3Target7.language = "\"\"i\"\"";
        org.stringtemplate.v4.STGroup sTGroup22 = null;
        python3Target7.templates = sTGroup22;
        org.antlr.v4.tool.Grammar grammar24 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target25 = new org.antlr.v4.codegen.target.Python3Target();
        int int26 = python3Target25.getInlineTestSetWordSize();
        boolean boolean27 = python3Target25.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator28 = python3Target25.gen;
        java.lang.String str29 = python3Target25.getVersion();
        org.stringtemplate.v4.STGroup sTGroup30 = null;
        python3Target25.templates = sTGroup30;
        org.antlr.v4.tool.Grammar grammar32 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target33 = new org.antlr.v4.codegen.target.Python3Target();
        int int34 = python3Target33.getInlineTestSetWordSize();
        java.lang.String str35 = python3Target33.language;
        java.lang.String str36 = python3Target33.getVersion();
        python3Target33.language = "@";
        org.antlr.v4.tool.Grammar grammar39 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target40 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str42 = python3Target40.encodeIntAsCharEscape(100);
        org.antlr.v4.tool.Grammar grammar43 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target44 = new org.antlr.v4.codegen.target.Python3Target();
        int int45 = python3Target44.getInlineTestSetWordSize();
        java.lang.String str46 = python3Target44.language;
        java.lang.String str47 = python3Target44.getVersion();
        int int48 = python3Target44.getInlineTestSetWordSize();
        java.lang.String str49 = python3Target44.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator50 = python3Target44.gen;
        org.antlr.v4.tool.Grammar grammar51 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target52 = new org.antlr.v4.codegen.target.Python3Target();
        int int53 = python3Target52.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup54 = python3Target52.templates;
        org.antlr.v4.tool.Grammar grammar55 = null;
        int[] intArray56 = new int[] {};
        java.lang.String[] strArray57 = python3Target52.getTokenTypesAsTargetLabels(grammar55, intArray56);
        java.lang.String[] strArray58 = python3Target44.getTokenTypesAsTargetLabels(grammar51, intArray56);
        java.lang.String[] strArray59 = python3Target40.getTokenTypesAsTargetLabels(grammar43, intArray56);
        java.lang.String[] strArray60 = python3Target33.getTokenTypesAsTargetLabels(grammar39, intArray56);
        java.lang.String[] strArray61 = python3Target25.getTokenTypesAsTargetLabels(grammar32, intArray56);
        java.lang.String[] strArray62 = python3Target7.getTokenTypesAsTargetLabels(grammar24, intArray56);
        java.lang.String[] strArray63 = python3Target0.getTokenTypesAsTargetLabels(grammar6, intArray56);
        int int64 = python3Target0.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator65 = null;
        python3Target0.gen = codeGenerator65;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str68 = python3Target0.getImplicitSetLabel("12");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 29 + "'", int2 == 29);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\"i\"" + "'", str4, "\"i\"");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 29 + "'", int5 == 29);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 64 + "'", int26 == 64);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(codeGenerator28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "4.5.2.1" + "'", str29, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 64 + "'", int34 == 64);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "4.5.2.1" + "'", str36, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "d" + "'", str42, "d");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 64 + "'", int45 == 64);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "4.5.2.1" + "'", str47, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 64 + "'", int48 == 64);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNull(codeGenerator50);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 64 + "'", int53 == 64);
        org.junit.Assert.assertNull(sTGroup54);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[]");
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 64 + "'", int64 == 64);
    }

    @Test
    public void test06944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06944");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        org.stringtemplate.v4.STGroup sTGroup1 = null;
        python3Target0.templates = sTGroup1;
        java.lang.String[] strArray6 = new java.lang.String[] { "", "\\0", "" };
        java.util.LinkedHashSet<java.lang.String> strSet7 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet7, strArray6);
        python3Target0.badWords = strSet7;
        python3Target0.language = "1";
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = python3Target0.getCodeGenerator();
        java.lang.String str13 = python3Target0.language;
        boolean boolean14 = python3Target0.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup15 = null;
        python3Target0.templates = sTGroup15;
        java.lang.String str18 = python3Target0.encodeIntAsCharEscape((int) (short) 100);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str20 = python3Target0.getImplicitSetLabel("\"\\\\\\\"i\\\\\\\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(codeGenerator12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "1" + "'", str13, "1");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "d" + "'", str18, "d");
    }

    @Test
    public void test06945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06945");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.wantsBaseVisitor();
        org.antlr.v4.codegen.CodeGenerator codeGenerator2 = null;
        python3Target0.gen = codeGenerator2;
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = python3Target0.gen;
        org.antlr.v4.codegen.target.Python3Target python3Target5 = new org.antlr.v4.codegen.target.Python3Target();
        int int6 = python3Target5.getInlineTestSetWordSize();
        java.lang.String str7 = python3Target5.language;
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target5.getCodeGenerator();
        java.util.Set<java.lang.String> strSet9 = python3Target5.getBadWords();
        java.lang.String[] strArray10 = python3Target5.targetCharValueEscape;
        python3Target0.targetCharValueEscape = strArray10;
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = python3Target0.gen;
        python3Target0.language = "";
        org.antlr.v4.codegen.target.Python3Target python3Target15 = new org.antlr.v4.codegen.target.Python3Target();
        java.util.Set<java.lang.String> strSet16 = python3Target15.badWords;
        java.util.Set<java.lang.String> strSet17 = python3Target15.badWords;
        python3Target0.badWords = strSet17;
        org.antlr.v4.tool.ast.GrammarAST grammarAST19 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str20 = python3Target0.getLoopCounter(grammarAST19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(codeGenerator4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 64 + "'", int6 == 64);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNull(codeGenerator12);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertNotNull(strSet17);
    }

    @Test
    public void test06946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06946");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        org.stringtemplate.v4.STGroup sTGroup3 = python3Target0.templates;
        boolean boolean4 = python3Target0.templatesExist();
        boolean boolean5 = python3Target0.wantsBaseListener();
        boolean boolean6 = python3Target0.wantsBaseListener();
        java.lang.String[] strArray7 = python3Target0.targetCharValueEscape;
        boolean boolean8 = python3Target0.supportsOverloadedMethods();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(sTGroup3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test06947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06947");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        java.lang.String str3 = python3Target0.getVersion();
        int int4 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str5 = python3Target0.getLanguage();
        boolean boolean6 = python3Target0.templatesExist();
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        python3Target0.gen = codeGenerator7;
        python3Target0.language = "\"\"\\\"hi!\\\"\"\"";
        boolean boolean11 = python3Target0.templatesExist();
        java.lang.String str13 = python3Target0.getTargetStringLiteralFromString("4.5.2.1");
        org.antlr.v4.codegen.model.RuleFunction ruleFunction14 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str15 = python3Target0.getRuleFunctionContextStructName(ruleFunction14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "4.5.2.1" + "'", str3, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"4.5.2.1\"" + "'", str13, "\"4.5.2.1\"");
    }

    @Test
    public void test06948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06948");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "", true);
        org.antlr.v4.tool.Grammar grammar7 = null;
        org.stringtemplate.v4.ST sT8 = null;
        python3Target0.genRecognizerHeaderFile(grammar7, sT8, "");
        org.antlr.v4.tool.Grammar grammar11 = null;
        org.stringtemplate.v4.ST sT12 = null;
        python3Target0.genRecognizerHeaderFile(grammar11, sT12, "\"i\"");
        int int15 = python3Target0.getSerializedATNSegmentLimit();
        boolean boolean16 = python3Target0.wantsBaseVisitor();
        java.lang.String str18 = python3Target0.getTargetStringLiteralFromString("\"\"\".5.2.\"\"\"");
        boolean boolean19 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator20 = null;
        java.lang.String str23 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator20, " ", false);
        org.antlr.v4.tool.Grammar grammar24 = null;
        org.stringtemplate.v4.ST sT25 = null;
        python3Target0.genRecognizerHeaderFile(grammar24, sT25, "\"\"");
        java.lang.String str29 = python3Target0.getTargetStringLiteralFromString("1");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"" + "'", str6, "\"\"");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 29 + "'", int15 == 29);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "\"\"\"\".5.2.\"\"\"\"" + "'", str18, "\"\"\"\".5.2.\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "\"1\"" + "'", str29, "\"1\"");
    }

    @Test
    public void test06949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06949");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!", "" };
        python3Target0.targetCharValueEscape = strArray4;
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        java.lang.String str9 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator6, "\"\"", false);
        int int10 = python3Target0.getSerializedATNSegmentLimit();
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = python3Target0.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = python3Target0.getCodeGenerator();
        boolean boolean13 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.codegen.target.Python3Target python3Target14 = new org.antlr.v4.codegen.target.Python3Target();
        int int15 = python3Target14.getInlineTestSetWordSize();
        java.lang.String str16 = python3Target14.language;
        java.lang.String str17 = python3Target14.getVersion();
        int int18 = python3Target14.getInlineTestSetWordSize();
        java.lang.String str19 = python3Target14.getLanguage();
        java.lang.String str22 = python3Target14.getTargetStringLiteralFromString("4.5.2.1", true);
        java.util.Set<java.lang.String> strSet23 = python3Target14.getBadWords();
        python3Target0.badWords = strSet23;
        org.antlr.v4.tool.Rule rule25 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str26 = python3Target0.getRuleFunctionContextStructName(rule25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 29 + "'", int10 == 29);
        org.junit.Assert.assertNull(codeGenerator11);
        org.junit.Assert.assertNull(codeGenerator12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 64 + "'", int15 == 64);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "4.5.2.1" + "'", str17, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 64 + "'", int18 == 64);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "\"4.5.2.1\"" + "'", str22, "\"4.5.2.1\"");
        org.junit.Assert.assertNotNull(strSet23);
    }

    @Test
    public void test06950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06950");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        org.stringtemplate.v4.STGroup sTGroup3 = python3Target0.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = python3Target0.gen;
        java.lang.String str5 = python3Target0.getVersion();
        java.lang.String str6 = python3Target0.getLanguage();
        java.lang.String str7 = python3Target0.getLanguage();
        java.util.Set<java.lang.String> strSet8 = python3Target0.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = python3Target0.getCodeGenerator();
        java.lang.String str10 = python3Target0.language;
        org.antlr.v4.tool.ast.GrammarAST grammarAST11 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean12 = python3Target0.visibleGrammarSymbolCausesIssueInGeneratedCode(grammarAST11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(sTGroup3);
        org.junit.Assert.assertNull(codeGenerator4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "4.5.2.1" + "'", str5, "4.5.2.1");
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNull(codeGenerator9);
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test06951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06951");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "", true);
        org.antlr.v4.tool.Grammar grammar7 = null;
        org.stringtemplate.v4.ST sT8 = null;
        python3Target0.genRecognizerHeaderFile(grammar7, sT8, "\"\"\"\"");
        org.stringtemplate.v4.STGroup sTGroup11 = null;
        python3Target0.templates = sTGroup11;
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = null;
        java.lang.String str16 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator13, "\"\"", true);
        java.lang.String str17 = python3Target0.getLanguage();
        java.lang.String str19 = python3Target0.encodeIntAsCharEscape(10);
        java.lang.String[] strArray20 = python3Target0.targetCharValueEscape;
        org.antlr.v4.tool.Grammar grammar21 = null;
        org.stringtemplate.v4.ST sT22 = null;
        python3Target0.genRecognizerHeaderFile(grammar21, sT22, "\\\"\\\"\\\"\\\"\\\"4.5.2.1\\\"\\\"\\\"\\\"\\\"");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str26 = python3Target0.getAltLabelContextStructName("\\\"\\\"\\\"i\\\"\\\"\\\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"" + "'", str6, "\"\"");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\"\"" + "'", str16, "\"\"");
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "\\12" + "'", str19, "\\12");
        org.junit.Assert.assertNotNull(strArray20);
    }

    @Test
    public void test06952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06952");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str2 = python3Target0.getTargetStringLiteralFromString("\"\"");
        int int3 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str5 = python3Target0.encodeIntAsCharEscape(0);
        java.lang.String str7 = python3Target0.getTargetStringLiteralFromString("");
        java.lang.String str8 = python3Target0.getVersion();
        org.antlr.v4.tool.Grammar grammar9 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target10 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str11 = python3Target10.language;
        org.antlr.v4.codegen.target.Python3Target python3Target12 = new org.antlr.v4.codegen.target.Python3Target();
        org.stringtemplate.v4.STGroup sTGroup13 = null;
        python3Target12.templates = sTGroup13;
        java.lang.String[] strArray18 = new java.lang.String[] { "", "\\0", "" };
        java.util.LinkedHashSet<java.lang.String> strSet19 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet19, strArray18);
        python3Target12.badWords = strSet19;
        python3Target10.badWords = strSet19;
        org.antlr.v4.tool.Grammar grammar23 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target24 = new org.antlr.v4.codegen.target.Python3Target();
        int int25 = python3Target24.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup26 = python3Target24.templates;
        org.antlr.v4.tool.Grammar grammar27 = null;
        int[] intArray28 = new int[] {};
        java.lang.String[] strArray29 = python3Target24.getTokenTypesAsTargetLabels(grammar27, intArray28);
        java.lang.String[] strArray30 = python3Target10.getTokenTypesAsTargetLabels(grammar23, intArray28);
        java.lang.String[] strArray31 = python3Target0.getTokenTypesAsTargetLabels(grammar9, intArray28);
        boolean boolean32 = python3Target0.templatesExist();
        org.antlr.v4.codegen.CodeGenerator codeGenerator33 = null;
        python3Target0.gen = codeGenerator33;
        org.stringtemplate.v4.STGroup sTGroup35 = python3Target0.templates;
        // The following exception was thrown during execution in test generation
        try {
            org.stringtemplate.v4.STGroup sTGroup36 = python3Target0.getTemplates();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "\"\"\"\"" + "'", str2, "\"\"\"\"");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 64 + "'", int3 == 64);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\\0" + "'", str5, "\\0");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"\"" + "'", str7, "\"\"");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "4.5.2.1" + "'", str8, "4.5.2.1");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 64 + "'", int25 == 64);
        org.junit.Assert.assertNull(sTGroup26);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[]");
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(sTGroup35);
    }

    @Test
    public void test06953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06953");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        java.lang.String str3 = python3Target0.getVersion();
        int int4 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str5 = python3Target0.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = python3Target0.gen;
        org.antlr.v4.tool.Grammar grammar7 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target8 = new org.antlr.v4.codegen.target.Python3Target();
        int int9 = python3Target8.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup10 = python3Target8.templates;
        org.antlr.v4.tool.Grammar grammar11 = null;
        int[] intArray12 = new int[] {};
        java.lang.String[] strArray13 = python3Target8.getTokenTypesAsTargetLabels(grammar11, intArray12);
        java.lang.String[] strArray14 = python3Target0.getTokenTypesAsTargetLabels(grammar7, intArray12);
        java.lang.String str16 = python3Target0.encodeIntAsCharEscape((int) (byte) 100);
        java.util.Set<java.lang.String> strSet17 = python3Target0.badWords;
        org.antlr.v4.tool.Grammar grammar18 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target19 = new org.antlr.v4.codegen.target.Python3Target();
        int int20 = python3Target19.getInlineTestSetWordSize();
        java.lang.String str21 = python3Target19.language;
        org.antlr.v4.codegen.CodeGenerator codeGenerator22 = null;
        java.lang.String str25 = python3Target19.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator22, "", true);
        org.antlr.v4.tool.Grammar grammar26 = null;
        org.stringtemplate.v4.ST sT27 = null;
        python3Target19.genRecognizerHeaderFile(grammar26, sT27, "");
        org.antlr.v4.tool.Grammar grammar30 = null;
        org.stringtemplate.v4.ST sT31 = null;
        python3Target19.genRecognizerHeaderFile(grammar30, sT31, "\"i\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator34 = python3Target19.gen;
        org.antlr.v4.codegen.CodeGenerator codeGenerator35 = null;
        python3Target19.gen = codeGenerator35;
        java.lang.String str38 = python3Target19.encodeIntAsCharEscape(1);
        org.antlr.v4.tool.Grammar grammar39 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target40 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str42 = python3Target40.encodeIntAsCharEscape(100);
        org.antlr.v4.tool.Grammar grammar43 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target44 = new org.antlr.v4.codegen.target.Python3Target();
        int int45 = python3Target44.getInlineTestSetWordSize();
        java.lang.String str46 = python3Target44.language;
        java.lang.String str47 = python3Target44.getVersion();
        int int48 = python3Target44.getInlineTestSetWordSize();
        java.lang.String str49 = python3Target44.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator50 = python3Target44.gen;
        org.antlr.v4.tool.Grammar grammar51 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target52 = new org.antlr.v4.codegen.target.Python3Target();
        int int53 = python3Target52.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup54 = python3Target52.templates;
        org.antlr.v4.tool.Grammar grammar55 = null;
        int[] intArray56 = new int[] {};
        java.lang.String[] strArray57 = python3Target52.getTokenTypesAsTargetLabels(grammar55, intArray56);
        java.lang.String[] strArray58 = python3Target44.getTokenTypesAsTargetLabels(grammar51, intArray56);
        java.lang.String[] strArray59 = python3Target40.getTokenTypesAsTargetLabels(grammar43, intArray56);
        java.lang.String[] strArray60 = python3Target19.getTokenTypesAsTargetLabels(grammar39, intArray56);
        java.lang.String[] strArray61 = python3Target0.getTokenTypesAsTargetLabels(grammar18, intArray56);
        java.lang.String str62 = python3Target0.getVersion();
        python3Target0.addBadWords();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str65 = python3Target0.getImplicitTokenLabel("");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "4.5.2.1" + "'", str3, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(codeGenerator6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 64 + "'", int9 == 64);
        org.junit.Assert.assertNull(sTGroup10);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[]");
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "d" + "'", str16, "d");
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 64 + "'", int20 == 64);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "\"\"" + "'", str25, "\"\"");
        org.junit.Assert.assertNull(codeGenerator34);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "\\1" + "'", str38, "\\1");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "d" + "'", str42, "d");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 64 + "'", int45 == 64);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "4.5.2.1" + "'", str47, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 64 + "'", int48 == 64);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNull(codeGenerator50);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 64 + "'", int53 == 64);
        org.junit.Assert.assertNull(sTGroup54);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[]");
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "4.5.2.1" + "'", str62, "4.5.2.1");
    }

    @Test
    public void test06954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06954");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        java.lang.String str3 = python3Target0.getVersion();
        int int4 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str5 = python3Target0.getLanguage();
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromString("4.5.2.1", true);
        boolean boolean9 = python3Target0.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet10 = python3Target0.getBadWords();
        boolean boolean11 = python3Target0.wantsBaseVisitor();
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = null;
        java.lang.String str15 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator12, "\"\\12\"", false);
        java.util.Set<java.lang.String> strSet16 = python3Target0.getBadWords();
        org.antlr.v4.codegen.target.Python3Target python3Target17 = new org.antlr.v4.codegen.target.Python3Target();
        org.stringtemplate.v4.STGroup sTGroup18 = null;
        python3Target17.templates = sTGroup18;
        java.util.Set<java.lang.String> strSet20 = null;
        python3Target17.badWords = strSet20;
        boolean boolean22 = python3Target17.wantsBaseListener();
        java.lang.String[] strArray23 = python3Target17.targetCharValueEscape;
        python3Target0.targetCharValueEscape = strArray23;
        int int25 = python3Target0.getSerializedATNSegmentLimit();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "4.5.2.1" + "'", str3, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"4.5.2.1\"" + "'", str8, "\"4.5.2.1\"");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "12" + "'", str15, "12");
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 29 + "'", int25 == 29);
    }

    @Test
    public void test06955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06955");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        boolean boolean2 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.gen;
        boolean boolean4 = python3Target0.wantsBaseVisitor();
        java.lang.String str5 = python3Target0.getLanguage();
        python3Target0.language = "\"\"\"4.5.2.1\"\"\"";
        org.antlr.v4.codegen.target.Python3Target python3Target8 = new org.antlr.v4.codegen.target.Python3Target();
        org.stringtemplate.v4.STGroup sTGroup9 = null;
        python3Target8.templates = sTGroup9;
        java.lang.String[] strArray14 = new java.lang.String[] { "", "\\0", "" };
        java.util.LinkedHashSet<java.lang.String> strSet15 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet15, strArray14);
        python3Target8.badWords = strSet15;
        boolean boolean18 = python3Target8.templatesExist();
        java.lang.String str20 = python3Target8.encodeIntAsCharEscape(64);
        org.antlr.v4.tool.Grammar grammar21 = null;
        org.stringtemplate.v4.ST sT22 = null;
        python3Target8.genRecognizerHeaderFile(grammar21, sT22, "\"\\\"\\\"\\\"i\\\"\\\"\\\"\"");
        java.lang.String[] strArray25 = python3Target8.targetCharValueEscape;
        python3Target0.targetCharValueEscape = strArray25;
        java.lang.String str29 = python3Target0.getTargetStringLiteralFromString("", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator30 = python3Target0.getCodeGenerator();
        org.antlr.v4.tool.Rule rule31 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str32 = python3Target0.getRuleFunctionContextStructName(rule31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "@" + "'", str20, "@");
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "\"\"" + "'", str29, "\"\"");
        org.junit.Assert.assertNull(codeGenerator30);
    }

    @Test
    public void test06956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06956");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        org.stringtemplate.v4.STGroup sTGroup3 = python3Target0.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = python3Target0.gen;
        java.lang.String str7 = python3Target0.getTargetStringLiteralFromString("\"\"1\"\"", false);
        java.util.Set<java.lang.String> strSet8 = python3Target0.getBadWords();
        org.antlr.v4.codegen.model.RuleFunction ruleFunction9 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str10 = python3Target0.getRuleFunctionContextStructName(ruleFunction9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(sTGroup3);
        org.junit.Assert.assertNull(codeGenerator4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"\"1\"\"" + "'", str7, "\"\"1\"\"");
        org.junit.Assert.assertNotNull(strSet8);
    }

    @Test
    public void test06957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06957");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str2 = python3Target0.getTargetStringLiteralFromString("\"\"");
        int int3 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str5 = python3Target0.encodeIntAsCharEscape(0);
        java.lang.String str7 = python3Target0.getTargetStringLiteralFromString("");
        java.lang.String str8 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = python3Target0.gen;
        python3Target0.language = "\"\"\"\\\"4.5.2.1\\\"\"\"\"";
        org.antlr.v4.codegen.target.Python3Target python3Target12 = new org.antlr.v4.codegen.target.Python3Target();
        int int13 = python3Target12.getInlineTestSetWordSize();
        java.lang.String str14 = python3Target12.language;
        org.antlr.v4.codegen.CodeGenerator codeGenerator15 = null;
        java.lang.String str18 = python3Target12.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator15, "", true);
        org.antlr.v4.tool.Grammar grammar19 = null;
        org.stringtemplate.v4.ST sT20 = null;
        python3Target12.genRecognizerHeaderFile(grammar19, sT20, "");
        org.antlr.v4.tool.Grammar grammar23 = null;
        org.stringtemplate.v4.ST sT24 = null;
        python3Target12.genRecognizerHeaderFile(grammar23, sT24, "\"i\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator27 = python3Target12.gen;
        java.lang.String str29 = python3Target12.getTargetStringLiteralFromString("\"\"\"\"4.5.2.1\"\"\"\"");
        org.stringtemplate.v4.STGroup sTGroup30 = python3Target12.templates;
        org.antlr.v4.tool.Grammar grammar31 = null;
        org.stringtemplate.v4.ST sT32 = null;
        python3Target12.genRecognizerHeaderFile(grammar31, sT32, "12");
        org.antlr.v4.codegen.target.Python3Target python3Target35 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str36 = python3Target35.language;
        org.antlr.v4.codegen.target.Python3Target python3Target37 = new org.antlr.v4.codegen.target.Python3Target();
        org.stringtemplate.v4.STGroup sTGroup38 = null;
        python3Target37.templates = sTGroup38;
        java.lang.String[] strArray43 = new java.lang.String[] { "", "\\0", "" };
        java.util.LinkedHashSet<java.lang.String> strSet44 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet44, strArray43);
        python3Target37.badWords = strSet44;
        python3Target35.badWords = strSet44;
        python3Target35.language = "\"\"i\"\"";
        java.lang.String str50 = python3Target35.language;
        java.lang.String str52 = python3Target35.getTargetStringLiteralFromString("");
        org.antlr.v4.codegen.target.Python3Target python3Target53 = new org.antlr.v4.codegen.target.Python3Target();
        int int54 = python3Target53.getInlineTestSetWordSize();
        java.lang.String str55 = python3Target53.language;
        org.antlr.v4.codegen.CodeGenerator codeGenerator56 = null;
        java.lang.String str59 = python3Target53.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator56, "", true);
        java.util.Set<java.lang.String> strSet60 = python3Target53.getBadWords();
        java.lang.String str62 = python3Target53.encodeIntAsCharEscape(29);
        java.util.Set<java.lang.String> strSet63 = python3Target53.getBadWords();
        python3Target35.badWords = strSet63;
        python3Target12.badWords = strSet63;
        org.antlr.v4.codegen.CodeGenerator codeGenerator66 = python3Target12.gen;
        java.lang.String str67 = python3Target12.language;
        org.antlr.v4.codegen.target.Python3Target python3Target68 = new org.antlr.v4.codegen.target.Python3Target();
        int int69 = python3Target68.getInlineTestSetWordSize();
        java.lang.String str70 = python3Target68.language;
        java.lang.String str71 = python3Target68.getVersion();
        int int72 = python3Target68.getInlineTestSetWordSize();
        java.lang.String str73 = python3Target68.getLanguage();
        java.lang.String str74 = python3Target68.getLanguage();
        java.lang.String str76 = python3Target68.getTargetStringLiteralFromString("\"i\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator77 = null;
        python3Target68.gen = codeGenerator77;
        org.antlr.v4.codegen.target.Python3Target python3Target79 = new org.antlr.v4.codegen.target.Python3Target();
        int int80 = python3Target79.getInlineTestSetWordSize();
        java.lang.String str81 = python3Target79.language;
        java.lang.String str82 = python3Target79.getVersion();
        int int83 = python3Target79.getInlineTestSetWordSize();
        java.lang.String str84 = python3Target79.getLanguage();
        java.lang.String str87 = python3Target79.getTargetStringLiteralFromString("4.5.2.1", true);
        boolean boolean88 = python3Target79.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet89 = python3Target79.badWords;
        org.antlr.v4.codegen.CodeGenerator codeGenerator90 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target91 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator90);
        java.lang.String str93 = python3Target91.encodeIntAsCharEscape((int) (short) 1);
        org.stringtemplate.v4.STGroup sTGroup94 = python3Target91.loadTemplates();
        python3Target79.templates = sTGroup94;
        python3Target68.templates = sTGroup94;
        python3Target12.templates = sTGroup94;
        python3Target0.templates = sTGroup94;
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "\"\"\"\"" + "'", str2, "\"\"\"\"");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 64 + "'", int3 == 64);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\\0" + "'", str5, "\\0");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"\"" + "'", str7, "\"\"");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "4.5.2.1" + "'", str8, "4.5.2.1");
        org.junit.Assert.assertNull(codeGenerator9);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 64 + "'", int13 == 64);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "\"\"" + "'", str18, "\"\"");
        org.junit.Assert.assertNull(codeGenerator27);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "\"\"\"\"\"4.5.2.1\"\"\"\"\"" + "'", str29, "\"\"\"\"\"4.5.2.1\"\"\"\"\"");
        org.junit.Assert.assertNull(sTGroup30);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "\"\"i\"\"" + "'", str50, "\"\"i\"\"");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "\"\"" + "'", str52, "\"\"");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 64 + "'", int54 == 64);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "\"\"" + "'", str59, "\"\"");
        org.junit.Assert.assertNotNull(strSet60);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "\\35" + "'", str62, "\\35");
        org.junit.Assert.assertNotNull(strSet63);
        org.junit.Assert.assertNull(codeGenerator66);
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 64 + "'", int69 == 64);
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "4.5.2.1" + "'", str71, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 64 + "'", int72 == 64);
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertNull(str74);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "\"\"i\"\"" + "'", str76, "\"\"i\"\"");
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 64 + "'", int80 == 64);
        org.junit.Assert.assertNull(str81);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "4.5.2.1" + "'", str82, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 64 + "'", int83 == 64);
        org.junit.Assert.assertNull(str84);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "\"4.5.2.1\"" + "'", str87, "\"4.5.2.1\"");
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(strSet89);
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "\\1" + "'", str93, "\\1");
        org.junit.Assert.assertNotNull(sTGroup94);
    }

    @Test
    public void test06958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06958");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        java.lang.String str3 = python3Target0.getLanguage();
        java.lang.String str5 = python3Target0.getTargetStringLiteralFromString("");
        java.lang.String str6 = python3Target0.getVersion();
        org.antlr.v4.codegen.target.Python3Target python3Target7 = new org.antlr.v4.codegen.target.Python3Target();
        int int8 = python3Target7.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup9 = python3Target7.templates;
        org.antlr.v4.tool.Grammar grammar10 = null;
        int[] intArray11 = new int[] {};
        java.lang.String[] strArray12 = python3Target7.getTokenTypesAsTargetLabels(grammar10, intArray11);
        python3Target0.targetCharValueEscape = strArray12;
        java.lang.String str15 = python3Target0.encodeIntAsCharEscape((int) ' ');
        java.lang.String str16 = python3Target0.language;
        boolean boolean17 = python3Target0.wantsBaseVisitor();
        int int18 = python3Target0.getSerializedATNSegmentLimit();
        org.antlr.v4.codegen.model.RuleFunction ruleFunction19 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str20 = python3Target0.getRuleFunctionContextStructName(ruleFunction19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\"\"" + "'", str5, "\"\"");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "4.5.2.1" + "'", str6, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 64 + "'", int8 == 64);
        org.junit.Assert.assertNull(sTGroup9);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[]");
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + " " + "'", str15, " ");
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 29 + "'", int18 == 29);
    }

    @Test
    public void test06959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06959");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        java.lang.String str3 = python3Target0.getVersion();
        int int4 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str5 = python3Target0.getLanguage();
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromString("4.5.2.1", true);
        java.util.Set<java.lang.String> strSet9 = python3Target0.badWords;
        int int10 = python3Target0.getSerializedATNSegmentLimit();
        java.lang.String str11 = python3Target0.getVersion();
        java.lang.String[] strArray12 = new java.lang.String[] {};
        python3Target0.targetCharValueEscape = strArray12;
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = null;
        java.lang.String str17 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator14, "\"\"i\"\"", true);
        java.lang.String[] strArray18 = python3Target0.targetCharValueEscape;
        java.lang.String str21 = python3Target0.getTargetStringLiteralFromString("\"\\1\"", true);
        org.antlr.v4.codegen.target.Python3Target python3Target22 = new org.antlr.v4.codegen.target.Python3Target();
        int int23 = python3Target22.getInlineTestSetWordSize();
        java.lang.String str24 = python3Target22.language;
        java.lang.String str25 = python3Target22.getVersion();
        boolean boolean26 = python3Target22.wantsBaseListener();
        java.util.Set<java.lang.String> strSet27 = python3Target22.getBadWords();
        java.util.Set<java.lang.String> strSet28 = python3Target22.getBadWords();
        java.lang.String str31 = python3Target22.getTargetStringLiteralFromString("12", false);
        java.util.Set<java.lang.String> strSet32 = python3Target22.badWords;
        python3Target0.badWords = strSet32;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "4.5.2.1" + "'", str3, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"4.5.2.1\"" + "'", str8, "\"4.5.2.1\"");
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 29 + "'", int10 == 29);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "4.5.2.1" + "'", str11, "4.5.2.1");
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\"\\\"i\\\"\"" + "'", str17, "\"\\\"i\\\"\"");
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "\"\"\\1\"\"" + "'", str21, "\"\"\\1\"\"");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 64 + "'", int23 == 64);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "4.5.2.1" + "'", str25, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "12" + "'", str31, "12");
        org.junit.Assert.assertNotNull(strSet32);
    }

    @Test
    public void test06960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06960");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "", true);
        java.lang.String str8 = python3Target0.encodeIntAsCharEscape((int) (short) 100);
        java.util.Set<java.lang.String> strSet9 = python3Target0.badWords;
        java.lang.String str10 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = python3Target0.getCodeGenerator();
        org.antlr.v4.tool.ast.GrammarAST grammarAST12 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str13 = python3Target0.getLoopLabel(grammarAST12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"" + "'", str6, "\"\"");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "d" + "'", str8, "d");
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "4.5.2.1" + "'", str10, "4.5.2.1");
        org.junit.Assert.assertNull(codeGenerator11);
    }

    @Test
    public void test06961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06961");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        java.lang.String str3 = python3Target0.getVersion();
        int int4 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str5 = python3Target0.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = python3Target0.gen;
        org.antlr.v4.tool.Grammar grammar7 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target8 = new org.antlr.v4.codegen.target.Python3Target();
        int int9 = python3Target8.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup10 = python3Target8.templates;
        org.antlr.v4.tool.Grammar grammar11 = null;
        int[] intArray12 = new int[] {};
        java.lang.String[] strArray13 = python3Target8.getTokenTypesAsTargetLabels(grammar11, intArray12);
        java.lang.String[] strArray14 = python3Target0.getTokenTypesAsTargetLabels(grammar7, intArray12);
        java.lang.String str15 = python3Target0.getLanguage();
        int int16 = python3Target0.getSerializedATNSegmentLimit();
        int int17 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str19 = python3Target0.getTargetStringLiteralFromString("\"12\"");
        org.antlr.v4.tool.Grammar grammar20 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target21 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str23 = python3Target21.getTargetStringLiteralFromString("\"\"");
        int int24 = python3Target21.getInlineTestSetWordSize();
        boolean boolean25 = python3Target21.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup26 = python3Target21.templates;
        java.lang.String str28 = python3Target21.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator29 = null;
        python3Target21.gen = codeGenerator29;
        java.lang.String[] strArray31 = new java.lang.String[] {};
        python3Target21.targetCharValueEscape = strArray31;
        java.lang.String str34 = python3Target21.getTargetStringLiteralFromString("\\\"4.5.2.1\\\"");
        org.antlr.v4.tool.Grammar grammar35 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target36 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str37 = python3Target36.language;
        org.antlr.v4.codegen.target.Python3Target python3Target38 = new org.antlr.v4.codegen.target.Python3Target();
        org.stringtemplate.v4.STGroup sTGroup39 = null;
        python3Target38.templates = sTGroup39;
        java.lang.String[] strArray44 = new java.lang.String[] { "", "\\0", "" };
        java.util.LinkedHashSet<java.lang.String> strSet45 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet45, strArray44);
        python3Target38.badWords = strSet45;
        python3Target36.badWords = strSet45;
        python3Target36.language = "\"\"i\"\"";
        org.stringtemplate.v4.STGroup sTGroup51 = null;
        python3Target36.templates = sTGroup51;
        org.antlr.v4.tool.Grammar grammar53 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target54 = new org.antlr.v4.codegen.target.Python3Target();
        int int55 = python3Target54.getInlineTestSetWordSize();
        boolean boolean56 = python3Target54.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator57 = python3Target54.gen;
        java.lang.String str58 = python3Target54.getVersion();
        org.stringtemplate.v4.STGroup sTGroup59 = null;
        python3Target54.templates = sTGroup59;
        org.antlr.v4.tool.Grammar grammar61 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target62 = new org.antlr.v4.codegen.target.Python3Target();
        int int63 = python3Target62.getInlineTestSetWordSize();
        java.lang.String str64 = python3Target62.language;
        java.lang.String str65 = python3Target62.getVersion();
        python3Target62.language = "@";
        org.antlr.v4.tool.Grammar grammar68 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target69 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str71 = python3Target69.encodeIntAsCharEscape(100);
        org.antlr.v4.tool.Grammar grammar72 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target73 = new org.antlr.v4.codegen.target.Python3Target();
        int int74 = python3Target73.getInlineTestSetWordSize();
        java.lang.String str75 = python3Target73.language;
        java.lang.String str76 = python3Target73.getVersion();
        int int77 = python3Target73.getInlineTestSetWordSize();
        java.lang.String str78 = python3Target73.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator79 = python3Target73.gen;
        org.antlr.v4.tool.Grammar grammar80 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target81 = new org.antlr.v4.codegen.target.Python3Target();
        int int82 = python3Target81.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup83 = python3Target81.templates;
        org.antlr.v4.tool.Grammar grammar84 = null;
        int[] intArray85 = new int[] {};
        java.lang.String[] strArray86 = python3Target81.getTokenTypesAsTargetLabels(grammar84, intArray85);
        java.lang.String[] strArray87 = python3Target73.getTokenTypesAsTargetLabels(grammar80, intArray85);
        java.lang.String[] strArray88 = python3Target69.getTokenTypesAsTargetLabels(grammar72, intArray85);
        java.lang.String[] strArray89 = python3Target62.getTokenTypesAsTargetLabels(grammar68, intArray85);
        java.lang.String[] strArray90 = python3Target54.getTokenTypesAsTargetLabels(grammar61, intArray85);
        java.lang.String[] strArray91 = python3Target36.getTokenTypesAsTargetLabels(grammar53, intArray85);
        java.lang.String[] strArray92 = python3Target21.getTokenTypesAsTargetLabels(grammar35, intArray85);
        java.lang.String[] strArray93 = python3Target0.getTokenTypesAsTargetLabels(grammar20, intArray85);
        int int94 = python3Target0.getInlineTestSetWordSize();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "4.5.2.1" + "'", str3, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(codeGenerator6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 64 + "'", int9 == 64);
        org.junit.Assert.assertNull(sTGroup10);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[]");
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 29 + "'", int16 == 29);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 64 + "'", int17 == 64);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "\"\"12\"\"" + "'", str19, "\"\"12\"\"");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "\"\"\"\"" + "'", str23, "\"\"\"\"");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 64 + "'", int24 == 64);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(sTGroup26);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "\"\"\"\"\"\"" + "'", str28, "\"\"\"\"\"\"");
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "\"\\\"4.5.2.1\\\"\"" + "'", str34, "\"\\\"4.5.2.1\\\"\"");
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 64 + "'", int55 == 64);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(codeGenerator57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "4.5.2.1" + "'", str58, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 64 + "'", int63 == 64);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "4.5.2.1" + "'", str65, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "d" + "'", str71, "d");
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 64 + "'", int74 == 64);
        org.junit.Assert.assertNull(str75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "4.5.2.1" + "'", str76, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 64 + "'", int77 == 64);
        org.junit.Assert.assertNull(str78);
        org.junit.Assert.assertNull(codeGenerator79);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 64 + "'", int82 == 64);
        org.junit.Assert.assertNull(sTGroup83);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[]");
        org.junit.Assert.assertNotNull(strArray86);
        org.junit.Assert.assertNotNull(strArray87);
        org.junit.Assert.assertNotNull(strArray88);
        org.junit.Assert.assertNotNull(strArray89);
        org.junit.Assert.assertNotNull(strArray90);
        org.junit.Assert.assertNotNull(strArray91);
        org.junit.Assert.assertNotNull(strArray92);
        org.junit.Assert.assertNotNull(strArray93);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 64 + "'", int94 == 64);
    }

    @Test
    public void test06962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06962");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        java.lang.String str3 = python3Target0.getVersion();
        int int4 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str5 = python3Target0.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = python3Target0.gen;
        python3Target0.addBadWords();
        org.antlr.v4.codegen.target.Python3Target python3Target8 = new org.antlr.v4.codegen.target.Python3Target();
        int int9 = python3Target8.getInlineTestSetWordSize();
        java.lang.String str10 = python3Target8.language;
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = python3Target8.getCodeGenerator();
        java.util.Set<java.lang.String> strSet12 = python3Target8.getBadWords();
        org.antlr.v4.codegen.target.Python3Target python3Target13 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray15 = new java.lang.String[] { "" };
        java.util.LinkedHashSet<java.lang.String> strSet16 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet16, strArray15);
        python3Target13.badWords = strSet16;
        python3Target8.badWords = strSet16;
        python3Target0.badWords = strSet16;
        java.lang.String str23 = python3Target0.getTargetStringLiteralFromString("\".5.2.\"", true);
        java.lang.String str25 = python3Target0.getTargetStringLiteralFromString("\".5.2.\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator26 = null;
        java.lang.String str29 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator26, "\"@\"", false);
        org.stringtemplate.v4.STGroup sTGroup30 = null;
        python3Target0.templates = sTGroup30;
        org.antlr.v4.codegen.CodeGenerator codeGenerator32 = null;
        python3Target0.gen = codeGenerator32;
        java.util.Set<java.lang.String> strSet34 = python3Target0.getBadWords();
        java.lang.String str36 = python3Target0.getTargetStringLiteralFromString("\"\"1\"\"");
        boolean boolean37 = python3Target0.wantsBaseVisitor();
        org.antlr.v4.codegen.CodeGenerator codeGenerator38 = python3Target0.getCodeGenerator();
        java.lang.String str41 = python3Target0.getTargetStringLiteralFromString("\"\"\"\"\"#\"\"\"\"\"", false);
        java.util.Set<java.lang.String> strSet42 = python3Target0.badWords;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "4.5.2.1" + "'", str3, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(codeGenerator6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 64 + "'", int9 == 64);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(codeGenerator11);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "\"\".5.2.\"\"" + "'", str23, "\"\".5.2.\"\"");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "\"\".5.2.\"\"" + "'", str25, "\"\".5.2.\"\"");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "@" + "'", str29, "@");
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "\"\"\"1\"\"\"" + "'", str36, "\"\"\"1\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(codeGenerator38);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "\"\"\"\"\"#\"\"\"\"\"" + "'", str41, "\"\"\"\"\"#\"\"\"\"\"");
        org.junit.Assert.assertNotNull(strSet42);
    }

    @Test
    public void test06963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06963");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str2 = python3Target0.encodeIntAsCharEscape(100);
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target4 = new org.antlr.v4.codegen.target.Python3Target();
        int int5 = python3Target4.getInlineTestSetWordSize();
        java.lang.String str6 = python3Target4.language;
        java.lang.String str7 = python3Target4.getVersion();
        int int8 = python3Target4.getInlineTestSetWordSize();
        java.lang.String str9 = python3Target4.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = python3Target4.gen;
        org.antlr.v4.tool.Grammar grammar11 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target12 = new org.antlr.v4.codegen.target.Python3Target();
        int int13 = python3Target12.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup14 = python3Target12.templates;
        org.antlr.v4.tool.Grammar grammar15 = null;
        int[] intArray16 = new int[] {};
        java.lang.String[] strArray17 = python3Target12.getTokenTypesAsTargetLabels(grammar15, intArray16);
        java.lang.String[] strArray18 = python3Target4.getTokenTypesAsTargetLabels(grammar11, intArray16);
        java.lang.String[] strArray19 = python3Target0.getTokenTypesAsTargetLabels(grammar3, intArray16);
        int int20 = python3Target0.getSerializedATNSegmentLimit();
        org.antlr.v4.codegen.CodeGenerator codeGenerator21 = python3Target0.getCodeGenerator();
        int int22 = python3Target0.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator23 = null;
        java.lang.String str26 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator23, "\"\"4.5.2.1\"\"", false);
        int int27 = python3Target0.getSerializedATNSegmentLimit();
        java.lang.String str29 = python3Target0.encodeIntAsCharEscape((int) 'a');
        boolean boolean30 = python3Target0.supportsOverloadedMethods();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str32 = python3Target0.getImplicitSetLabel("\"\"Python3\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "d" + "'", str2, "d");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 64 + "'", int5 == 64);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4.5.2.1" + "'", str7, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 64 + "'", int8 == 64);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(codeGenerator10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 64 + "'", int13 == 64);
        org.junit.Assert.assertNull(sTGroup14);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]");
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 29 + "'", int20 == 29);
        org.junit.Assert.assertNull(codeGenerator21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 64 + "'", int22 == 64);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\\\"4.5.2.1\\\"" + "'", str26, "\\\"4.5.2.1\\\"");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 29 + "'", int27 == 29);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "a" + "'", str29, "a");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test06964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06964");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        org.stringtemplate.v4.STGroup sTGroup3 = python3Target0.templates;
        boolean boolean4 = python3Target0.templatesExist();
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = null;
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator5, "", false);
        int int9 = python3Target0.getInlineTestSetWordSize();
        boolean boolean10 = python3Target0.wantsBaseVisitor();
        java.lang.String str12 = python3Target0.encodeIntAsCharEscape(10);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str14 = python3Target0.getListLabel("\"\"4.5.2.1\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(sTGroup3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 64 + "'", int9 == 64);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\\12" + "'", str12, "\\12");
    }

    @Test
    public void test06965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06965");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        org.stringtemplate.v4.STGroup sTGroup1 = null;
        python3Target0.templates = sTGroup1;
        java.lang.String[] strArray6 = new java.lang.String[] { "", "\\0", "" };
        java.util.LinkedHashSet<java.lang.String> strSet7 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet7, strArray6);
        python3Target0.badWords = strSet7;
        java.lang.String str10 = python3Target0.getLanguage();
        java.lang.String str11 = python3Target0.getLanguage();
        int int12 = python3Target0.getSerializedATNSegmentLimit();
        // The following exception was thrown during execution in test generation
        try {
            org.stringtemplate.v4.STGroup sTGroup13 = python3Target0.loadTemplates();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 29 + "'", int12 == 29);
    }

    @Test
    public void test06966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06966");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        boolean boolean2 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.gen;
        boolean boolean4 = python3Target0.wantsBaseVisitor();
        org.antlr.v4.codegen.target.Python3Target python3Target5 = new org.antlr.v4.codegen.target.Python3Target();
        int int6 = python3Target5.getInlineTestSetWordSize();
        java.lang.String str7 = python3Target5.language;
        java.lang.String str8 = python3Target5.getVersion();
        org.stringtemplate.v4.STGroup sTGroup9 = null;
        python3Target5.templates = sTGroup9;
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = null;
        java.lang.String str14 = python3Target5.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator11, "d", false);
        java.util.Set<java.lang.String> strSet15 = python3Target5.getBadWords();
        python3Target0.badWords = strSet15;
        java.util.Set<java.lang.String> strSet17 = python3Target0.badWords;
        java.util.Set<java.lang.String> strSet18 = python3Target0.getBadWords();
        org.antlr.v4.tool.Grammar grammar19 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target20 = new org.antlr.v4.codegen.target.Python3Target();
        int int21 = python3Target20.getInlineTestSetWordSize();
        java.lang.String str22 = python3Target20.language;
        java.lang.String str23 = python3Target20.getVersion();
        int int24 = python3Target20.getInlineTestSetWordSize();
        java.lang.String str25 = python3Target20.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator26 = python3Target20.gen;
        python3Target20.addBadWords();
        python3Target20.language = "\\0";
        boolean boolean30 = python3Target20.wantsBaseVisitor();
        org.antlr.v4.codegen.CodeGenerator codeGenerator31 = python3Target20.getCodeGenerator();
        int int32 = python3Target20.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar33 = null;
        org.stringtemplate.v4.ST sT34 = null;
        python3Target20.genRecognizerHeaderFile(grammar33, sT34, "\"\"\"4.5.2.1\"\"\"");
        java.util.Set<java.lang.String> strSet37 = python3Target20.badWords;
        org.antlr.v4.tool.Grammar grammar38 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target39 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str41 = python3Target39.encodeIntAsCharEscape(100);
        org.antlr.v4.tool.Grammar grammar42 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target43 = new org.antlr.v4.codegen.target.Python3Target();
        int int44 = python3Target43.getInlineTestSetWordSize();
        java.lang.String str45 = python3Target43.language;
        java.lang.String str46 = python3Target43.getVersion();
        int int47 = python3Target43.getInlineTestSetWordSize();
        java.lang.String str48 = python3Target43.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator49 = python3Target43.gen;
        org.antlr.v4.tool.Grammar grammar50 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target51 = new org.antlr.v4.codegen.target.Python3Target();
        int int52 = python3Target51.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup53 = python3Target51.templates;
        org.antlr.v4.tool.Grammar grammar54 = null;
        int[] intArray55 = new int[] {};
        java.lang.String[] strArray56 = python3Target51.getTokenTypesAsTargetLabels(grammar54, intArray55);
        java.lang.String[] strArray57 = python3Target43.getTokenTypesAsTargetLabels(grammar50, intArray55);
        java.lang.String[] strArray58 = python3Target39.getTokenTypesAsTargetLabels(grammar42, intArray55);
        java.lang.String[] strArray59 = python3Target20.getTokenTypesAsTargetLabels(grammar38, intArray55);
        java.lang.String[] strArray60 = python3Target0.getTokenTypesAsTargetLabels(grammar19, intArray55);
        int int61 = python3Target0.getInlineTestSetWordSize();
        org.antlr.v4.tool.ast.GrammarAST grammarAST62 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str63 = python3Target0.getLoopCounter(grammarAST62);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 64 + "'", int6 == 64);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "4.5.2.1" + "'", str8, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertNotNull(strSet18);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 64 + "'", int21 == 64);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "4.5.2.1" + "'", str23, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 64 + "'", int24 == 64);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(codeGenerator26);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(codeGenerator31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 29 + "'", int32 == 29);
        org.junit.Assert.assertNotNull(strSet37);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "d" + "'", str41, "d");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 64 + "'", int44 == 64);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "4.5.2.1" + "'", str46, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 64 + "'", int47 == 64);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNull(codeGenerator49);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 64 + "'", int52 == 64);
        org.junit.Assert.assertNull(sTGroup53);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[]");
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 64 + "'", int61 == 64);
    }

    @Test
    public void test06967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06967");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.wantsBaseVisitor();
        org.antlr.v4.codegen.CodeGenerator codeGenerator2 = null;
        python3Target0.gen = codeGenerator2;
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = python3Target0.gen;
        org.antlr.v4.codegen.target.Python3Target python3Target5 = new org.antlr.v4.codegen.target.Python3Target();
        int int6 = python3Target5.getInlineTestSetWordSize();
        java.lang.String str7 = python3Target5.language;
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target5.getCodeGenerator();
        java.util.Set<java.lang.String> strSet9 = python3Target5.getBadWords();
        java.lang.String[] strArray10 = python3Target5.targetCharValueEscape;
        python3Target0.targetCharValueEscape = strArray10;
        boolean boolean12 = python3Target0.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar13 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str15 = python3Target0.getTokenTypeAsTargetLabel(grammar13, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(codeGenerator4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 64 + "'", int6 == 64);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test06968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06968");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "", true);
        java.util.Set<java.lang.String> strSet7 = python3Target0.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = null;
        java.lang.String str11 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator8, "hi!", false);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str13 = python3Target0.getListLabel("\\1");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"" + "'", str6, "\"\"");
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "i" + "'", str11, "i");
    }

    @Test
    public void test06969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06969");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        boolean boolean2 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.gen;
        boolean boolean4 = python3Target0.wantsBaseVisitor();
        java.lang.String str5 = python3Target0.getLanguage();
        java.util.Set<java.lang.String> strSet6 = python3Target0.badWords;
        org.stringtemplate.v4.STGroup sTGroup7 = null;
        python3Target0.templates = sTGroup7;
        python3Target0.addBadWords();
        int int10 = python3Target0.getSerializedATNSegmentLimit();
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = null;
        python3Target0.gen = codeGenerator11;
        org.antlr.v4.tool.ast.GrammarAST grammarAST13 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str14 = python3Target0.getLoopCounter(grammarAST13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 29 + "'", int10 == 29);
    }

    @Test
    public void test06970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06970");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        java.lang.String str3 = python3Target0.getVersion();
        int int4 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str5 = python3Target0.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = python3Target0.gen;
        org.antlr.v4.tool.Grammar grammar7 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target8 = new org.antlr.v4.codegen.target.Python3Target();
        int int9 = python3Target8.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup10 = python3Target8.templates;
        org.antlr.v4.tool.Grammar grammar11 = null;
        int[] intArray12 = new int[] {};
        java.lang.String[] strArray13 = python3Target8.getTokenTypesAsTargetLabels(grammar11, intArray12);
        java.lang.String[] strArray14 = python3Target0.getTokenTypesAsTargetLabels(grammar7, intArray12);
        java.lang.String str15 = python3Target0.getLanguage();
        java.lang.String str16 = python3Target0.getLanguage();
        java.lang.String str18 = python3Target0.getTargetStringLiteralFromString("\"i\"");
        java.lang.String str20 = python3Target0.getTargetStringLiteralFromString("\"4.5.2.1\"");
        boolean boolean21 = python3Target0.supportsOverloadedMethods();
        java.lang.String str22 = python3Target0.getLanguage();
        org.antlr.v4.codegen.target.Python3Target python3Target23 = new org.antlr.v4.codegen.target.Python3Target();
        int int24 = python3Target23.getInlineTestSetWordSize();
        java.lang.String str25 = python3Target23.language;
        java.lang.String str26 = python3Target23.getVersion();
        int int27 = python3Target23.getInlineTestSetWordSize();
        java.lang.String str28 = python3Target23.getLanguage();
        java.lang.String str31 = python3Target23.getTargetStringLiteralFromString("4.5.2.1", true);
        boolean boolean32 = python3Target23.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet33 = python3Target23.badWords;
        python3Target0.badWords = strSet33;
        boolean boolean35 = python3Target0.templatesExist();
        java.lang.String str37 = python3Target0.getTargetStringLiteralFromString("\"\"\\\" \\\"\"\"");
        boolean boolean38 = python3Target0.wantsBaseVisitor();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "4.5.2.1" + "'", str3, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(codeGenerator6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 64 + "'", int9 == 64);
        org.junit.Assert.assertNull(sTGroup10);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[]");
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "\"\"i\"\"" + "'", str18, "\"\"i\"\"");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "\"\"4.5.2.1\"\"" + "'", str20, "\"\"4.5.2.1\"\"");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 64 + "'", int24 == 64);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "4.5.2.1" + "'", str26, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 64 + "'", int27 == 64);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "\"4.5.2.1\"" + "'", str31, "\"4.5.2.1\"");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strSet33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "\"\"\"\\\" \\\"\"\"\"" + "'", str37, "\"\"\"\\\" \\\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test06971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06971");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        boolean boolean2 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.gen;
        boolean boolean4 = python3Target0.wantsBaseVisitor();
        boolean boolean5 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.tool.Grammar grammar6 = null;
        org.stringtemplate.v4.ST sT7 = null;
        python3Target0.genRecognizerHeaderFile(grammar6, sT7, "");
        python3Target0.addBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = null;
        java.lang.String str14 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator11, "a", true);
        org.antlr.v4.tool.Grammar grammar15 = null;
        org.stringtemplate.v4.ST sT16 = null;
        python3Target0.genRecognizerHeaderFile(grammar15, sT16, "\"\"\"i\"\"\"");
        java.lang.String str19 = python3Target0.language;
        org.antlr.v4.codegen.target.Python3Target python3Target20 = new org.antlr.v4.codegen.target.Python3Target();
        int int21 = python3Target20.getInlineTestSetWordSize();
        boolean boolean22 = python3Target20.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator23 = python3Target20.gen;
        java.lang.String str24 = python3Target20.getVersion();
        java.lang.String[] strArray25 = python3Target20.targetCharValueEscape;
        boolean boolean26 = python3Target20.supportsOverloadedMethods();
        java.lang.String str28 = python3Target20.encodeIntAsCharEscape((int) '#');
        boolean boolean29 = python3Target20.wantsBaseListener();
        java.util.Set<java.lang.String> strSet30 = python3Target20.getBadWords();
        python3Target0.badWords = strSet30;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\"\"" + "'", str14, "\"\"");
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 64 + "'", int21 == 64);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(codeGenerator23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "4.5.2.1" + "'", str24, "4.5.2.1");
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "#" + "'", str28, "#");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strSet30);
    }

    @Test
    public void test06972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06972");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String[] strArray2 = python3Target1.targetCharValueEscape;
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        python3Target1.gen = codeGenerator3;
        boolean boolean5 = python3Target1.templatesExist();
        java.lang.String str6 = python3Target1.getVersion();
        org.antlr.v4.tool.ast.GrammarAST grammarAST7 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean8 = python3Target1.grammarSymbolCausesIssueInGeneratedCode(grammarAST7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "4.5.2.1" + "'", str6, "4.5.2.1");
    }

    @Test
    public void test06973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06973");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        java.lang.String str3 = python3Target0.getLanguage();
        java.lang.String str5 = python3Target0.getTargetStringLiteralFromString("");
        java.lang.String str6 = python3Target0.getVersion();
        java.lang.String str9 = python3Target0.getTargetStringLiteralFromString("\"hi!\"", false);
        boolean boolean10 = python3Target0.templatesExist();
        java.lang.String str12 = python3Target0.getTargetStringLiteralFromString("\"d\"");
        boolean boolean13 = python3Target0.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar14 = null;
        org.stringtemplate.v4.ST sT15 = null;
        python3Target0.genRecognizerHeaderFile(grammar14, sT15, "\"\\\"\\\"12\\\"\\\"\"");
        org.antlr.v4.tool.Grammar grammar18 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str20 = python3Target0.getTokenTypeAsTargetLabel(grammar18, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\"\"" + "'", str5, "\"\"");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "4.5.2.1" + "'", str6, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"hi!\"" + "'", str9, "\"hi!\"");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"\"d\"\"" + "'", str12, "\"\"d\"\"");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test06974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06974");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        java.lang.String str4 = python3Target0.encodeIntAsCharEscape((int) (byte) 1);
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = null;
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator5, "\"\"i\"\"", true);
        boolean boolean9 = python3Target0.wantsBaseVisitor();
        java.lang.String str10 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = null;
        python3Target0.gen = codeGenerator11;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\\1" + "'", str4, "\\1");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\\\"i\\\"\"" + "'", str8, "\"\\\"i\\\"\"");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "4.5.2.1" + "'", str10, "4.5.2.1");
    }

    @Test
    public void test06975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06975");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        java.lang.String str3 = python3Target0.getLanguage();
        java.lang.String str5 = python3Target0.getTargetStringLiteralFromString("");
        java.lang.String str6 = python3Target0.getVersion();
        java.lang.String str9 = python3Target0.getTargetStringLiteralFromString("\"hi!\"", false);
        org.stringtemplate.v4.STGroup sTGroup10 = null;
        python3Target0.templates = sTGroup10;
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target13 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator12);
        java.util.Set<java.lang.String> strSet14 = python3Target13.badWords;
        python3Target0.badWords = strSet14;
        org.antlr.v4.codegen.CodeGenerator codeGenerator16 = python3Target0.getCodeGenerator();
        int int17 = python3Target0.getSerializedATNSegmentLimit();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\"\"" + "'", str5, "\"\"");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "4.5.2.1" + "'", str6, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"hi!\"" + "'", str9, "\"hi!\"");
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertNull(codeGenerator16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 29 + "'", int17 == 29);
    }

    @Test
    public void test06976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06976");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        java.lang.String str3 = python3Target0.getLanguage();
        java.lang.String str5 = python3Target0.getTargetStringLiteralFromString("");
        java.lang.String str6 = python3Target0.getVersion();
        java.lang.String str9 = python3Target0.getTargetStringLiteralFromString("\"hi!\"", false);
        java.lang.String[] strArray10 = python3Target0.targetCharValueEscape;
        java.lang.String str11 = python3Target0.language;
        int int12 = python3Target0.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar13 = null;
        org.stringtemplate.v4.ST sT14 = null;
        python3Target0.genRecognizerHeaderFile(grammar13, sT14, "\"\"\"\"hi!\"\"\"\"");
        // The following exception was thrown during execution in test generation
        try {
            org.stringtemplate.v4.STGroup sTGroup17 = python3Target0.loadTemplates();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\"\"" + "'", str5, "\"\"");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "4.5.2.1" + "'", str6, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"hi!\"" + "'", str9, "\"hi!\"");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 29 + "'", int12 == 29);
    }

    @Test
    public void test06977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06977");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        java.lang.String str3 = python3Target0.getVersion();
        int int4 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str5 = python3Target0.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = python3Target0.gen;
        python3Target0.addBadWords();
        python3Target0.language = "\\0";
        boolean boolean10 = python3Target0.wantsBaseVisitor();
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = python3Target0.getCodeGenerator();
        java.lang.String str12 = python3Target0.language;
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = python3Target0.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup14 = python3Target0.templates;
        python3Target0.language = "\"\"\"\"\"hi!\"\"\"\"\"";
        org.antlr.v4.tool.ast.GrammarAST grammarAST17 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str18 = python3Target0.getLoopLabel(grammarAST17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "4.5.2.1" + "'", str3, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(codeGenerator6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(codeGenerator11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\\0" + "'", str12, "\\0");
        org.junit.Assert.assertNull(codeGenerator13);
        org.junit.Assert.assertNull(sTGroup14);
    }

    @Test
    public void test06978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06978");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        org.stringtemplate.v4.STGroup sTGroup1 = null;
        python3Target0.templates = sTGroup1;
        java.lang.String[] strArray6 = new java.lang.String[] { "", "\\0", "" };
        java.util.LinkedHashSet<java.lang.String> strSet7 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet7, strArray6);
        python3Target0.badWords = strSet7;
        java.util.Set<java.lang.String> strSet10 = python3Target0.badWords;
        java.lang.String str11 = python3Target0.language;
        boolean boolean12 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.tool.Grammar grammar13 = null;
        org.stringtemplate.v4.ST sT14 = null;
        python3Target0.genRecognizerHeaderFile(grammar13, sT14, "\"\"\\\"\\\"0\\\"\\\"\"\"");
        java.lang.String str19 = python3Target0.getTargetStringLiteralFromString("\"\"\\\"\\\" \\\"\\\"\"\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator20 = python3Target0.gen;
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "\"\"\\\"\\\" \\\"\\\"\"\"" + "'", str19, "\"\"\\\"\\\" \\\"\\\"\"\"");
        org.junit.Assert.assertNull(codeGenerator20);
    }

    @Test
    public void test06979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06979");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        org.stringtemplate.v4.STGroup sTGroup3 = python3Target0.templates;
        boolean boolean4 = python3Target0.templatesExist();
        python3Target0.addBadWords();
        java.util.Set<java.lang.String> strSet6 = python3Target0.badWords;
        java.lang.String str9 = python3Target0.getTargetStringLiteralFromString("\\\"\\\"\\\"4.5.2.1\\\"\\\"\\\"", false);
        org.antlr.v4.codegen.target.Python3Target python3Target10 = new org.antlr.v4.codegen.target.Python3Target();
        int int11 = python3Target10.getInlineTestSetWordSize();
        java.lang.String str12 = python3Target10.language;
        java.lang.String str13 = python3Target10.getVersion();
        int int14 = python3Target10.getInlineTestSetWordSize();
        java.lang.String str15 = python3Target10.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator16 = python3Target10.gen;
        python3Target10.addBadWords();
        java.util.Set<java.lang.String> strSet18 = python3Target10.getBadWords();
        java.util.Set<java.lang.String> strSet19 = python3Target10.getBadWords();
        python3Target0.badWords = strSet19;
        org.antlr.v4.codegen.CodeGenerator codeGenerator21 = null;
        python3Target0.gen = codeGenerator21;
        python3Target0.addBadWords();
        org.antlr.v4.tool.Grammar grammar24 = null;
        org.stringtemplate.v4.ST sT25 = null;
        // The following exception was thrown during execution in test generation
        try {
            python3Target0.genFile(grammar24, sT25, "5.2Context");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(sTGroup3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\\\"\\\"\\\"4.5.2.1\\\"\\\"\\\"" + "'", str9, "\\\"\\\"\\\"4.5.2.1\\\"\\\"\\\"");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 64 + "'", int11 == 64);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "4.5.2.1" + "'", str13, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 64 + "'", int14 == 64);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(codeGenerator16);
        org.junit.Assert.assertNotNull(strSet18);
        org.junit.Assert.assertNotNull(strSet19);
    }

    @Test
    public void test06980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06980");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        org.stringtemplate.v4.STGroup sTGroup3 = python3Target0.templates;
        boolean boolean4 = python3Target0.templatesExist();
        python3Target0.addBadWords();
        java.lang.String str6 = python3Target0.language;
        java.lang.String str7 = python3Target0.getVersion();
        org.antlr.v4.tool.ast.GrammarAST grammarAST8 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str9 = python3Target0.getLoopLabel(grammarAST8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(sTGroup3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4.5.2.1" + "'", str7, "4.5.2.1");
    }

    @Test
    public void test06981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06981");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        java.lang.String str3 = python3Target0.getLanguage();
        java.lang.String str5 = python3Target0.getTargetStringLiteralFromString("");
        java.lang.String str6 = python3Target0.getVersion();
        org.antlr.v4.codegen.target.Python3Target python3Target7 = new org.antlr.v4.codegen.target.Python3Target();
        int int8 = python3Target7.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup9 = python3Target7.templates;
        org.antlr.v4.tool.Grammar grammar10 = null;
        int[] intArray11 = new int[] {};
        java.lang.String[] strArray12 = python3Target7.getTokenTypesAsTargetLabels(grammar10, intArray11);
        python3Target0.targetCharValueEscape = strArray12;
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = null;
        java.lang.String str17 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator14, "\"\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator18 = python3Target0.getCodeGenerator();
        java.lang.String str19 = python3Target0.getLanguage();
        boolean boolean20 = python3Target0.wantsBaseVisitor();
        java.lang.String str22 = python3Target0.encodeIntAsCharEscape((int) (byte) 1);
        org.antlr.v4.codegen.CodeGenerator codeGenerator23 = python3Target0.gen;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\"\"" + "'", str5, "\"\"");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "4.5.2.1" + "'", str6, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 64 + "'", int8 == 64);
        org.junit.Assert.assertNull(sTGroup9);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[]");
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNull(codeGenerator18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "\\1" + "'", str22, "\\1");
        org.junit.Assert.assertNull(codeGenerator23);
    }

    @Test
    public void test06982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06982");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        boolean boolean2 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.gen;
        boolean boolean4 = python3Target0.wantsBaseVisitor();
        boolean boolean5 = python3Target0.supportsOverloadedMethods();
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromString("\\0", false);
        boolean boolean9 = python3Target0.wantsBaseListener();
        python3Target0.addBadWords();
        int int11 = python3Target0.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar12 = null;
        org.stringtemplate.v4.ST sT13 = null;
        python3Target0.genRecognizerHeaderFile(grammar12, sT13, "\\\"i\\\"");
        org.stringtemplate.v4.STGroup sTGroup16 = python3Target0.templates;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str18 = python3Target0.getImplicitRuleLabel("\"\"\"\"\"\"\"\"\"\"4.5.2.1\"\"\"\"\"\"\"\"\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\\0" + "'", str8, "\\0");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 29 + "'", int11 == 29);
        org.junit.Assert.assertNull(sTGroup16);
    }

    @Test
    public void test06983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06983");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!", "" };
        python3Target0.targetCharValueEscape = strArray4;
        java.lang.String[] strArray6 = python3Target0.targetCharValueEscape;
        python3Target0.addBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target0.gen;
        java.lang.String str9 = python3Target0.getVersion();
        python3Target0.language = "\"\"\"\"\"\\12\"\"\"\"\"";
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "4.5.2.1" + "'", str9, "4.5.2.1");
    }

    @Test
    public void test06984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06984");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        java.lang.String str3 = python3Target0.getVersion();
        int int4 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str5 = python3Target0.getLanguage();
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromString("4.5.2.1", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = null;
        python3Target0.gen = codeGenerator9;
        org.antlr.v4.tool.Grammar grammar11 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target12 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str13 = python3Target12.language;
        org.antlr.v4.codegen.target.Python3Target python3Target14 = new org.antlr.v4.codegen.target.Python3Target();
        org.stringtemplate.v4.STGroup sTGroup15 = null;
        python3Target14.templates = sTGroup15;
        java.lang.String[] strArray20 = new java.lang.String[] { "", "\\0", "" };
        java.util.LinkedHashSet<java.lang.String> strSet21 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet21, strArray20);
        python3Target14.badWords = strSet21;
        python3Target12.badWords = strSet21;
        org.antlr.v4.tool.Grammar grammar25 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target26 = new org.antlr.v4.codegen.target.Python3Target();
        int int27 = python3Target26.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup28 = python3Target26.templates;
        org.antlr.v4.tool.Grammar grammar29 = null;
        int[] intArray30 = new int[] {};
        java.lang.String[] strArray31 = python3Target26.getTokenTypesAsTargetLabels(grammar29, intArray30);
        java.lang.String[] strArray32 = python3Target12.getTokenTypesAsTargetLabels(grammar25, intArray30);
        java.lang.String[] strArray33 = python3Target0.getTokenTypesAsTargetLabels(grammar11, intArray30);
        java.util.Set<java.lang.String> strSet34 = python3Target0.badWords;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str36 = python3Target0.getImplicitTokenLabel("0");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "4.5.2.1" + "'", str3, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"4.5.2.1\"" + "'", str8, "\"4.5.2.1\"");
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 64 + "'", int27 == 64);
        org.junit.Assert.assertNull(sTGroup28);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[]");
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(strSet34);
    }

    @Test
    public void test06985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06985");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        java.lang.String str3 = python3Target0.getVersion();
        int int4 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str5 = python3Target0.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = python3Target0.gen;
        org.antlr.v4.tool.Grammar grammar7 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target8 = new org.antlr.v4.codegen.target.Python3Target();
        int int9 = python3Target8.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup10 = python3Target8.templates;
        org.antlr.v4.tool.Grammar grammar11 = null;
        int[] intArray12 = new int[] {};
        java.lang.String[] strArray13 = python3Target8.getTokenTypesAsTargetLabels(grammar11, intArray12);
        java.lang.String[] strArray14 = python3Target0.getTokenTypesAsTargetLabels(grammar7, intArray12);
        java.lang.String str15 = python3Target0.getLanguage();
        java.lang.String str16 = python3Target0.getLanguage();
        java.lang.String str18 = python3Target0.getTargetStringLiteralFromString("\"i\"");
        java.lang.String str20 = python3Target0.getTargetStringLiteralFromString("\"4.5.2.1\"");
        int int21 = python3Target0.getSerializedATNSegmentLimit();
        org.antlr.v4.codegen.target.Python3Target python3Target22 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str24 = python3Target22.getTargetStringLiteralFromString("\"\"");
        int int25 = python3Target22.getInlineTestSetWordSize();
        boolean boolean26 = python3Target22.supportsOverloadedMethods();
        java.lang.String str28 = python3Target22.getTargetStringLiteralFromString("\"i\"");
        python3Target22.addBadWords();
        org.antlr.v4.codegen.target.Python3Target python3Target30 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str31 = python3Target30.language;
        java.lang.String[] strArray32 = python3Target30.targetCharValueEscape;
        python3Target22.targetCharValueEscape = strArray32;
        org.stringtemplate.v4.STGroup sTGroup34 = null;
        python3Target22.templates = sTGroup34;
        org.antlr.v4.codegen.target.Python3Target python3Target36 = new org.antlr.v4.codegen.target.Python3Target();
        int int37 = python3Target36.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup38 = python3Target36.templates;
        org.antlr.v4.codegen.target.Python3Target python3Target39 = new org.antlr.v4.codegen.target.Python3Target();
        int int40 = python3Target39.getInlineTestSetWordSize();
        java.lang.String[] strArray43 = new java.lang.String[] { "hi!", "" };
        python3Target39.targetCharValueEscape = strArray43;
        python3Target36.targetCharValueEscape = strArray43;
        python3Target22.targetCharValueEscape = strArray43;
        python3Target0.targetCharValueEscape = strArray43;
        python3Target0.language = "3";
        org.stringtemplate.v4.STGroup sTGroup50 = null;
        python3Target0.templates = sTGroup50;
        java.lang.String str52 = python3Target0.language;
        java.lang.String str54 = python3Target0.encodeIntAsCharEscape(29);
        org.stringtemplate.v4.STGroup sTGroup55 = python3Target0.templates;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "4.5.2.1" + "'", str3, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(codeGenerator6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 64 + "'", int9 == 64);
        org.junit.Assert.assertNull(sTGroup10);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[]");
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "\"\"i\"\"" + "'", str18, "\"\"i\"\"");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "\"\"4.5.2.1\"\"" + "'", str20, "\"\"4.5.2.1\"\"");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 29 + "'", int21 == 29);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "\"\"\"\"" + "'", str24, "\"\"\"\"");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 64 + "'", int25 == 64);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "\"\"i\"\"" + "'", str28, "\"\"i\"\"");
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 64 + "'", int37 == 64);
        org.junit.Assert.assertNull(sTGroup38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 64 + "'", int40 == 64);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "3" + "'", str52, "3");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "\\35" + "'", str54, "\\35");
        org.junit.Assert.assertNull(sTGroup55);
    }

    @Test
    public void test06986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06986");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.wantsBaseVisitor();
        org.antlr.v4.codegen.CodeGenerator codeGenerator2 = null;
        python3Target0.gen = codeGenerator2;
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = python3Target0.gen;
        org.antlr.v4.codegen.target.Python3Target python3Target5 = new org.antlr.v4.codegen.target.Python3Target();
        int int6 = python3Target5.getInlineTestSetWordSize();
        java.lang.String str7 = python3Target5.language;
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target5.getCodeGenerator();
        java.util.Set<java.lang.String> strSet9 = python3Target5.getBadWords();
        java.lang.String[] strArray10 = python3Target5.targetCharValueEscape;
        python3Target0.targetCharValueEscape = strArray10;
        org.stringtemplate.v4.STGroup sTGroup12 = python3Target0.templates;
        python3Target0.language = "\"12\"";
        org.antlr.v4.tool.Grammar grammar15 = null;
        org.stringtemplate.v4.ST sT16 = null;
        python3Target0.genRecognizerHeaderFile(grammar15, sT16, "\"\"64\"\"");
        org.antlr.v4.codegen.target.Python3Target python3Target19 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str21 = python3Target19.getTargetStringLiteralFromString("\"\"");
        int int22 = python3Target19.getInlineTestSetWordSize();
        java.lang.String str24 = python3Target19.encodeIntAsCharEscape(0);
        java.util.Set<java.lang.String> strSet25 = python3Target19.badWords;
        java.lang.String str27 = python3Target19.getTargetStringLiteralFromString("\"\"\"\\0\"\"\"");
        java.lang.String str28 = python3Target19.getVersion();
        org.antlr.v4.codegen.target.Python3Target python3Target29 = new org.antlr.v4.codegen.target.Python3Target();
        int int30 = python3Target29.getInlineTestSetWordSize();
        java.lang.String str31 = python3Target29.language;
        java.lang.String str32 = python3Target29.getVersion();
        int int33 = python3Target29.getInlineTestSetWordSize();
        java.lang.String str34 = python3Target29.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator35 = python3Target29.gen;
        org.antlr.v4.tool.Grammar grammar36 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target37 = new org.antlr.v4.codegen.target.Python3Target();
        int int38 = python3Target37.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup39 = python3Target37.templates;
        org.antlr.v4.tool.Grammar grammar40 = null;
        int[] intArray41 = new int[] {};
        java.lang.String[] strArray42 = python3Target37.getTokenTypesAsTargetLabels(grammar40, intArray41);
        java.lang.String[] strArray43 = python3Target29.getTokenTypesAsTargetLabels(grammar36, intArray41);
        java.lang.String str44 = python3Target29.getLanguage();
        java.lang.String str45 = python3Target29.getLanguage();
        java.lang.String str47 = python3Target29.getTargetStringLiteralFromString("\"i\"");
        org.antlr.v4.tool.Grammar grammar48 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target49 = new org.antlr.v4.codegen.target.Python3Target();
        int int50 = python3Target49.getInlineTestSetWordSize();
        java.lang.String[] strArray53 = new java.lang.String[] { "hi!", "" };
        python3Target49.targetCharValueEscape = strArray53;
        java.util.Set<java.lang.String> strSet55 = python3Target49.badWords;
        org.stringtemplate.v4.STGroup sTGroup56 = python3Target49.templates;
        org.antlr.v4.tool.Grammar grammar57 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target58 = new org.antlr.v4.codegen.target.Python3Target();
        int int59 = python3Target58.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup60 = python3Target58.templates;
        org.antlr.v4.tool.Grammar grammar61 = null;
        int[] intArray62 = new int[] {};
        java.lang.String[] strArray63 = python3Target58.getTokenTypesAsTargetLabels(grammar61, intArray62);
        java.lang.String[] strArray64 = python3Target49.getTokenTypesAsTargetLabels(grammar57, intArray62);
        java.lang.String[] strArray65 = python3Target29.getTokenTypesAsTargetLabels(grammar48, intArray62);
        int int66 = python3Target29.getSerializedATNSegmentLimit();
        org.antlr.v4.codegen.CodeGenerator codeGenerator67 = python3Target29.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup68 = null;
        python3Target29.templates = sTGroup68;
        org.antlr.v4.codegen.target.Python3Target python3Target70 = new org.antlr.v4.codegen.target.Python3Target();
        int int71 = python3Target70.getInlineTestSetWordSize();
        java.lang.String str72 = python3Target70.language;
        org.stringtemplate.v4.STGroup sTGroup73 = python3Target70.templates;
        boolean boolean74 = python3Target70.templatesExist();
        org.antlr.v4.codegen.CodeGenerator codeGenerator75 = null;
        java.lang.String str78 = python3Target70.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator75, "", false);
        int int79 = python3Target70.getInlineTestSetWordSize();
        org.antlr.v4.codegen.target.Python3Target python3Target80 = new org.antlr.v4.codegen.target.Python3Target();
        int int81 = python3Target80.getInlineTestSetWordSize();
        java.lang.String str82 = python3Target80.language;
        java.lang.String str83 = python3Target80.getVersion();
        int int84 = python3Target80.getInlineTestSetWordSize();
        java.lang.String str85 = python3Target80.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator86 = python3Target80.gen;
        python3Target80.addBadWords();
        python3Target80.language = "\\0";
        boolean boolean90 = python3Target80.wantsBaseVisitor();
        org.antlr.v4.codegen.CodeGenerator codeGenerator91 = python3Target80.getCodeGenerator();
        java.util.Set<java.lang.String> strSet92 = python3Target80.badWords;
        python3Target70.badWords = strSet92;
        python3Target29.badWords = strSet92;
        python3Target19.badWords = strSet92;
        python3Target0.badWords = strSet92;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(codeGenerator4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 64 + "'", int6 == 64);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNull(sTGroup12);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "\"\"\"\"" + "'", str21, "\"\"\"\"");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 64 + "'", int22 == 64);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "\\0" + "'", str24, "\\0");
        org.junit.Assert.assertNotNull(strSet25);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "\"\"\"\"\\0\"\"\"\"" + "'", str27, "\"\"\"\"\\0\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "4.5.2.1" + "'", str28, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 64 + "'", int30 == 64);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "4.5.2.1" + "'", str32, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 64 + "'", int33 == 64);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNull(codeGenerator35);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 64 + "'", int38 == 64);
        org.junit.Assert.assertNull(sTGroup39);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[]");
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "\"\"i\"\"" + "'", str47, "\"\"i\"\"");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 64 + "'", int50 == 64);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertNotNull(strSet55);
        org.junit.Assert.assertNull(sTGroup56);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 64 + "'", int59 == 64);
        org.junit.Assert.assertNull(sTGroup60);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[]");
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 29 + "'", int66 == 29);
        org.junit.Assert.assertNull(codeGenerator67);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 64 + "'", int71 == 64);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertNull(sTGroup73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "" + "'", str78, "");
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 64 + "'", int79 == 64);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 64 + "'", int81 == 64);
        org.junit.Assert.assertNull(str82);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "4.5.2.1" + "'", str83, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 64 + "'", int84 == 64);
        org.junit.Assert.assertNull(str85);
        org.junit.Assert.assertNull(codeGenerator86);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNull(codeGenerator91);
        org.junit.Assert.assertNotNull(strSet92);
    }

    @Test
    public void test06987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06987");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        boolean boolean2 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.gen;
        int int4 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromString("i");
        python3Target0.language = "hi!";
        org.antlr.v4.codegen.target.Python3Target python3Target9 = new org.antlr.v4.codegen.target.Python3Target();
        int int10 = python3Target9.getInlineTestSetWordSize();
        boolean boolean11 = python3Target9.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = python3Target9.gen;
        boolean boolean13 = python3Target9.wantsBaseVisitor();
        java.lang.String str14 = python3Target9.language;
        java.lang.String str17 = python3Target9.getTargetStringLiteralFromString("\\0", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator18 = python3Target9.gen;
        org.antlr.v4.codegen.CodeGenerator codeGenerator19 = null;
        java.lang.String str22 = python3Target9.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator19, "\"\\\"\\\"4.5.2.1\\\"\\\"\"", true);
        python3Target9.addBadWords();
        java.util.Set<java.lang.String> strSet24 = python3Target9.badWords;
        java.lang.String str25 = python3Target9.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator26 = null;
        java.lang.String str29 = python3Target9.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator26, "\"\"\"\"\"\\0\"\"\"\"\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator30 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target31 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator30);
        java.util.Set<java.lang.String> strSet32 = python3Target31.badWords;
        java.lang.String str33 = python3Target31.getLanguage();
        java.lang.String str35 = python3Target31.getImplicitRuleLabel("\\\"1\\\"");
        org.stringtemplate.v4.STGroup sTGroup36 = python3Target31.loadTemplates();
        python3Target9.templates = sTGroup36;
        python3Target0.templates = sTGroup36;
        org.antlr.v4.codegen.CodeGenerator codeGenerator39 = null;
        java.lang.String str42 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator39, "\"\"\"\"\\12\"\"\"\"", true);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str44 = python3Target0.getElementListName("");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"i\"" + "'", str6, "\"i\"");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 64 + "'", int10 == 64);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(codeGenerator12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\\0" + "'", str17, "\\0");
        org.junit.Assert.assertNull(codeGenerator18);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "\"\\\"\\\"4.5.2.1\\\"\\\"\"" + "'", str22, "\"\\\"\\\"4.5.2.1\\\"\\\"\"");
        org.junit.Assert.assertNotNull(strSet24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "\\\"\\\"\\\"\\\"0\\\"\\\"\\\"\\\"" + "'", str29, "\\\"\\\"\\\"\\\"0\\\"\\\"\\\"\\\"");
        org.junit.Assert.assertNotNull(strSet32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Python3" + "'", str33, "Python3");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "_\\\"1\\\"" + "'", str35, "_\\\"1\\\"");
        org.junit.Assert.assertNotNull(sTGroup36);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "\"\\\"\\\"\\\"12\\\"\\\"\\\"\"" + "'", str42, "\"\\\"\\\"\\\"12\\\"\\\"\\\"\"");
    }

    @Test
    public void test06988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06988");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        boolean boolean2 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.gen;
        boolean boolean4 = python3Target0.supportsOverloadedMethods();
        boolean boolean5 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        java.lang.String str9 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator6, "\"\"hi!\"\"", true);
        int int10 = python3Target0.getInlineTestSetWordSize();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str9, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 64 + "'", int10 == 64);
    }

    @Test
    public void test06989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06989");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        org.stringtemplate.v4.STGroup sTGroup1 = null;
        python3Target0.templates = sTGroup1;
        java.util.Set<java.lang.String> strSet3 = null;
        python3Target0.badWords = strSet3;
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = python3Target0.getCodeGenerator();
        python3Target0.language = "\"\\\"hi!\\\"\"";
        org.stringtemplate.v4.STGroup sTGroup8 = null;
        python3Target0.templates = sTGroup8;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str11 = python3Target0.getImplicitRuleLabel("\\\"\\\"\\\"\\\"\\\"64\\\"\\\"\\\"\\\"\\\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(codeGenerator5);
    }

    @Test
    public void test06990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06990");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        java.lang.String str3 = python3Target0.getVersion();
        int int4 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str5 = python3Target0.getLanguage();
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromString("hi!", false);
        org.antlr.v4.tool.Grammar grammar9 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target10 = new org.antlr.v4.codegen.target.Python3Target();
        int int11 = python3Target10.getInlineTestSetWordSize();
        java.lang.String str12 = python3Target10.language;
        java.lang.String str13 = python3Target10.getVersion();
        int int14 = python3Target10.getInlineTestSetWordSize();
        java.lang.String str15 = python3Target10.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator16 = python3Target10.gen;
        org.antlr.v4.tool.Grammar grammar17 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target18 = new org.antlr.v4.codegen.target.Python3Target();
        int int19 = python3Target18.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup20 = python3Target18.templates;
        org.antlr.v4.tool.Grammar grammar21 = null;
        int[] intArray22 = new int[] {};
        java.lang.String[] strArray23 = python3Target18.getTokenTypesAsTargetLabels(grammar21, intArray22);
        java.lang.String[] strArray24 = python3Target10.getTokenTypesAsTargetLabels(grammar17, intArray22);
        java.lang.String str25 = python3Target10.getLanguage();
        java.lang.String str26 = python3Target10.getLanguage();
        java.lang.String str28 = python3Target10.getTargetStringLiteralFromString("\"i\"");
        org.antlr.v4.tool.Grammar grammar29 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target30 = new org.antlr.v4.codegen.target.Python3Target();
        int int31 = python3Target30.getInlineTestSetWordSize();
        java.lang.String[] strArray34 = new java.lang.String[] { "hi!", "" };
        python3Target30.targetCharValueEscape = strArray34;
        java.util.Set<java.lang.String> strSet36 = python3Target30.badWords;
        org.stringtemplate.v4.STGroup sTGroup37 = python3Target30.templates;
        org.antlr.v4.tool.Grammar grammar38 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target39 = new org.antlr.v4.codegen.target.Python3Target();
        int int40 = python3Target39.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup41 = python3Target39.templates;
        org.antlr.v4.tool.Grammar grammar42 = null;
        int[] intArray43 = new int[] {};
        java.lang.String[] strArray44 = python3Target39.getTokenTypesAsTargetLabels(grammar42, intArray43);
        java.lang.String[] strArray45 = python3Target30.getTokenTypesAsTargetLabels(grammar38, intArray43);
        java.lang.String[] strArray46 = python3Target10.getTokenTypesAsTargetLabels(grammar29, intArray43);
        java.lang.String[] strArray47 = python3Target0.getTokenTypesAsTargetLabels(grammar9, intArray43);
        org.stringtemplate.v4.STGroup sTGroup48 = python3Target0.templates;
        java.lang.String str49 = python3Target0.language;
        org.antlr.v4.codegen.CodeGenerator codeGenerator50 = python3Target0.gen;
        boolean boolean51 = python3Target0.wantsBaseVisitor();
        java.util.Set<java.lang.String> strSet52 = python3Target0.getBadWords();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "4.5.2.1" + "'", str3, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 64 + "'", int11 == 64);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "4.5.2.1" + "'", str13, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 64 + "'", int14 == 64);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(codeGenerator16);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 64 + "'", int19 == 64);
        org.junit.Assert.assertNull(sTGroup20);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[]");
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "\"\"i\"\"" + "'", str28, "\"\"i\"\"");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 64 + "'", int31 == 64);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(strSet36);
        org.junit.Assert.assertNull(sTGroup37);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 64 + "'", int40 == 64);
        org.junit.Assert.assertNull(sTGroup41);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[]");
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNull(sTGroup48);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNull(codeGenerator50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(strSet52);
    }

    @Test
    public void test06991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06991");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        org.antlr.v4.codegen.target.Python3Target python3Target2 = new org.antlr.v4.codegen.target.Python3Target();
        int int3 = python3Target2.getInlineTestSetWordSize();
        java.lang.String str4 = python3Target2.language;
        org.stringtemplate.v4.STGroup sTGroup5 = python3Target2.templates;
        java.lang.String str7 = python3Target2.getTargetStringLiteralFromString("\"hi!\"");
        java.lang.String str9 = python3Target2.getTargetStringLiteralFromString("");
        org.antlr.v4.codegen.target.Python3Target python3Target10 = new org.antlr.v4.codegen.target.Python3Target();
        int int11 = python3Target10.getInlineTestSetWordSize();
        java.lang.String str12 = python3Target10.language;
        java.lang.String str13 = python3Target10.getLanguage();
        java.lang.String str15 = python3Target10.getTargetStringLiteralFromString("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator16 = null;
        java.lang.String str19 = python3Target10.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator16, "hi!", true);
        int int20 = python3Target10.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar21 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target22 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str23 = python3Target22.language;
        org.antlr.v4.codegen.target.Python3Target python3Target24 = new org.antlr.v4.codegen.target.Python3Target();
        org.stringtemplate.v4.STGroup sTGroup25 = null;
        python3Target24.templates = sTGroup25;
        java.lang.String[] strArray30 = new java.lang.String[] { "", "\\0", "" };
        java.util.LinkedHashSet<java.lang.String> strSet31 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet31, strArray30);
        python3Target24.badWords = strSet31;
        python3Target22.badWords = strSet31;
        org.antlr.v4.tool.Grammar grammar35 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target36 = new org.antlr.v4.codegen.target.Python3Target();
        int int37 = python3Target36.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup38 = python3Target36.templates;
        org.antlr.v4.tool.Grammar grammar39 = null;
        int[] intArray40 = new int[] {};
        java.lang.String[] strArray41 = python3Target36.getTokenTypesAsTargetLabels(grammar39, intArray40);
        java.lang.String[] strArray42 = python3Target22.getTokenTypesAsTargetLabels(grammar35, intArray40);
        java.lang.String[] strArray43 = python3Target10.getTokenTypesAsTargetLabels(grammar21, intArray40);
        java.util.Set<java.lang.String> strSet44 = python3Target10.badWords;
        python3Target2.badWords = strSet44;
        python3Target1.badWords = strSet44;
        org.antlr.v4.codegen.CodeGenerator codeGenerator47 = python3Target1.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator48 = python3Target1.gen;
        int int49 = python3Target1.getSerializedATNSegmentLimit();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 64 + "'", int3 == 64);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(sTGroup5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"\"hi!\"\"" + "'", str7, "\"\"hi!\"\"");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\"" + "'", str9, "\"\"");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 64 + "'", int11 == 64);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\"\"" + "'", str15, "\"\"");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "\"i\"" + "'", str19, "\"i\"");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 29 + "'", int20 == 29);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 64 + "'", int37 == 64);
        org.junit.Assert.assertNull(sTGroup38);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[]");
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(strSet44);
        org.junit.Assert.assertNull(codeGenerator47);
        org.junit.Assert.assertNull(codeGenerator48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 29 + "'", int49 == 29);
    }

    @Test
    public void test06992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06992");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        org.antlr.v4.codegen.CodeGenerator codeGenerator1 = null;
        python3Target0.gen = codeGenerator1;
        org.antlr.v4.codegen.target.Python3Target python3Target3 = new org.antlr.v4.codegen.target.Python3Target();
        int int4 = python3Target3.getInlineTestSetWordSize();
        java.lang.String str5 = python3Target3.language;
        java.lang.String str6 = python3Target3.getLanguage();
        java.lang.String str8 = python3Target3.getTargetStringLiteralFromString("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = null;
        java.lang.String str12 = python3Target3.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator9, "hi!", true);
        int int13 = python3Target3.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar14 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target15 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str16 = python3Target15.language;
        org.antlr.v4.codegen.target.Python3Target python3Target17 = new org.antlr.v4.codegen.target.Python3Target();
        org.stringtemplate.v4.STGroup sTGroup18 = null;
        python3Target17.templates = sTGroup18;
        java.lang.String[] strArray23 = new java.lang.String[] { "", "\\0", "" };
        java.util.LinkedHashSet<java.lang.String> strSet24 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet24, strArray23);
        python3Target17.badWords = strSet24;
        python3Target15.badWords = strSet24;
        org.antlr.v4.tool.Grammar grammar28 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target29 = new org.antlr.v4.codegen.target.Python3Target();
        int int30 = python3Target29.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup31 = python3Target29.templates;
        org.antlr.v4.tool.Grammar grammar32 = null;
        int[] intArray33 = new int[] {};
        java.lang.String[] strArray34 = python3Target29.getTokenTypesAsTargetLabels(grammar32, intArray33);
        java.lang.String[] strArray35 = python3Target15.getTokenTypesAsTargetLabels(grammar28, intArray33);
        java.lang.String[] strArray36 = python3Target3.getTokenTypesAsTargetLabels(grammar14, intArray33);
        python3Target0.targetCharValueEscape = strArray36;
        python3Target0.language = "\"\\\"i\\\"\"";
        python3Target0.addBadWords();
        org.antlr.v4.tool.Grammar grammar41 = null;
        org.stringtemplate.v4.ST sT42 = null;
        python3Target0.genRecognizerHeaderFile(grammar41, sT42, "\"\\\"12\\\"\"");
        java.lang.String str45 = python3Target0.getLanguage();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\"" + "'", str8, "\"\"");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"i\"" + "'", str12, "\"i\"");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 29 + "'", int13 == 29);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 64 + "'", int30 == 64);
        org.junit.Assert.assertNull(sTGroup31);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]");
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "\"\\\"i\\\"\"" + "'", str45, "\"\\\"i\\\"\"");
    }

    @Test
    public void test06993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06993");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str2 = python3Target0.getTargetStringLiteralFromString("\"\"");
        int int3 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str5 = python3Target0.encodeIntAsCharEscape(0);
        java.lang.String str7 = python3Target0.getTargetStringLiteralFromString("");
        int int8 = python3Target0.getInlineTestSetWordSize();
        python3Target0.language = "\"\"\"\"\"\"";
        org.antlr.v4.tool.Grammar grammar11 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target12 = new org.antlr.v4.codegen.target.Python3Target();
        int int13 = python3Target12.getInlineTestSetWordSize();
        java.lang.String str14 = python3Target12.language;
        org.antlr.v4.codegen.CodeGenerator codeGenerator15 = python3Target12.getCodeGenerator();
        java.util.Set<java.lang.String> strSet16 = python3Target12.getBadWords();
        org.antlr.v4.codegen.target.Python3Target python3Target17 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray19 = new java.lang.String[] { "" };
        java.util.LinkedHashSet<java.lang.String> strSet20 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet20, strArray19);
        python3Target17.badWords = strSet20;
        python3Target12.badWords = strSet20;
        org.antlr.v4.tool.Grammar grammar24 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target25 = new org.antlr.v4.codegen.target.Python3Target();
        int int26 = python3Target25.getInlineTestSetWordSize();
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!", "" };
        python3Target25.targetCharValueEscape = strArray29;
        org.antlr.v4.codegen.CodeGenerator codeGenerator31 = null;
        java.lang.String str34 = python3Target25.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator31, "\"\"", false);
        int int35 = python3Target25.getSerializedATNSegmentLimit();
        org.antlr.v4.codegen.CodeGenerator codeGenerator36 = python3Target25.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator37 = python3Target25.getCodeGenerator();
        boolean boolean38 = python3Target25.templatesExist();
        org.antlr.v4.tool.Grammar grammar39 = null;
        int[] intArray40 = new int[] {};
        java.lang.String[] strArray41 = python3Target25.getTokenTypesAsTargetLabels(grammar39, intArray40);
        java.lang.String[] strArray42 = python3Target12.getTokenTypesAsTargetLabels(grammar24, intArray40);
        java.lang.String[] strArray43 = python3Target0.getTokenTypesAsTargetLabels(grammar11, intArray40);
        org.antlr.v4.tool.Grammar grammar44 = null;
        org.stringtemplate.v4.ST sT45 = null;
        python3Target0.genRecognizerHeaderFile(grammar44, sT45, "\"0\"");
        // The following exception was thrown during execution in test generation
        try {
            org.stringtemplate.v4.STGroup sTGroup48 = python3Target0.getTemplates();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "\"\"\"\"" + "'", str2, "\"\"\"\"");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 64 + "'", int3 == 64);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\\0" + "'", str5, "\\0");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"\"" + "'", str7, "\"\"");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 64 + "'", int8 == 64);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 64 + "'", int13 == 64);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(codeGenerator15);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 64 + "'", int26 == 64);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 29 + "'", int35 == 29);
        org.junit.Assert.assertNull(codeGenerator36);
        org.junit.Assert.assertNull(codeGenerator37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[]");
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(strArray43);
    }

    @Test
    public void test06994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06994");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        boolean boolean2 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.gen;
        boolean boolean4 = python3Target0.wantsBaseVisitor();
        java.lang.String str5 = python3Target0.language;
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromString("\\0", false);
        int int9 = python3Target0.getSerializedATNSegmentLimit();
        boolean boolean10 = python3Target0.wantsBaseListener();
        org.antlr.v4.codegen.target.Python3Target python3Target11 = new org.antlr.v4.codegen.target.Python3Target();
        org.stringtemplate.v4.STGroup sTGroup12 = null;
        python3Target11.templates = sTGroup12;
        java.util.Set<java.lang.String> strSet14 = null;
        python3Target11.badWords = strSet14;
        boolean boolean16 = python3Target11.wantsBaseListener();
        java.lang.String[] strArray17 = python3Target11.targetCharValueEscape;
        java.lang.String str19 = python3Target11.getTargetStringLiteralFromString("\"\\\"hi!\\\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator20 = python3Target11.getCodeGenerator();
        java.lang.String[] strArray21 = python3Target11.targetCharValueEscape;
        python3Target0.targetCharValueEscape = strArray21;
        java.lang.String str23 = python3Target0.getVersion();
        java.util.Set<java.lang.String> strSet24 = python3Target0.getBadWords();
        int int25 = python3Target0.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator26 = null;
        java.lang.String str29 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator26, "\\\"\\\"\\\".5.2.\\\"\\\"\\\"", false);
        // The following exception was thrown during execution in test generation
        try {
            org.stringtemplate.v4.STGroup sTGroup30 = python3Target0.getTemplates();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\\0" + "'", str8, "\\0");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 29 + "'", int9 == 29);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "\"\"\\\"hi!\\\"\"\"" + "'", str19, "\"\"\\\"hi!\\\"\"\"");
        org.junit.Assert.assertNull(codeGenerator20);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "4.5.2.1" + "'", str23, "4.5.2.1");
        org.junit.Assert.assertNotNull(strSet24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 64 + "'", int25 == 64);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "\\\"\\\"\\\".5.2.\\\"\\\"\\\"" + "'", str29, "\\\"\\\"\\\".5.2.\\\"\\\"\\\"");
    }

    @Test
    public void test06995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06995");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        boolean boolean2 = python3Target0.wantsBaseVisitor();
        java.lang.String str3 = python3Target0.getLanguage();
        int int4 = python3Target0.getInlineTestSetWordSize();
        java.lang.String[] strArray5 = python3Target0.targetCharValueEscape;
        int int6 = python3Target0.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup7 = null;
        python3Target0.templates = sTGroup7;
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = null;
        python3Target0.gen = codeGenerator9;
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = null;
        python3Target0.gen = codeGenerator11;
        int int13 = python3Target0.getSerializedATNSegmentLimit();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str15 = python3Target0.getImplicitRuleLabel("\\\"\\\"\\\" \\\"\\\"\\\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 64 + "'", int6 == 64);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 29 + "'", int13 == 29);
    }

    @Test
    public void test06996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06996");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.gen;
        org.antlr.v4.codegen.target.Python3Target python3Target4 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str5 = python3Target4.language;
        org.antlr.v4.codegen.target.Python3Target python3Target6 = new org.antlr.v4.codegen.target.Python3Target();
        org.stringtemplate.v4.STGroup sTGroup7 = null;
        python3Target6.templates = sTGroup7;
        java.lang.String[] strArray12 = new java.lang.String[] { "", "\\0", "" };
        java.util.LinkedHashSet<java.lang.String> strSet13 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet13, strArray12);
        python3Target6.badWords = strSet13;
        python3Target4.badWords = strSet13;
        org.stringtemplate.v4.STGroup sTGroup17 = python3Target4.templates;
        org.antlr.v4.codegen.target.Python3Target python3Target18 = new org.antlr.v4.codegen.target.Python3Target();
        int int19 = python3Target18.getInlineTestSetWordSize();
        boolean boolean20 = python3Target18.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator21 = python3Target18.gen;
        boolean boolean22 = python3Target18.supportsOverloadedMethods();
        java.lang.String[] strArray23 = python3Target18.targetCharValueEscape;
        python3Target4.targetCharValueEscape = strArray23;
        org.antlr.v4.codegen.CodeGenerator codeGenerator25 = null;
        python3Target4.gen = codeGenerator25;
        java.lang.String[] strArray27 = python3Target4.targetCharValueEscape;
        python3Target0.targetCharValueEscape = strArray27;
        org.antlr.v4.codegen.CodeGenerator codeGenerator29 = python3Target0.gen;
        boolean boolean30 = python3Target0.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar31 = null;
        org.stringtemplate.v4.ST sT32 = null;
        // The following exception was thrown during execution in test generation
        try {
            python3Target0.genFile(grammar31, sT32, "\"\"\\\"\\\"hi!\\\"\\\"\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(sTGroup17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 64 + "'", int19 == 64);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(codeGenerator21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNull(codeGenerator29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test06997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06997");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        java.lang.String str3 = python3Target0.getVersion();
        boolean boolean4 = python3Target0.wantsBaseListener();
        java.util.Set<java.lang.String> strSet5 = python3Target0.getBadWords();
        java.lang.String[] strArray6 = python3Target0.targetCharValueEscape;
        int int7 = python3Target0.getSerializedATNSegmentLimit();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "4.5.2.1" + "'", str3, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 29 + "'", int7 == 29);
    }

    @Test
    public void test06998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06998");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str1 = python3Target0.language;
        org.antlr.v4.codegen.target.Python3Target python3Target2 = new org.antlr.v4.codegen.target.Python3Target();
        org.stringtemplate.v4.STGroup sTGroup3 = null;
        python3Target2.templates = sTGroup3;
        java.lang.String[] strArray8 = new java.lang.String[] { "", "\\0", "" };
        java.util.LinkedHashSet<java.lang.String> strSet9 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet9, strArray8);
        python3Target2.badWords = strSet9;
        python3Target0.badWords = strSet9;
        python3Target0.language = "\"\"i\"\"";
        java.lang.String str15 = python3Target0.language;
        java.lang.String str17 = python3Target0.getTargetStringLiteralFromString("");
        org.antlr.v4.codegen.target.Python3Target python3Target18 = new org.antlr.v4.codegen.target.Python3Target();
        int int19 = python3Target18.getInlineTestSetWordSize();
        java.lang.String str20 = python3Target18.language;
        org.antlr.v4.codegen.CodeGenerator codeGenerator21 = null;
        java.lang.String str24 = python3Target18.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator21, "", true);
        java.util.Set<java.lang.String> strSet25 = python3Target18.getBadWords();
        java.lang.String str27 = python3Target18.encodeIntAsCharEscape(29);
        java.util.Set<java.lang.String> strSet28 = python3Target18.getBadWords();
        python3Target0.badWords = strSet28;
        org.antlr.v4.codegen.CodeGenerator codeGenerator30 = python3Target0.gen;
        org.antlr.v4.codegen.CodeGenerator codeGenerator31 = python3Target0.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup32 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar33 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target34 = new org.antlr.v4.codegen.target.Python3Target();
        int int35 = python3Target34.getInlineTestSetWordSize();
        java.lang.String str36 = python3Target34.language;
        java.lang.String str37 = python3Target34.getVersion();
        int int38 = python3Target34.getInlineTestSetWordSize();
        java.lang.String str39 = python3Target34.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator40 = python3Target34.gen;
        org.antlr.v4.tool.Grammar grammar41 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target42 = new org.antlr.v4.codegen.target.Python3Target();
        int int43 = python3Target42.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup44 = python3Target42.templates;
        org.antlr.v4.tool.Grammar grammar45 = null;
        int[] intArray46 = new int[] {};
        java.lang.String[] strArray47 = python3Target42.getTokenTypesAsTargetLabels(grammar45, intArray46);
        java.lang.String[] strArray48 = python3Target34.getTokenTypesAsTargetLabels(grammar41, intArray46);
        java.lang.String str50 = python3Target34.encodeIntAsCharEscape((int) (byte) 100);
        java.util.Set<java.lang.String> strSet51 = python3Target34.badWords;
        org.antlr.v4.tool.Grammar grammar52 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target53 = new org.antlr.v4.codegen.target.Python3Target();
        int int54 = python3Target53.getInlineTestSetWordSize();
        java.lang.String str55 = python3Target53.language;
        org.antlr.v4.codegen.CodeGenerator codeGenerator56 = null;
        java.lang.String str59 = python3Target53.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator56, "", true);
        org.antlr.v4.tool.Grammar grammar60 = null;
        org.stringtemplate.v4.ST sT61 = null;
        python3Target53.genRecognizerHeaderFile(grammar60, sT61, "");
        org.antlr.v4.tool.Grammar grammar64 = null;
        org.stringtemplate.v4.ST sT65 = null;
        python3Target53.genRecognizerHeaderFile(grammar64, sT65, "\"i\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator68 = python3Target53.gen;
        org.antlr.v4.codegen.CodeGenerator codeGenerator69 = null;
        python3Target53.gen = codeGenerator69;
        java.lang.String str72 = python3Target53.encodeIntAsCharEscape(1);
        org.antlr.v4.tool.Grammar grammar73 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target74 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str76 = python3Target74.encodeIntAsCharEscape(100);
        org.antlr.v4.tool.Grammar grammar77 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target78 = new org.antlr.v4.codegen.target.Python3Target();
        int int79 = python3Target78.getInlineTestSetWordSize();
        java.lang.String str80 = python3Target78.language;
        java.lang.String str81 = python3Target78.getVersion();
        int int82 = python3Target78.getInlineTestSetWordSize();
        java.lang.String str83 = python3Target78.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator84 = python3Target78.gen;
        org.antlr.v4.tool.Grammar grammar85 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target86 = new org.antlr.v4.codegen.target.Python3Target();
        int int87 = python3Target86.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup88 = python3Target86.templates;
        org.antlr.v4.tool.Grammar grammar89 = null;
        int[] intArray90 = new int[] {};
        java.lang.String[] strArray91 = python3Target86.getTokenTypesAsTargetLabels(grammar89, intArray90);
        java.lang.String[] strArray92 = python3Target78.getTokenTypesAsTargetLabels(grammar85, intArray90);
        java.lang.String[] strArray93 = python3Target74.getTokenTypesAsTargetLabels(grammar77, intArray90);
        java.lang.String[] strArray94 = python3Target53.getTokenTypesAsTargetLabels(grammar73, intArray90);
        java.lang.String[] strArray95 = python3Target34.getTokenTypesAsTargetLabels(grammar52, intArray90);
        java.lang.String[] strArray96 = python3Target0.getTokenTypesAsTargetLabels(grammar33, intArray90);
        org.antlr.v4.tool.Grammar grammar97 = null;
        org.stringtemplate.v4.ST sT98 = null;
        // The following exception was thrown during execution in test generation
        try {
            python3Target0.genListenerFile(grammar97, sT98);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\"\"i\"\"" + "'", str15, "\"\"i\"\"");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\"\"" + "'", str17, "\"\"");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 64 + "'", int19 == 64);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "\"\"" + "'", str24, "\"\"");
        org.junit.Assert.assertNotNull(strSet25);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "\\35" + "'", str27, "\\35");
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertNull(codeGenerator30);
        org.junit.Assert.assertNull(codeGenerator31);
        org.junit.Assert.assertNull(sTGroup32);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 64 + "'", int35 == 64);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "4.5.2.1" + "'", str37, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 64 + "'", int38 == 64);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(codeGenerator40);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 64 + "'", int43 == 64);
        org.junit.Assert.assertNull(sTGroup44);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[]");
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "d" + "'", str50, "d");
        org.junit.Assert.assertNotNull(strSet51);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 64 + "'", int54 == 64);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "\"\"" + "'", str59, "\"\"");
        org.junit.Assert.assertNull(codeGenerator68);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "\\1" + "'", str72, "\\1");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "d" + "'", str76, "d");
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 64 + "'", int79 == 64);
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "4.5.2.1" + "'", str81, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 64 + "'", int82 == 64);
        org.junit.Assert.assertNull(str83);
        org.junit.Assert.assertNull(codeGenerator84);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 64 + "'", int87 == 64);
        org.junit.Assert.assertNull(sTGroup88);
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[]");
        org.junit.Assert.assertNotNull(strArray91);
        org.junit.Assert.assertNotNull(strArray92);
        org.junit.Assert.assertNotNull(strArray93);
        org.junit.Assert.assertNotNull(strArray94);
        org.junit.Assert.assertNotNull(strArray95);
        org.junit.Assert.assertNotNull(strArray96);
    }

    @Test
    public void test06999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06999");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        java.lang.String str3 = python3Target0.getVersion();
        int int4 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str5 = python3Target0.getLanguage();
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromString("4.5.2.1", true);
        boolean boolean9 = python3Target0.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet10 = python3Target0.getBadWords();
        boolean boolean11 = python3Target0.wantsBaseVisitor();
        org.antlr.v4.codegen.target.Python3Target python3Target12 = new org.antlr.v4.codegen.target.Python3Target();
        int int13 = python3Target12.getInlineTestSetWordSize();
        java.lang.String str14 = python3Target12.language;
        org.antlr.v4.codegen.CodeGenerator codeGenerator15 = null;
        java.lang.String str18 = python3Target12.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator15, "", true);
        java.util.Set<java.lang.String> strSet19 = python3Target12.getBadWords();
        python3Target0.badWords = strSet19;
        java.lang.String str21 = python3Target0.getLanguage();
        org.antlr.v4.tool.ast.GrammarAST grammarAST22 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str23 = python3Target0.getLoopCounter(grammarAST22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "4.5.2.1" + "'", str3, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"4.5.2.1\"" + "'", str8, "\"4.5.2.1\"");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 64 + "'", int13 == 64);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "\"\"" + "'", str18, "\"\"");
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertNull(str21);
    }

    @Test
    public void test07000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test07000");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        int int1 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str2 = python3Target0.language;
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "", true);
        org.antlr.v4.tool.Grammar grammar7 = null;
        org.stringtemplate.v4.ST sT8 = null;
        python3Target0.genRecognizerHeaderFile(grammar7, sT8, "");
        org.antlr.v4.tool.Grammar grammar11 = null;
        org.stringtemplate.v4.ST sT12 = null;
        python3Target0.genRecognizerHeaderFile(grammar11, sT12, "\"i\"");
        boolean boolean15 = python3Target0.wantsBaseListener();
        org.antlr.v4.codegen.CodeGenerator codeGenerator16 = python3Target0.getCodeGenerator();
        int int17 = python3Target0.getSerializedATNSegmentLimit();
        python3Target0.addBadWords();
        java.lang.String[] strArray19 = python3Target0.targetCharValueEscape;
        java.util.Set<java.lang.String> strSet20 = python3Target0.getBadWords();
        java.util.Set<java.lang.String> strSet21 = python3Target0.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator22 = python3Target0.getCodeGenerator();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 64 + "'", int1 == 64);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"" + "'", str6, "\"\"");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(codeGenerator16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 29 + "'", int17 == 29);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertNull(codeGenerator22);
    }
}

