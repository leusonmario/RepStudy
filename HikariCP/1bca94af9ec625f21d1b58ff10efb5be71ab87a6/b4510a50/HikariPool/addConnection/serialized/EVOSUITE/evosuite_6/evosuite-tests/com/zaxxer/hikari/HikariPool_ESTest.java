/*
 * This file was automatically generated by EvoSuite
 * Fri Dec 10 03:27:53 GMT 2021
 */

package com.zaxxer.hikari;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.zaxxer.hikari.HikariConfig;
import com.zaxxer.hikari.HikariDataSource;
import com.zaxxer.hikari.HikariPool;
import com.zaxxer.hikari.IConnectionCustomizer;
import com.zaxxer.hikari.SerializedObjectSupporter;
import com.zaxxer.hikari.proxy.IHikariConnectionProxy;
import com.zaxxer.hikari.util.ConcurrentBag;
import java.sql.SQLException;
import java.util.Properties;
import java.util.Timer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import org.slf4j.Logger;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class HikariPool_ESTest extends HikariPool_ESTest_scaffolding {

  @Test(timeout = 11000)
  public void test00()  throws Throwable  {
      HikariConfig hikariConfig0 = new HikariConfig();
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertNull(hikariConfig0.getCatalog());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertNotNull(hikariConfig0);
      
      String string0 = "d}z~NH}l5V1f$G/";
      HikariDataSource hikariDataSource0 = new HikariDataSource();
      assertEquals(0, hikariDataSource0.getLoginTimeout());
      assertEquals(0L, hikariDataSource0.getAcquireRetryDelay());
      assertEquals(5000L, hikariDataSource0.getConnectionTimeout());
      assertEquals(10, hikariDataSource0.getMinimumPoolSize());
      assertNull(hikariDataSource0.getConnectionCustomizerClassName());
      assertFalse(hikariDataSource0.getisShutdown());
      assertFalse(hikariDataSource0.isRegisterMbeans());
      assertEquals(60, hikariDataSource0.getMaximumPoolSize());
      assertTrue(hikariDataSource0.isAutoCommit());
      assertNull(hikariDataSource0.getCatalog());
      assertNull(hikariDataSource0.getConnectionInitSql());
      assertEquals(0L, hikariDataSource0.getLeakDetectionThreshold());
      assertEquals(3, hikariDataSource0.getAcquireRetries());
      assertEquals(0, hikariDataSource0.getAcquireIncrement());
      assertNull(hikariDataSource0.getConnectionTestQuery());
      assertTrue(hikariDataSource0.isJdbc4ConnectionTest());
      assertEquals((-1), hikariDataSource0.getTransactionIsolation());
      assertEquals("HikariPool-1", hikariDataSource0.getPoolName());
      assertEquals(1800000L, hikariDataSource0.getMaxLifetime());
      assertEquals(600000L, hikariDataSource0.getIdleTimeout());
      assertFalse(hikariDataSource0.isInitializationFailFast());
      assertNull(hikariDataSource0.getDataSourceClassName());
      assertNotNull(hikariDataSource0);
      assertEquals(0, hikariDataSource0.loginTimeout);
      assertFalse(hikariDataSource0.isShutdown);
      
      hikariConfig0.setDataSource(hikariDataSource0);
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertNull(hikariConfig0.getCatalog());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals(0, hikariDataSource0.getLoginTimeout());
      assertEquals(0L, hikariDataSource0.getAcquireRetryDelay());
      assertEquals(5000L, hikariDataSource0.getConnectionTimeout());
      assertEquals(10, hikariDataSource0.getMinimumPoolSize());
      assertNull(hikariDataSource0.getConnectionCustomizerClassName());
      assertFalse(hikariDataSource0.getisShutdown());
      assertFalse(hikariDataSource0.isRegisterMbeans());
      assertEquals(60, hikariDataSource0.getMaximumPoolSize());
      assertTrue(hikariDataSource0.isAutoCommit());
      assertNull(hikariDataSource0.getCatalog());
      assertNull(hikariDataSource0.getConnectionInitSql());
      assertEquals(0L, hikariDataSource0.getLeakDetectionThreshold());
      assertEquals(3, hikariDataSource0.getAcquireRetries());
      assertEquals(0, hikariDataSource0.getAcquireIncrement());
      assertNull(hikariDataSource0.getConnectionTestQuery());
      assertTrue(hikariDataSource0.isJdbc4ConnectionTest());
      assertEquals((-1), hikariDataSource0.getTransactionIsolation());
      assertEquals("HikariPool-1", hikariDataSource0.getPoolName());
      assertEquals(1800000L, hikariDataSource0.getMaxLifetime());
      assertEquals(600000L, hikariDataSource0.getIdleTimeout());
      assertFalse(hikariDataSource0.isInitializationFailFast());
      assertNull(hikariDataSource0.getDataSourceClassName());
      assertEquals(0, hikariDataSource0.loginTimeout);
      assertFalse(hikariDataSource0.isShutdown);
      
      String string1 = "<h*3tU31q8JLA&<";
      hikariConfig0.setDataSourceClassName(string1);
      assertNotSame(string1, string0);
      assertEquals("<h*3tU31q8JLA&<", hikariConfig0.getDataSourceClassName());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertNull(hikariConfig0.getCatalog());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertFalse(string1.equals((Object)string0));
      
      HikariPool hikariPool0 = new HikariPool(hikariConfig0);
      assertEquals("<h*3tU31q8JLA&<", hikariConfig0.getDataSourceClassName());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertNull(hikariConfig0.getCatalog());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertNull(hikariPool0.getcatalog());
      assertTrue(hikariPool0.getisAutoCommit());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertEquals(10, hikariPool0.getTotalConnections());
      assertFalse(hikariPool0.getshutdown());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertFalse(hikariPool0.getdebug());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertNotNull(hikariPool0);
      assertFalse(hikariPool0.shutdown);
      assertFalse(hikariPool0.debug);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertTrue(hikariPool0.isAutoCommit);
      assertFalse(hikariPool0.isRegisteredMbeans);
      
      IHikariConnectionProxy iHikariConnectionProxy0 = null;
      hikariPool0.setshutdown(hikariDataSource0.isShutdown);
      assertEquals("<h*3tU31q8JLA&<", hikariConfig0.getDataSourceClassName());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertNull(hikariConfig0.getCatalog());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals(0L, hikariDataSource0.getAcquireRetryDelay());
      assertEquals(5000L, hikariDataSource0.getConnectionTimeout());
      assertEquals(10, hikariDataSource0.getMinimumPoolSize());
      assertNull(hikariDataSource0.getConnectionCustomizerClassName());
      assertFalse(hikariDataSource0.getisShutdown());
      assertFalse(hikariDataSource0.isRegisterMbeans());
      assertEquals(60, hikariDataSource0.getMaximumPoolSize());
      assertTrue(hikariDataSource0.isAutoCommit());
      assertNull(hikariDataSource0.getCatalog());
      assertNull(hikariDataSource0.getConnectionInitSql());
      assertEquals(0L, hikariDataSource0.getLeakDetectionThreshold());
      assertEquals(3, hikariDataSource0.getAcquireRetries());
      assertEquals(0, hikariDataSource0.getAcquireIncrement());
      assertNull(hikariDataSource0.getConnectionTestQuery());
      assertTrue(hikariDataSource0.isJdbc4ConnectionTest());
      assertEquals((-1), hikariDataSource0.getTransactionIsolation());
      assertEquals("HikariPool-1", hikariDataSource0.getPoolName());
      assertEquals(1800000L, hikariDataSource0.getMaxLifetime());
      assertEquals(600000L, hikariDataSource0.getIdleTimeout());
      assertFalse(hikariDataSource0.isInitializationFailFast());
      assertEquals(1250, hikariDataSource0.getLoginTimeout());
      assertNull(hikariDataSource0.getDataSourceClassName());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertNull(hikariPool0.getcatalog());
      assertTrue(hikariPool0.getisAutoCommit());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertEquals(10, hikariPool0.getTotalConnections());
      assertFalse(hikariPool0.getshutdown());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertFalse(hikariPool0.getdebug());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertFalse(hikariDataSource0.isShutdown);
      assertEquals(1250, hikariDataSource0.loginTimeout);
      assertFalse(hikariPool0.shutdown);
      assertFalse(hikariPool0.debug);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertTrue(hikariPool0.isAutoCommit);
      assertFalse(hikariPool0.isRegisteredMbeans);
      
      hikariPool0.bagIsEmpty();
      assertEquals("<h*3tU31q8JLA&<", hikariConfig0.getDataSourceClassName());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertNull(hikariConfig0.getCatalog());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertNull(hikariPool0.getcatalog());
      assertTrue(hikariPool0.getisAutoCommit());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertEquals(11, hikariPool0.getTotalConnections());
      assertFalse(hikariPool0.getshutdown());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertFalse(hikariPool0.getdebug());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertFalse(hikariPool0.shutdown);
      assertFalse(hikariPool0.debug);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertTrue(hikariPool0.isAutoCommit);
      assertFalse(hikariPool0.isRegisteredMbeans);
      
      hikariPool0.shutdown();
      assertEquals("<h*3tU31q8JLA&<", hikariConfig0.getDataSourceClassName());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertNull(hikariConfig0.getCatalog());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertNull(hikariPool0.getcatalog());
      assertTrue(hikariPool0.getisAutoCommit());
      assertTrue(hikariPool0.getshutdown());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertEquals(11, hikariPool0.getTotalConnections());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertFalse(hikariPool0.getdebug());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertFalse(hikariPool0.debug);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertTrue(hikariPool0.shutdown);
      assertTrue(hikariPool0.isAutoCommit);
      assertFalse(hikariPool0.isRegisteredMbeans);
      
      long long0 = 959L;
      hikariPool0.bagIsEmpty();
      assertEquals("<h*3tU31q8JLA&<", hikariConfig0.getDataSourceClassName());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertNull(hikariConfig0.getCatalog());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertNull(hikariPool0.getcatalog());
      assertTrue(hikariPool0.getisAutoCommit());
      assertTrue(hikariPool0.getshutdown());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertEquals(11, hikariPool0.getTotalConnections());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertFalse(hikariPool0.getdebug());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertFalse(hikariPool0.debug);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertTrue(hikariPool0.shutdown);
      assertTrue(hikariPool0.isAutoCommit);
      assertFalse(hikariPool0.isRegisteredMbeans);
      
      boolean boolean0 = hikariPool0.getshutdown();
      assertEquals("<h*3tU31q8JLA&<", hikariConfig0.getDataSourceClassName());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertNull(hikariConfig0.getCatalog());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertNull(hikariPool0.getcatalog());
      assertTrue(hikariPool0.getisAutoCommit());
      assertTrue(hikariPool0.getshutdown());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertEquals(11, hikariPool0.getTotalConnections());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertFalse(hikariPool0.getdebug());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertTrue(boolean0);
      assertFalse(hikariPool0.debug);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertTrue(hikariPool0.shutdown);
      assertTrue(hikariPool0.isAutoCommit);
      assertFalse(hikariPool0.isRegisteredMbeans);
      
      // Undeclared exception!
      try { 
        hikariPool0.isConnectionAlive(iHikariConnectionProxy0, long0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.zaxxer.hikari.HikariPool", e);
      }
  }

  @Test(timeout = 11000)
  public void test01()  throws Throwable  {
      HikariConfig hikariConfig0 = new HikariConfig();
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertNull(hikariConfig0.getCatalog());
      assertNotNull(hikariConfig0);
      
      String string0 = "(I)Ljava/lang/String;";
      hikariConfig0.setConnectionCustomizerClassName(string0);
      assertEquals("(I)Ljava/lang/String;", hikariConfig0.getConnectionCustomizerClassName());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertNull(hikariConfig0.getCatalog());
      
      String string1 = "z~NH}l5*1f$G/";
      HikariDataSource hikariDataSource0 = new HikariDataSource();
      assertEquals(60, hikariDataSource0.getMaximumPoolSize());
      assertTrue(hikariDataSource0.isAutoCommit());
      assertTrue(hikariDataSource0.isJdbc4ConnectionTest());
      assertNull(hikariDataSource0.getConnectionInitSql());
      assertNull(hikariDataSource0.getConnectionTestQuery());
      assertNull(hikariDataSource0.getConnectionCustomizerClassName());
      assertEquals((-1), hikariDataSource0.getTransactionIsolation());
      assertNull(hikariDataSource0.getDataSourceClassName());
      assertEquals(3, hikariDataSource0.getAcquireRetries());
      assertEquals(1800000L, hikariDataSource0.getMaxLifetime());
      assertEquals(600000L, hikariDataSource0.getIdleTimeout());
      assertEquals(10, hikariDataSource0.getMinimumPoolSize());
      assertEquals("HikariPool-1", hikariDataSource0.getPoolName());
      assertFalse(hikariDataSource0.isRegisterMbeans());
      assertFalse(hikariDataSource0.getisShutdown());
      assertEquals(0, hikariDataSource0.getLoginTimeout());
      assertNull(hikariDataSource0.getCatalog());
      assertEquals(5000L, hikariDataSource0.getConnectionTimeout());
      assertFalse(hikariDataSource0.isInitializationFailFast());
      assertEquals(0L, hikariDataSource0.getAcquireRetryDelay());
      assertEquals(0L, hikariDataSource0.getLeakDetectionThreshold());
      assertEquals(0, hikariDataSource0.getAcquireIncrement());
      assertNotNull(hikariDataSource0);
      assertEquals(0, hikariDataSource0.loginTimeout);
      assertFalse(hikariDataSource0.isShutdown);
      
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      String string2 = "sQMQ\\\\=p6;m-2V?P ";
      hikariConfig0.setConnectionTestQuery(string2);
      assertNotSame(string2, string0);
      assertNotSame(string2, string1);
      assertEquals("(I)Ljava/lang/String;", hikariConfig0.getConnectionCustomizerClassName());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals("sQMQ\\\\=p6;m-2V?P ", hikariConfig0.getConnectionTestQuery());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertNull(hikariConfig0.getCatalog());
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      
      hikariConfig0.setDataSource(hikariDataSource0);
      assertEquals("(I)Ljava/lang/String;", hikariConfig0.getConnectionCustomizerClassName());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals("sQMQ\\\\=p6;m-2V?P ", hikariConfig0.getConnectionTestQuery());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(60, hikariDataSource0.getMaximumPoolSize());
      assertTrue(hikariDataSource0.isAutoCommit());
      assertTrue(hikariDataSource0.isJdbc4ConnectionTest());
      assertNull(hikariDataSource0.getConnectionInitSql());
      assertNull(hikariDataSource0.getConnectionTestQuery());
      assertNull(hikariDataSource0.getConnectionCustomizerClassName());
      assertEquals((-1), hikariDataSource0.getTransactionIsolation());
      assertNull(hikariDataSource0.getDataSourceClassName());
      assertEquals(3, hikariDataSource0.getAcquireRetries());
      assertEquals(1800000L, hikariDataSource0.getMaxLifetime());
      assertEquals(600000L, hikariDataSource0.getIdleTimeout());
      assertEquals(10, hikariDataSource0.getMinimumPoolSize());
      assertEquals("HikariPool-1", hikariDataSource0.getPoolName());
      assertFalse(hikariDataSource0.isRegisterMbeans());
      assertFalse(hikariDataSource0.getisShutdown());
      assertEquals(0, hikariDataSource0.getLoginTimeout());
      assertNull(hikariDataSource0.getCatalog());
      assertEquals(5000L, hikariDataSource0.getConnectionTimeout());
      assertFalse(hikariDataSource0.isInitializationFailFast());
      assertEquals(0L, hikariDataSource0.getAcquireRetryDelay());
      assertEquals(0L, hikariDataSource0.getLeakDetectionThreshold());
      assertEquals(0, hikariDataSource0.getAcquireIncrement());
      assertEquals(0, hikariDataSource0.loginTimeout);
      assertFalse(hikariDataSource0.isShutdown);
      
      String string3 = "<h*3tU31q8JLA&<";
      hikariConfig0.setDataSourceClassName(string3);
      assertNotSame(string3, string2);
      assertNotSame(string3, string1);
      assertNotSame(string3, string0);
      assertEquals("(I)Ljava/lang/String;", hikariConfig0.getConnectionCustomizerClassName());
      assertEquals("<h*3tU31q8JLA&<", hikariConfig0.getDataSourceClassName());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals("sQMQ\\\\=p6;m-2V?P ", hikariConfig0.getConnectionTestQuery());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertNull(hikariConfig0.getCatalog());
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string0));
      
      HikariPool hikariPool0 = new HikariPool(hikariConfig0);
      assertEquals("<h*3tU31q8JLA&<", hikariConfig0.getDataSourceClassName());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals("sQMQ\\\\=p6;m-2V?P ", hikariConfig0.getConnectionTestQuery());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertNull(hikariConfig0.getCatalog());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertTrue(hikariPool0.getisAutoCommit());
      assertFalse(hikariPool0.getdebug());
      assertEquals(10, hikariPool0.getTotalConnections());
      assertFalse(hikariPool0.getshutdown());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertNull(hikariPool0.getcatalog());
      assertNotNull(hikariPool0);
      assertFalse(hikariPool0.debug);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertFalse(hikariPool0.shutdown);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertTrue(hikariPool0.isAutoCommit);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      
      hikariPool0.settransactionIsolation(hikariDataSource0.loginTimeout);
      assertEquals("<h*3tU31q8JLA&<", hikariConfig0.getDataSourceClassName());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals("sQMQ\\\\=p6;m-2V?P ", hikariConfig0.getConnectionTestQuery());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(60, hikariDataSource0.getMaximumPoolSize());
      assertTrue(hikariDataSource0.isAutoCommit());
      assertTrue(hikariDataSource0.isJdbc4ConnectionTest());
      assertNull(hikariDataSource0.getConnectionInitSql());
      assertNull(hikariDataSource0.getConnectionTestQuery());
      assertNull(hikariDataSource0.getConnectionCustomizerClassName());
      assertEquals((-1), hikariDataSource0.getTransactionIsolation());
      assertNull(hikariDataSource0.getDataSourceClassName());
      assertEquals(3, hikariDataSource0.getAcquireRetries());
      assertEquals(1800000L, hikariDataSource0.getMaxLifetime());
      assertEquals(600000L, hikariDataSource0.getIdleTimeout());
      assertEquals(10, hikariDataSource0.getMinimumPoolSize());
      assertEquals("HikariPool-1", hikariDataSource0.getPoolName());
      assertFalse(hikariDataSource0.isRegisterMbeans());
      assertFalse(hikariDataSource0.getisShutdown());
      assertNull(hikariDataSource0.getCatalog());
      assertEquals(5000L, hikariDataSource0.getConnectionTimeout());
      assertFalse(hikariDataSource0.isInitializationFailFast());
      assertEquals(0L, hikariDataSource0.getAcquireRetryDelay());
      assertEquals(1250, hikariDataSource0.getLoginTimeout());
      assertEquals(0L, hikariDataSource0.getLeakDetectionThreshold());
      assertEquals(0, hikariDataSource0.getAcquireIncrement());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertTrue(hikariPool0.getisAutoCommit());
      assertFalse(hikariPool0.getdebug());
      assertEquals(10, hikariPool0.getTotalConnections());
      assertFalse(hikariPool0.getshutdown());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertNull(hikariPool0.getcatalog());
      assertEquals(1250, hikariPool0.gettransactionIsolation());
      assertEquals(1250, hikariDataSource0.loginTimeout);
      assertFalse(hikariDataSource0.isShutdown);
      assertFalse(hikariPool0.debug);
      assertFalse(hikariPool0.shutdown);
      assertEquals(1250, hikariPool0.transactionIsolation);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertTrue(hikariPool0.isAutoCommit);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      
      ConcurrentBag<IHikariConnectionProxy> concurrentBag0 = hikariPool0.getidleConnectionBag();
      assertEquals("<h*3tU31q8JLA&<", hikariConfig0.getDataSourceClassName());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals("sQMQ\\\\=p6;m-2V?P ", hikariConfig0.getConnectionTestQuery());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertNull(hikariConfig0.getCatalog());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertTrue(hikariPool0.getisAutoCommit());
      assertFalse(hikariPool0.getdebug());
      assertEquals(10, hikariPool0.getTotalConnections());
      assertFalse(hikariPool0.getshutdown());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertNull(hikariPool0.getcatalog());
      assertEquals(1250, hikariPool0.gettransactionIsolation());
      assertEquals(0, concurrentBag0.getSTATE_NOT_IN_USE());
      assertEquals((-1), concurrentBag0.getSTATE_REMOVED());
      assertEquals((-2), concurrentBag0.getSTATE_RESERVED());
      assertEquals(1, concurrentBag0.getSTATE_IN_USE());
      assertNotNull(concurrentBag0);
      assertFalse(hikariPool0.debug);
      assertFalse(hikariPool0.shutdown);
      assertEquals(1250, hikariPool0.transactionIsolation);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertTrue(hikariPool0.isAutoCommit);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertEquals(1, ConcurrentBag.STATE_IN_USE);
      assertEquals((-1), ConcurrentBag.STATE_REMOVED);
      assertEquals((-2), ConcurrentBag.STATE_RESERVED);
      assertEquals(0, ConcurrentBag.STATE_NOT_IN_USE);
  }

  @Test(timeout = 11000)
  public void test02()  throws Throwable  {
      HikariConfig hikariConfig0 = new HikariConfig();
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertTrue(hikariConfig0.isAutoCommit());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertNotNull(hikariConfig0);
      
      String string0 = "z~NH}l5*1f$G/";
      HikariDataSource hikariDataSource0 = new HikariDataSource();
      assertNull(hikariDataSource0.getDataSourceClassName());
      assertEquals(0L, hikariDataSource0.getAcquireRetryDelay());
      assertNull(hikariDataSource0.getConnectionCustomizerClassName());
      assertEquals(0, hikariDataSource0.getLoginTimeout());
      assertTrue(hikariDataSource0.isAutoCommit());
      assertNull(hikariDataSource0.getConnectionTestQuery());
      assertEquals(3, hikariDataSource0.getAcquireRetries());
      assertEquals((-1), hikariDataSource0.getTransactionIsolation());
      assertEquals(10, hikariDataSource0.getMinimumPoolSize());
      assertEquals("HikariPool-1", hikariDataSource0.getPoolName());
      assertFalse(hikariDataSource0.isInitializationFailFast());
      assertEquals(1800000L, hikariDataSource0.getMaxLifetime());
      assertEquals(600000L, hikariDataSource0.getIdleTimeout());
      assertFalse(hikariDataSource0.isRegisterMbeans());
      assertFalse(hikariDataSource0.getisShutdown());
      assertTrue(hikariDataSource0.isJdbc4ConnectionTest());
      assertEquals(5000L, hikariDataSource0.getConnectionTimeout());
      assertNull(hikariDataSource0.getCatalog());
      assertEquals(60, hikariDataSource0.getMaximumPoolSize());
      assertNull(hikariDataSource0.getConnectionInitSql());
      assertEquals(0L, hikariDataSource0.getLeakDetectionThreshold());
      assertEquals(0, hikariDataSource0.getAcquireIncrement());
      assertNotNull(hikariDataSource0);
      assertFalse(hikariDataSource0.isShutdown);
      assertEquals(0, hikariDataSource0.loginTimeout);
      
      hikariConfig0.setDataSource(hikariDataSource0);
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertTrue(hikariConfig0.isAutoCommit());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertNull(hikariDataSource0.getDataSourceClassName());
      assertEquals(0L, hikariDataSource0.getAcquireRetryDelay());
      assertNull(hikariDataSource0.getConnectionCustomizerClassName());
      assertEquals(0, hikariDataSource0.getLoginTimeout());
      assertTrue(hikariDataSource0.isAutoCommit());
      assertNull(hikariDataSource0.getConnectionTestQuery());
      assertEquals(3, hikariDataSource0.getAcquireRetries());
      assertEquals((-1), hikariDataSource0.getTransactionIsolation());
      assertEquals(10, hikariDataSource0.getMinimumPoolSize());
      assertEquals("HikariPool-1", hikariDataSource0.getPoolName());
      assertFalse(hikariDataSource0.isInitializationFailFast());
      assertEquals(1800000L, hikariDataSource0.getMaxLifetime());
      assertEquals(600000L, hikariDataSource0.getIdleTimeout());
      assertFalse(hikariDataSource0.isRegisterMbeans());
      assertFalse(hikariDataSource0.getisShutdown());
      assertTrue(hikariDataSource0.isJdbc4ConnectionTest());
      assertEquals(5000L, hikariDataSource0.getConnectionTimeout());
      assertNull(hikariDataSource0.getCatalog());
      assertEquals(60, hikariDataSource0.getMaximumPoolSize());
      assertNull(hikariDataSource0.getConnectionInitSql());
      assertEquals(0L, hikariDataSource0.getLeakDetectionThreshold());
      assertEquals(0, hikariDataSource0.getAcquireIncrement());
      assertFalse(hikariDataSource0.isShutdown);
      assertEquals(0, hikariDataSource0.loginTimeout);
      
      String string1 = "<h*3tU31q8JLA&<";
      HikariPool hikariPool0 = new HikariPool(hikariConfig0);
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertTrue(hikariConfig0.isAutoCommit());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertTrue(hikariPool0.getisAutoCommit());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertEquals(10, hikariPool0.getTotalConnections());
      assertFalse(hikariPool0.getdebug());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertFalse(hikariPool0.getshutdown());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertNull(hikariPool0.getcatalog());
      assertNotNull(hikariPool0);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertFalse(hikariPool0.shutdown);
      assertTrue(hikariPool0.isAutoCommit);
      assertFalse(hikariPool0.debug);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      
      hikariPool0.bagIsEmpty();
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertTrue(hikariConfig0.isAutoCommit());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertTrue(hikariPool0.getisAutoCommit());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertEquals(11, hikariPool0.getTotalConnections());
      assertFalse(hikariPool0.getdebug());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertFalse(hikariPool0.getshutdown());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertNull(hikariPool0.getcatalog());
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertFalse(hikariPool0.shutdown);
      assertTrue(hikariPool0.isAutoCommit);
      assertFalse(hikariPool0.debug);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      
      String[] stringArray0 = new String[4];
      stringArray0[0] = hikariPool0.catalog;
      stringArray0[1] = string1;
      stringArray0[2] = string0;
      stringArray0[3] = hikariPool0.catalog;
      hikariPool0.logPoolState(stringArray0);
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertTrue(hikariConfig0.isAutoCommit());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertTrue(hikariPool0.getisAutoCommit());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertEquals(11, hikariPool0.getTotalConnections());
      assertFalse(hikariPool0.getdebug());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertFalse(hikariPool0.getshutdown());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertNull(hikariPool0.getcatalog());
      assertEquals(4, stringArray0.length);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertFalse(hikariPool0.shutdown);
      assertTrue(hikariPool0.isAutoCommit);
      assertFalse(hikariPool0.debug);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      
      hikariPool0.shutdown();
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertTrue(hikariConfig0.isAutoCommit());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertTrue(hikariPool0.getisAutoCommit());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertTrue(hikariPool0.getshutdown());
      assertEquals(11, hikariPool0.getTotalConnections());
      assertFalse(hikariPool0.getdebug());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertNull(hikariPool0.getcatalog());
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertTrue(hikariPool0.isAutoCommit);
      assertFalse(hikariPool0.debug);
      assertTrue(hikariPool0.shutdown);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      
      long long0 = 959L;
      boolean boolean0 = hikariPool0.getshutdown();
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertTrue(hikariConfig0.isAutoCommit());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertTrue(hikariPool0.getisAutoCommit());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertTrue(hikariPool0.getshutdown());
      assertEquals(11, hikariPool0.getTotalConnections());
      assertFalse(hikariPool0.getdebug());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertNull(hikariPool0.getcatalog());
      assertTrue(boolean0);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertTrue(hikariPool0.isAutoCommit);
      assertFalse(hikariPool0.debug);
      assertTrue(hikariPool0.shutdown);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      
      int int0 = hikariPool0.getActiveConnections();
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertTrue(hikariConfig0.isAutoCommit());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertTrue(hikariPool0.getisAutoCommit());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertTrue(hikariPool0.getshutdown());
      assertEquals(11, hikariPool0.getTotalConnections());
      assertFalse(hikariPool0.getdebug());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertNull(hikariPool0.getcatalog());
      assertEquals(11, int0);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertTrue(hikariPool0.isAutoCommit);
      assertFalse(hikariPool0.debug);
      assertTrue(hikariPool0.shutdown);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      
      HikariPool.HouseKeeper hikariPool_HouseKeeper0 = hikariPool0.new HouseKeeper();
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertTrue(hikariConfig0.isAutoCommit());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(0L, hikariPool_HouseKeeper0.scheduledExecutionTime());
      assertTrue(hikariPool0.getisAutoCommit());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertTrue(hikariPool0.getshutdown());
      assertEquals(11, hikariPool0.getTotalConnections());
      assertFalse(hikariPool0.getdebug());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertNull(hikariPool0.getcatalog());
      assertNotNull(hikariPool_HouseKeeper0);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertTrue(hikariPool0.isAutoCommit);
      assertFalse(hikariPool0.debug);
      assertTrue(hikariPool0.shutdown);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      
      boolean boolean1 = hikariPool0.getdebug();
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertTrue(hikariConfig0.isAutoCommit());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertTrue(hikariPool0.getisAutoCommit());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertTrue(hikariPool0.getshutdown());
      assertEquals(11, hikariPool0.getTotalConnections());
      assertFalse(hikariPool0.getdebug());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertNull(hikariPool0.getcatalog());
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertTrue(hikariPool0.isAutoCommit);
      assertFalse(hikariPool0.debug);
      assertTrue(hikariPool0.shutdown);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      
      boolean boolean2 = hikariPool0.getisAutoCommit();
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertTrue(hikariConfig0.isAutoCommit());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertTrue(hikariPool0.getisAutoCommit());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertTrue(hikariPool0.getshutdown());
      assertEquals(11, hikariPool0.getTotalConnections());
      assertFalse(hikariPool0.getdebug());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertNull(hikariPool0.getcatalog());
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2 == boolean1);
      assertTrue(boolean2);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertTrue(hikariPool0.isAutoCommit);
      assertFalse(hikariPool0.debug);
      assertTrue(hikariPool0.shutdown);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      
      long long1 = hikariPool0.getleakDetectionThreshold();
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertTrue(hikariConfig0.isAutoCommit());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertTrue(hikariPool0.getisAutoCommit());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertTrue(hikariPool0.getshutdown());
      assertEquals(11, hikariPool0.getTotalConnections());
      assertFalse(hikariPool0.getdebug());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertNull(hikariPool0.getcatalog());
      assertFalse(long1 == long0);
      assertEquals(0L, long1);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertTrue(hikariPool0.isAutoCommit);
      assertFalse(hikariPool0.debug);
      assertTrue(hikariPool0.shutdown);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
  }

  @Test(timeout = 11000)
  public void test03()  throws Throwable  {
      HikariConfig hikariConfig0 = new HikariConfig();
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isAutoCommit());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertNotNull(hikariConfig0);
      
      String string0 = "z~NH}l5*1f$G/";
      hikariConfig0.setCatalog(string0);
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isAutoCommit());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      
      HikariDataSource hikariDataSource0 = new HikariDataSource();
      assertEquals(60, hikariDataSource0.getMaximumPoolSize());
      assertTrue(hikariDataSource0.isAutoCommit());
      assertTrue(hikariDataSource0.isJdbc4ConnectionTest());
      assertNull(hikariDataSource0.getConnectionCustomizerClassName());
      assertEquals((-1), hikariDataSource0.getTransactionIsolation());
      assertEquals(1800000L, hikariDataSource0.getMaxLifetime());
      assertEquals(600000L, hikariDataSource0.getIdleTimeout());
      assertNull(hikariDataSource0.getDataSourceClassName());
      assertEquals(3, hikariDataSource0.getAcquireRetries());
      assertNull(hikariDataSource0.getConnectionTestQuery());
      assertEquals(10, hikariDataSource0.getMinimumPoolSize());
      assertEquals("HikariPool-1", hikariDataSource0.getPoolName());
      assertEquals(5000L, hikariDataSource0.getConnectionTimeout());
      assertNull(hikariDataSource0.getCatalog());
      assertEquals(0, hikariDataSource0.getLoginTimeout());
      assertFalse(hikariDataSource0.isInitializationFailFast());
      assertFalse(hikariDataSource0.isRegisterMbeans());
      assertFalse(hikariDataSource0.getisShutdown());
      assertEquals(0L, hikariDataSource0.getAcquireRetryDelay());
      assertNull(hikariDataSource0.getConnectionInitSql());
      assertEquals(0L, hikariDataSource0.getLeakDetectionThreshold());
      assertEquals(0, hikariDataSource0.getAcquireIncrement());
      assertNotNull(hikariDataSource0);
      assertEquals(0, hikariDataSource0.loginTimeout);
      assertFalse(hikariDataSource0.isShutdown);
      
      hikariConfig0.setDataSource(hikariDataSource0);
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isAutoCommit());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(60, hikariDataSource0.getMaximumPoolSize());
      assertTrue(hikariDataSource0.isAutoCommit());
      assertTrue(hikariDataSource0.isJdbc4ConnectionTest());
      assertNull(hikariDataSource0.getConnectionCustomizerClassName());
      assertEquals((-1), hikariDataSource0.getTransactionIsolation());
      assertEquals(1800000L, hikariDataSource0.getMaxLifetime());
      assertEquals(600000L, hikariDataSource0.getIdleTimeout());
      assertNull(hikariDataSource0.getDataSourceClassName());
      assertEquals(3, hikariDataSource0.getAcquireRetries());
      assertNull(hikariDataSource0.getConnectionTestQuery());
      assertEquals(10, hikariDataSource0.getMinimumPoolSize());
      assertEquals("HikariPool-1", hikariDataSource0.getPoolName());
      assertEquals(5000L, hikariDataSource0.getConnectionTimeout());
      assertNull(hikariDataSource0.getCatalog());
      assertEquals(0, hikariDataSource0.getLoginTimeout());
      assertFalse(hikariDataSource0.isInitializationFailFast());
      assertFalse(hikariDataSource0.isRegisterMbeans());
      assertFalse(hikariDataSource0.getisShutdown());
      assertEquals(0L, hikariDataSource0.getAcquireRetryDelay());
      assertNull(hikariDataSource0.getConnectionInitSql());
      assertEquals(0L, hikariDataSource0.getLeakDetectionThreshold());
      assertEquals(0, hikariDataSource0.getAcquireIncrement());
      assertEquals(0, hikariDataSource0.loginTimeout);
      assertFalse(hikariDataSource0.isShutdown);
      
      String string1 = "<h*3tU31q8JLA&<";
      HikariPool hikariPool0 = new HikariPool(hikariConfig0);
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isAutoCommit());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertEquals(10, hikariPool0.getTotalConnections());
      assertFalse(hikariPool0.getdebug());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertTrue(hikariPool0.getisAutoCommit());
      assertEquals("z~NH}l5*1f$G/", hikariPool0.getcatalog());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertFalse(hikariPool0.getshutdown());
      assertNotNull(hikariPool0);
      assertFalse(hikariPool0.debug);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertFalse(hikariPool0.shutdown);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertTrue(hikariPool0.isAutoCommit);
      
      hikariPool0.bagIsEmpty();
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isAutoCommit());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertFalse(hikariPool0.getdebug());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertEquals(11, hikariPool0.getTotalConnections());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertTrue(hikariPool0.getisAutoCommit());
      assertEquals("z~NH}l5*1f$G/", hikariPool0.getcatalog());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertFalse(hikariPool0.getshutdown());
      assertFalse(hikariPool0.debug);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertFalse(hikariPool0.shutdown);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertTrue(hikariPool0.isAutoCommit);
      
      String[] stringArray0 = new String[4];
      stringArray0[0] = hikariPool0.catalog;
      stringArray0[1] = string1;
      int int0 = hikariPool0.getActiveConnections();
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isAutoCommit());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertFalse(hikariPool0.getdebug());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertEquals(11, hikariPool0.getTotalConnections());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertTrue(hikariPool0.getisAutoCommit());
      assertEquals("z~NH}l5*1f$G/", hikariPool0.getcatalog());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertFalse(hikariPool0.getshutdown());
      assertEquals(11, int0);
      assertFalse(hikariPool0.debug);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertFalse(hikariPool0.shutdown);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertTrue(hikariPool0.isAutoCommit);
      
      stringArray0[2] = string0;
      stringArray0[3] = hikariPool0.catalog;
      hikariPool0.logPoolState(stringArray0);
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isAutoCommit());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertFalse(hikariPool0.getdebug());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertEquals(11, hikariPool0.getTotalConnections());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertTrue(hikariPool0.getisAutoCommit());
      assertEquals("z~NH}l5*1f$G/", hikariPool0.getcatalog());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertFalse(hikariPool0.getshutdown());
      assertEquals(4, stringArray0.length);
      assertFalse(hikariPool0.debug);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertFalse(hikariPool0.shutdown);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertTrue(hikariPool0.isAutoCommit);
      
      hikariPool0.shutdown();
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isAutoCommit());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertFalse(hikariPool0.getdebug());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertEquals(11, hikariPool0.getTotalConnections());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertTrue(hikariPool0.getisAutoCommit());
      assertTrue(hikariPool0.getshutdown());
      assertEquals("z~NH}l5*1f$G/", hikariPool0.getcatalog());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertFalse(hikariPool0.debug);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertTrue(hikariPool0.shutdown);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertTrue(hikariPool0.isAutoCommit);
      
      long long0 = 959L;
      boolean boolean0 = hikariPool0.getshutdown();
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isAutoCommit());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertFalse(hikariPool0.getdebug());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertEquals(11, hikariPool0.getTotalConnections());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertTrue(hikariPool0.getisAutoCommit());
      assertTrue(hikariPool0.getshutdown());
      assertEquals("z~NH}l5*1f$G/", hikariPool0.getcatalog());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertTrue(boolean0);
      assertFalse(hikariPool0.debug);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertTrue(hikariPool0.shutdown);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertTrue(hikariPool0.isAutoCommit);
      
      int int1 = hikariPool0.getActiveConnections();
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isAutoCommit());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertFalse(hikariPool0.getdebug());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertEquals(11, hikariPool0.getTotalConnections());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertTrue(hikariPool0.getisAutoCommit());
      assertTrue(hikariPool0.getshutdown());
      assertEquals("z~NH}l5*1f$G/", hikariPool0.getcatalog());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertTrue(int1 == int0);
      assertEquals(11, int1);
      assertFalse(hikariPool0.debug);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertTrue(hikariPool0.shutdown);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertTrue(hikariPool0.isAutoCommit);
      
      boolean boolean1 = hikariPool0.getjdbc4ConnectionTest();
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isAutoCommit());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertFalse(hikariPool0.getdebug());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertEquals(11, hikariPool0.getTotalConnections());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertTrue(hikariPool0.getisAutoCommit());
      assertTrue(hikariPool0.getshutdown());
      assertEquals("z~NH}l5*1f$G/", hikariPool0.getcatalog());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertTrue(boolean1 == boolean0);
      assertTrue(boolean1);
      assertFalse(hikariPool0.debug);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertTrue(hikariPool0.shutdown);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertTrue(hikariPool0.isAutoCommit);
      
      HikariPool.HouseKeeper hikariPool_HouseKeeper0 = hikariPool0.new HouseKeeper();
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isAutoCommit());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(0L, hikariPool_HouseKeeper0.scheduledExecutionTime());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertFalse(hikariPool0.getdebug());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertEquals(11, hikariPool0.getTotalConnections());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertTrue(hikariPool0.getisAutoCommit());
      assertTrue(hikariPool0.getshutdown());
      assertEquals("z~NH}l5*1f$G/", hikariPool0.getcatalog());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertNotNull(hikariPool_HouseKeeper0);
      assertFalse(hikariPool0.debug);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertTrue(hikariPool0.shutdown);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertTrue(hikariPool0.isAutoCommit);
      
      hikariPool_HouseKeeper0.run();
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isAutoCommit());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(0L, hikariPool_HouseKeeper0.scheduledExecutionTime());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertFalse(hikariPool0.getdebug());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertEquals(11, hikariPool0.getTotalConnections());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertTrue(hikariPool0.getisAutoCommit());
      assertTrue(hikariPool0.getshutdown());
      assertEquals("z~NH}l5*1f$G/", hikariPool0.getcatalog());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertFalse(hikariPool0.debug);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertTrue(hikariPool0.shutdown);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertTrue(hikariPool0.isAutoCommit);
      
      boolean boolean2 = hikariPool0.getdebug();
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isAutoCommit());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertFalse(hikariPool0.getdebug());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertEquals(11, hikariPool0.getTotalConnections());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertTrue(hikariPool0.getisAutoCommit());
      assertTrue(hikariPool0.getshutdown());
      assertEquals("z~NH}l5*1f$G/", hikariPool0.getcatalog());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertFalse(boolean2 == boolean1);
      assertFalse(boolean2 == boolean0);
      assertFalse(boolean2);
      assertFalse(hikariPool0.debug);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertTrue(hikariPool0.shutdown);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertTrue(hikariPool0.isAutoCommit);
      
      boolean boolean3 = hikariPool0.getisRegisteredMbeans();
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isAutoCommit());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertFalse(hikariPool0.getdebug());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertEquals(11, hikariPool0.getTotalConnections());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertTrue(hikariPool0.getisAutoCommit());
      assertTrue(hikariPool0.getshutdown());
      assertEquals("z~NH}l5*1f$G/", hikariPool0.getcatalog());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertFalse(boolean3 == boolean1);
      assertTrue(boolean3 == boolean2);
      assertFalse(boolean3 == boolean0);
      assertFalse(boolean3);
      assertFalse(hikariPool0.debug);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertTrue(hikariPool0.shutdown);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertTrue(hikariPool0.isAutoCommit);
  }

  @Test(timeout = 11000)
  public void test04()  throws Throwable  {
      HikariConfig hikariConfig0 = new HikariConfig();
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isAutoCommit());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertNull(hikariConfig0.getCatalog());
      assertNotNull(hikariConfig0);
      
      HikariDataSource hikariDataSource0 = new HikariDataSource();
      assertFalse(hikariDataSource0.isInitializationFailFast());
      assertEquals(1800000L, hikariDataSource0.getMaxLifetime());
      assertEquals(600000L, hikariDataSource0.getIdleTimeout());
      assertEquals(3, hikariDataSource0.getAcquireRetries());
      assertFalse(hikariDataSource0.getisShutdown());
      assertFalse(hikariDataSource0.isRegisterMbeans());
      assertTrue(hikariDataSource0.isJdbc4ConnectionTest());
      assertEquals(5000L, hikariDataSource0.getConnectionTimeout());
      assertEquals(60, hikariDataSource0.getMaximumPoolSize());
      assertNull(hikariDataSource0.getConnectionInitSql());
      assertEquals(0L, hikariDataSource0.getLeakDetectionThreshold());
      assertEquals(0, hikariDataSource0.getAcquireIncrement());
      assertNull(hikariDataSource0.getDataSourceClassName());
      assertEquals(0L, hikariDataSource0.getAcquireRetryDelay());
      assertNull(hikariDataSource0.getConnectionCustomizerClassName());
      assertNull(hikariDataSource0.getCatalog());
      assertEquals(0, hikariDataSource0.getLoginTimeout());
      assertTrue(hikariDataSource0.isAutoCommit());
      assertNull(hikariDataSource0.getConnectionTestQuery());
      assertEquals("HikariPool-1", hikariDataSource0.getPoolName());
      assertEquals(10, hikariDataSource0.getMinimumPoolSize());
      assertEquals((-1), hikariDataSource0.getTransactionIsolation());
      assertNotNull(hikariDataSource0);
      assertFalse(hikariDataSource0.isShutdown);
      assertEquals(0, hikariDataSource0.loginTimeout);
      
      hikariConfig0.setDataSource(hikariDataSource0);
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isAutoCommit());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertNull(hikariConfig0.getCatalog());
      assertFalse(hikariDataSource0.isInitializationFailFast());
      assertEquals(1800000L, hikariDataSource0.getMaxLifetime());
      assertEquals(600000L, hikariDataSource0.getIdleTimeout());
      assertEquals(3, hikariDataSource0.getAcquireRetries());
      assertFalse(hikariDataSource0.getisShutdown());
      assertFalse(hikariDataSource0.isRegisterMbeans());
      assertTrue(hikariDataSource0.isJdbc4ConnectionTest());
      assertEquals(5000L, hikariDataSource0.getConnectionTimeout());
      assertEquals(60, hikariDataSource0.getMaximumPoolSize());
      assertNull(hikariDataSource0.getConnectionInitSql());
      assertEquals(0L, hikariDataSource0.getLeakDetectionThreshold());
      assertEquals(0, hikariDataSource0.getAcquireIncrement());
      assertNull(hikariDataSource0.getDataSourceClassName());
      assertEquals(0L, hikariDataSource0.getAcquireRetryDelay());
      assertNull(hikariDataSource0.getConnectionCustomizerClassName());
      assertNull(hikariDataSource0.getCatalog());
      assertEquals(0, hikariDataSource0.getLoginTimeout());
      assertTrue(hikariDataSource0.isAutoCommit());
      assertNull(hikariDataSource0.getConnectionTestQuery());
      assertEquals("HikariPool-1", hikariDataSource0.getPoolName());
      assertEquals(10, hikariDataSource0.getMinimumPoolSize());
      assertEquals((-1), hikariDataSource0.getTransactionIsolation());
      assertFalse(hikariDataSource0.isShutdown);
      assertEquals(0, hikariDataSource0.loginTimeout);
      
      String string0 = "<h*3tU31q8JLA&<";
      HikariPool hikariPool0 = new HikariPool(hikariConfig0);
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isAutoCommit());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertNull(hikariConfig0.getCatalog());
      assertFalse(hikariPool0.getdebug());
      assertTrue(hikariPool0.getisAutoCommit());
      assertEquals(10, hikariPool0.getTotalConnections());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertFalse(hikariPool0.getshutdown());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertNull(hikariPool0.getcatalog());
      assertNotNull(hikariPool0);
      assertFalse(hikariPool0.shutdown);
      assertFalse(hikariPool0.debug);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertTrue(hikariPool0.isAutoCommit);
      
      hikariPool0.bagIsEmpty();
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isAutoCommit());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertNull(hikariConfig0.getCatalog());
      assertFalse(hikariPool0.getdebug());
      assertTrue(hikariPool0.getisAutoCommit());
      assertEquals(11, hikariPool0.getTotalConnections());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertFalse(hikariPool0.getshutdown());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertNull(hikariPool0.getcatalog());
      assertFalse(hikariPool0.shutdown);
      assertFalse(hikariPool0.debug);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertTrue(hikariPool0.isAutoCommit);
      
      hikariPool0.shutdown();
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isAutoCommit());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertNull(hikariConfig0.getCatalog());
      assertTrue(hikariPool0.getshutdown());
      assertFalse(hikariPool0.getdebug());
      assertTrue(hikariPool0.getisAutoCommit());
      assertEquals(11, hikariPool0.getTotalConnections());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertNull(hikariPool0.getcatalog());
      assertFalse(hikariPool0.debug);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertTrue(hikariPool0.isAutoCommit);
      assertTrue(hikariPool0.shutdown);
      
      boolean boolean0 = hikariPool0.getshutdown();
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isAutoCommit());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertNull(hikariConfig0.getCatalog());
      assertTrue(hikariPool0.getshutdown());
      assertFalse(hikariPool0.getdebug());
      assertTrue(hikariPool0.getisAutoCommit());
      assertEquals(11, hikariPool0.getTotalConnections());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertNull(hikariPool0.getcatalog());
      assertTrue(boolean0);
      assertFalse(hikariPool0.debug);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertTrue(hikariPool0.isAutoCommit);
      assertTrue(hikariPool0.shutdown);
      
      int int0 = hikariPool0.getActiveConnections();
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isAutoCommit());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertNull(hikariConfig0.getCatalog());
      assertTrue(hikariPool0.getshutdown());
      assertFalse(hikariPool0.getdebug());
      assertTrue(hikariPool0.getisAutoCommit());
      assertEquals(11, hikariPool0.getTotalConnections());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertNull(hikariPool0.getcatalog());
      assertEquals(11, int0);
      assertFalse(hikariPool0.debug);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertTrue(hikariPool0.isAutoCommit);
      assertTrue(hikariPool0.shutdown);
      
      SerializedObjectSupporter serializedObjectSupporter0 = new SerializedObjectSupporter();
      assertNotNull(serializedObjectSupporter0);
      
      hikariPool0.serializedObjectSupporter = serializedObjectSupporter0;
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isAutoCommit());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertNull(hikariConfig0.getCatalog());
      assertTrue(hikariPool0.getshutdown());
      assertFalse(hikariPool0.getdebug());
      assertTrue(hikariPool0.getisAutoCommit());
      assertEquals(11, hikariPool0.getTotalConnections());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertNull(hikariPool0.getcatalog());
      
      boolean boolean1 = hikariPool0.getjdbc4ConnectionTest();
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isAutoCommit());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertNull(hikariConfig0.getCatalog());
      assertTrue(hikariPool0.getshutdown());
      assertFalse(hikariPool0.getdebug());
      assertTrue(hikariPool0.getisAutoCommit());
      assertEquals(11, hikariPool0.getTotalConnections());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertNull(hikariPool0.getcatalog());
      assertTrue(boolean1 == boolean0);
      assertTrue(boolean1);
      assertFalse(hikariPool0.debug);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertTrue(hikariPool0.isAutoCommit);
      assertTrue(hikariPool0.shutdown);
      
      HikariPool.HouseKeeper hikariPool_HouseKeeper0 = hikariPool0.new HouseKeeper();
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isAutoCommit());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertNull(hikariConfig0.getCatalog());
      assertTrue(hikariPool0.getshutdown());
      assertFalse(hikariPool0.getdebug());
      assertTrue(hikariPool0.getisAutoCommit());
      assertEquals(11, hikariPool0.getTotalConnections());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertNull(hikariPool0.getcatalog());
      assertEquals(0L, hikariPool_HouseKeeper0.scheduledExecutionTime());
      assertNotNull(hikariPool_HouseKeeper0);
      assertFalse(hikariPool0.debug);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertTrue(hikariPool0.isAutoCommit);
      assertTrue(hikariPool0.shutdown);
      
      IHikariConnectionProxy iHikariConnectionProxy0 = mock(IHikariConnectionProxy.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(iHikariConnectionProxy0).isBrokenConnection();
      doReturn(false, false).when(iHikariConnectionProxy0).compareAndSetState(anyInt() , anyInt());
      // Undeclared exception!
      try { 
        hikariPool0.releaseConnection(iHikariConnectionProxy0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Attempt to remove an object from the bag that was not borrowed or reserved
         //
         verifyException("com.zaxxer.hikari.util.ConcurrentBag", e);
      }
  }

  @Test(timeout = 11000)
  public void test05()  throws Throwable  {
      HikariConfig hikariConfig0 = new HikariConfig();
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertTrue(hikariConfig0.isAutoCommit());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertNotNull(hikariConfig0);
      
      String string0 = "z~NH}l5*1f$G/";
      hikariConfig0.setCatalog(string0);
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertTrue(hikariConfig0.isAutoCommit());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      
      HikariDataSource hikariDataSource0 = new HikariDataSource();
      assertEquals(0, hikariDataSource0.getLoginTimeout());
      assertEquals(10, hikariDataSource0.getMinimumPoolSize());
      assertNull(hikariDataSource0.getCatalog());
      assertEquals(5000L, hikariDataSource0.getConnectionTimeout());
      assertEquals(0L, hikariDataSource0.getAcquireRetryDelay());
      assertNull(hikariDataSource0.getDataSourceClassName());
      assertNull(hikariDataSource0.getConnectionCustomizerClassName());
      assertFalse(hikariDataSource0.isRegisterMbeans());
      assertFalse(hikariDataSource0.getisShutdown());
      assertEquals("HikariPool-1", hikariDataSource0.getPoolName());
      assertEquals((-1), hikariDataSource0.getTransactionIsolation());
      assertTrue(hikariDataSource0.isAutoCommit());
      assertNull(hikariDataSource0.getConnectionInitSql());
      assertEquals(0L, hikariDataSource0.getLeakDetectionThreshold());
      assertEquals(0, hikariDataSource0.getAcquireIncrement());
      assertEquals(1800000L, hikariDataSource0.getMaxLifetime());
      assertEquals(60, hikariDataSource0.getMaximumPoolSize());
      assertEquals(3, hikariDataSource0.getAcquireRetries());
      assertEquals(600000L, hikariDataSource0.getIdleTimeout());
      assertNull(hikariDataSource0.getConnectionTestQuery());
      assertFalse(hikariDataSource0.isInitializationFailFast());
      assertTrue(hikariDataSource0.isJdbc4ConnectionTest());
      assertNotNull(hikariDataSource0);
      assertEquals(0, hikariDataSource0.loginTimeout);
      assertFalse(hikariDataSource0.isShutdown);
      
      hikariConfig0.setDataSource(hikariDataSource0);
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertTrue(hikariConfig0.isAutoCommit());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals(0, hikariDataSource0.getLoginTimeout());
      assertEquals(10, hikariDataSource0.getMinimumPoolSize());
      assertNull(hikariDataSource0.getCatalog());
      assertEquals(5000L, hikariDataSource0.getConnectionTimeout());
      assertEquals(0L, hikariDataSource0.getAcquireRetryDelay());
      assertNull(hikariDataSource0.getDataSourceClassName());
      assertNull(hikariDataSource0.getConnectionCustomizerClassName());
      assertFalse(hikariDataSource0.isRegisterMbeans());
      assertFalse(hikariDataSource0.getisShutdown());
      assertEquals("HikariPool-1", hikariDataSource0.getPoolName());
      assertEquals((-1), hikariDataSource0.getTransactionIsolation());
      assertTrue(hikariDataSource0.isAutoCommit());
      assertNull(hikariDataSource0.getConnectionInitSql());
      assertEquals(0L, hikariDataSource0.getLeakDetectionThreshold());
      assertEquals(0, hikariDataSource0.getAcquireIncrement());
      assertEquals(1800000L, hikariDataSource0.getMaxLifetime());
      assertEquals(60, hikariDataSource0.getMaximumPoolSize());
      assertEquals(3, hikariDataSource0.getAcquireRetries());
      assertEquals(600000L, hikariDataSource0.getIdleTimeout());
      assertNull(hikariDataSource0.getConnectionTestQuery());
      assertFalse(hikariDataSource0.isInitializationFailFast());
      assertTrue(hikariDataSource0.isJdbc4ConnectionTest());
      assertEquals(0, hikariDataSource0.loginTimeout);
      assertFalse(hikariDataSource0.isShutdown);
      
      String string1 = "<h*3tU31q8JLA&<";
      HikariPool hikariPool0 = new HikariPool(hikariConfig0);
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertTrue(hikariConfig0.isAutoCommit());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals(10, hikariPool0.getTotalConnections());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertFalse(hikariPool0.getshutdown());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertEquals("z~NH}l5*1f$G/", hikariPool0.getcatalog());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertTrue(hikariPool0.getisAutoCommit());
      assertFalse(hikariPool0.getdebug());
      assertNotNull(hikariPool0);
      assertFalse(hikariPool0.debug);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertTrue(hikariPool0.isAutoCommit);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertFalse(hikariPool0.shutdown);
      
      hikariPool0.bagIsEmpty();
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertTrue(hikariConfig0.isAutoCommit());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertFalse(hikariPool0.getshutdown());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertEquals("z~NH}l5*1f$G/", hikariPool0.getcatalog());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertTrue(hikariPool0.getisAutoCommit());
      assertFalse(hikariPool0.getdebug());
      assertEquals(11, hikariPool0.getTotalConnections());
      assertFalse(hikariPool0.debug);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertTrue(hikariPool0.isAutoCommit);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertFalse(hikariPool0.shutdown);
      
      hikariPool0.shutdown();
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertTrue(hikariConfig0.isAutoCommit());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertEquals("z~NH}l5*1f$G/", hikariPool0.getcatalog());
      assertTrue(hikariPool0.getshutdown());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertTrue(hikariPool0.getisAutoCommit());
      assertFalse(hikariPool0.getdebug());
      assertEquals(11, hikariPool0.getTotalConnections());
      assertTrue(hikariPool0.shutdown);
      assertFalse(hikariPool0.debug);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertTrue(hikariPool0.isAutoCommit);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertEquals((-1), hikariPool0.transactionIsolation);
      
      try { 
        hikariPool0.getConnection();
        fail("Expecting exception: SQLException");
      
      } catch(SQLException e) {
         //
         // Pool has been shutdown
         //
         verifyException("com.zaxxer.hikari.HikariPool", e);
      }
  }

  @Test(timeout = 11000)
  public void test06()  throws Throwable  {
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
      
      HikariConfig hikariConfig0 = new HikariConfig();
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isAutoCommit());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertNotNull(hikariConfig0);
      
      String string0 = "z~NH}l5*1f$G/";
      HikariDataSource hikariDataSource0 = new HikariDataSource();
      assertEquals(0, hikariDataSource0.getLoginTimeout());
      assertEquals(0L, hikariDataSource0.getAcquireRetryDelay());
      assertNull(hikariDataSource0.getCatalog());
      assertNull(hikariDataSource0.getDataSourceClassName());
      assertTrue(hikariDataSource0.isAutoCommit());
      assertNull(hikariDataSource0.getConnectionCustomizerClassName());
      assertFalse(hikariDataSource0.getisShutdown());
      assertEquals("HikariPool-1", hikariDataSource0.getPoolName());
      assertFalse(hikariDataSource0.isRegisterMbeans());
      assertEquals(10, hikariDataSource0.getMinimumPoolSize());
      assertEquals((-1), hikariDataSource0.getTransactionIsolation());
      assertFalse(hikariDataSource0.isInitializationFailFast());
      assertEquals(0L, hikariDataSource0.getLeakDetectionThreshold());
      assertEquals(0, hikariDataSource0.getAcquireIncrement());
      assertNull(hikariDataSource0.getConnectionInitSql());
      assertEquals(1800000L, hikariDataSource0.getMaxLifetime());
      assertEquals(600000L, hikariDataSource0.getIdleTimeout());
      assertEquals(3, hikariDataSource0.getAcquireRetries());
      assertNull(hikariDataSource0.getConnectionTestQuery());
      assertEquals(60, hikariDataSource0.getMaximumPoolSize());
      assertEquals(5000L, hikariDataSource0.getConnectionTimeout());
      assertTrue(hikariDataSource0.isJdbc4ConnectionTest());
      assertNotNull(hikariDataSource0);
      assertFalse(hikariDataSource0.isShutdown);
      assertEquals(0, hikariDataSource0.loginTimeout);
      
      hikariConfig0.setDataSource(hikariDataSource0);
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isAutoCommit());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals(0, hikariDataSource0.getLoginTimeout());
      assertEquals(0L, hikariDataSource0.getAcquireRetryDelay());
      assertNull(hikariDataSource0.getCatalog());
      assertNull(hikariDataSource0.getDataSourceClassName());
      assertTrue(hikariDataSource0.isAutoCommit());
      assertNull(hikariDataSource0.getConnectionCustomizerClassName());
      assertFalse(hikariDataSource0.getisShutdown());
      assertEquals("HikariPool-1", hikariDataSource0.getPoolName());
      assertFalse(hikariDataSource0.isRegisterMbeans());
      assertEquals(10, hikariDataSource0.getMinimumPoolSize());
      assertEquals((-1), hikariDataSource0.getTransactionIsolation());
      assertFalse(hikariDataSource0.isInitializationFailFast());
      assertEquals(0L, hikariDataSource0.getLeakDetectionThreshold());
      assertEquals(0, hikariDataSource0.getAcquireIncrement());
      assertNull(hikariDataSource0.getConnectionInitSql());
      assertEquals(1800000L, hikariDataSource0.getMaxLifetime());
      assertEquals(600000L, hikariDataSource0.getIdleTimeout());
      assertEquals(3, hikariDataSource0.getAcquireRetries());
      assertNull(hikariDataSource0.getConnectionTestQuery());
      assertEquals(60, hikariDataSource0.getMaximumPoolSize());
      assertEquals(5000L, hikariDataSource0.getConnectionTimeout());
      assertTrue(hikariDataSource0.isJdbc4ConnectionTest());
      assertFalse(hikariDataSource0.isShutdown);
      assertEquals(0, hikariDataSource0.loginTimeout);
      
      hikariConfig0.setMaximumPoolSize(hikariDataSource0.loginTimeout);
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertTrue(hikariConfig0.isAutoCommit());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(0, hikariConfig0.getMaximumPoolSize());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals(0, hikariDataSource0.getLoginTimeout());
      assertEquals(0L, hikariDataSource0.getAcquireRetryDelay());
      assertNull(hikariDataSource0.getCatalog());
      assertNull(hikariDataSource0.getDataSourceClassName());
      assertTrue(hikariDataSource0.isAutoCommit());
      assertNull(hikariDataSource0.getConnectionCustomizerClassName());
      assertFalse(hikariDataSource0.getisShutdown());
      assertEquals("HikariPool-1", hikariDataSource0.getPoolName());
      assertFalse(hikariDataSource0.isRegisterMbeans());
      assertEquals(10, hikariDataSource0.getMinimumPoolSize());
      assertEquals((-1), hikariDataSource0.getTransactionIsolation());
      assertFalse(hikariDataSource0.isInitializationFailFast());
      assertEquals(0L, hikariDataSource0.getLeakDetectionThreshold());
      assertEquals(0, hikariDataSource0.getAcquireIncrement());
      assertNull(hikariDataSource0.getConnectionInitSql());
      assertEquals(1800000L, hikariDataSource0.getMaxLifetime());
      assertEquals(600000L, hikariDataSource0.getIdleTimeout());
      assertEquals(3, hikariDataSource0.getAcquireRetries());
      assertNull(hikariDataSource0.getConnectionTestQuery());
      assertEquals(60, hikariDataSource0.getMaximumPoolSize());
      assertEquals(5000L, hikariDataSource0.getConnectionTimeout());
      assertTrue(hikariDataSource0.isJdbc4ConnectionTest());
      assertFalse(hikariDataSource0.isShutdown);
      assertEquals(0, hikariDataSource0.loginTimeout);
      
      String string1 = "<h*3tU31q8JL`A&<";
      hikariConfig0.setDataSourceClassName(string1);
      assertNotSame(string1, string0);
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertTrue(hikariConfig0.isAutoCommit());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(0, hikariConfig0.getMaximumPoolSize());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals("<h*3tU31q8JL`A&<", hikariConfig0.getDataSourceClassName());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertFalse(string1.equals((Object)string0));
      
      HikariPool hikariPool0 = new HikariPool(hikariConfig0);
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals(10, hikariConfig0.getMaximumPoolSize());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertTrue(hikariConfig0.isAutoCommit());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals("<h*3tU31q8JL`A&<", hikariConfig0.getDataSourceClassName());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertFalse(hikariPool0.getshutdown());
      assertFalse(hikariPool0.getdebug());
      assertEquals(10, hikariPool0.getTotalConnections());
      assertTrue(hikariPool0.getisAutoCommit());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertNull(hikariPool0.getcatalog());
      assertNotNull(hikariPool0);
      assertTrue(hikariPool0.isAutoCommit);
      assertFalse(hikariPool0.debug);
      assertFalse(hikariPool0.shutdown);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      
      boolean boolean1 = false;
      hikariPool0.bagIsEmpty();
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals(10, hikariConfig0.getMaximumPoolSize());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertTrue(hikariConfig0.isAutoCommit());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals("<h*3tU31q8JL`A&<", hikariConfig0.getDataSourceClassName());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertFalse(hikariPool0.getshutdown());
      assertFalse(hikariPool0.getdebug());
      assertEquals(10, hikariPool0.getTotalConnections());
      assertTrue(hikariPool0.getisAutoCommit());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertNull(hikariPool0.getcatalog());
      assertTrue(hikariPool0.isAutoCommit);
      assertFalse(hikariPool0.debug);
      assertFalse(hikariPool0.shutdown);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      
      hikariPool0.closeIdleConnections();
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals(10, hikariConfig0.getMaximumPoolSize());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertTrue(hikariConfig0.isAutoCommit());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals("<h*3tU31q8JL`A&<", hikariConfig0.getDataSourceClassName());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertFalse(hikariPool0.getshutdown());
      assertFalse(hikariPool0.getdebug());
      assertEquals(10, hikariPool0.getTotalConnections());
      assertTrue(hikariPool0.getisAutoCommit());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertNull(hikariPool0.getcatalog());
      assertTrue(hikariPool0.isAutoCommit);
      assertFalse(hikariPool0.debug);
      assertFalse(hikariPool0.shutdown);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      
      IHikariConnectionProxy iHikariConnectionProxy0 = mock(IHikariConnectionProxy.class, new ViolatedAssumptionAnswer());
      doReturn(boolean1).when(iHikariConnectionProxy0).isValid(anyInt());
      boolean boolean2 = hikariPool0.isConnectionAlive(iHikariConnectionProxy0, hikariDataSource0.loginTimeout);
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals(10, hikariConfig0.getMaximumPoolSize());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertTrue(hikariConfig0.isAutoCommit());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals("<h*3tU31q8JL`A&<", hikariConfig0.getDataSourceClassName());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(0L, hikariDataSource0.getAcquireRetryDelay());
      assertNull(hikariDataSource0.getCatalog());
      assertNull(hikariDataSource0.getDataSourceClassName());
      assertTrue(hikariDataSource0.isAutoCommit());
      assertNull(hikariDataSource0.getConnectionCustomizerClassName());
      assertFalse(hikariDataSource0.getisShutdown());
      assertEquals("HikariPool-1", hikariDataSource0.getPoolName());
      assertFalse(hikariDataSource0.isRegisterMbeans());
      assertEquals(10, hikariDataSource0.getMinimumPoolSize());
      assertEquals((-1), hikariDataSource0.getTransactionIsolation());
      assertFalse(hikariDataSource0.isInitializationFailFast());
      assertEquals(0L, hikariDataSource0.getLeakDetectionThreshold());
      assertEquals(0, hikariDataSource0.getAcquireIncrement());
      assertNull(hikariDataSource0.getConnectionInitSql());
      assertEquals(1800000L, hikariDataSource0.getMaxLifetime());
      assertEquals(600000L, hikariDataSource0.getIdleTimeout());
      assertEquals(3, hikariDataSource0.getAcquireRetries());
      assertNull(hikariDataSource0.getConnectionTestQuery());
      assertEquals(60, hikariDataSource0.getMaximumPoolSize());
      assertEquals(1250, hikariDataSource0.getLoginTimeout());
      assertEquals(5000L, hikariDataSource0.getConnectionTimeout());
      assertTrue(hikariDataSource0.isJdbc4ConnectionTest());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertFalse(hikariPool0.getshutdown());
      assertFalse(hikariPool0.getdebug());
      assertEquals(10, hikariPool0.getTotalConnections());
      assertTrue(hikariPool0.getisAutoCommit());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertNull(hikariPool0.getcatalog());
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2 == boolean0);
      assertFalse(boolean2);
      assertFalse(hikariDataSource0.isShutdown);
      assertEquals(1250, hikariDataSource0.loginTimeout);
      assertTrue(hikariPool0.isAutoCommit);
      assertFalse(hikariPool0.debug);
      assertFalse(hikariPool0.shutdown);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      
      int int0 = hikariPool0.getThreadsAwaitingConnection();
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals(10, hikariConfig0.getMaximumPoolSize());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertTrue(hikariConfig0.isAutoCommit());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals("<h*3tU31q8JL`A&<", hikariConfig0.getDataSourceClassName());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertFalse(hikariPool0.getshutdown());
      assertFalse(hikariPool0.getdebug());
      assertEquals(10, hikariPool0.getTotalConnections());
      assertTrue(hikariPool0.getisAutoCommit());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertNull(hikariPool0.getcatalog());
      assertEquals(0, int0);
      assertTrue(hikariPool0.isAutoCommit);
      assertFalse(hikariPool0.debug);
      assertFalse(hikariPool0.shutdown);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      
      IHikariConnectionProxy iHikariConnectionProxy1 = mock(IHikariConnectionProxy.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(iHikariConnectionProxy1).isBrokenConnection();
      doReturn(false).when(iHikariConnectionProxy1).compareAndSetState(anyInt() , anyInt());
      // Undeclared exception!
      try { 
        hikariPool0.releaseConnection(iHikariConnectionProxy1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Value was returned to the bag that was not borrowed
         //
         verifyException("com.zaxxer.hikari.util.ConcurrentBag", e);
      }
  }

  @Test(timeout = 11000)
  public void test07()  throws Throwable  {
      HikariConfig hikariConfig0 = new HikariConfig();
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isAutoCommit());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertNull(hikariConfig0.getCatalog());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertNotNull(hikariConfig0);
      
      String string0 = "(I)Ljava/lang/String;";
      hikariConfig0.setConnectionCustomizerClassName(string0);
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isAutoCommit());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getCatalog());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals("(I)Ljava/lang/String;", hikariConfig0.getConnectionCustomizerClassName());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      
      String string1 = "z~NH}l5*1f$G/";
      HikariDataSource hikariDataSource0 = new HikariDataSource();
      assertNull(hikariDataSource0.getDataSourceClassName());
      assertEquals(60, hikariDataSource0.getMaximumPoolSize());
      assertEquals("HikariPool-1", hikariDataSource0.getPoolName());
      assertEquals(10, hikariDataSource0.getMinimumPoolSize());
      assertNull(hikariDataSource0.getCatalog());
      assertNull(hikariDataSource0.getConnectionInitSql());
      assertTrue(hikariDataSource0.isAutoCommit());
      assertNull(hikariDataSource0.getConnectionCustomizerClassName());
      assertFalse(hikariDataSource0.getisShutdown());
      assertFalse(hikariDataSource0.isRegisterMbeans());
      assertEquals((-1), hikariDataSource0.getTransactionIsolation());
      assertEquals(1800000L, hikariDataSource0.getMaxLifetime());
      assertEquals(600000L, hikariDataSource0.getIdleTimeout());
      assertEquals(0L, hikariDataSource0.getLeakDetectionThreshold());
      assertEquals(0, hikariDataSource0.getAcquireIncrement());
      assertNull(hikariDataSource0.getConnectionTestQuery());
      assertTrue(hikariDataSource0.isJdbc4ConnectionTest());
      assertEquals(0, hikariDataSource0.getLoginTimeout());
      assertEquals(3, hikariDataSource0.getAcquireRetries());
      assertFalse(hikariDataSource0.isInitializationFailFast());
      assertEquals(0L, hikariDataSource0.getAcquireRetryDelay());
      assertEquals(5000L, hikariDataSource0.getConnectionTimeout());
      assertNotNull(hikariDataSource0);
      assertFalse(hikariDataSource0.isShutdown);
      assertEquals(0, hikariDataSource0.loginTimeout);
      
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      hikariDataSource0.setPoolName(string0);
      assertNotSame(string0, string1);
      assertNull(hikariDataSource0.getDataSourceClassName());
      assertEquals(60, hikariDataSource0.getMaximumPoolSize());
      assertEquals(10, hikariDataSource0.getMinimumPoolSize());
      assertNull(hikariDataSource0.getCatalog());
      assertNull(hikariDataSource0.getConnectionInitSql());
      assertTrue(hikariDataSource0.isAutoCommit());
      assertNull(hikariDataSource0.getConnectionCustomizerClassName());
      assertFalse(hikariDataSource0.getisShutdown());
      assertFalse(hikariDataSource0.isRegisterMbeans());
      assertEquals("(I)Ljava/lang/String;", hikariDataSource0.getPoolName());
      assertEquals((-1), hikariDataSource0.getTransactionIsolation());
      assertEquals(1800000L, hikariDataSource0.getMaxLifetime());
      assertEquals(600000L, hikariDataSource0.getIdleTimeout());
      assertEquals(0L, hikariDataSource0.getLeakDetectionThreshold());
      assertEquals(0, hikariDataSource0.getAcquireIncrement());
      assertNull(hikariDataSource0.getConnectionTestQuery());
      assertTrue(hikariDataSource0.isJdbc4ConnectionTest());
      assertEquals(0, hikariDataSource0.getLoginTimeout());
      assertEquals(3, hikariDataSource0.getAcquireRetries());
      assertFalse(hikariDataSource0.isInitializationFailFast());
      assertEquals(0L, hikariDataSource0.getAcquireRetryDelay());
      assertEquals(5000L, hikariDataSource0.getConnectionTimeout());
      assertFalse(string0.equals((Object)string1));
      assertFalse(hikariDataSource0.isShutdown);
      assertEquals(0, hikariDataSource0.loginTimeout);
      
      hikariConfig0.setDataSource(hikariDataSource0);
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isAutoCommit());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getCatalog());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals("(I)Ljava/lang/String;", hikariConfig0.getConnectionCustomizerClassName());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertNull(hikariDataSource0.getDataSourceClassName());
      assertEquals(60, hikariDataSource0.getMaximumPoolSize());
      assertEquals(10, hikariDataSource0.getMinimumPoolSize());
      assertNull(hikariDataSource0.getCatalog());
      assertNull(hikariDataSource0.getConnectionInitSql());
      assertTrue(hikariDataSource0.isAutoCommit());
      assertNull(hikariDataSource0.getConnectionCustomizerClassName());
      assertFalse(hikariDataSource0.getisShutdown());
      assertFalse(hikariDataSource0.isRegisterMbeans());
      assertEquals("(I)Ljava/lang/String;", hikariDataSource0.getPoolName());
      assertEquals((-1), hikariDataSource0.getTransactionIsolation());
      assertEquals(1800000L, hikariDataSource0.getMaxLifetime());
      assertEquals(600000L, hikariDataSource0.getIdleTimeout());
      assertEquals(0L, hikariDataSource0.getLeakDetectionThreshold());
      assertEquals(0, hikariDataSource0.getAcquireIncrement());
      assertNull(hikariDataSource0.getConnectionTestQuery());
      assertTrue(hikariDataSource0.isJdbc4ConnectionTest());
      assertEquals(0, hikariDataSource0.getLoginTimeout());
      assertEquals(3, hikariDataSource0.getAcquireRetries());
      assertFalse(hikariDataSource0.isInitializationFailFast());
      assertEquals(0L, hikariDataSource0.getAcquireRetryDelay());
      assertEquals(5000L, hikariDataSource0.getConnectionTimeout());
      assertFalse(hikariDataSource0.isShutdown);
      assertEquals(0, hikariDataSource0.loginTimeout);
      
      EvoSuiteFile evoSuiteFile0 = null;
      boolean boolean0 = FileSystemHandling.createFolder(evoSuiteFile0);
      assertFalse(boolean0);
      
      boolean boolean1 = FileSystemHandling.appendLineToFile(evoSuiteFile0, string1);
      assertNotSame(string1, string0);
      assertFalse(string1.equals((Object)string0));
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      
      hikariConfig0.setIdleTimeout(hikariDataSource0.loginTimeout);
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(0L, hikariConfig0.getIdleTimeout());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isAutoCommit());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getCatalog());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals("(I)Ljava/lang/String;", hikariConfig0.getConnectionCustomizerClassName());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertNull(hikariDataSource0.getDataSourceClassName());
      assertEquals(60, hikariDataSource0.getMaximumPoolSize());
      assertEquals(10, hikariDataSource0.getMinimumPoolSize());
      assertNull(hikariDataSource0.getCatalog());
      assertNull(hikariDataSource0.getConnectionInitSql());
      assertTrue(hikariDataSource0.isAutoCommit());
      assertNull(hikariDataSource0.getConnectionCustomizerClassName());
      assertFalse(hikariDataSource0.getisShutdown());
      assertFalse(hikariDataSource0.isRegisterMbeans());
      assertEquals("(I)Ljava/lang/String;", hikariDataSource0.getPoolName());
      assertEquals((-1), hikariDataSource0.getTransactionIsolation());
      assertEquals(1800000L, hikariDataSource0.getMaxLifetime());
      assertEquals(600000L, hikariDataSource0.getIdleTimeout());
      assertEquals(0L, hikariDataSource0.getLeakDetectionThreshold());
      assertEquals(0, hikariDataSource0.getAcquireIncrement());
      assertNull(hikariDataSource0.getConnectionTestQuery());
      assertTrue(hikariDataSource0.isJdbc4ConnectionTest());
      assertEquals(0, hikariDataSource0.getLoginTimeout());
      assertEquals(3, hikariDataSource0.getAcquireRetries());
      assertFalse(hikariDataSource0.isInitializationFailFast());
      assertEquals(0L, hikariDataSource0.getAcquireRetryDelay());
      assertEquals(5000L, hikariDataSource0.getConnectionTimeout());
      assertFalse(hikariDataSource0.isShutdown);
      assertEquals(0, hikariDataSource0.loginTimeout);
      
      String string2 = "H5PCLlS:sDwB9";
      hikariConfig0.setConnectionTestQuery(string2);
      assertNotSame(string2, string1);
      assertNotSame(string2, string0);
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(0L, hikariConfig0.getIdleTimeout());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals("H5PCLlS:sDwB9", hikariConfig0.getConnectionTestQuery());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isAutoCommit());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getCatalog());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals("(I)Ljava/lang/String;", hikariConfig0.getConnectionCustomizerClassName());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      
      hikariConfig0.setDataSource(hikariDataSource0);
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(0L, hikariConfig0.getIdleTimeout());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals("H5PCLlS:sDwB9", hikariConfig0.getConnectionTestQuery());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isAutoCommit());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getCatalog());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals("(I)Ljava/lang/String;", hikariConfig0.getConnectionCustomizerClassName());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertNull(hikariDataSource0.getDataSourceClassName());
      assertEquals(60, hikariDataSource0.getMaximumPoolSize());
      assertEquals(10, hikariDataSource0.getMinimumPoolSize());
      assertNull(hikariDataSource0.getCatalog());
      assertNull(hikariDataSource0.getConnectionInitSql());
      assertTrue(hikariDataSource0.isAutoCommit());
      assertNull(hikariDataSource0.getConnectionCustomizerClassName());
      assertFalse(hikariDataSource0.getisShutdown());
      assertFalse(hikariDataSource0.isRegisterMbeans());
      assertEquals("(I)Ljava/lang/String;", hikariDataSource0.getPoolName());
      assertEquals((-1), hikariDataSource0.getTransactionIsolation());
      assertEquals(1800000L, hikariDataSource0.getMaxLifetime());
      assertEquals(600000L, hikariDataSource0.getIdleTimeout());
      assertEquals(0L, hikariDataSource0.getLeakDetectionThreshold());
      assertEquals(0, hikariDataSource0.getAcquireIncrement());
      assertNull(hikariDataSource0.getConnectionTestQuery());
      assertTrue(hikariDataSource0.isJdbc4ConnectionTest());
      assertEquals(0, hikariDataSource0.getLoginTimeout());
      assertEquals(3, hikariDataSource0.getAcquireRetries());
      assertFalse(hikariDataSource0.isInitializationFailFast());
      assertEquals(0L, hikariDataSource0.getAcquireRetryDelay());
      assertEquals(5000L, hikariDataSource0.getConnectionTimeout());
      assertFalse(hikariDataSource0.isShutdown);
      assertEquals(0, hikariDataSource0.loginTimeout);
      
      String string3 = "<h*<U31q8JLA&<";
      hikariConfig0.setDataSourceClassName(string3);
      assertNotSame(string3, string0);
      assertNotSame(string3, string2);
      assertNotSame(string3, string1);
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(0L, hikariConfig0.getIdleTimeout());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals("H5PCLlS:sDwB9", hikariConfig0.getConnectionTestQuery());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isAutoCommit());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getCatalog());
      assertEquals("(I)Ljava/lang/String;", hikariConfig0.getConnectionCustomizerClassName());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals("<h*<U31q8JLA&<", hikariConfig0.getDataSourceClassName());
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string1));
      
      HikariPool hikariPool0 = new HikariPool(hikariConfig0);
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(0L, hikariConfig0.getIdleTimeout());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals("H5PCLlS:sDwB9", hikariConfig0.getConnectionTestQuery());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isAutoCommit());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals("<h*<U31q8JLA&<", hikariConfig0.getDataSourceClassName());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertEquals(10, hikariPool0.getTotalConnections());
      assertFalse(hikariPool0.getdebug());
      assertNull(hikariPool0.getcatalog());
      assertFalse(hikariPool0.getshutdown());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertTrue(hikariPool0.getisAutoCommit());
      assertNotNull(hikariPool0);
      assertFalse(hikariPool0.debug);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertTrue(hikariPool0.isAutoCommit);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertFalse(hikariPool0.shutdown);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      
      ConcurrentBag<IHikariConnectionProxy> concurrentBag0 = hikariPool0.getidleConnectionBag();
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(0L, hikariConfig0.getIdleTimeout());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals("H5PCLlS:sDwB9", hikariConfig0.getConnectionTestQuery());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isAutoCommit());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals("<h*<U31q8JLA&<", hikariConfig0.getDataSourceClassName());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertEquals(10, hikariPool0.getTotalConnections());
      assertFalse(hikariPool0.getdebug());
      assertNull(hikariPool0.getcatalog());
      assertFalse(hikariPool0.getshutdown());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertTrue(hikariPool0.getisAutoCommit());
      assertEquals((-1), concurrentBag0.getSTATE_REMOVED());
      assertEquals(0, concurrentBag0.getSTATE_NOT_IN_USE());
      assertEquals((-2), concurrentBag0.getSTATE_RESERVED());
      assertEquals(1, concurrentBag0.getSTATE_IN_USE());
      assertNotNull(concurrentBag0);
      assertFalse(hikariPool0.debug);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertTrue(hikariPool0.isAutoCommit);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertFalse(hikariPool0.shutdown);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertEquals((-2), ConcurrentBag.STATE_RESERVED);
      assertEquals(0, ConcurrentBag.STATE_NOT_IN_USE);
      assertEquals(1, ConcurrentBag.STATE_IN_USE);
      assertEquals((-1), ConcurrentBag.STATE_REMOVED);
      
      IConnectionCustomizer iConnectionCustomizer0 = hikariPool0.getconnectionCustomizer();
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(0L, hikariConfig0.getIdleTimeout());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals("H5PCLlS:sDwB9", hikariConfig0.getConnectionTestQuery());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isAutoCommit());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals("<h*<U31q8JLA&<", hikariConfig0.getDataSourceClassName());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertEquals(10, hikariPool0.getTotalConnections());
      assertFalse(hikariPool0.getdebug());
      assertNull(hikariPool0.getcatalog());
      assertFalse(hikariPool0.getshutdown());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertTrue(hikariPool0.getisAutoCommit());
      assertNull(iConnectionCustomizer0);
      assertFalse(hikariPool0.debug);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertTrue(hikariPool0.isAutoCommit);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertFalse(hikariPool0.shutdown);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
  }

  @Test(timeout = 11000)
  public void test08()  throws Throwable  {
      HikariConfig hikariConfig0 = null;
      HikariPool hikariPool0 = null;
      try {
        hikariPool0 = new HikariPool(hikariConfig0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.zaxxer.hikari.HikariPool", e);
      }
  }

  @Test(timeout = 11000)
  public void test09()  throws Throwable  {
      Properties properties0 = new Properties();
      assertEquals(0, properties0.size());
      assertTrue(properties0.isEmpty());
      assertNotNull(properties0);
      
      HikariConfig hikariConfig0 = new HikariConfig(properties0);
      assertEquals(0, properties0.size());
      assertTrue(properties0.isEmpty());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertNull(hikariConfig0.getCatalog());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertNotNull(hikariConfig0);
      
      HikariPool hikariPool0 = null;
      try {
        hikariPool0 = new HikariPool(hikariConfig0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // one of either dataSource or dataSourceClassName must be specified
         //
         verifyException("com.zaxxer.hikari.HikariConfig", e);
      }
  }

  @Test(timeout = 11000)
  public void test10()  throws Throwable  {
      SerializedObjectSupporter serializedObjectSupporter0 = new SerializedObjectSupporter();
      assertNotNull(serializedObjectSupporter0);
      
      HikariDataSource hikariDataSource0 = serializedObjectSupporter0.deserializeObjectHikariConfig5();
      assertNull(hikariDataSource0);
      
      HikariPool hikariPool0 = null;
      try {
        hikariPool0 = new HikariPool(hikariDataSource0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.zaxxer.hikari.HikariPool", e);
      }
  }

  @Test(timeout = 11000)
  public void test11()  throws Throwable  {
      HikariConfig hikariConfig0 = new HikariConfig();
      assertNull(hikariConfig0.getCatalog());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertTrue(hikariConfig0.isAutoCommit());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertNotNull(hikariConfig0);
      
      String string0 = "h-g'/mk'03u=3";
      hikariConfig0.setDataSourceClassName(string0);
      assertNull(hikariConfig0.getCatalog());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals("h-g'/mk'03u=3", hikariConfig0.getDataSourceClassName());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertTrue(hikariConfig0.isAutoCommit());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      
      HikariPool hikariPool0 = null;
      try {
        hikariPool0 = new HikariPool(hikariConfig0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Could not create datasource instance: h-g'/mk'03u=3
         //
         verifyException("com.zaxxer.hikari.HikariPool", e);
      }
  }

  @Test(timeout = 11000)
  public void test12()  throws Throwable  {
      HikariConfig hikariConfig0 = new HikariConfig();
      assertNull(hikariConfig0.getCatalog());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertNotNull(hikariConfig0);
      
      String string0 = "com.zaxxer.hikari.HikariPool$1";
      hikariConfig0.setDataSourceClassName(string0);
      assertNull(hikariConfig0.getCatalog());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals("com.zaxxer.hikari.HikariPool$1", hikariConfig0.getDataSourceClassName());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      
      HikariPool hikariPool0 = null;
      try {
        hikariPool0 = new HikariPool(hikariConfig0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Could not create datasource instance: com.zaxxer.hikari.HikariPool$1
         //
         verifyException("com.zaxxer.hikari.HikariPool", e);
      }
  }

  @Test(timeout = 11000)
  public void test13()  throws Throwable  {
      HikariConfig hikariConfig0 = new HikariConfig();
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isAutoCommit());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getCatalog());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertNotNull(hikariConfig0);
      
      String string0 = "h-g'/mk'03u=3";
      hikariConfig0.setTransactionIsolation(string0);
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isAutoCommit());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getCatalog());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      
      hikariConfig0.setDataSourceClassName(string0);
      assertEquals("h-g'/mk'03u=3", hikariConfig0.getDataSourceClassName());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isAutoCommit());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getCatalog());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      
      HikariPool hikariPool0 = null;
      try {
        hikariPool0 = new HikariPool(hikariConfig0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid transaction isolation value: h-g'/mk'03u=3
         //
         verifyException("com.zaxxer.hikari.HikariConfig", e);
      }
  }

  @Test(timeout = 11000)
  public void test14()  throws Throwable  {
      HikariConfig hikariConfig0 = new HikariConfig();
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getCatalog());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertNotNull(hikariConfig0);
      
      String string0 = "z~NH}l5*1f$G/";
      hikariConfig0.setCatalog(string0);
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      
      HikariDataSource hikariDataSource0 = new HikariDataSource();
      assertEquals((-1), hikariDataSource0.getTransactionIsolation());
      assertEquals(1800000L, hikariDataSource0.getMaxLifetime());
      assertEquals(600000L, hikariDataSource0.getIdleTimeout());
      assertEquals(3, hikariDataSource0.getAcquireRetries());
      assertFalse(hikariDataSource0.isRegisterMbeans());
      assertFalse(hikariDataSource0.getisShutdown());
      assertFalse(hikariDataSource0.isInitializationFailFast());
      assertTrue(hikariDataSource0.isJdbc4ConnectionTest());
      assertEquals(60, hikariDataSource0.getMaximumPoolSize());
      assertNull(hikariDataSource0.getConnectionInitSql());
      assertEquals(0L, hikariDataSource0.getLeakDetectionThreshold());
      assertEquals(0, hikariDataSource0.getAcquireIncrement());
      assertNull(hikariDataSource0.getDataSourceClassName());
      assertNull(hikariDataSource0.getCatalog());
      assertEquals(0, hikariDataSource0.getLoginTimeout());
      assertEquals(0L, hikariDataSource0.getAcquireRetryDelay());
      assertNull(hikariDataSource0.getConnectionCustomizerClassName());
      assertEquals(5000L, hikariDataSource0.getConnectionTimeout());
      assertTrue(hikariDataSource0.isAutoCommit());
      assertEquals(10, hikariDataSource0.getMinimumPoolSize());
      assertNull(hikariDataSource0.getConnectionTestQuery());
      assertEquals("HikariPool-1", hikariDataSource0.getPoolName());
      assertNotNull(hikariDataSource0);
      assertFalse(hikariDataSource0.isShutdown);
      assertEquals(0, hikariDataSource0.loginTimeout);
      
      hikariConfig0.setDataSource(hikariDataSource0);
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals((-1), hikariDataSource0.getTransactionIsolation());
      assertEquals(1800000L, hikariDataSource0.getMaxLifetime());
      assertEquals(600000L, hikariDataSource0.getIdleTimeout());
      assertEquals(3, hikariDataSource0.getAcquireRetries());
      assertFalse(hikariDataSource0.isRegisterMbeans());
      assertFalse(hikariDataSource0.getisShutdown());
      assertFalse(hikariDataSource0.isInitializationFailFast());
      assertTrue(hikariDataSource0.isJdbc4ConnectionTest());
      assertEquals(60, hikariDataSource0.getMaximumPoolSize());
      assertNull(hikariDataSource0.getConnectionInitSql());
      assertEquals(0L, hikariDataSource0.getLeakDetectionThreshold());
      assertEquals(0, hikariDataSource0.getAcquireIncrement());
      assertNull(hikariDataSource0.getDataSourceClassName());
      assertNull(hikariDataSource0.getCatalog());
      assertEquals(0, hikariDataSource0.getLoginTimeout());
      assertEquals(0L, hikariDataSource0.getAcquireRetryDelay());
      assertNull(hikariDataSource0.getConnectionCustomizerClassName());
      assertEquals(5000L, hikariDataSource0.getConnectionTimeout());
      assertTrue(hikariDataSource0.isAutoCommit());
      assertEquals(10, hikariDataSource0.getMinimumPoolSize());
      assertNull(hikariDataSource0.getConnectionTestQuery());
      assertEquals("HikariPool-1", hikariDataSource0.getPoolName());
      assertFalse(hikariDataSource0.isShutdown);
      assertEquals(0, hikariDataSource0.loginTimeout);
      
      String string1 = "<h*3tU31q8JLA&<";
      hikariConfig0.setDataSourceClassName(string1);
      assertNotSame(string1, string0);
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals("<h*3tU31q8JLA&<", hikariConfig0.getDataSourceClassName());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertFalse(string1.equals((Object)string0));
      
      HikariPool hikariPool0 = new HikariPool(hikariConfig0);
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals("<h*3tU31q8JLA&<", hikariConfig0.getDataSourceClassName());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertEquals(10, hikariPool0.getTotalConnections());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertEquals("z~NH}l5*1f$G/", hikariPool0.getcatalog());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertFalse(hikariPool0.getshutdown());
      assertFalse(hikariPool0.getdebug());
      assertTrue(hikariPool0.getisAutoCommit());
      assertNotNull(hikariPool0);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertTrue(hikariPool0.isAutoCommit);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertFalse(hikariPool0.shutdown);
      assertFalse(hikariPool0.debug);
      assertEquals((-1), hikariPool0.transactionIsolation);
      
      boolean boolean0 = hikariPool0.getjdbc4ConnectionTest();
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals("<h*3tU31q8JLA&<", hikariConfig0.getDataSourceClassName());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertEquals(10, hikariPool0.getTotalConnections());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertEquals("z~NH}l5*1f$G/", hikariPool0.getcatalog());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertFalse(hikariPool0.getshutdown());
      assertFalse(hikariPool0.getdebug());
      assertTrue(hikariPool0.getisAutoCommit());
      assertTrue(boolean0);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertTrue(hikariPool0.isAutoCommit);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertFalse(hikariPool0.shutdown);
      assertFalse(hikariPool0.debug);
      assertEquals((-1), hikariPool0.transactionIsolation);
      
      int int0 = hikariPool0.gettransactionIsolation();
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals("<h*3tU31q8JLA&<", hikariConfig0.getDataSourceClassName());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertEquals(10, hikariPool0.getTotalConnections());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertEquals("z~NH}l5*1f$G/", hikariPool0.getcatalog());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertFalse(hikariPool0.getshutdown());
      assertFalse(hikariPool0.getdebug());
      assertTrue(hikariPool0.getisAutoCommit());
      assertEquals((-1), int0);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertTrue(hikariPool0.isAutoCommit);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertFalse(hikariPool0.shutdown);
      assertFalse(hikariPool0.debug);
      assertEquals((-1), hikariPool0.transactionIsolation);
  }

  @Test(timeout = 11000)
  public void test15()  throws Throwable  {
      HikariConfig hikariConfig0 = new HikariConfig();
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertTrue(hikariConfig0.isAutoCommit());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertNotNull(hikariConfig0);
      
      String string0 = "z~NH}l5*1f$G/";
      hikariConfig0.setCatalog(string0);
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertTrue(hikariConfig0.isAutoCommit());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      
      HikariDataSource hikariDataSource0 = new HikariDataSource();
      assertNull(hikariDataSource0.getConnectionCustomizerClassName());
      assertEquals("HikariPool-1", hikariDataSource0.getPoolName());
      assertEquals(60, hikariDataSource0.getMaximumPoolSize());
      assertTrue(hikariDataSource0.isAutoCommit());
      assertNull(hikariDataSource0.getDataSourceClassName());
      assertEquals(3, hikariDataSource0.getAcquireRetries());
      assertNull(hikariDataSource0.getConnectionTestQuery());
      assertEquals(10, hikariDataSource0.getMinimumPoolSize());
      assertEquals((-1), hikariDataSource0.getTransactionIsolation());
      assertFalse(hikariDataSource0.isRegisterMbeans());
      assertFalse(hikariDataSource0.getisShutdown());
      assertEquals(1800000L, hikariDataSource0.getMaxLifetime());
      assertEquals(600000L, hikariDataSource0.getIdleTimeout());
      assertFalse(hikariDataSource0.isInitializationFailFast());
      assertNull(hikariDataSource0.getCatalog());
      assertEquals(0, hikariDataSource0.getLoginTimeout());
      assertNull(hikariDataSource0.getConnectionInitSql());
      assertEquals(0L, hikariDataSource0.getLeakDetectionThreshold());
      assertEquals(0, hikariDataSource0.getAcquireIncrement());
      assertEquals(0L, hikariDataSource0.getAcquireRetryDelay());
      assertEquals(5000L, hikariDataSource0.getConnectionTimeout());
      assertTrue(hikariDataSource0.isJdbc4ConnectionTest());
      assertNotNull(hikariDataSource0);
      assertEquals(0, hikariDataSource0.loginTimeout);
      assertFalse(hikariDataSource0.isShutdown);
      
      hikariConfig0.setDataSource(hikariDataSource0);
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertTrue(hikariConfig0.isAutoCommit());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertNull(hikariDataSource0.getConnectionCustomizerClassName());
      assertEquals("HikariPool-1", hikariDataSource0.getPoolName());
      assertEquals(60, hikariDataSource0.getMaximumPoolSize());
      assertTrue(hikariDataSource0.isAutoCommit());
      assertNull(hikariDataSource0.getDataSourceClassName());
      assertEquals(3, hikariDataSource0.getAcquireRetries());
      assertNull(hikariDataSource0.getConnectionTestQuery());
      assertEquals(10, hikariDataSource0.getMinimumPoolSize());
      assertEquals((-1), hikariDataSource0.getTransactionIsolation());
      assertFalse(hikariDataSource0.isRegisterMbeans());
      assertFalse(hikariDataSource0.getisShutdown());
      assertEquals(1800000L, hikariDataSource0.getMaxLifetime());
      assertEquals(600000L, hikariDataSource0.getIdleTimeout());
      assertFalse(hikariDataSource0.isInitializationFailFast());
      assertNull(hikariDataSource0.getCatalog());
      assertEquals(0, hikariDataSource0.getLoginTimeout());
      assertNull(hikariDataSource0.getConnectionInitSql());
      assertEquals(0L, hikariDataSource0.getLeakDetectionThreshold());
      assertEquals(0, hikariDataSource0.getAcquireIncrement());
      assertEquals(0L, hikariDataSource0.getAcquireRetryDelay());
      assertEquals(5000L, hikariDataSource0.getConnectionTimeout());
      assertTrue(hikariDataSource0.isJdbc4ConnectionTest());
      assertEquals(0, hikariDataSource0.loginTimeout);
      assertFalse(hikariDataSource0.isShutdown);
      
      String string1 = "<h*3tU31q8JLA&<";
      hikariConfig0.setDataSourceClassName(string1);
      assertNotSame(string1, string0);
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertTrue(hikariConfig0.isAutoCommit());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals("<h*3tU31q8JLA&<", hikariConfig0.getDataSourceClassName());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertFalse(string1.equals((Object)string0));
      
      HikariPool hikariPool0 = new HikariPool(hikariConfig0);
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertTrue(hikariConfig0.isAutoCommit());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals("<h*3tU31q8JLA&<", hikariConfig0.getDataSourceClassName());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertEquals(10, hikariPool0.getTotalConnections());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertTrue(hikariPool0.getisAutoCommit());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertEquals("z~NH}l5*1f$G/", hikariPool0.getcatalog());
      assertFalse(hikariPool0.getdebug());
      assertFalse(hikariPool0.getshutdown());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertNotNull(hikariPool0);
      assertTrue(hikariPool0.isAutoCommit);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertFalse(hikariPool0.debug);
      assertFalse(hikariPool0.shutdown);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertFalse(hikariPool0.isRegisteredMbeans);
      
      IHikariConnectionProxy iHikariConnectionProxy0 = null;
      long long0 = 959L;
      // Undeclared exception!
      try { 
        hikariPool0.isConnectionAlive(iHikariConnectionProxy0, long0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.zaxxer.hikari.HikariPool", e);
      }
  }

  @Test(timeout = 11000)
  public void test16()  throws Throwable  {
      HikariConfig hikariConfig0 = new HikariConfig();
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isAutoCommit());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertNotNull(hikariConfig0);
      
      String string0 = "z~NH}l5*1f$G/";
      hikariConfig0.setCatalog(string0);
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isAutoCommit());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      
      HikariDataSource hikariDataSource0 = new HikariDataSource();
      assertNull(hikariDataSource0.getDataSourceClassName());
      assertEquals(0L, hikariDataSource0.getAcquireRetryDelay());
      assertEquals(10, hikariDataSource0.getMinimumPoolSize());
      assertNull(hikariDataSource0.getConnectionCustomizerClassName());
      assertEquals(5000L, hikariDataSource0.getConnectionTimeout());
      assertEquals(60, hikariDataSource0.getMaximumPoolSize());
      assertTrue(hikariDataSource0.isAutoCommit());
      assertNull(hikariDataSource0.getCatalog());
      assertNull(hikariDataSource0.getConnectionInitSql());
      assertEquals((-1), hikariDataSource0.getTransactionIsolation());
      assertFalse(hikariDataSource0.isInitializationFailFast());
      assertEquals(0L, hikariDataSource0.getLeakDetectionThreshold());
      assertEquals(0, hikariDataSource0.getAcquireIncrement());
      assertFalse(hikariDataSource0.isRegisterMbeans());
      assertFalse(hikariDataSource0.getisShutdown());
      assertTrue(hikariDataSource0.isJdbc4ConnectionTest());
      assertEquals("HikariPool-1", hikariDataSource0.getPoolName());
      assertNull(hikariDataSource0.getConnectionTestQuery());
      assertEquals(0, hikariDataSource0.getLoginTimeout());
      assertEquals(3, hikariDataSource0.getAcquireRetries());
      assertEquals(1800000L, hikariDataSource0.getMaxLifetime());
      assertEquals(600000L, hikariDataSource0.getIdleTimeout());
      assertNotNull(hikariDataSource0);
      assertFalse(hikariDataSource0.isShutdown);
      assertEquals(0, hikariDataSource0.loginTimeout);
      
      hikariConfig0.setDataSource(hikariDataSource0);
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isAutoCommit());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertNull(hikariDataSource0.getDataSourceClassName());
      assertEquals(0L, hikariDataSource0.getAcquireRetryDelay());
      assertEquals(10, hikariDataSource0.getMinimumPoolSize());
      assertNull(hikariDataSource0.getConnectionCustomizerClassName());
      assertEquals(5000L, hikariDataSource0.getConnectionTimeout());
      assertEquals(60, hikariDataSource0.getMaximumPoolSize());
      assertTrue(hikariDataSource0.isAutoCommit());
      assertNull(hikariDataSource0.getCatalog());
      assertNull(hikariDataSource0.getConnectionInitSql());
      assertEquals((-1), hikariDataSource0.getTransactionIsolation());
      assertFalse(hikariDataSource0.isInitializationFailFast());
      assertEquals(0L, hikariDataSource0.getLeakDetectionThreshold());
      assertEquals(0, hikariDataSource0.getAcquireIncrement());
      assertFalse(hikariDataSource0.isRegisterMbeans());
      assertFalse(hikariDataSource0.getisShutdown());
      assertTrue(hikariDataSource0.isJdbc4ConnectionTest());
      assertEquals("HikariPool-1", hikariDataSource0.getPoolName());
      assertNull(hikariDataSource0.getConnectionTestQuery());
      assertEquals(0, hikariDataSource0.getLoginTimeout());
      assertEquals(3, hikariDataSource0.getAcquireRetries());
      assertEquals(1800000L, hikariDataSource0.getMaxLifetime());
      assertEquals(600000L, hikariDataSource0.getIdleTimeout());
      assertFalse(hikariDataSource0.isShutdown);
      assertEquals(0, hikariDataSource0.loginTimeout);
      
      String string1 = "<h*3tU31q8JLA&<";
      HikariPool hikariPool0 = new HikariPool(hikariConfig0);
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isAutoCommit());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertFalse(hikariPool0.getshutdown());
      assertFalse(hikariPool0.getdebug());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertEquals(10, hikariPool0.getTotalConnections());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertTrue(hikariPool0.getisAutoCommit());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertEquals("z~NH}l5*1f$G/", hikariPool0.getcatalog());
      assertNotNull(hikariPool0);
      assertFalse(hikariPool0.debug);
      assertTrue(hikariPool0.isAutoCommit);
      assertFalse(hikariPool0.shutdown);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertFalse(hikariPool0.isRegisteredMbeans);
      
      boolean boolean0 = hikariPool0.getjdbc4ConnectionTest();
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isAutoCommit());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertFalse(hikariPool0.getshutdown());
      assertFalse(hikariPool0.getdebug());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertEquals(10, hikariPool0.getTotalConnections());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertTrue(hikariPool0.getisAutoCommit());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertEquals("z~NH}l5*1f$G/", hikariPool0.getcatalog());
      assertTrue(boolean0);
      assertFalse(hikariPool0.debug);
      assertTrue(hikariPool0.isAutoCommit);
      assertFalse(hikariPool0.shutdown);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertFalse(hikariPool0.isRegisteredMbeans);
      
      HikariConfig hikariConfig1 = hikariPool0.getconfiguration();
      assertSame(hikariConfig0, hikariConfig1);
      assertSame(hikariConfig1, hikariConfig0);
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isAutoCommit());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertFalse(hikariPool0.getshutdown());
      assertFalse(hikariPool0.getdebug());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertEquals(10, hikariPool0.getTotalConnections());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertTrue(hikariPool0.getisAutoCommit());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertEquals("z~NH}l5*1f$G/", hikariPool0.getcatalog());
      assertEquals("z~NH}l5*1f$G/", hikariConfig1.getCatalog());
      assertNull(hikariConfig1.getConnectionCustomizerClassName());
      assertEquals(5000L, hikariConfig1.getConnectionTimeout());
      assertEquals(0L, hikariConfig1.getAcquireRetryDelay());
      assertNull(hikariConfig1.getDataSourceClassName());
      assertTrue(hikariConfig1.isAutoCommit());
      assertEquals(10, hikariConfig1.getMinimumPoolSize());
      assertEquals("HikariPool-0", hikariConfig1.getPoolName());
      assertEquals((-1), hikariConfig1.getTransactionIsolation());
      assertEquals(0L, hikariConfig1.getLeakDetectionThreshold());
      assertEquals(3, hikariConfig1.getAcquireRetries());
      assertEquals(600000L, hikariConfig1.getIdleTimeout());
      assertEquals(1800000L, hikariConfig1.getMaxLifetime());
      assertNull(hikariConfig1.getConnectionTestQuery());
      assertNull(hikariConfig1.getConnectionInitSql());
      assertFalse(hikariConfig1.isRegisterMbeans());
      assertFalse(hikariConfig1.isInitializationFailFast());
      assertEquals(60, hikariConfig1.getMaximumPoolSize());
      assertTrue(hikariConfig1.isJdbc4ConnectionTest());
      assertEquals(0, hikariConfig1.getAcquireIncrement());
      assertNotNull(hikariConfig1);
      assertFalse(hikariPool0.debug);
      assertTrue(hikariPool0.isAutoCommit);
      assertFalse(hikariPool0.shutdown);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertFalse(hikariPool0.isRegisteredMbeans);
  }

  @Test(timeout = 11000)
  public void test17()  throws Throwable  {
      HikariConfig hikariConfig0 = new HikariConfig();
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertNotNull(hikariConfig0);
      
      String string0 = "z~NH}l5*1f$G/";
      HikariDataSource hikariDataSource0 = new HikariDataSource();
      assertEquals((-1), hikariDataSource0.getTransactionIsolation());
      assertEquals(0L, hikariDataSource0.getLeakDetectionThreshold());
      assertFalse(hikariDataSource0.isInitializationFailFast());
      assertEquals(0, hikariDataSource0.getAcquireIncrement());
      assertFalse(hikariDataSource0.isRegisterMbeans());
      assertFalse(hikariDataSource0.getisShutdown());
      assertTrue(hikariDataSource0.isJdbc4ConnectionTest());
      assertEquals("HikariPool-1", hikariDataSource0.getPoolName());
      assertNull(hikariDataSource0.getConnectionTestQuery());
      assertEquals(3, hikariDataSource0.getAcquireRetries());
      assertEquals(600000L, hikariDataSource0.getIdleTimeout());
      assertEquals(1800000L, hikariDataSource0.getMaxLifetime());
      assertNull(hikariDataSource0.getDataSourceClassName());
      assertEquals(0L, hikariDataSource0.getAcquireRetryDelay());
      assertEquals(0, hikariDataSource0.getLoginTimeout());
      assertEquals(10, hikariDataSource0.getMinimumPoolSize());
      assertNull(hikariDataSource0.getConnectionCustomizerClassName());
      assertEquals(5000L, hikariDataSource0.getConnectionTimeout());
      assertEquals(60, hikariDataSource0.getMaximumPoolSize());
      assertTrue(hikariDataSource0.isAutoCommit());
      assertNull(hikariDataSource0.getCatalog());
      assertNull(hikariDataSource0.getConnectionInitSql());
      assertNotNull(hikariDataSource0);
      assertFalse(hikariDataSource0.isShutdown);
      assertEquals(0, hikariDataSource0.loginTimeout);
      
      boolean boolean0 = false;
      hikariDataSource0.setJdbc4ConnectionTest(boolean0);
      assertEquals((-1), hikariDataSource0.getTransactionIsolation());
      assertEquals(0L, hikariDataSource0.getLeakDetectionThreshold());
      assertFalse(hikariDataSource0.isInitializationFailFast());
      assertEquals(0, hikariDataSource0.getAcquireIncrement());
      assertFalse(hikariDataSource0.isRegisterMbeans());
      assertFalse(hikariDataSource0.getisShutdown());
      assertEquals("HikariPool-1", hikariDataSource0.getPoolName());
      assertNull(hikariDataSource0.getConnectionTestQuery());
      assertEquals(3, hikariDataSource0.getAcquireRetries());
      assertEquals(600000L, hikariDataSource0.getIdleTimeout());
      assertEquals(1800000L, hikariDataSource0.getMaxLifetime());
      assertNull(hikariDataSource0.getDataSourceClassName());
      assertEquals(0L, hikariDataSource0.getAcquireRetryDelay());
      assertEquals(0, hikariDataSource0.getLoginTimeout());
      assertEquals(10, hikariDataSource0.getMinimumPoolSize());
      assertNull(hikariDataSource0.getConnectionCustomizerClassName());
      assertEquals(5000L, hikariDataSource0.getConnectionTimeout());
      assertEquals(60, hikariDataSource0.getMaximumPoolSize());
      assertTrue(hikariDataSource0.isAutoCommit());
      assertNull(hikariDataSource0.getCatalog());
      assertFalse(hikariDataSource0.isJdbc4ConnectionTest());
      assertNull(hikariDataSource0.getConnectionInitSql());
      assertFalse(hikariDataSource0.isShutdown);
      assertEquals(0, hikariDataSource0.loginTimeout);
      
      EvoSuiteFile evoSuiteFile0 = null;
      boolean boolean1 = FileSystemHandling.createFolder(evoSuiteFile0);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      
      hikariConfig0.setDataSource(hikariDataSource0);
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals((-1), hikariDataSource0.getTransactionIsolation());
      assertEquals(0L, hikariDataSource0.getLeakDetectionThreshold());
      assertFalse(hikariDataSource0.isInitializationFailFast());
      assertEquals(0, hikariDataSource0.getAcquireIncrement());
      assertFalse(hikariDataSource0.isRegisterMbeans());
      assertFalse(hikariDataSource0.getisShutdown());
      assertEquals("HikariPool-1", hikariDataSource0.getPoolName());
      assertNull(hikariDataSource0.getConnectionTestQuery());
      assertEquals(3, hikariDataSource0.getAcquireRetries());
      assertEquals(600000L, hikariDataSource0.getIdleTimeout());
      assertEquals(1800000L, hikariDataSource0.getMaxLifetime());
      assertNull(hikariDataSource0.getDataSourceClassName());
      assertEquals(0L, hikariDataSource0.getAcquireRetryDelay());
      assertEquals(0, hikariDataSource0.getLoginTimeout());
      assertEquals(10, hikariDataSource0.getMinimumPoolSize());
      assertNull(hikariDataSource0.getConnectionCustomizerClassName());
      assertEquals(5000L, hikariDataSource0.getConnectionTimeout());
      assertEquals(60, hikariDataSource0.getMaximumPoolSize());
      assertTrue(hikariDataSource0.isAutoCommit());
      assertNull(hikariDataSource0.getCatalog());
      assertFalse(hikariDataSource0.isJdbc4ConnectionTest());
      assertNull(hikariDataSource0.getConnectionInitSql());
      assertFalse(hikariDataSource0.isShutdown);
      assertEquals(0, hikariDataSource0.loginTimeout);
      
      String string1 = "<h*3tU31q8JLA&<";
      hikariConfig0.setDataSourceClassName(string1);
      assertNotSame(string1, string0);
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals("<h*3tU31q8JLA&<", hikariConfig0.getDataSourceClassName());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertFalse(string1.equals((Object)string0));
      
      HikariPool hikariPool0 = new HikariPool(hikariConfig0);
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals("<h*3tU31q8JLA&<", hikariConfig0.getDataSourceClassName());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertFalse(hikariPool0.getdebug());
      assertNull(hikariPool0.getcatalog());
      assertEquals(10, hikariPool0.getTotalConnections());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertFalse(hikariPool0.getshutdown());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertTrue(hikariPool0.getisAutoCommit());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertNotNull(hikariPool0);
      assertTrue(hikariPool0.isAutoCommit);
      assertFalse(hikariPool0.debug);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertFalse(hikariPool0.shutdown);
      
      Logger logger0 = hikariPool0.getLOGGER();
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals("<h*3tU31q8JLA&<", hikariConfig0.getDataSourceClassName());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertFalse(hikariPool0.getdebug());
      assertNull(hikariPool0.getcatalog());
      assertEquals(10, hikariPool0.getTotalConnections());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertFalse(hikariPool0.getshutdown());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertTrue(hikariPool0.getisAutoCommit());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertNotNull(logger0);
      assertTrue(hikariPool0.isAutoCommit);
      assertFalse(hikariPool0.debug);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertFalse(hikariPool0.shutdown);
  }

  @Test(timeout = 11000)
  public void test18()  throws Throwable  {
      HikariDataSource hikariDataSource0 = new HikariDataSource();
      assertEquals(10, hikariDataSource0.getMinimumPoolSize());
      assertEquals(1800000L, hikariDataSource0.getMaxLifetime());
      assertEquals(600000L, hikariDataSource0.getIdleTimeout());
      assertEquals(3, hikariDataSource0.getAcquireRetries());
      assertNull(hikariDataSource0.getConnectionTestQuery());
      assertEquals(5000L, hikariDataSource0.getConnectionTimeout());
      assertTrue(hikariDataSource0.isJdbc4ConnectionTest());
      assertNull(hikariDataSource0.getDataSourceClassName());
      assertEquals(0, hikariDataSource0.getLoginTimeout());
      assertFalse(hikariDataSource0.isInitializationFailFast());
      assertEquals(0L, hikariDataSource0.getAcquireRetryDelay());
      assertEquals("HikariPool-0", hikariDataSource0.getPoolName());
      assertEquals(60, hikariDataSource0.getMaximumPoolSize());
      assertTrue(hikariDataSource0.isAutoCommit());
      assertEquals(0L, hikariDataSource0.getLeakDetectionThreshold());
      assertEquals(0, hikariDataSource0.getAcquireIncrement());
      assertEquals((-1), hikariDataSource0.getTransactionIsolation());
      assertNull(hikariDataSource0.getConnectionInitSql());
      assertNull(hikariDataSource0.getCatalog());
      assertNull(hikariDataSource0.getConnectionCustomizerClassName());
      assertFalse(hikariDataSource0.getisShutdown());
      assertFalse(hikariDataSource0.isRegisterMbeans());
      assertNotNull(hikariDataSource0);
      assertEquals(0, hikariDataSource0.loginTimeout);
      assertFalse(hikariDataSource0.isShutdown);
      
      String string0 = "z~NH}l5*1f$G/";
      HikariDataSource hikariDataSource1 = new HikariDataSource();
      assertEquals("HikariPool-1", hikariDataSource1.getPoolName());
      assertEquals(60, hikariDataSource1.getMaximumPoolSize());
      assertTrue(hikariDataSource1.isAutoCommit());
      assertNull(hikariDataSource1.getConnectionCustomizerClassName());
      assertNull(hikariDataSource1.getConnectionInitSql());
      assertNull(hikariDataSource1.getConnectionTestQuery());
      assertNull(hikariDataSource1.getDataSourceClassName());
      assertEquals(3, hikariDataSource1.getAcquireRetries());
      assertEquals(10, hikariDataSource1.getMinimumPoolSize());
      assertEquals((-1), hikariDataSource1.getTransactionIsolation());
      assertFalse(hikariDataSource1.isRegisterMbeans());
      assertFalse(hikariDataSource1.getisShutdown());
      assertFalse(hikariDataSource1.isInitializationFailFast());
      assertEquals(5000L, hikariDataSource1.getConnectionTimeout());
      assertEquals(1800000L, hikariDataSource1.getMaxLifetime());
      assertEquals(600000L, hikariDataSource1.getIdleTimeout());
      assertEquals(0, hikariDataSource1.getLoginTimeout());
      assertNull(hikariDataSource1.getCatalog());
      assertEquals(0L, hikariDataSource1.getLeakDetectionThreshold());
      assertEquals(0, hikariDataSource1.getAcquireIncrement());
      assertEquals(0L, hikariDataSource1.getAcquireRetryDelay());
      assertTrue(hikariDataSource1.isJdbc4ConnectionTest());
      assertFalse(hikariDataSource1.equals((Object)hikariDataSource0));
      assertNotNull(hikariDataSource1);
      assertFalse(hikariDataSource1.isShutdown);
      assertEquals(0, hikariDataSource1.loginTimeout);
      
      hikariDataSource0.setDataSource(hikariDataSource1);
      assertNotSame(hikariDataSource0, hikariDataSource1);
      assertNotSame(hikariDataSource1, hikariDataSource0);
      assertEquals(10, hikariDataSource0.getMinimumPoolSize());
      assertEquals(1800000L, hikariDataSource0.getMaxLifetime());
      assertEquals(600000L, hikariDataSource0.getIdleTimeout());
      assertEquals(3, hikariDataSource0.getAcquireRetries());
      assertNull(hikariDataSource0.getConnectionTestQuery());
      assertEquals(5000L, hikariDataSource0.getConnectionTimeout());
      assertTrue(hikariDataSource0.isJdbc4ConnectionTest());
      assertNull(hikariDataSource0.getDataSourceClassName());
      assertEquals(0, hikariDataSource0.getLoginTimeout());
      assertFalse(hikariDataSource0.isInitializationFailFast());
      assertEquals(0L, hikariDataSource0.getAcquireRetryDelay());
      assertEquals("HikariPool-0", hikariDataSource0.getPoolName());
      assertEquals(60, hikariDataSource0.getMaximumPoolSize());
      assertTrue(hikariDataSource0.isAutoCommit());
      assertEquals(0L, hikariDataSource0.getLeakDetectionThreshold());
      assertEquals(0, hikariDataSource0.getAcquireIncrement());
      assertEquals((-1), hikariDataSource0.getTransactionIsolation());
      assertNull(hikariDataSource0.getConnectionInitSql());
      assertNull(hikariDataSource0.getCatalog());
      assertNull(hikariDataSource0.getConnectionCustomizerClassName());
      assertFalse(hikariDataSource0.getisShutdown());
      assertFalse(hikariDataSource0.isRegisterMbeans());
      assertEquals("HikariPool-1", hikariDataSource1.getPoolName());
      assertEquals(60, hikariDataSource1.getMaximumPoolSize());
      assertTrue(hikariDataSource1.isAutoCommit());
      assertNull(hikariDataSource1.getConnectionCustomizerClassName());
      assertNull(hikariDataSource1.getConnectionInitSql());
      assertNull(hikariDataSource1.getConnectionTestQuery());
      assertNull(hikariDataSource1.getDataSourceClassName());
      assertEquals(3, hikariDataSource1.getAcquireRetries());
      assertEquals(10, hikariDataSource1.getMinimumPoolSize());
      assertEquals((-1), hikariDataSource1.getTransactionIsolation());
      assertFalse(hikariDataSource1.isRegisterMbeans());
      assertFalse(hikariDataSource1.getisShutdown());
      assertFalse(hikariDataSource1.isInitializationFailFast());
      assertEquals(5000L, hikariDataSource1.getConnectionTimeout());
      assertEquals(1800000L, hikariDataSource1.getMaxLifetime());
      assertEquals(600000L, hikariDataSource1.getIdleTimeout());
      assertEquals(0, hikariDataSource1.getLoginTimeout());
      assertNull(hikariDataSource1.getCatalog());
      assertEquals(0L, hikariDataSource1.getLeakDetectionThreshold());
      assertEquals(0, hikariDataSource1.getAcquireIncrement());
      assertEquals(0L, hikariDataSource1.getAcquireRetryDelay());
      assertTrue(hikariDataSource1.isJdbc4ConnectionTest());
      assertFalse(hikariDataSource0.equals((Object)hikariDataSource1));
      assertFalse(hikariDataSource1.equals((Object)hikariDataSource0));
      assertEquals(0, hikariDataSource0.loginTimeout);
      assertFalse(hikariDataSource0.isShutdown);
      assertFalse(hikariDataSource1.isShutdown);
      assertEquals(0, hikariDataSource1.loginTimeout);
      
      String string1 = "<h*3tU1q8JLA&";
      hikariDataSource0.setDataSourceClassName(string1);
      assertNotSame(hikariDataSource0, hikariDataSource1);
      assertNotSame(string1, string0);
      assertEquals(10, hikariDataSource0.getMinimumPoolSize());
      assertEquals(1800000L, hikariDataSource0.getMaxLifetime());
      assertEquals(600000L, hikariDataSource0.getIdleTimeout());
      assertEquals(3, hikariDataSource0.getAcquireRetries());
      assertNull(hikariDataSource0.getConnectionTestQuery());
      assertEquals(5000L, hikariDataSource0.getConnectionTimeout());
      assertTrue(hikariDataSource0.isJdbc4ConnectionTest());
      assertEquals(0, hikariDataSource0.getLoginTimeout());
      assertFalse(hikariDataSource0.isInitializationFailFast());
      assertEquals(0L, hikariDataSource0.getAcquireRetryDelay());
      assertEquals("HikariPool-0", hikariDataSource0.getPoolName());
      assertEquals(60, hikariDataSource0.getMaximumPoolSize());
      assertTrue(hikariDataSource0.isAutoCommit());
      assertEquals("<h*3tU1q8JLA&", hikariDataSource0.getDataSourceClassName());
      assertEquals(0L, hikariDataSource0.getLeakDetectionThreshold());
      assertEquals(0, hikariDataSource0.getAcquireIncrement());
      assertEquals((-1), hikariDataSource0.getTransactionIsolation());
      assertNull(hikariDataSource0.getConnectionInitSql());
      assertNull(hikariDataSource0.getCatalog());
      assertNull(hikariDataSource0.getConnectionCustomizerClassName());
      assertFalse(hikariDataSource0.getisShutdown());
      assertFalse(hikariDataSource0.isRegisterMbeans());
      assertFalse(hikariDataSource0.equals((Object)hikariDataSource1));
      assertFalse(string1.equals((Object)string0));
      assertEquals(0, hikariDataSource0.loginTimeout);
      assertFalse(hikariDataSource0.isShutdown);
      
      HikariPool hikariPool0 = new HikariPool(hikariDataSource0);
      assertEquals(10, hikariDataSource0.getMinimumPoolSize());
      assertEquals(1800000L, hikariDataSource0.getMaxLifetime());
      assertEquals(600000L, hikariDataSource0.getIdleTimeout());
      assertEquals(3, hikariDataSource0.getAcquireRetries());
      assertNull(hikariDataSource0.getConnectionTestQuery());
      assertEquals(5000L, hikariDataSource0.getConnectionTimeout());
      assertTrue(hikariDataSource0.isJdbc4ConnectionTest());
      assertEquals(0, hikariDataSource0.getLoginTimeout());
      assertFalse(hikariDataSource0.isInitializationFailFast());
      assertEquals(0L, hikariDataSource0.getAcquireRetryDelay());
      assertEquals("HikariPool-0", hikariDataSource0.getPoolName());
      assertEquals(60, hikariDataSource0.getMaximumPoolSize());
      assertTrue(hikariDataSource0.isAutoCommit());
      assertEquals("<h*3tU1q8JLA&", hikariDataSource0.getDataSourceClassName());
      assertEquals(0L, hikariDataSource0.getLeakDetectionThreshold());
      assertEquals(0, hikariDataSource0.getAcquireIncrement());
      assertEquals((-1), hikariDataSource0.getTransactionIsolation());
      assertNull(hikariDataSource0.getConnectionInitSql());
      assertNull(hikariDataSource0.getCatalog());
      assertNull(hikariDataSource0.getConnectionCustomizerClassName());
      assertFalse(hikariDataSource0.getisShutdown());
      assertFalse(hikariDataSource0.isRegisterMbeans());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertTrue(hikariPool0.getisAutoCommit());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertEquals(10, hikariPool0.getTotalConnections());
      assertFalse(hikariPool0.getdebug());
      assertNull(hikariPool0.getcatalog());
      assertFalse(hikariPool0.getshutdown());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertFalse(hikariDataSource0.equals((Object)hikariDataSource1));
      assertNotNull(hikariPool0);
      assertEquals(0, hikariDataSource0.loginTimeout);
      assertFalse(hikariDataSource0.isShutdown);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertFalse(hikariPool0.shutdown);
      assertTrue(hikariPool0.isAutoCommit);
      assertFalse(hikariPool0.debug);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      
      IHikariConnectionProxy iHikariConnectionProxy0 = mock(IHikariConnectionProxy.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(iHikariConnectionProxy0).compareAndSetState(anyInt() , anyInt());
      // Undeclared exception!
      try { 
        hikariPool0.closeConnection(iHikariConnectionProxy0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Attempt to remove an object from the bag that was not borrowed or reserved
         //
         verifyException("com.zaxxer.hikari.util.ConcurrentBag", e);
      }
  }

  @Test(timeout = 11000)
  public void test19()  throws Throwable  {
      HikariConfig hikariConfig0 = new HikariConfig();
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertTrue(hikariConfig0.isAutoCommit());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertNotNull(hikariConfig0);
      
      String string0 = "z~NH}l5*1f$G/";
      HikariDataSource hikariDataSource0 = new HikariDataSource();
      assertNull(hikariDataSource0.getConnectionTestQuery());
      assertNull(hikariDataSource0.getConnectionInitSql());
      assertEquals(0L, hikariDataSource0.getLeakDetectionThreshold());
      assertEquals(0, hikariDataSource0.getAcquireIncrement());
      assertEquals((-1), hikariDataSource0.getTransactionIsolation());
      assertTrue(hikariDataSource0.isAutoCommit());
      assertTrue(hikariDataSource0.isJdbc4ConnectionTest());
      assertFalse(hikariDataSource0.isInitializationFailFast());
      assertEquals("HikariPool-1", hikariDataSource0.getPoolName());
      assertNull(hikariDataSource0.getDataSourceClassName());
      assertEquals(3, hikariDataSource0.getAcquireRetries());
      assertEquals(600000L, hikariDataSource0.getIdleTimeout());
      assertEquals(1800000L, hikariDataSource0.getMaxLifetime());
      assertEquals(10, hikariDataSource0.getMinimumPoolSize());
      assertNull(hikariDataSource0.getCatalog());
      assertEquals(5000L, hikariDataSource0.getConnectionTimeout());
      assertEquals(0L, hikariDataSource0.getAcquireRetryDelay());
      assertEquals(0, hikariDataSource0.getLoginTimeout());
      assertFalse(hikariDataSource0.isRegisterMbeans());
      assertNull(hikariDataSource0.getConnectionCustomizerClassName());
      assertFalse(hikariDataSource0.getisShutdown());
      assertEquals(60, hikariDataSource0.getMaximumPoolSize());
      assertNotNull(hikariDataSource0);
      assertFalse(hikariDataSource0.isShutdown);
      assertEquals(0, hikariDataSource0.loginTimeout);
      
      hikariConfig0.setDataSource(hikariDataSource0);
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertTrue(hikariConfig0.isAutoCommit());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertNull(hikariDataSource0.getConnectionTestQuery());
      assertNull(hikariDataSource0.getConnectionInitSql());
      assertEquals(0L, hikariDataSource0.getLeakDetectionThreshold());
      assertEquals(0, hikariDataSource0.getAcquireIncrement());
      assertEquals((-1), hikariDataSource0.getTransactionIsolation());
      assertTrue(hikariDataSource0.isAutoCommit());
      assertTrue(hikariDataSource0.isJdbc4ConnectionTest());
      assertFalse(hikariDataSource0.isInitializationFailFast());
      assertEquals("HikariPool-1", hikariDataSource0.getPoolName());
      assertNull(hikariDataSource0.getDataSourceClassName());
      assertEquals(3, hikariDataSource0.getAcquireRetries());
      assertEquals(600000L, hikariDataSource0.getIdleTimeout());
      assertEquals(1800000L, hikariDataSource0.getMaxLifetime());
      assertEquals(10, hikariDataSource0.getMinimumPoolSize());
      assertNull(hikariDataSource0.getCatalog());
      assertEquals(5000L, hikariDataSource0.getConnectionTimeout());
      assertEquals(0L, hikariDataSource0.getAcquireRetryDelay());
      assertEquals(0, hikariDataSource0.getLoginTimeout());
      assertFalse(hikariDataSource0.isRegisterMbeans());
      assertNull(hikariDataSource0.getConnectionCustomizerClassName());
      assertFalse(hikariDataSource0.getisShutdown());
      assertEquals(60, hikariDataSource0.getMaximumPoolSize());
      assertFalse(hikariDataSource0.isShutdown);
      assertEquals(0, hikariDataSource0.loginTimeout);
      
      String string1 = "<h*3tU31q8JLA&<";
      hikariConfig0.setDataSourceClassName(string1);
      assertNotSame(string1, string0);
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertTrue(hikariConfig0.isAutoCommit());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals("<h*3tU31q8JLA&<", hikariConfig0.getDataSourceClassName());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertFalse(string1.equals((Object)string0));
      
      HikariPool hikariPool0 = new HikariPool(hikariConfig0);
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertTrue(hikariConfig0.isAutoCommit());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals("<h*3tU31q8JLA&<", hikariConfig0.getDataSourceClassName());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertTrue(hikariPool0.getisAutoCommit());
      assertFalse(hikariPool0.getdebug());
      assertEquals(10, hikariPool0.getTotalConnections());
      assertFalse(hikariPool0.getshutdown());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertNull(hikariPool0.getcatalog());
      assertNotNull(hikariPool0);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertFalse(hikariPool0.shutdown);
      assertTrue(hikariPool0.isAutoCommit);
      assertFalse(hikariPool0.debug);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      
      ConcurrentBag<IHikariConnectionProxy> concurrentBag0 = hikariPool0.getidleConnectionBag();
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertTrue(hikariConfig0.isAutoCommit());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals("<h*3tU31q8JLA&<", hikariConfig0.getDataSourceClassName());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertTrue(hikariPool0.getisAutoCommit());
      assertFalse(hikariPool0.getdebug());
      assertEquals(10, hikariPool0.getTotalConnections());
      assertFalse(hikariPool0.getshutdown());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertNull(hikariPool0.getcatalog());
      assertEquals(0, concurrentBag0.getSTATE_NOT_IN_USE());
      assertEquals(1, concurrentBag0.getSTATE_IN_USE());
      assertEquals((-2), concurrentBag0.getSTATE_RESERVED());
      assertEquals((-1), concurrentBag0.getSTATE_REMOVED());
      assertNotNull(concurrentBag0);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertFalse(hikariPool0.shutdown);
      assertTrue(hikariPool0.isAutoCommit);
      assertFalse(hikariPool0.debug);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertEquals((-1), ConcurrentBag.STATE_REMOVED);
      assertEquals(1, ConcurrentBag.STATE_IN_USE);
      assertEquals(0, ConcurrentBag.STATE_NOT_IN_USE);
      assertEquals((-2), ConcurrentBag.STATE_RESERVED);
  }

  @Test(timeout = 11000)
  public void test20()  throws Throwable  {
      HikariConfig hikariConfig0 = new HikariConfig();
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isAutoCommit());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertNotNull(hikariConfig0);
      
      String string0 = "z~NH}l5*1f$G/";
      hikariConfig0.setCatalog(string0);
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isAutoCommit());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      
      HikariDataSource hikariDataSource0 = new HikariDataSource();
      assertNull(hikariDataSource0.getConnectionCustomizerClassName());
      assertEquals("HikariPool-1", hikariDataSource0.getPoolName());
      assertNull(hikariDataSource0.getDataSourceClassName());
      assertTrue(hikariDataSource0.isJdbc4ConnectionTest());
      assertTrue(hikariDataSource0.isAutoCommit());
      assertNull(hikariDataSource0.getConnectionInitSql());
      assertEquals(0, hikariDataSource0.getAcquireIncrement());
      assertNull(hikariDataSource0.getCatalog());
      assertEquals(0L, hikariDataSource0.getLeakDetectionThreshold());
      assertEquals(60, hikariDataSource0.getMaximumPoolSize());
      assertFalse(hikariDataSource0.isRegisterMbeans());
      assertFalse(hikariDataSource0.getisShutdown());
      assertFalse(hikariDataSource0.isInitializationFailFast());
      assertEquals(5000L, hikariDataSource0.getConnectionTimeout());
      assertEquals(0, hikariDataSource0.getLoginTimeout());
      assertEquals(3, hikariDataSource0.getAcquireRetries());
      assertNull(hikariDataSource0.getConnectionTestQuery());
      assertEquals(0L, hikariDataSource0.getAcquireRetryDelay());
      assertEquals(10, hikariDataSource0.getMinimumPoolSize());
      assertEquals((-1), hikariDataSource0.getTransactionIsolation());
      assertEquals(1800000L, hikariDataSource0.getMaxLifetime());
      assertEquals(600000L, hikariDataSource0.getIdleTimeout());
      assertNotNull(hikariDataSource0);
      assertFalse(hikariDataSource0.isShutdown);
      assertEquals(0, hikariDataSource0.loginTimeout);
      
      hikariConfig0.setDataSource(hikariDataSource0);
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isAutoCommit());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertNull(hikariDataSource0.getConnectionCustomizerClassName());
      assertEquals("HikariPool-1", hikariDataSource0.getPoolName());
      assertNull(hikariDataSource0.getDataSourceClassName());
      assertTrue(hikariDataSource0.isJdbc4ConnectionTest());
      assertTrue(hikariDataSource0.isAutoCommit());
      assertNull(hikariDataSource0.getConnectionInitSql());
      assertEquals(0, hikariDataSource0.getAcquireIncrement());
      assertNull(hikariDataSource0.getCatalog());
      assertEquals(0L, hikariDataSource0.getLeakDetectionThreshold());
      assertEquals(60, hikariDataSource0.getMaximumPoolSize());
      assertFalse(hikariDataSource0.isRegisterMbeans());
      assertFalse(hikariDataSource0.getisShutdown());
      assertFalse(hikariDataSource0.isInitializationFailFast());
      assertEquals(5000L, hikariDataSource0.getConnectionTimeout());
      assertEquals(0, hikariDataSource0.getLoginTimeout());
      assertEquals(3, hikariDataSource0.getAcquireRetries());
      assertNull(hikariDataSource0.getConnectionTestQuery());
      assertEquals(0L, hikariDataSource0.getAcquireRetryDelay());
      assertEquals(10, hikariDataSource0.getMinimumPoolSize());
      assertEquals((-1), hikariDataSource0.getTransactionIsolation());
      assertEquals(1800000L, hikariDataSource0.getMaxLifetime());
      assertEquals(600000L, hikariDataSource0.getIdleTimeout());
      assertFalse(hikariDataSource0.isShutdown);
      assertEquals(0, hikariDataSource0.loginTimeout);
      
      String string1 = "<h*3tU31q8JLA&<";
      hikariConfig0.setDataSourceClassName(string1);
      assertNotSame(string1, string0);
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isAutoCommit());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals("<h*3tU31q8JLA&<", hikariConfig0.getDataSourceClassName());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertFalse(string1.equals((Object)string0));
      
      HikariPool hikariPool0 = new HikariPool(hikariConfig0);
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isAutoCommit());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals("<h*3tU31q8JLA&<", hikariConfig0.getDataSourceClassName());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertFalse(hikariPool0.getdebug());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertEquals("z~NH}l5*1f$G/", hikariPool0.getcatalog());
      assertFalse(hikariPool0.getshutdown());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertEquals(10, hikariPool0.getTotalConnections());
      assertTrue(hikariPool0.getisAutoCommit());
      assertNotNull(hikariPool0);
      assertFalse(hikariPool0.shutdown);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertTrue(hikariPool0.isAutoCommit);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertFalse(hikariPool0.debug);
      
      boolean boolean0 = hikariPool0.getisRegisteredMbeans();
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isAutoCommit());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals("<h*3tU31q8JLA&<", hikariConfig0.getDataSourceClassName());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertFalse(hikariPool0.getdebug());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertEquals("z~NH}l5*1f$G/", hikariPool0.getcatalog());
      assertFalse(hikariPool0.getshutdown());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertEquals(10, hikariPool0.getTotalConnections());
      assertTrue(hikariPool0.getisAutoCommit());
      assertFalse(boolean0);
      assertFalse(hikariPool0.shutdown);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertTrue(hikariPool0.isAutoCommit);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertFalse(hikariPool0.debug);
  }

  @Test(timeout = 11000)
  public void test21()  throws Throwable  {
      HikariConfig hikariConfig0 = new HikariConfig();
      assertNull(hikariConfig0.getDataSourceClassName());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertTrue(hikariConfig0.isAutoCommit());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertNotNull(hikariConfig0);
      
      String string0 = "z~NH}l5*1f$G/";
      hikariConfig0.setCatalog(string0);
      assertNull(hikariConfig0.getDataSourceClassName());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      
      HikariDataSource hikariDataSource0 = new HikariDataSource();
      assertNull(hikariDataSource0.getDataSourceClassName());
      assertEquals(0L, hikariDataSource0.getAcquireRetryDelay());
      assertEquals(0, hikariDataSource0.getLoginTimeout());
      assertNull(hikariDataSource0.getCatalog());
      assertTrue(hikariDataSource0.isAutoCommit());
      assertNull(hikariDataSource0.getConnectionCustomizerClassName());
      assertEquals("HikariPool-1", hikariDataSource0.getPoolName());
      assertEquals(10, hikariDataSource0.getMinimumPoolSize());
      assertEquals((-1), hikariDataSource0.getTransactionIsolation());
      assertEquals(1800000L, hikariDataSource0.getMaxLifetime());
      assertEquals(600000L, hikariDataSource0.getIdleTimeout());
      assertFalse(hikariDataSource0.isInitializationFailFast());
      assertEquals(0L, hikariDataSource0.getLeakDetectionThreshold());
      assertEquals(0, hikariDataSource0.getAcquireIncrement());
      assertFalse(hikariDataSource0.isRegisterMbeans());
      assertFalse(hikariDataSource0.getisShutdown());
      assertEquals(3, hikariDataSource0.getAcquireRetries());
      assertNull(hikariDataSource0.getConnectionInitSql());
      assertNull(hikariDataSource0.getConnectionTestQuery());
      assertTrue(hikariDataSource0.isJdbc4ConnectionTest());
      assertEquals(60, hikariDataSource0.getMaximumPoolSize());
      assertEquals(5000L, hikariDataSource0.getConnectionTimeout());
      assertNotNull(hikariDataSource0);
      assertFalse(hikariDataSource0.isShutdown);
      assertEquals(0, hikariDataSource0.loginTimeout);
      
      hikariConfig0.setDataSource(hikariDataSource0);
      assertNull(hikariConfig0.getDataSourceClassName());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertNull(hikariDataSource0.getDataSourceClassName());
      assertEquals(0L, hikariDataSource0.getAcquireRetryDelay());
      assertEquals(0, hikariDataSource0.getLoginTimeout());
      assertNull(hikariDataSource0.getCatalog());
      assertTrue(hikariDataSource0.isAutoCommit());
      assertNull(hikariDataSource0.getConnectionCustomizerClassName());
      assertEquals("HikariPool-1", hikariDataSource0.getPoolName());
      assertEquals(10, hikariDataSource0.getMinimumPoolSize());
      assertEquals((-1), hikariDataSource0.getTransactionIsolation());
      assertEquals(1800000L, hikariDataSource0.getMaxLifetime());
      assertEquals(600000L, hikariDataSource0.getIdleTimeout());
      assertFalse(hikariDataSource0.isInitializationFailFast());
      assertEquals(0L, hikariDataSource0.getLeakDetectionThreshold());
      assertEquals(0, hikariDataSource0.getAcquireIncrement());
      assertFalse(hikariDataSource0.isRegisterMbeans());
      assertFalse(hikariDataSource0.getisShutdown());
      assertEquals(3, hikariDataSource0.getAcquireRetries());
      assertNull(hikariDataSource0.getConnectionInitSql());
      assertNull(hikariDataSource0.getConnectionTestQuery());
      assertTrue(hikariDataSource0.isJdbc4ConnectionTest());
      assertEquals(60, hikariDataSource0.getMaximumPoolSize());
      assertEquals(5000L, hikariDataSource0.getConnectionTimeout());
      assertFalse(hikariDataSource0.isShutdown);
      assertEquals(0, hikariDataSource0.loginTimeout);
      
      String string1 = "<h*3tU31q8JLA&<";
      hikariConfig0.setDataSourceClassName(string1);
      assertNotSame(string1, string0);
      assertEquals("<h*3tU31q8JLA&<", hikariConfig0.getDataSourceClassName());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertFalse(string1.equals((Object)string0));
      
      HikariPool hikariPool0 = new HikariPool(hikariConfig0);
      assertEquals("<h*3tU31q8JLA&<", hikariConfig0.getDataSourceClassName());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertEquals(10, hikariPool0.getTotalConnections());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertEquals("z~NH}l5*1f$G/", hikariPool0.getcatalog());
      assertFalse(hikariPool0.getshutdown());
      assertFalse(hikariPool0.getdebug());
      assertTrue(hikariPool0.getisAutoCommit());
      assertNotNull(hikariPool0);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertTrue(hikariPool0.isAutoCommit);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertFalse(hikariPool0.shutdown);
      assertFalse(hikariPool0.debug);
      assertEquals((-1), hikariPool0.transactionIsolation);
      
      IHikariConnectionProxy iHikariConnectionProxy0 = mock(IHikariConnectionProxy.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(iHikariConnectionProxy0).isValid(anyInt());
      boolean boolean0 = hikariPool0.isConnectionAlive(iHikariConnectionProxy0, hikariDataSource0.loginTimeout);
      assertEquals("<h*3tU31q8JLA&<", hikariConfig0.getDataSourceClassName());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertNull(hikariDataSource0.getDataSourceClassName());
      assertEquals(0L, hikariDataSource0.getAcquireRetryDelay());
      assertNull(hikariDataSource0.getCatalog());
      assertTrue(hikariDataSource0.isAutoCommit());
      assertNull(hikariDataSource0.getConnectionCustomizerClassName());
      assertEquals("HikariPool-1", hikariDataSource0.getPoolName());
      assertEquals(10, hikariDataSource0.getMinimumPoolSize());
      assertEquals((-1), hikariDataSource0.getTransactionIsolation());
      assertEquals(1800000L, hikariDataSource0.getMaxLifetime());
      assertEquals(600000L, hikariDataSource0.getIdleTimeout());
      assertFalse(hikariDataSource0.isInitializationFailFast());
      assertEquals(0L, hikariDataSource0.getLeakDetectionThreshold());
      assertEquals(0, hikariDataSource0.getAcquireIncrement());
      assertFalse(hikariDataSource0.isRegisterMbeans());
      assertFalse(hikariDataSource0.getisShutdown());
      assertEquals(3, hikariDataSource0.getAcquireRetries());
      assertNull(hikariDataSource0.getConnectionInitSql());
      assertNull(hikariDataSource0.getConnectionTestQuery());
      assertEquals(1250, hikariDataSource0.getLoginTimeout());
      assertTrue(hikariDataSource0.isJdbc4ConnectionTest());
      assertEquals(60, hikariDataSource0.getMaximumPoolSize());
      assertEquals(5000L, hikariDataSource0.getConnectionTimeout());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertEquals(10, hikariPool0.getTotalConnections());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertEquals("z~NH}l5*1f$G/", hikariPool0.getcatalog());
      assertFalse(hikariPool0.getshutdown());
      assertFalse(hikariPool0.getdebug());
      assertTrue(hikariPool0.getisAutoCommit());
      assertFalse(boolean0);
      assertFalse(hikariDataSource0.isShutdown);
      assertEquals(1250, hikariDataSource0.loginTimeout);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertTrue(hikariPool0.isAutoCommit);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertFalse(hikariPool0.shutdown);
      assertFalse(hikariPool0.debug);
      assertEquals((-1), hikariPool0.transactionIsolation);
  }

  @Test(timeout = 11000)
  public void test22()  throws Throwable  {
      HikariConfig hikariConfig0 = new HikariConfig();
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isAutoCommit());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertNull(hikariConfig0.getCatalog());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertNotNull(hikariConfig0);
      
      String string0 = "z~NH}l5*1f$G/";
      hikariConfig0.setCatalog(string0);
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isAutoCommit());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      
      HikariDataSource hikariDataSource0 = new HikariDataSource();
      assertTrue(hikariDataSource0.isJdbc4ConnectionTest());
      assertNull(hikariDataSource0.getConnectionCustomizerClassName());
      assertTrue(hikariDataSource0.isAutoCommit());
      assertFalse(hikariDataSource0.isRegisterMbeans());
      assertFalse(hikariDataSource0.getisShutdown());
      assertEquals(0L, hikariDataSource0.getLeakDetectionThreshold());
      assertEquals(0, hikariDataSource0.getAcquireIncrement());
      assertEquals(60, hikariDataSource0.getMaximumPoolSize());
      assertNull(hikariDataSource0.getConnectionInitSql());
      assertNull(hikariDataSource0.getCatalog());
      assertEquals(5000L, hikariDataSource0.getConnectionTimeout());
      assertEquals(10, hikariDataSource0.getMinimumPoolSize());
      assertEquals(0, hikariDataSource0.getLoginTimeout());
      assertEquals(0L, hikariDataSource0.getAcquireRetryDelay());
      assertFalse(hikariDataSource0.isInitializationFailFast());
      assertNull(hikariDataSource0.getDataSourceClassName());
      assertEquals((-1), hikariDataSource0.getTransactionIsolation());
      assertEquals("HikariPool-1", hikariDataSource0.getPoolName());
      assertNull(hikariDataSource0.getConnectionTestQuery());
      assertEquals(1800000L, hikariDataSource0.getMaxLifetime());
      assertEquals(3, hikariDataSource0.getAcquireRetries());
      assertEquals(600000L, hikariDataSource0.getIdleTimeout());
      assertNotNull(hikariDataSource0);
      assertEquals(0, hikariDataSource0.loginTimeout);
      assertFalse(hikariDataSource0.isShutdown);
      
      Properties properties0 = new Properties();
      assertEquals(0, properties0.size());
      assertTrue(properties0.isEmpty());
      assertNotNull(properties0);
      
      hikariDataSource0.setDataSourceProperties(properties0);
      assertTrue(hikariDataSource0.isJdbc4ConnectionTest());
      assertNull(hikariDataSource0.getConnectionCustomizerClassName());
      assertTrue(hikariDataSource0.isAutoCommit());
      assertFalse(hikariDataSource0.isRegisterMbeans());
      assertFalse(hikariDataSource0.getisShutdown());
      assertEquals(0L, hikariDataSource0.getLeakDetectionThreshold());
      assertEquals(0, hikariDataSource0.getAcquireIncrement());
      assertEquals(60, hikariDataSource0.getMaximumPoolSize());
      assertNull(hikariDataSource0.getConnectionInitSql());
      assertNull(hikariDataSource0.getCatalog());
      assertEquals(5000L, hikariDataSource0.getConnectionTimeout());
      assertEquals(10, hikariDataSource0.getMinimumPoolSize());
      assertEquals(0, hikariDataSource0.getLoginTimeout());
      assertEquals(0L, hikariDataSource0.getAcquireRetryDelay());
      assertFalse(hikariDataSource0.isInitializationFailFast());
      assertNull(hikariDataSource0.getDataSourceClassName());
      assertEquals((-1), hikariDataSource0.getTransactionIsolation());
      assertEquals("HikariPool-1", hikariDataSource0.getPoolName());
      assertNull(hikariDataSource0.getConnectionTestQuery());
      assertEquals(1800000L, hikariDataSource0.getMaxLifetime());
      assertEquals(3, hikariDataSource0.getAcquireRetries());
      assertEquals(600000L, hikariDataSource0.getIdleTimeout());
      assertEquals(0, properties0.size());
      assertTrue(properties0.isEmpty());
      assertEquals(0, hikariDataSource0.loginTimeout);
      assertFalse(hikariDataSource0.isShutdown);
      
      String string1 = "";
      hikariDataSource0.setTransactionIsolation(string1);
      assertNotSame(string1, string0);
      assertTrue(hikariDataSource0.isJdbc4ConnectionTest());
      assertNull(hikariDataSource0.getConnectionCustomizerClassName());
      assertTrue(hikariDataSource0.isAutoCommit());
      assertFalse(hikariDataSource0.isRegisterMbeans());
      assertFalse(hikariDataSource0.getisShutdown());
      assertEquals(0L, hikariDataSource0.getLeakDetectionThreshold());
      assertEquals(0, hikariDataSource0.getAcquireIncrement());
      assertEquals(60, hikariDataSource0.getMaximumPoolSize());
      assertNull(hikariDataSource0.getConnectionInitSql());
      assertNull(hikariDataSource0.getCatalog());
      assertEquals(5000L, hikariDataSource0.getConnectionTimeout());
      assertEquals(10, hikariDataSource0.getMinimumPoolSize());
      assertEquals(0, hikariDataSource0.getLoginTimeout());
      assertEquals(0L, hikariDataSource0.getAcquireRetryDelay());
      assertFalse(hikariDataSource0.isInitializationFailFast());
      assertNull(hikariDataSource0.getDataSourceClassName());
      assertEquals((-1), hikariDataSource0.getTransactionIsolation());
      assertEquals("HikariPool-1", hikariDataSource0.getPoolName());
      assertNull(hikariDataSource0.getConnectionTestQuery());
      assertEquals(1800000L, hikariDataSource0.getMaxLifetime());
      assertEquals(3, hikariDataSource0.getAcquireRetries());
      assertEquals(600000L, hikariDataSource0.getIdleTimeout());
      assertFalse(string1.equals((Object)string0));
      assertEquals(0, hikariDataSource0.loginTimeout);
      assertFalse(hikariDataSource0.isShutdown);
      
      EvoSuiteFile evoSuiteFile0 = null;
      boolean boolean0 = FileSystemHandling.createFolder(evoSuiteFile0);
      assertFalse(boolean0);
      
      hikariConfig0.setDataSource(hikariDataSource0);
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isAutoCommit());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertTrue(hikariDataSource0.isJdbc4ConnectionTest());
      assertNull(hikariDataSource0.getConnectionCustomizerClassName());
      assertTrue(hikariDataSource0.isAutoCommit());
      assertFalse(hikariDataSource0.isRegisterMbeans());
      assertFalse(hikariDataSource0.getisShutdown());
      assertEquals(0L, hikariDataSource0.getLeakDetectionThreshold());
      assertEquals(0, hikariDataSource0.getAcquireIncrement());
      assertEquals(60, hikariDataSource0.getMaximumPoolSize());
      assertNull(hikariDataSource0.getConnectionInitSql());
      assertNull(hikariDataSource0.getCatalog());
      assertEquals(5000L, hikariDataSource0.getConnectionTimeout());
      assertEquals(10, hikariDataSource0.getMinimumPoolSize());
      assertEquals(0, hikariDataSource0.getLoginTimeout());
      assertEquals(0L, hikariDataSource0.getAcquireRetryDelay());
      assertFalse(hikariDataSource0.isInitializationFailFast());
      assertNull(hikariDataSource0.getDataSourceClassName());
      assertEquals((-1), hikariDataSource0.getTransactionIsolation());
      assertEquals("HikariPool-1", hikariDataSource0.getPoolName());
      assertNull(hikariDataSource0.getConnectionTestQuery());
      assertEquals(1800000L, hikariDataSource0.getMaxLifetime());
      assertEquals(3, hikariDataSource0.getAcquireRetries());
      assertEquals(600000L, hikariDataSource0.getIdleTimeout());
      assertEquals(0, hikariDataSource0.loginTimeout);
      assertFalse(hikariDataSource0.isShutdown);
      
      String string2 = "";
      hikariConfig0.setDataSourceClassName(string2);
      assertNotSame(string2, string0);
      assertSame(string2, string1);
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isAutoCommit());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals("", hikariConfig0.getDataSourceClassName());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertFalse(string2.equals((Object)string0));
      
      HikariPool hikariPool0 = new HikariPool(hikariConfig0);
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isAutoCommit());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals("", hikariConfig0.getDataSourceClassName());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertEquals("z~NH}l5*1f$G/", hikariPool0.getcatalog());
      assertTrue(hikariPool0.getisAutoCommit());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertFalse(hikariPool0.getdebug());
      assertEquals(10, hikariPool0.getTotalConnections());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertFalse(hikariPool0.getshutdown());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertNotNull(hikariPool0);
      assertFalse(hikariPool0.shutdown);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertTrue(hikariPool0.isAutoCommit);
      assertFalse(hikariPool0.debug);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      
      boolean boolean1 = hikariPool0.getjdbc4ConnectionTest();
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isAutoCommit());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals("", hikariConfig0.getDataSourceClassName());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertEquals("z~NH}l5*1f$G/", hikariPool0.getcatalog());
      assertTrue(hikariPool0.getisAutoCommit());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertFalse(hikariPool0.getdebug());
      assertEquals(10, hikariPool0.getTotalConnections());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertFalse(hikariPool0.getshutdown());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
      assertFalse(hikariPool0.shutdown);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertTrue(hikariPool0.isAutoCommit);
      assertFalse(hikariPool0.debug);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      
      String string3 = hikariPool0.getcatalog();
      assertNotSame(string3, string1);
      assertNotSame(string3, string2);
      assertSame(string3, string0);
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isAutoCommit());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals("", hikariConfig0.getDataSourceClassName());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertEquals("z~NH}l5*1f$G/", hikariPool0.getcatalog());
      assertTrue(hikariPool0.getisAutoCommit());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertFalse(hikariPool0.getdebug());
      assertEquals(10, hikariPool0.getTotalConnections());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertFalse(hikariPool0.getshutdown());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string2));
      assertNotNull(string3);
      assertEquals("z~NH}l5*1f$G/", string3);
      assertFalse(hikariPool0.shutdown);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertTrue(hikariPool0.isAutoCommit);
      assertFalse(hikariPool0.debug);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
  }

  @Test(timeout = 11000)
  public void test23()  throws Throwable  {
      HikariConfig hikariConfig0 = new HikariConfig();
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertNotNull(hikariConfig0);
      
      String string0 = "z~NH}l5*1f$G/";
      hikariConfig0.setCatalog(string0);
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      
      HikariDataSource hikariDataSource0 = new HikariDataSource();
      assertEquals(5000L, hikariDataSource0.getConnectionTimeout());
      assertEquals(10, hikariDataSource0.getMinimumPoolSize());
      assertFalse(hikariDataSource0.isInitializationFailFast());
      assertEquals(600000L, hikariDataSource0.getIdleTimeout());
      assertNull(hikariDataSource0.getDataSourceClassName());
      assertEquals(1800000L, hikariDataSource0.getMaxLifetime());
      assertEquals(3, hikariDataSource0.getAcquireRetries());
      assertEquals(0L, hikariDataSource0.getAcquireRetryDelay());
      assertEquals(0, hikariDataSource0.getLoginTimeout());
      assertNull(hikariDataSource0.getConnectionTestQuery());
      assertTrue(hikariDataSource0.isJdbc4ConnectionTest());
      assertEquals(60, hikariDataSource0.getMaximumPoolSize());
      assertTrue(hikariDataSource0.isAutoCommit());
      assertEquals(0L, hikariDataSource0.getLeakDetectionThreshold());
      assertEquals("HikariPool-1", hikariDataSource0.getPoolName());
      assertEquals(0, hikariDataSource0.getAcquireIncrement());
      assertEquals((-1), hikariDataSource0.getTransactionIsolation());
      assertFalse(hikariDataSource0.isRegisterMbeans());
      assertNull(hikariDataSource0.getConnectionCustomizerClassName());
      assertFalse(hikariDataSource0.getisShutdown());
      assertNull(hikariDataSource0.getCatalog());
      assertNull(hikariDataSource0.getConnectionInitSql());
      assertNotNull(hikariDataSource0);
      assertEquals(0, hikariDataSource0.loginTimeout);
      assertFalse(hikariDataSource0.isShutdown);
      
      hikariConfig0.setDataSource(hikariDataSource0);
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(5000L, hikariDataSource0.getConnectionTimeout());
      assertEquals(10, hikariDataSource0.getMinimumPoolSize());
      assertFalse(hikariDataSource0.isInitializationFailFast());
      assertEquals(600000L, hikariDataSource0.getIdleTimeout());
      assertNull(hikariDataSource0.getDataSourceClassName());
      assertEquals(1800000L, hikariDataSource0.getMaxLifetime());
      assertEquals(3, hikariDataSource0.getAcquireRetries());
      assertEquals(0L, hikariDataSource0.getAcquireRetryDelay());
      assertEquals(0, hikariDataSource0.getLoginTimeout());
      assertNull(hikariDataSource0.getConnectionTestQuery());
      assertTrue(hikariDataSource0.isJdbc4ConnectionTest());
      assertEquals(60, hikariDataSource0.getMaximumPoolSize());
      assertTrue(hikariDataSource0.isAutoCommit());
      assertEquals(0L, hikariDataSource0.getLeakDetectionThreshold());
      assertEquals("HikariPool-1", hikariDataSource0.getPoolName());
      assertEquals(0, hikariDataSource0.getAcquireIncrement());
      assertEquals((-1), hikariDataSource0.getTransactionIsolation());
      assertFalse(hikariDataSource0.isRegisterMbeans());
      assertNull(hikariDataSource0.getConnectionCustomizerClassName());
      assertFalse(hikariDataSource0.getisShutdown());
      assertNull(hikariDataSource0.getCatalog());
      assertNull(hikariDataSource0.getConnectionInitSql());
      assertEquals(0, hikariDataSource0.loginTimeout);
      assertFalse(hikariDataSource0.isShutdown);
      
      String string1 = "<h*3tU31q8JLA&<";
      hikariConfig0.setDataSourceClassName(string1);
      assertNotSame(string1, string0);
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals("<h*3tU31q8JLA&<", hikariConfig0.getDataSourceClassName());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertFalse(string1.equals((Object)string0));
      
      HikariPool hikariPool0 = new HikariPool(hikariConfig0);
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals("<h*3tU31q8JLA&<", hikariConfig0.getDataSourceClassName());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertFalse(hikariPool0.getdebug());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertEquals("z~NH}l5*1f$G/", hikariPool0.getcatalog());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertFalse(hikariPool0.getshutdown());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertEquals(10, hikariPool0.getTotalConnections());
      assertTrue(hikariPool0.getisAutoCommit());
      assertNotNull(hikariPool0);
      assertFalse(hikariPool0.debug);
      assertTrue(hikariPool0.isAutoCommit);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertFalse(hikariPool0.shutdown);
      assertEquals((-1), hikariPool0.transactionIsolation);
      
      boolean boolean0 = false;
      hikariPool0.closeIdleConnections();
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals("<h*3tU31q8JLA&<", hikariConfig0.getDataSourceClassName());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertFalse(hikariPool0.getdebug());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertEquals("z~NH}l5*1f$G/", hikariPool0.getcatalog());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertFalse(hikariPool0.getshutdown());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertEquals(10, hikariPool0.getTotalConnections());
      assertTrue(hikariPool0.getisAutoCommit());
      assertFalse(hikariPool0.debug);
      assertTrue(hikariPool0.isAutoCommit);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertFalse(hikariPool0.shutdown);
      assertEquals((-1), hikariPool0.transactionIsolation);
      
      IHikariConnectionProxy iHikariConnectionProxy0 = mock(IHikariConnectionProxy.class, new ViolatedAssumptionAnswer());
      doReturn(boolean0).when(iHikariConnectionProxy0).isValid(anyInt());
      boolean boolean1 = hikariPool0.isConnectionAlive(iHikariConnectionProxy0, hikariDataSource0.loginTimeout);
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals("<h*3tU31q8JLA&<", hikariConfig0.getDataSourceClassName());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(1250, hikariDataSource0.getLoginTimeout());
      assertEquals(5000L, hikariDataSource0.getConnectionTimeout());
      assertEquals(10, hikariDataSource0.getMinimumPoolSize());
      assertFalse(hikariDataSource0.isInitializationFailFast());
      assertEquals(600000L, hikariDataSource0.getIdleTimeout());
      assertNull(hikariDataSource0.getDataSourceClassName());
      assertEquals(1800000L, hikariDataSource0.getMaxLifetime());
      assertEquals(3, hikariDataSource0.getAcquireRetries());
      assertEquals(0L, hikariDataSource0.getAcquireRetryDelay());
      assertNull(hikariDataSource0.getConnectionTestQuery());
      assertTrue(hikariDataSource0.isJdbc4ConnectionTest());
      assertEquals(60, hikariDataSource0.getMaximumPoolSize());
      assertTrue(hikariDataSource0.isAutoCommit());
      assertEquals(0L, hikariDataSource0.getLeakDetectionThreshold());
      assertEquals("HikariPool-1", hikariDataSource0.getPoolName());
      assertEquals(0, hikariDataSource0.getAcquireIncrement());
      assertEquals((-1), hikariDataSource0.getTransactionIsolation());
      assertFalse(hikariDataSource0.isRegisterMbeans());
      assertNull(hikariDataSource0.getConnectionCustomizerClassName());
      assertFalse(hikariDataSource0.getisShutdown());
      assertNull(hikariDataSource0.getCatalog());
      assertNull(hikariDataSource0.getConnectionInitSql());
      assertFalse(hikariPool0.getdebug());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertEquals("z~NH}l5*1f$G/", hikariPool0.getcatalog());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertFalse(hikariPool0.getshutdown());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertEquals(10, hikariPool0.getTotalConnections());
      assertTrue(hikariPool0.getisAutoCommit());
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertFalse(hikariDataSource0.isShutdown);
      assertEquals(1250, hikariDataSource0.loginTimeout);
      assertFalse(hikariPool0.debug);
      assertTrue(hikariPool0.isAutoCommit);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertFalse(hikariPool0.shutdown);
      assertEquals((-1), hikariPool0.transactionIsolation);
  }

  @Test(timeout = 11000)
  public void test24()  throws Throwable  {
      HikariConfig hikariConfig0 = new HikariConfig();
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertNotNull(hikariConfig0);
      
      String string0 = "z~NH}l5*1f$G/";
      hikariConfig0.setCatalog(string0);
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      
      HikariDataSource hikariDataSource0 = new HikariDataSource();
      assertEquals(5000L, hikariDataSource0.getConnectionTimeout());
      assertFalse(hikariDataSource0.isInitializationFailFast());
      assertFalse(hikariDataSource0.isRegisterMbeans());
      assertFalse(hikariDataSource0.getisShutdown());
      assertEquals(3, hikariDataSource0.getAcquireRetries());
      assertEquals(0L, hikariDataSource0.getAcquireRetryDelay());
      assertNull(hikariDataSource0.getDataSourceClassName());
      assertEquals(10, hikariDataSource0.getMinimumPoolSize());
      assertEquals((-1), hikariDataSource0.getTransactionIsolation());
      assertEquals(0, hikariDataSource0.getLoginTimeout());
      assertNull(hikariDataSource0.getConnectionTestQuery());
      assertEquals(1800000L, hikariDataSource0.getMaxLifetime());
      assertEquals(600000L, hikariDataSource0.getIdleTimeout());
      assertEquals("HikariPool-1", hikariDataSource0.getPoolName());
      assertNull(hikariDataSource0.getConnectionCustomizerClassName());
      assertTrue(hikariDataSource0.isJdbc4ConnectionTest());
      assertTrue(hikariDataSource0.isAutoCommit());
      assertEquals(0L, hikariDataSource0.getLeakDetectionThreshold());
      assertEquals(0, hikariDataSource0.getAcquireIncrement());
      assertNull(hikariDataSource0.getCatalog());
      assertNull(hikariDataSource0.getConnectionInitSql());
      assertEquals(60, hikariDataSource0.getMaximumPoolSize());
      assertNotNull(hikariDataSource0);
      assertFalse(hikariDataSource0.isShutdown);
      assertEquals(0, hikariDataSource0.loginTimeout);
      
      hikariConfig0.setDataSource(hikariDataSource0);
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(5000L, hikariDataSource0.getConnectionTimeout());
      assertFalse(hikariDataSource0.isInitializationFailFast());
      assertFalse(hikariDataSource0.isRegisterMbeans());
      assertFalse(hikariDataSource0.getisShutdown());
      assertEquals(3, hikariDataSource0.getAcquireRetries());
      assertEquals(0L, hikariDataSource0.getAcquireRetryDelay());
      assertNull(hikariDataSource0.getDataSourceClassName());
      assertEquals(10, hikariDataSource0.getMinimumPoolSize());
      assertEquals((-1), hikariDataSource0.getTransactionIsolation());
      assertEquals(0, hikariDataSource0.getLoginTimeout());
      assertNull(hikariDataSource0.getConnectionTestQuery());
      assertEquals(1800000L, hikariDataSource0.getMaxLifetime());
      assertEquals(600000L, hikariDataSource0.getIdleTimeout());
      assertEquals("HikariPool-1", hikariDataSource0.getPoolName());
      assertNull(hikariDataSource0.getConnectionCustomizerClassName());
      assertTrue(hikariDataSource0.isJdbc4ConnectionTest());
      assertTrue(hikariDataSource0.isAutoCommit());
      assertEquals(0L, hikariDataSource0.getLeakDetectionThreshold());
      assertEquals(0, hikariDataSource0.getAcquireIncrement());
      assertNull(hikariDataSource0.getCatalog());
      assertNull(hikariDataSource0.getConnectionInitSql());
      assertEquals(60, hikariDataSource0.getMaximumPoolSize());
      assertFalse(hikariDataSource0.isShutdown);
      assertEquals(0, hikariDataSource0.loginTimeout);
      
      String string1 = "<h*3tU31q8JLA&<";
      hikariConfig0.setDataSourceClassName(string1);
      assertNotSame(string1, string0);
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals("<h*3tU31q8JLA&<", hikariConfig0.getDataSourceClassName());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertFalse(string1.equals((Object)string0));
      
      HikariPool hikariPool0 = new HikariPool(hikariConfig0);
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals("<h*3tU31q8JLA&<", hikariConfig0.getDataSourceClassName());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertTrue(hikariPool0.getisAutoCommit());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertEquals("z~NH}l5*1f$G/", hikariPool0.getcatalog());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertFalse(hikariPool0.getdebug());
      assertFalse(hikariPool0.getshutdown());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertEquals(10, hikariPool0.getTotalConnections());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertNotNull(hikariPool0);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertFalse(hikariPool0.debug);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertTrue(hikariPool0.isAutoCommit);
      assertFalse(hikariPool0.shutdown);
      
      int int0 = hikariPool0.getTotalConnections();
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals("<h*3tU31q8JLA&<", hikariConfig0.getDataSourceClassName());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertTrue(hikariPool0.getisAutoCommit());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertEquals("z~NH}l5*1f$G/", hikariPool0.getcatalog());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertFalse(hikariPool0.getdebug());
      assertFalse(hikariPool0.getshutdown());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertEquals(10, hikariPool0.getTotalConnections());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertEquals(10, int0);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertFalse(hikariPool0.debug);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertTrue(hikariPool0.isAutoCommit);
      assertFalse(hikariPool0.shutdown);
  }

  @Test(timeout = 11000)
  public void test25()  throws Throwable  {
      HikariConfig hikariConfig0 = new HikariConfig();
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertTrue(hikariConfig0.isAutoCommit());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertNotNull(hikariConfig0);
      
      String string0 = "z~NH}l5*1f$G/";
      HikariDataSource hikariDataSource0 = new HikariDataSource();
      assertEquals(60, hikariDataSource0.getMaximumPoolSize());
      assertTrue(hikariDataSource0.isAutoCommit());
      assertTrue(hikariDataSource0.isJdbc4ConnectionTest());
      assertNull(hikariDataSource0.getConnectionCustomizerClassName());
      assertNull(hikariDataSource0.getConnectionInitSql());
      assertEquals(0L, hikariDataSource0.getLeakDetectionThreshold());
      assertEquals(0, hikariDataSource0.getAcquireIncrement());
      assertEquals(5000L, hikariDataSource0.getConnectionTimeout());
      assertNull(hikariDataSource0.getCatalog());
      assertEquals(0, hikariDataSource0.getLoginTimeout());
      assertFalse(hikariDataSource0.isInitializationFailFast());
      assertFalse(hikariDataSource0.isRegisterMbeans());
      assertFalse(hikariDataSource0.getisShutdown());
      assertEquals(0L, hikariDataSource0.getAcquireRetryDelay());
      assertEquals((-1), hikariDataSource0.getTransactionIsolation());
      assertEquals(1800000L, hikariDataSource0.getMaxLifetime());
      assertEquals(600000L, hikariDataSource0.getIdleTimeout());
      assertNull(hikariDataSource0.getDataSourceClassName());
      assertEquals(3, hikariDataSource0.getAcquireRetries());
      assertNull(hikariDataSource0.getConnectionTestQuery());
      assertEquals(10, hikariDataSource0.getMinimumPoolSize());
      assertEquals("HikariPool-1", hikariDataSource0.getPoolName());
      assertNotNull(hikariDataSource0);
      assertEquals(0, hikariDataSource0.loginTimeout);
      assertFalse(hikariDataSource0.isShutdown);
      
      hikariConfig0.setDataSource(hikariDataSource0);
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertTrue(hikariConfig0.isAutoCommit());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(60, hikariDataSource0.getMaximumPoolSize());
      assertTrue(hikariDataSource0.isAutoCommit());
      assertTrue(hikariDataSource0.isJdbc4ConnectionTest());
      assertNull(hikariDataSource0.getConnectionCustomizerClassName());
      assertNull(hikariDataSource0.getConnectionInitSql());
      assertEquals(0L, hikariDataSource0.getLeakDetectionThreshold());
      assertEquals(0, hikariDataSource0.getAcquireIncrement());
      assertEquals(5000L, hikariDataSource0.getConnectionTimeout());
      assertNull(hikariDataSource0.getCatalog());
      assertEquals(0, hikariDataSource0.getLoginTimeout());
      assertFalse(hikariDataSource0.isInitializationFailFast());
      assertFalse(hikariDataSource0.isRegisterMbeans());
      assertFalse(hikariDataSource0.getisShutdown());
      assertEquals(0L, hikariDataSource0.getAcquireRetryDelay());
      assertEquals((-1), hikariDataSource0.getTransactionIsolation());
      assertEquals(1800000L, hikariDataSource0.getMaxLifetime());
      assertEquals(600000L, hikariDataSource0.getIdleTimeout());
      assertNull(hikariDataSource0.getDataSourceClassName());
      assertEquals(3, hikariDataSource0.getAcquireRetries());
      assertNull(hikariDataSource0.getConnectionTestQuery());
      assertEquals(10, hikariDataSource0.getMinimumPoolSize());
      assertEquals("HikariPool-1", hikariDataSource0.getPoolName());
      assertEquals(0, hikariDataSource0.loginTimeout);
      assertFalse(hikariDataSource0.isShutdown);
      
      hikariConfig0.setMaximumPoolSize(hikariDataSource0.loginTimeout);
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals(0, hikariConfig0.getMaximumPoolSize());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(60, hikariDataSource0.getMaximumPoolSize());
      assertTrue(hikariDataSource0.isAutoCommit());
      assertTrue(hikariDataSource0.isJdbc4ConnectionTest());
      assertNull(hikariDataSource0.getConnectionCustomizerClassName());
      assertNull(hikariDataSource0.getConnectionInitSql());
      assertEquals(0L, hikariDataSource0.getLeakDetectionThreshold());
      assertEquals(0, hikariDataSource0.getAcquireIncrement());
      assertEquals(5000L, hikariDataSource0.getConnectionTimeout());
      assertNull(hikariDataSource0.getCatalog());
      assertEquals(0, hikariDataSource0.getLoginTimeout());
      assertFalse(hikariDataSource0.isInitializationFailFast());
      assertFalse(hikariDataSource0.isRegisterMbeans());
      assertFalse(hikariDataSource0.getisShutdown());
      assertEquals(0L, hikariDataSource0.getAcquireRetryDelay());
      assertEquals((-1), hikariDataSource0.getTransactionIsolation());
      assertEquals(1800000L, hikariDataSource0.getMaxLifetime());
      assertEquals(600000L, hikariDataSource0.getIdleTimeout());
      assertNull(hikariDataSource0.getDataSourceClassName());
      assertEquals(3, hikariDataSource0.getAcquireRetries());
      assertNull(hikariDataSource0.getConnectionTestQuery());
      assertEquals(10, hikariDataSource0.getMinimumPoolSize());
      assertEquals("HikariPool-1", hikariDataSource0.getPoolName());
      assertEquals(0, hikariDataSource0.loginTimeout);
      assertFalse(hikariDataSource0.isShutdown);
      
      String string1 = "<h*3tU31q8JLA&<";
      hikariConfig0.setDataSourceClassName(string1);
      assertNotSame(string1, string0);
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals("<h*3tU31q8JLA&<", hikariConfig0.getDataSourceClassName());
      assertEquals(0, hikariConfig0.getMaximumPoolSize());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertFalse(string1.equals((Object)string0));
      
      HikariPool hikariPool0 = new HikariPool(hikariConfig0);
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals("<h*3tU31q8JLA&<", hikariConfig0.getDataSourceClassName());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals(10, hikariConfig0.getMaximumPoolSize());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertTrue(hikariPool0.getisAutoCommit());
      assertEquals(10, hikariPool0.getTotalConnections());
      assertNull(hikariPool0.getcatalog());
      assertFalse(hikariPool0.getdebug());
      assertFalse(hikariPool0.getshutdown());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertNotNull(hikariPool0);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertFalse(hikariPool0.shutdown);
      assertFalse(hikariPool0.debug);
      assertTrue(hikariPool0.isAutoCommit);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      
      boolean boolean0 = false;
      hikariPool0.closeIdleConnections();
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals("<h*3tU31q8JLA&<", hikariConfig0.getDataSourceClassName());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals(10, hikariConfig0.getMaximumPoolSize());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertTrue(hikariPool0.getisAutoCommit());
      assertEquals(10, hikariPool0.getTotalConnections());
      assertNull(hikariPool0.getcatalog());
      assertFalse(hikariPool0.getdebug());
      assertFalse(hikariPool0.getshutdown());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertFalse(hikariPool0.shutdown);
      assertFalse(hikariPool0.debug);
      assertTrue(hikariPool0.isAutoCommit);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      
      IHikariConnectionProxy iHikariConnectionProxy0 = mock(IHikariConnectionProxy.class, new ViolatedAssumptionAnswer());
      doReturn(boolean0).when(iHikariConnectionProxy0).isValid(anyInt());
      boolean boolean1 = hikariPool0.isConnectionAlive(iHikariConnectionProxy0, hikariDataSource0.loginTimeout);
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals("<h*3tU31q8JLA&<", hikariConfig0.getDataSourceClassName());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals(10, hikariConfig0.getMaximumPoolSize());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(60, hikariDataSource0.getMaximumPoolSize());
      assertTrue(hikariDataSource0.isAutoCommit());
      assertTrue(hikariDataSource0.isJdbc4ConnectionTest());
      assertNull(hikariDataSource0.getConnectionCustomizerClassName());
      assertNull(hikariDataSource0.getConnectionInitSql());
      assertEquals(0L, hikariDataSource0.getLeakDetectionThreshold());
      assertEquals(0, hikariDataSource0.getAcquireIncrement());
      assertEquals(5000L, hikariDataSource0.getConnectionTimeout());
      assertNull(hikariDataSource0.getCatalog());
      assertFalse(hikariDataSource0.isInitializationFailFast());
      assertFalse(hikariDataSource0.isRegisterMbeans());
      assertFalse(hikariDataSource0.getisShutdown());
      assertEquals(0L, hikariDataSource0.getAcquireRetryDelay());
      assertEquals(1250, hikariDataSource0.getLoginTimeout());
      assertEquals((-1), hikariDataSource0.getTransactionIsolation());
      assertEquals(1800000L, hikariDataSource0.getMaxLifetime());
      assertEquals(600000L, hikariDataSource0.getIdleTimeout());
      assertNull(hikariDataSource0.getDataSourceClassName());
      assertEquals(3, hikariDataSource0.getAcquireRetries());
      assertNull(hikariDataSource0.getConnectionTestQuery());
      assertEquals(10, hikariDataSource0.getMinimumPoolSize());
      assertEquals("HikariPool-1", hikariDataSource0.getPoolName());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertTrue(hikariPool0.getisAutoCommit());
      assertEquals(10, hikariPool0.getTotalConnections());
      assertNull(hikariPool0.getcatalog());
      assertFalse(hikariPool0.getdebug());
      assertFalse(hikariPool0.getshutdown());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(1250, hikariDataSource0.loginTimeout);
      assertFalse(hikariDataSource0.isShutdown);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertFalse(hikariPool0.shutdown);
      assertFalse(hikariPool0.debug);
      assertTrue(hikariPool0.isAutoCommit);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
  }

  @Test(timeout = 11000)
  public void test26()  throws Throwable  {
      HikariConfig hikariConfig0 = new HikariConfig();
      assertNull(hikariConfig0.getCatalog());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertTrue(hikariConfig0.isAutoCommit());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertNotNull(hikariConfig0);
      
      String string0 = "z~NH}l5*1f$G/";
      hikariConfig0.setCatalog(string0);
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertTrue(hikariConfig0.isAutoCommit());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      
      EvoSuiteFile evoSuiteFile0 = null;
      boolean boolean0 = false;
      boolean boolean1 = true;
      boolean boolean2 = FileSystemHandling.setPermissions(evoSuiteFile0, boolean0, boolean0, boolean1);
      assertFalse(boolean0 == boolean1);
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2);
      
      HikariDataSource hikariDataSource0 = new HikariDataSource();
      assertEquals(10, hikariDataSource0.getMinimumPoolSize());
      assertNull(hikariDataSource0.getCatalog());
      assertEquals(0, hikariDataSource0.getLoginTimeout());
      assertEquals(0L, hikariDataSource0.getAcquireRetryDelay());
      assertFalse(hikariDataSource0.isRegisterMbeans());
      assertFalse(hikariDataSource0.getisShutdown());
      assertEquals(5000L, hikariDataSource0.getConnectionTimeout());
      assertEquals(0L, hikariDataSource0.getLeakDetectionThreshold());
      assertEquals(0, hikariDataSource0.getAcquireIncrement());
      assertEquals(60, hikariDataSource0.getMaximumPoolSize());
      assertTrue(hikariDataSource0.isJdbc4ConnectionTest());
      assertNull(hikariDataSource0.getConnectionInitSql());
      assertNull(hikariDataSource0.getConnectionTestQuery());
      assertTrue(hikariDataSource0.isAutoCommit());
      assertNull(hikariDataSource0.getConnectionCustomizerClassName());
      assertFalse(hikariDataSource0.isInitializationFailFast());
      assertEquals(1800000L, hikariDataSource0.getMaxLifetime());
      assertEquals(600000L, hikariDataSource0.getIdleTimeout());
      assertEquals((-1), hikariDataSource0.getTransactionIsolation());
      assertNull(hikariDataSource0.getDataSourceClassName());
      assertEquals(3, hikariDataSource0.getAcquireRetries());
      assertEquals("HikariPool-1", hikariDataSource0.getPoolName());
      assertNotNull(hikariDataSource0);
      assertEquals(0, hikariDataSource0.loginTimeout);
      assertFalse(hikariDataSource0.isShutdown);
      
      hikariConfig0.setDataSource(hikariDataSource0);
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertTrue(hikariConfig0.isAutoCommit());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals(10, hikariDataSource0.getMinimumPoolSize());
      assertNull(hikariDataSource0.getCatalog());
      assertEquals(0, hikariDataSource0.getLoginTimeout());
      assertEquals(0L, hikariDataSource0.getAcquireRetryDelay());
      assertFalse(hikariDataSource0.isRegisterMbeans());
      assertFalse(hikariDataSource0.getisShutdown());
      assertEquals(5000L, hikariDataSource0.getConnectionTimeout());
      assertEquals(0L, hikariDataSource0.getLeakDetectionThreshold());
      assertEquals(0, hikariDataSource0.getAcquireIncrement());
      assertEquals(60, hikariDataSource0.getMaximumPoolSize());
      assertTrue(hikariDataSource0.isJdbc4ConnectionTest());
      assertNull(hikariDataSource0.getConnectionInitSql());
      assertNull(hikariDataSource0.getConnectionTestQuery());
      assertTrue(hikariDataSource0.isAutoCommit());
      assertNull(hikariDataSource0.getConnectionCustomizerClassName());
      assertFalse(hikariDataSource0.isInitializationFailFast());
      assertEquals(1800000L, hikariDataSource0.getMaxLifetime());
      assertEquals(600000L, hikariDataSource0.getIdleTimeout());
      assertEquals((-1), hikariDataSource0.getTransactionIsolation());
      assertNull(hikariDataSource0.getDataSourceClassName());
      assertEquals(3, hikariDataSource0.getAcquireRetries());
      assertEquals("HikariPool-1", hikariDataSource0.getPoolName());
      assertEquals(0, hikariDataSource0.loginTimeout);
      assertFalse(hikariDataSource0.isShutdown);
      
      String string1 = "<h*3tU31q8JLA&<";
      hikariConfig0.setDataSourceClassName(string1);
      assertNotSame(string1, string0);
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals("<h*3tU31q8JLA&<", hikariConfig0.getDataSourceClassName());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertTrue(hikariConfig0.isAutoCommit());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertFalse(string1.equals((Object)string0));
      
      HikariPool hikariPool0 = new HikariPool(hikariConfig0);
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals("<h*3tU31q8JLA&<", hikariConfig0.getDataSourceClassName());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertTrue(hikariConfig0.isAutoCommit());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertTrue(hikariPool0.getisAutoCommit());
      assertEquals(10, hikariPool0.getTotalConnections());
      assertFalse(hikariPool0.getdebug());
      assertFalse(hikariPool0.getshutdown());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertEquals("z~NH}l5*1f$G/", hikariPool0.getcatalog());
      assertNotNull(hikariPool0);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertFalse(hikariPool0.shutdown);
      assertFalse(hikariPool0.debug);
      assertTrue(hikariPool0.isAutoCommit);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      
      boolean boolean3 = FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      assertTrue(boolean3 == boolean0);
      assertFalse(boolean3 == boolean1);
      assertTrue(boolean3 == boolean2);
      assertFalse(boolean3);
      
      boolean boolean4 = false;
      hikariPool0.closeIdleConnections();
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals("<h*3tU31q8JLA&<", hikariConfig0.getDataSourceClassName());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertTrue(hikariConfig0.isAutoCommit());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertTrue(hikariPool0.getisAutoCommit());
      assertEquals(10, hikariPool0.getTotalConnections());
      assertFalse(hikariPool0.getdebug());
      assertFalse(hikariPool0.getshutdown());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertEquals("z~NH}l5*1f$G/", hikariPool0.getcatalog());
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertFalse(hikariPool0.shutdown);
      assertFalse(hikariPool0.debug);
      assertTrue(hikariPool0.isAutoCommit);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      
      IHikariConnectionProxy iHikariConnectionProxy0 = mock(IHikariConnectionProxy.class, new ViolatedAssumptionAnswer());
      doReturn(boolean4).when(iHikariConnectionProxy0).isValid(anyInt());
      boolean boolean5 = hikariPool0.isConnectionAlive(iHikariConnectionProxy0, hikariDataSource0.loginTimeout);
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals("<h*3tU31q8JLA&<", hikariConfig0.getDataSourceClassName());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertTrue(hikariConfig0.isAutoCommit());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals(1250, hikariDataSource0.getLoginTimeout());
      assertEquals(10, hikariDataSource0.getMinimumPoolSize());
      assertNull(hikariDataSource0.getCatalog());
      assertEquals(0L, hikariDataSource0.getAcquireRetryDelay());
      assertFalse(hikariDataSource0.isRegisterMbeans());
      assertFalse(hikariDataSource0.getisShutdown());
      assertEquals(5000L, hikariDataSource0.getConnectionTimeout());
      assertEquals(0L, hikariDataSource0.getLeakDetectionThreshold());
      assertEquals(0, hikariDataSource0.getAcquireIncrement());
      assertEquals(60, hikariDataSource0.getMaximumPoolSize());
      assertTrue(hikariDataSource0.isJdbc4ConnectionTest());
      assertNull(hikariDataSource0.getConnectionInitSql());
      assertNull(hikariDataSource0.getConnectionTestQuery());
      assertTrue(hikariDataSource0.isAutoCommit());
      assertNull(hikariDataSource0.getConnectionCustomizerClassName());
      assertFalse(hikariDataSource0.isInitializationFailFast());
      assertEquals(1800000L, hikariDataSource0.getMaxLifetime());
      assertEquals(600000L, hikariDataSource0.getIdleTimeout());
      assertEquals((-1), hikariDataSource0.getTransactionIsolation());
      assertNull(hikariDataSource0.getDataSourceClassName());
      assertEquals(3, hikariDataSource0.getAcquireRetries());
      assertEquals("HikariPool-1", hikariDataSource0.getPoolName());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertTrue(hikariPool0.getisAutoCommit());
      assertEquals(10, hikariPool0.getTotalConnections());
      assertFalse(hikariPool0.getdebug());
      assertFalse(hikariPool0.getshutdown());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertEquals("z~NH}l5*1f$G/", hikariPool0.getcatalog());
      assertTrue(boolean5 == boolean4);
      assertTrue(boolean5 == boolean0);
      assertTrue(boolean5 == boolean3);
      assertFalse(boolean5 == boolean1);
      assertTrue(boolean5 == boolean2);
      assertTrue(boolean4 == boolean2);
      assertFalse(boolean4 == boolean1);
      assertTrue(boolean4 == boolean3);
      assertFalse(boolean5);
      assertEquals(1250, hikariDataSource0.loginTimeout);
      assertFalse(hikariDataSource0.isShutdown);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertFalse(hikariPool0.shutdown);
      assertFalse(hikariPool0.debug);
      assertTrue(hikariPool0.isAutoCommit);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      
      Logger logger0 = hikariPool0.getLOGGER();
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals("<h*3tU31q8JLA&<", hikariConfig0.getDataSourceClassName());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertTrue(hikariConfig0.isAutoCommit());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertTrue(hikariPool0.getisAutoCommit());
      assertEquals(10, hikariPool0.getTotalConnections());
      assertFalse(hikariPool0.getdebug());
      assertFalse(hikariPool0.getshutdown());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertEquals("z~NH}l5*1f$G/", hikariPool0.getcatalog());
      assertNotNull(logger0);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertFalse(hikariPool0.shutdown);
      assertFalse(hikariPool0.debug);
      assertTrue(hikariPool0.isAutoCommit);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
  }

  @Test(timeout = 11000)
  public void test27()  throws Throwable  {
      HikariConfig hikariConfig0 = new HikariConfig();
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertNotNull(hikariConfig0);
      
      String string0 = "z~NH}l5*1f$G/";
      hikariConfig0.setCatalog(string0);
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      
      HikariDataSource hikariDataSource0 = new HikariDataSource();
      assertNull(hikariDataSource0.getConnectionInitSql());
      assertNull(hikariDataSource0.getConnectionTestQuery());
      assertTrue(hikariDataSource0.isJdbc4ConnectionTest());
      assertEquals(0L, hikariDataSource0.getLeakDetectionThreshold());
      assertEquals(0, hikariDataSource0.getAcquireIncrement());
      assertEquals((-1), hikariDataSource0.getTransactionIsolation());
      assertTrue(hikariDataSource0.isAutoCommit());
      assertEquals("HikariPool-1", hikariDataSource0.getPoolName());
      assertFalse(hikariDataSource0.isInitializationFailFast());
      assertEquals(1800000L, hikariDataSource0.getMaxLifetime());
      assertEquals(600000L, hikariDataSource0.getIdleTimeout());
      assertEquals(3, hikariDataSource0.getAcquireRetries());
      assertNull(hikariDataSource0.getDataSourceClassName());
      assertEquals(10, hikariDataSource0.getMinimumPoolSize());
      assertNull(hikariDataSource0.getCatalog());
      assertEquals(0, hikariDataSource0.getLoginTimeout());
      assertEquals(0L, hikariDataSource0.getAcquireRetryDelay());
      assertEquals(5000L, hikariDataSource0.getConnectionTimeout());
      assertFalse(hikariDataSource0.isRegisterMbeans());
      assertNull(hikariDataSource0.getConnectionCustomizerClassName());
      assertFalse(hikariDataSource0.getisShutdown());
      assertEquals(60, hikariDataSource0.getMaximumPoolSize());
      assertNotNull(hikariDataSource0);
      assertFalse(hikariDataSource0.isShutdown);
      assertEquals(0, hikariDataSource0.loginTimeout);
      
      hikariConfig0.setDataSource(hikariDataSource0);
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertNull(hikariDataSource0.getConnectionInitSql());
      assertNull(hikariDataSource0.getConnectionTestQuery());
      assertTrue(hikariDataSource0.isJdbc4ConnectionTest());
      assertEquals(0L, hikariDataSource0.getLeakDetectionThreshold());
      assertEquals(0, hikariDataSource0.getAcquireIncrement());
      assertEquals((-1), hikariDataSource0.getTransactionIsolation());
      assertTrue(hikariDataSource0.isAutoCommit());
      assertEquals("HikariPool-1", hikariDataSource0.getPoolName());
      assertFalse(hikariDataSource0.isInitializationFailFast());
      assertEquals(1800000L, hikariDataSource0.getMaxLifetime());
      assertEquals(600000L, hikariDataSource0.getIdleTimeout());
      assertEquals(3, hikariDataSource0.getAcquireRetries());
      assertNull(hikariDataSource0.getDataSourceClassName());
      assertEquals(10, hikariDataSource0.getMinimumPoolSize());
      assertNull(hikariDataSource0.getCatalog());
      assertEquals(0, hikariDataSource0.getLoginTimeout());
      assertEquals(0L, hikariDataSource0.getAcquireRetryDelay());
      assertEquals(5000L, hikariDataSource0.getConnectionTimeout());
      assertFalse(hikariDataSource0.isRegisterMbeans());
      assertNull(hikariDataSource0.getConnectionCustomizerClassName());
      assertFalse(hikariDataSource0.getisShutdown());
      assertEquals(60, hikariDataSource0.getMaximumPoolSize());
      assertFalse(hikariDataSource0.isShutdown);
      assertEquals(0, hikariDataSource0.loginTimeout);
      
      String string1 = "<h*3tU31q8JLA&<";
      hikariConfig0.setDataSourceClassName(string1);
      assertNotSame(string1, string0);
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertEquals("<h*3tU31q8JLA&<", hikariConfig0.getDataSourceClassName());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertFalse(string1.equals((Object)string0));
      
      HikariPool hikariPool0 = new HikariPool(hikariConfig0);
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertEquals("<h*3tU31q8JLA&<", hikariConfig0.getDataSourceClassName());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertFalse(hikariPool0.getshutdown());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertEquals("z~NH}l5*1f$G/", hikariPool0.getcatalog());
      assertTrue(hikariPool0.getisAutoCommit());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertFalse(hikariPool0.getdebug());
      assertEquals(10, hikariPool0.getTotalConnections());
      assertNotNull(hikariPool0);
      assertTrue(hikariPool0.isAutoCommit);
      assertFalse(hikariPool0.debug);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertFalse(hikariPool0.shutdown);
      
      IHikariConnectionProxy iHikariConnectionProxy0 = null;
      hikariPool0.bagIsEmpty();
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertEquals("<h*3tU31q8JLA&<", hikariConfig0.getDataSourceClassName());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertFalse(hikariPool0.getshutdown());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertEquals("z~NH}l5*1f$G/", hikariPool0.getcatalog());
      assertTrue(hikariPool0.getisAutoCommit());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertFalse(hikariPool0.getdebug());
      assertEquals(11, hikariPool0.getTotalConnections());
      assertTrue(hikariPool0.isAutoCommit);
      assertFalse(hikariPool0.debug);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertFalse(hikariPool0.shutdown);
      
      long long0 = 959L;
      boolean boolean0 = hikariPool0.getshutdown();
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertEquals("<h*3tU31q8JLA&<", hikariConfig0.getDataSourceClassName());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertFalse(hikariPool0.getshutdown());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertEquals("z~NH}l5*1f$G/", hikariPool0.getcatalog());
      assertTrue(hikariPool0.getisAutoCommit());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertFalse(hikariPool0.getdebug());
      assertEquals(11, hikariPool0.getTotalConnections());
      assertFalse(boolean0);
      assertTrue(hikariPool0.isAutoCommit);
      assertFalse(hikariPool0.debug);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertFalse(hikariPool0.shutdown);
      
      // Undeclared exception!
      try { 
        hikariPool0.isConnectionAlive(iHikariConnectionProxy0, long0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.zaxxer.hikari.HikariPool", e);
      }
  }

  @Test(timeout = 11000)
  public void test28()  throws Throwable  {
      HikariConfig hikariConfig0 = new HikariConfig();
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getCatalog());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertNotNull(hikariConfig0);
      
      String string0 = ": is missing";
      hikariConfig0.setCatalog(string0);
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(": is missing", hikariConfig0.getCatalog());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertNull(hikariConfig0.getDataSourceClassName());
      
      HikariDataSource hikariDataSource0 = new HikariDataSource();
      assertNull(hikariDataSource0.getDataSourceClassName());
      assertEquals(60, hikariDataSource0.getMaximumPoolSize());
      assertEquals("HikariPool-1", hikariDataSource0.getPoolName());
      assertNull(hikariDataSource0.getConnectionTestQuery());
      assertEquals(0, hikariDataSource0.getLoginTimeout());
      assertEquals(3, hikariDataSource0.getAcquireRetries());
      assertFalse(hikariDataSource0.isInitializationFailFast());
      assertTrue(hikariDataSource0.isJdbc4ConnectionTest());
      assertEquals(0L, hikariDataSource0.getAcquireRetryDelay());
      assertEquals(5000L, hikariDataSource0.getConnectionTimeout());
      assertFalse(hikariDataSource0.isRegisterMbeans());
      assertEquals((-1), hikariDataSource0.getTransactionIsolation());
      assertEquals(1800000L, hikariDataSource0.getMaxLifetime());
      assertEquals(600000L, hikariDataSource0.getIdleTimeout());
      assertEquals(0L, hikariDataSource0.getLeakDetectionThreshold());
      assertEquals(0, hikariDataSource0.getAcquireIncrement());
      assertEquals(10, hikariDataSource0.getMinimumPoolSize());
      assertNull(hikariDataSource0.getCatalog());
      assertNull(hikariDataSource0.getConnectionInitSql());
      assertTrue(hikariDataSource0.isAutoCommit());
      assertNull(hikariDataSource0.getConnectionCustomizerClassName());
      assertFalse(hikariDataSource0.getisShutdown());
      assertNotNull(hikariDataSource0);
      assertFalse(hikariDataSource0.isShutdown);
      assertEquals(0, hikariDataSource0.loginTimeout);
      
      hikariConfig0.setDataSource(hikariDataSource0);
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(": is missing", hikariConfig0.getCatalog());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertNull(hikariDataSource0.getDataSourceClassName());
      assertEquals(60, hikariDataSource0.getMaximumPoolSize());
      assertEquals("HikariPool-1", hikariDataSource0.getPoolName());
      assertNull(hikariDataSource0.getConnectionTestQuery());
      assertEquals(0, hikariDataSource0.getLoginTimeout());
      assertEquals(3, hikariDataSource0.getAcquireRetries());
      assertFalse(hikariDataSource0.isInitializationFailFast());
      assertTrue(hikariDataSource0.isJdbc4ConnectionTest());
      assertEquals(0L, hikariDataSource0.getAcquireRetryDelay());
      assertEquals(5000L, hikariDataSource0.getConnectionTimeout());
      assertFalse(hikariDataSource0.isRegisterMbeans());
      assertEquals((-1), hikariDataSource0.getTransactionIsolation());
      assertEquals(1800000L, hikariDataSource0.getMaxLifetime());
      assertEquals(600000L, hikariDataSource0.getIdleTimeout());
      assertEquals(0L, hikariDataSource0.getLeakDetectionThreshold());
      assertEquals(0, hikariDataSource0.getAcquireIncrement());
      assertEquals(10, hikariDataSource0.getMinimumPoolSize());
      assertNull(hikariDataSource0.getCatalog());
      assertNull(hikariDataSource0.getConnectionInitSql());
      assertTrue(hikariDataSource0.isAutoCommit());
      assertNull(hikariDataSource0.getConnectionCustomizerClassName());
      assertFalse(hikariDataSource0.getisShutdown());
      assertFalse(hikariDataSource0.isShutdown);
      assertEquals(0, hikariDataSource0.loginTimeout);
      
      String string1 = "<h*3tU31q8JLA&<";
      hikariConfig0.setDataSourceClassName(string1);
      assertNotSame(string1, string0);
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(": is missing", hikariConfig0.getCatalog());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals("<h*3tU31q8JLA&<", hikariConfig0.getDataSourceClassName());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertFalse(string1.equals((Object)string0));
      
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
      
      HikariPool hikariPool0 = new HikariPool(hikariConfig0);
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(": is missing", hikariConfig0.getCatalog());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals("<h*3tU31q8JLA&<", hikariConfig0.getDataSourceClassName());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals(10, hikariPool0.getTotalConnections());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertFalse(hikariPool0.getshutdown());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertTrue(hikariPool0.getisAutoCommit());
      assertFalse(hikariPool0.getdebug());
      assertEquals(": is missing", hikariPool0.getcatalog());
      assertNotNull(hikariPool0);
      assertFalse(hikariPool0.debug);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertTrue(hikariPool0.isAutoCommit);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertFalse(hikariPool0.shutdown);
      assertEquals((-1), hikariPool0.transactionIsolation);
      
      IHikariConnectionProxy iHikariConnectionProxy0 = mock(IHikariConnectionProxy.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(iHikariConnectionProxy0).isBrokenConnection();
      doReturn(false).when(iHikariConnectionProxy0).compareAndSetState(anyInt() , anyInt());
      // Undeclared exception!
      try { 
        hikariPool0.releaseConnection(iHikariConnectionProxy0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Value was returned to the bag that was not borrowed
         //
         verifyException("com.zaxxer.hikari.util.ConcurrentBag", e);
      }
  }

  @Test(timeout = 11000)
  public void test29()  throws Throwable  {
      HikariConfig hikariConfig0 = new HikariConfig();
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertNotNull(hikariConfig0);
      
      String string0 = "z~NH}l5*1f$G/";
      hikariConfig0.setCatalog(string0);
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertNull(hikariConfig0.getDataSourceClassName());
      
      HikariDataSource hikariDataSource0 = new HikariDataSource();
      assertEquals("HikariPool-1", hikariDataSource0.getPoolName());
      assertNull(hikariDataSource0.getConnectionCustomizerClassName());
      assertEquals(60, hikariDataSource0.getMaximumPoolSize());
      assertTrue(hikariDataSource0.isAutoCommit());
      assertEquals(0, hikariDataSource0.getAcquireIncrement());
      assertNull(hikariDataSource0.getConnectionInitSql());
      assertEquals(0L, hikariDataSource0.getLeakDetectionThreshold());
      assertNull(hikariDataSource0.getCatalog());
      assertFalse(hikariDataSource0.isRegisterMbeans());
      assertFalse(hikariDataSource0.getisShutdown());
      assertEquals(10, hikariDataSource0.getMinimumPoolSize());
      assertEquals((-1), hikariDataSource0.getTransactionIsolation());
      assertEquals(3, hikariDataSource0.getAcquireRetries());
      assertEquals(0L, hikariDataSource0.getAcquireRetryDelay());
      assertNull(hikariDataSource0.getConnectionTestQuery());
      assertTrue(hikariDataSource0.isJdbc4ConnectionTest());
      assertEquals(1800000L, hikariDataSource0.getMaxLifetime());
      assertFalse(hikariDataSource0.isInitializationFailFast());
      assertEquals(600000L, hikariDataSource0.getIdleTimeout());
      assertNull(hikariDataSource0.getDataSourceClassName());
      assertEquals(5000L, hikariDataSource0.getConnectionTimeout());
      assertEquals(0, hikariDataSource0.getLoginTimeout());
      assertNotNull(hikariDataSource0);
      assertEquals(0, hikariDataSource0.loginTimeout);
      assertFalse(hikariDataSource0.isShutdown);
      
      hikariConfig0.setDataSource(hikariDataSource0);
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals("HikariPool-1", hikariDataSource0.getPoolName());
      assertNull(hikariDataSource0.getConnectionCustomizerClassName());
      assertEquals(60, hikariDataSource0.getMaximumPoolSize());
      assertTrue(hikariDataSource0.isAutoCommit());
      assertEquals(0, hikariDataSource0.getAcquireIncrement());
      assertNull(hikariDataSource0.getConnectionInitSql());
      assertEquals(0L, hikariDataSource0.getLeakDetectionThreshold());
      assertNull(hikariDataSource0.getCatalog());
      assertFalse(hikariDataSource0.isRegisterMbeans());
      assertFalse(hikariDataSource0.getisShutdown());
      assertEquals(10, hikariDataSource0.getMinimumPoolSize());
      assertEquals((-1), hikariDataSource0.getTransactionIsolation());
      assertEquals(3, hikariDataSource0.getAcquireRetries());
      assertEquals(0L, hikariDataSource0.getAcquireRetryDelay());
      assertNull(hikariDataSource0.getConnectionTestQuery());
      assertTrue(hikariDataSource0.isJdbc4ConnectionTest());
      assertEquals(1800000L, hikariDataSource0.getMaxLifetime());
      assertFalse(hikariDataSource0.isInitializationFailFast());
      assertEquals(600000L, hikariDataSource0.getIdleTimeout());
      assertNull(hikariDataSource0.getDataSourceClassName());
      assertEquals(5000L, hikariDataSource0.getConnectionTimeout());
      assertEquals(0, hikariDataSource0.getLoginTimeout());
      assertEquals(0, hikariDataSource0.loginTimeout);
      assertFalse(hikariDataSource0.isShutdown);
      
      String string1 = "<h*3tU31q8JLA&<";
      hikariConfig0.setDataSourceClassName(string1);
      assertNotSame(string1, string0);
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertEquals("<h*3tU31q8JLA&<", hikariConfig0.getDataSourceClassName());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertFalse(string1.equals((Object)string0));
      
      HikariPool hikariPool0 = new HikariPool(hikariConfig0);
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertEquals("<h*3tU31q8JLA&<", hikariConfig0.getDataSourceClassName());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertTrue(hikariPool0.getisAutoCommit());
      assertEquals("z~NH}l5*1f$G/", hikariPool0.getcatalog());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertFalse(hikariPool0.getshutdown());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertFalse(hikariPool0.getdebug());
      assertEquals(10, hikariPool0.getTotalConnections());
      assertNotNull(hikariPool0);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertTrue(hikariPool0.isAutoCommit);
      assertFalse(hikariPool0.debug);
      assertFalse(hikariPool0.shutdown);
      
      IHikariConnectionProxy iHikariConnectionProxy0 = null;
      hikariPool0.bagIsEmpty();
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertEquals("<h*3tU31q8JLA&<", hikariConfig0.getDataSourceClassName());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertTrue(hikariPool0.getisAutoCommit());
      assertEquals("z~NH}l5*1f$G/", hikariPool0.getcatalog());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertFalse(hikariPool0.getshutdown());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertFalse(hikariPool0.getdebug());
      assertEquals(11, hikariPool0.getTotalConnections());
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertTrue(hikariPool0.isAutoCommit);
      assertFalse(hikariPool0.debug);
      assertFalse(hikariPool0.shutdown);
      
      long long0 = 959L;
      // Undeclared exception!
      try { 
        hikariPool0.releaseConnection(iHikariConnectionProxy0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.zaxxer.hikari.HikariPool", e);
      }
  }

  @Test(timeout = 11000)
  public void test30()  throws Throwable  {
      HikariConfig hikariConfig0 = new HikariConfig();
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertNotNull(hikariConfig0);
      
      String string0 = "z~NH}l5*1f$G/";
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      HikariDataSource hikariDataSource0 = new HikariDataSource();
      assertEquals(5000L, hikariDataSource0.getConnectionTimeout());
      assertFalse(hikariDataSource0.isRegisterMbeans());
      assertFalse(hikariDataSource0.getisShutdown());
      assertEquals(0, hikariDataSource0.getLoginTimeout());
      assertNull(hikariDataSource0.getCatalog());
      assertFalse(hikariDataSource0.isInitializationFailFast());
      assertEquals(0L, hikariDataSource0.getLeakDetectionThreshold());
      assertEquals(0, hikariDataSource0.getAcquireIncrement());
      assertEquals(0L, hikariDataSource0.getAcquireRetryDelay());
      assertEquals(60, hikariDataSource0.getMaximumPoolSize());
      assertTrue(hikariDataSource0.isAutoCommit());
      assertTrue(hikariDataSource0.isJdbc4ConnectionTest());
      assertNull(hikariDataSource0.getConnectionCustomizerClassName());
      assertNull(hikariDataSource0.getConnectionInitSql());
      assertNull(hikariDataSource0.getConnectionTestQuery());
      assertEquals(3, hikariDataSource0.getAcquireRetries());
      assertNull(hikariDataSource0.getDataSourceClassName());
      assertEquals(1800000L, hikariDataSource0.getMaxLifetime());
      assertEquals(600000L, hikariDataSource0.getIdleTimeout());
      assertEquals(10, hikariDataSource0.getMinimumPoolSize());
      assertEquals("HikariPool-1", hikariDataSource0.getPoolName());
      assertEquals((-1), hikariDataSource0.getTransactionIsolation());
      assertNotNull(hikariDataSource0);
      assertFalse(hikariDataSource0.isShutdown);
      assertEquals(0, hikariDataSource0.loginTimeout);
      
      hikariConfig0.setDataSource(hikariDataSource0);
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(5000L, hikariDataSource0.getConnectionTimeout());
      assertFalse(hikariDataSource0.isRegisterMbeans());
      assertFalse(hikariDataSource0.getisShutdown());
      assertEquals(0, hikariDataSource0.getLoginTimeout());
      assertNull(hikariDataSource0.getCatalog());
      assertFalse(hikariDataSource0.isInitializationFailFast());
      assertEquals(0L, hikariDataSource0.getLeakDetectionThreshold());
      assertEquals(0, hikariDataSource0.getAcquireIncrement());
      assertEquals(0L, hikariDataSource0.getAcquireRetryDelay());
      assertEquals(60, hikariDataSource0.getMaximumPoolSize());
      assertTrue(hikariDataSource0.isAutoCommit());
      assertTrue(hikariDataSource0.isJdbc4ConnectionTest());
      assertNull(hikariDataSource0.getConnectionCustomizerClassName());
      assertNull(hikariDataSource0.getConnectionInitSql());
      assertNull(hikariDataSource0.getConnectionTestQuery());
      assertEquals(3, hikariDataSource0.getAcquireRetries());
      assertNull(hikariDataSource0.getDataSourceClassName());
      assertEquals(1800000L, hikariDataSource0.getMaxLifetime());
      assertEquals(600000L, hikariDataSource0.getIdleTimeout());
      assertEquals(10, hikariDataSource0.getMinimumPoolSize());
      assertEquals("HikariPool-1", hikariDataSource0.getPoolName());
      assertEquals((-1), hikariDataSource0.getTransactionIsolation());
      assertFalse(hikariDataSource0.isShutdown);
      assertEquals(0, hikariDataSource0.loginTimeout);
      
      String string1 = "<h*3tU31q8JLA&<";
      hikariConfig0.setDataSourceClassName(string1);
      assertNotSame(string1, string0);
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertNull(hikariConfig0.getCatalog());
      assertEquals("<h*3tU31q8JLA&<", hikariConfig0.getDataSourceClassName());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertFalse(string1.equals((Object)string0));
      
      HikariPool hikariPool0 = new HikariPool(hikariConfig0);
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertNull(hikariConfig0.getCatalog());
      assertEquals("<h*3tU31q8JLA&<", hikariConfig0.getDataSourceClassName());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertEquals(10, hikariPool0.getTotalConnections());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertFalse(hikariPool0.getshutdown());
      assertNull(hikariPool0.getcatalog());
      assertFalse(hikariPool0.getdebug());
      assertTrue(hikariPool0.getisAutoCommit());
      assertNotNull(hikariPool0);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertTrue(hikariPool0.isAutoCommit);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertFalse(hikariPool0.shutdown);
      assertFalse(hikariPool0.debug);
      assertEquals((-1), hikariPool0.transactionIsolation);
      
      int int0 = hikariPool0.getIdleConnections();
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertNull(hikariConfig0.getCatalog());
      assertEquals("<h*3tU31q8JLA&<", hikariConfig0.getDataSourceClassName());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertEquals(10, hikariPool0.getTotalConnections());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertFalse(hikariPool0.getshutdown());
      assertNull(hikariPool0.getcatalog());
      assertFalse(hikariPool0.getdebug());
      assertTrue(hikariPool0.getisAutoCommit());
      assertEquals(0, int0);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertTrue(hikariPool0.isAutoCommit);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertFalse(hikariPool0.shutdown);
      assertFalse(hikariPool0.debug);
      assertEquals((-1), hikariPool0.transactionIsolation);
  }

  @Test(timeout = 11000)
  public void test31()  throws Throwable  {
      HikariConfig hikariConfig0 = new HikariConfig();
      assertNull(hikariConfig0.getCatalog());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertTrue(hikariConfig0.isAutoCommit());
      assertNotNull(hikariConfig0);
      
      String string0 = "z~NH}l{*1f$G/";
      HikariDataSource hikariDataSource0 = new HikariDataSource();
      assertEquals(5000L, hikariDataSource0.getConnectionTimeout());
      assertEquals(0, hikariDataSource0.getLoginTimeout());
      assertEquals(10, hikariDataSource0.getMinimumPoolSize());
      assertNull(hikariDataSource0.getCatalog());
      assertFalse(hikariDataSource0.isInitializationFailFast());
      assertNull(hikariDataSource0.getDataSourceClassName());
      assertEquals(0L, hikariDataSource0.getAcquireRetryDelay());
      assertTrue(hikariDataSource0.isJdbc4ConnectionTest());
      assertNull(hikariDataSource0.getConnectionInitSql());
      assertNull(hikariDataSource0.getConnectionTestQuery());
      assertEquals(0L, hikariDataSource0.getLeakDetectionThreshold());
      assertEquals(3, hikariDataSource0.getAcquireRetries());
      assertEquals(0, hikariDataSource0.getAcquireIncrement());
      assertEquals(1800000L, hikariDataSource0.getMaxLifetime());
      assertEquals(600000L, hikariDataSource0.getIdleTimeout());
      assertEquals(60, hikariDataSource0.getMaximumPoolSize());
      assertFalse(hikariDataSource0.isRegisterMbeans());
      assertEquals("HikariPool-1", hikariDataSource0.getPoolName());
      assertEquals((-1), hikariDataSource0.getTransactionIsolation());
      assertNull(hikariDataSource0.getConnectionCustomizerClassName());
      assertFalse(hikariDataSource0.getisShutdown());
      assertTrue(hikariDataSource0.isAutoCommit());
      assertNotNull(hikariDataSource0);
      assertEquals(0, hikariDataSource0.loginTimeout);
      assertFalse(hikariDataSource0.isShutdown);
      
      hikariConfig0.setDataSource(hikariDataSource0);
      assertNull(hikariConfig0.getCatalog());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals(5000L, hikariDataSource0.getConnectionTimeout());
      assertEquals(0, hikariDataSource0.getLoginTimeout());
      assertEquals(10, hikariDataSource0.getMinimumPoolSize());
      assertNull(hikariDataSource0.getCatalog());
      assertFalse(hikariDataSource0.isInitializationFailFast());
      assertNull(hikariDataSource0.getDataSourceClassName());
      assertEquals(0L, hikariDataSource0.getAcquireRetryDelay());
      assertTrue(hikariDataSource0.isJdbc4ConnectionTest());
      assertNull(hikariDataSource0.getConnectionInitSql());
      assertNull(hikariDataSource0.getConnectionTestQuery());
      assertEquals(0L, hikariDataSource0.getLeakDetectionThreshold());
      assertEquals(3, hikariDataSource0.getAcquireRetries());
      assertEquals(0, hikariDataSource0.getAcquireIncrement());
      assertEquals(1800000L, hikariDataSource0.getMaxLifetime());
      assertEquals(600000L, hikariDataSource0.getIdleTimeout());
      assertEquals(60, hikariDataSource0.getMaximumPoolSize());
      assertFalse(hikariDataSource0.isRegisterMbeans());
      assertEquals("HikariPool-1", hikariDataSource0.getPoolName());
      assertEquals((-1), hikariDataSource0.getTransactionIsolation());
      assertNull(hikariDataSource0.getConnectionCustomizerClassName());
      assertFalse(hikariDataSource0.getisShutdown());
      assertTrue(hikariDataSource0.isAutoCommit());
      assertEquals(0, hikariDataSource0.loginTimeout);
      assertFalse(hikariDataSource0.isShutdown);
      
      hikariConfig0.setMaximumPoolSize(hikariDataSource0.loginTimeout);
      assertNull(hikariConfig0.getCatalog());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(0, hikariConfig0.getMaximumPoolSize());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals(5000L, hikariDataSource0.getConnectionTimeout());
      assertEquals(0, hikariDataSource0.getLoginTimeout());
      assertEquals(10, hikariDataSource0.getMinimumPoolSize());
      assertNull(hikariDataSource0.getCatalog());
      assertFalse(hikariDataSource0.isInitializationFailFast());
      assertNull(hikariDataSource0.getDataSourceClassName());
      assertEquals(0L, hikariDataSource0.getAcquireRetryDelay());
      assertTrue(hikariDataSource0.isJdbc4ConnectionTest());
      assertNull(hikariDataSource0.getConnectionInitSql());
      assertNull(hikariDataSource0.getConnectionTestQuery());
      assertEquals(0L, hikariDataSource0.getLeakDetectionThreshold());
      assertEquals(3, hikariDataSource0.getAcquireRetries());
      assertEquals(0, hikariDataSource0.getAcquireIncrement());
      assertEquals(1800000L, hikariDataSource0.getMaxLifetime());
      assertEquals(600000L, hikariDataSource0.getIdleTimeout());
      assertEquals(60, hikariDataSource0.getMaximumPoolSize());
      assertFalse(hikariDataSource0.isRegisterMbeans());
      assertEquals("HikariPool-1", hikariDataSource0.getPoolName());
      assertEquals((-1), hikariDataSource0.getTransactionIsolation());
      assertNull(hikariDataSource0.getConnectionCustomizerClassName());
      assertFalse(hikariDataSource0.getisShutdown());
      assertTrue(hikariDataSource0.isAutoCommit());
      assertEquals(0, hikariDataSource0.loginTimeout);
      assertFalse(hikariDataSource0.isShutdown);
      
      String string1 = "<h*3tU31q8JL`A&<";
      hikariConfig0.setDataSourceClassName(string1);
      assertNotSame(string1, string0);
      assertNull(hikariConfig0.getCatalog());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals("<h*3tU31q8JL`A&<", hikariConfig0.getDataSourceClassName());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(0, hikariConfig0.getMaximumPoolSize());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertTrue(hikariConfig0.isAutoCommit());
      assertFalse(string1.equals((Object)string0));
      
      HikariPool hikariPool0 = new HikariPool(hikariConfig0);
      assertEquals(10, hikariConfig0.getMaximumPoolSize());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals("<h*3tU31q8JL`A&<", hikariConfig0.getDataSourceClassName());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertTrue(hikariConfig0.isAutoCommit());
      assertNull(hikariPool0.getcatalog());
      assertFalse(hikariPool0.getdebug());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertTrue(hikariPool0.getisAutoCommit());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertEquals(10, hikariPool0.getTotalConnections());
      assertFalse(hikariPool0.getshutdown());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertNotNull(hikariPool0);
      assertFalse(hikariPool0.shutdown);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertFalse(hikariPool0.debug);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertTrue(hikariPool0.isAutoCommit);
      assertFalse(hikariPool0.isRegisteredMbeans);
      
      boolean boolean0 = true;
      hikariPool0.closeIdleConnections();
      assertEquals(10, hikariConfig0.getMaximumPoolSize());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals("<h*3tU31q8JL`A&<", hikariConfig0.getDataSourceClassName());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertTrue(hikariConfig0.isAutoCommit());
      assertNull(hikariPool0.getcatalog());
      assertFalse(hikariPool0.getdebug());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertTrue(hikariPool0.getisAutoCommit());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertEquals(10, hikariPool0.getTotalConnections());
      assertFalse(hikariPool0.getshutdown());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertFalse(hikariPool0.shutdown);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertFalse(hikariPool0.debug);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertTrue(hikariPool0.isAutoCommit);
      assertFalse(hikariPool0.isRegisteredMbeans);
      
      IHikariConnectionProxy iHikariConnectionProxy0 = mock(IHikariConnectionProxy.class, new ViolatedAssumptionAnswer());
      doReturn(boolean0).when(iHikariConnectionProxy0).isValid(anyInt());
      boolean boolean1 = hikariPool0.isConnectionAlive(iHikariConnectionProxy0, hikariDataSource0.loginTimeout);
      assertEquals(10, hikariConfig0.getMaximumPoolSize());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals("<h*3tU31q8JL`A&<", hikariConfig0.getDataSourceClassName());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals(5000L, hikariDataSource0.getConnectionTimeout());
      assertEquals(1250, hikariDataSource0.getLoginTimeout());
      assertEquals(10, hikariDataSource0.getMinimumPoolSize());
      assertNull(hikariDataSource0.getCatalog());
      assertFalse(hikariDataSource0.isInitializationFailFast());
      assertNull(hikariDataSource0.getDataSourceClassName());
      assertEquals(0L, hikariDataSource0.getAcquireRetryDelay());
      assertTrue(hikariDataSource0.isJdbc4ConnectionTest());
      assertNull(hikariDataSource0.getConnectionInitSql());
      assertNull(hikariDataSource0.getConnectionTestQuery());
      assertEquals(0L, hikariDataSource0.getLeakDetectionThreshold());
      assertEquals(3, hikariDataSource0.getAcquireRetries());
      assertEquals(0, hikariDataSource0.getAcquireIncrement());
      assertEquals(1800000L, hikariDataSource0.getMaxLifetime());
      assertEquals(600000L, hikariDataSource0.getIdleTimeout());
      assertEquals(60, hikariDataSource0.getMaximumPoolSize());
      assertFalse(hikariDataSource0.isRegisterMbeans());
      assertEquals("HikariPool-1", hikariDataSource0.getPoolName());
      assertEquals((-1), hikariDataSource0.getTransactionIsolation());
      assertNull(hikariDataSource0.getConnectionCustomizerClassName());
      assertFalse(hikariDataSource0.getisShutdown());
      assertTrue(hikariDataSource0.isAutoCommit());
      assertNull(hikariPool0.getcatalog());
      assertFalse(hikariPool0.getdebug());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertTrue(hikariPool0.getisAutoCommit());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertEquals(10, hikariPool0.getTotalConnections());
      assertFalse(hikariPool0.getshutdown());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertTrue(boolean1 == boolean0);
      assertTrue(boolean1);
      assertEquals(1250, hikariDataSource0.loginTimeout);
      assertFalse(hikariDataSource0.isShutdown);
      assertFalse(hikariPool0.shutdown);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertFalse(hikariPool0.debug);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertTrue(hikariPool0.isAutoCommit);
      assertFalse(hikariPool0.isRegisteredMbeans);
  }

  @Test(timeout = 11000)
  public void test32()  throws Throwable  {
      HikariConfig hikariConfig0 = new HikariConfig();
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isAutoCommit());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertNull(hikariConfig0.getCatalog());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertNotNull(hikariConfig0);
      
      String string0 = "z~NH}l5*1f$G/";
      hikariConfig0.setCatalog(string0);
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isAutoCommit());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertFalse(hikariConfig0.isInitializationFailFast());
      
      EvoSuiteFile evoSuiteFile0 = null;
      boolean boolean0 = false;
      boolean boolean1 = true;
      boolean boolean2 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2 == boolean0);
      assertTrue(boolean2);
      
      HikariDataSource hikariDataSource0 = new HikariDataSource();
      assertEquals(0L, hikariDataSource0.getAcquireRetryDelay());
      assertEquals(10, hikariDataSource0.getMinimumPoolSize());
      assertNull(hikariDataSource0.getCatalog());
      assertEquals(0, hikariDataSource0.getLoginTimeout());
      assertNull(hikariDataSource0.getDataSourceClassName());
      assertFalse(hikariDataSource0.isInitializationFailFast());
      assertEquals(5000L, hikariDataSource0.getConnectionTimeout());
      assertTrue(hikariDataSource0.isJdbc4ConnectionTest());
      assertEquals(3, hikariDataSource0.getAcquireRetries());
      assertEquals(0, hikariDataSource0.getAcquireIncrement());
      assertNull(hikariDataSource0.getConnectionInitSql());
      assertEquals(0L, hikariDataSource0.getLeakDetectionThreshold());
      assertEquals((-1), hikariDataSource0.getTransactionIsolation());
      assertEquals(600000L, hikariDataSource0.getIdleTimeout());
      assertEquals(60, hikariDataSource0.getMaximumPoolSize());
      assertNull(hikariDataSource0.getConnectionTestQuery());
      assertEquals(1800000L, hikariDataSource0.getMaxLifetime());
      assertEquals("HikariPool-1", hikariDataSource0.getPoolName());
      assertNull(hikariDataSource0.getConnectionCustomizerClassName());
      assertFalse(hikariDataSource0.isRegisterMbeans());
      assertFalse(hikariDataSource0.getisShutdown());
      assertTrue(hikariDataSource0.isAutoCommit());
      assertNotNull(hikariDataSource0);
      assertEquals(0, hikariDataSource0.loginTimeout);
      assertFalse(hikariDataSource0.isShutdown);
      
      hikariConfig0.setDataSource(hikariDataSource0);
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isAutoCommit());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(0L, hikariDataSource0.getAcquireRetryDelay());
      assertEquals(10, hikariDataSource0.getMinimumPoolSize());
      assertNull(hikariDataSource0.getCatalog());
      assertEquals(0, hikariDataSource0.getLoginTimeout());
      assertNull(hikariDataSource0.getDataSourceClassName());
      assertFalse(hikariDataSource0.isInitializationFailFast());
      assertEquals(5000L, hikariDataSource0.getConnectionTimeout());
      assertTrue(hikariDataSource0.isJdbc4ConnectionTest());
      assertEquals(3, hikariDataSource0.getAcquireRetries());
      assertEquals(0, hikariDataSource0.getAcquireIncrement());
      assertNull(hikariDataSource0.getConnectionInitSql());
      assertEquals(0L, hikariDataSource0.getLeakDetectionThreshold());
      assertEquals((-1), hikariDataSource0.getTransactionIsolation());
      assertEquals(600000L, hikariDataSource0.getIdleTimeout());
      assertEquals(60, hikariDataSource0.getMaximumPoolSize());
      assertNull(hikariDataSource0.getConnectionTestQuery());
      assertEquals(1800000L, hikariDataSource0.getMaxLifetime());
      assertEquals("HikariPool-1", hikariDataSource0.getPoolName());
      assertNull(hikariDataSource0.getConnectionCustomizerClassName());
      assertFalse(hikariDataSource0.isRegisterMbeans());
      assertFalse(hikariDataSource0.getisShutdown());
      assertTrue(hikariDataSource0.isAutoCommit());
      assertEquals(0, hikariDataSource0.loginTimeout);
      assertFalse(hikariDataSource0.isShutdown);
      
      String string1 = "<h*3tU31q8JLA&<";
      hikariConfig0.setDataSourceClassName(string1);
      assertNotSame(string1, string0);
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isAutoCommit());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals("<h*3tU31q8JLA&<", hikariConfig0.getDataSourceClassName());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertFalse(string1.equals((Object)string0));
      
      HikariPool hikariPool0 = new HikariPool(hikariConfig0);
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isAutoCommit());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals("<h*3tU31q8JLA&<", hikariConfig0.getDataSourceClassName());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(10, hikariPool0.getTotalConnections());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertFalse(hikariPool0.getshutdown());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertEquals("z~NH}l5*1f$G/", hikariPool0.getcatalog());
      assertFalse(hikariPool0.getdebug());
      assertTrue(hikariPool0.getisAutoCommit());
      assertNotNull(hikariPool0);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertTrue(hikariPool0.isAutoCommit);
      assertFalse(hikariPool0.shutdown);
      assertFalse(hikariPool0.debug);
      assertEquals((-1), hikariPool0.transactionIsolation);
      
      boolean boolean3 = FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      assertTrue(boolean3 == boolean0);
      assertFalse(boolean3 == boolean1);
      assertFalse(boolean3 == boolean2);
      assertFalse(boolean3);
      
      boolean boolean4 = false;
      hikariPool0.closeIdleConnections();
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isAutoCommit());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals("<h*3tU31q8JLA&<", hikariConfig0.getDataSourceClassName());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(10, hikariPool0.getTotalConnections());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertFalse(hikariPool0.getshutdown());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertEquals("z~NH}l5*1f$G/", hikariPool0.getcatalog());
      assertFalse(hikariPool0.getdebug());
      assertTrue(hikariPool0.getisAutoCommit());
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertTrue(hikariPool0.isAutoCommit);
      assertFalse(hikariPool0.shutdown);
      assertFalse(hikariPool0.debug);
      assertEquals((-1), hikariPool0.transactionIsolation);
      
      IHikariConnectionProxy iHikariConnectionProxy0 = mock(IHikariConnectionProxy.class, new ViolatedAssumptionAnswer());
      doReturn(boolean4).when(iHikariConnectionProxy0).isValid(anyInt());
      boolean boolean5 = hikariPool0.isConnectionAlive(iHikariConnectionProxy0, hikariDataSource0.loginTimeout);
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isAutoCommit());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals("<h*3tU31q8JLA&<", hikariConfig0.getDataSourceClassName());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(0L, hikariDataSource0.getAcquireRetryDelay());
      assertEquals(10, hikariDataSource0.getMinimumPoolSize());
      assertNull(hikariDataSource0.getCatalog());
      assertNull(hikariDataSource0.getDataSourceClassName());
      assertFalse(hikariDataSource0.isInitializationFailFast());
      assertEquals(1250, hikariDataSource0.getLoginTimeout());
      assertEquals(5000L, hikariDataSource0.getConnectionTimeout());
      assertTrue(hikariDataSource0.isJdbc4ConnectionTest());
      assertEquals(3, hikariDataSource0.getAcquireRetries());
      assertEquals(0, hikariDataSource0.getAcquireIncrement());
      assertNull(hikariDataSource0.getConnectionInitSql());
      assertEquals(0L, hikariDataSource0.getLeakDetectionThreshold());
      assertEquals((-1), hikariDataSource0.getTransactionIsolation());
      assertEquals(600000L, hikariDataSource0.getIdleTimeout());
      assertEquals(60, hikariDataSource0.getMaximumPoolSize());
      assertNull(hikariDataSource0.getConnectionTestQuery());
      assertEquals(1800000L, hikariDataSource0.getMaxLifetime());
      assertEquals("HikariPool-1", hikariDataSource0.getPoolName());
      assertNull(hikariDataSource0.getConnectionCustomizerClassName());
      assertFalse(hikariDataSource0.isRegisterMbeans());
      assertFalse(hikariDataSource0.getisShutdown());
      assertTrue(hikariDataSource0.isAutoCommit());
      assertEquals(10, hikariPool0.getTotalConnections());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertFalse(hikariPool0.getshutdown());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertEquals("z~NH}l5*1f$G/", hikariPool0.getcatalog());
      assertFalse(hikariPool0.getdebug());
      assertTrue(hikariPool0.getisAutoCommit());
      assertTrue(boolean5 == boolean0);
      assertFalse(boolean5 == boolean1);
      assertFalse(boolean5 == boolean2);
      assertTrue(boolean5 == boolean4);
      assertTrue(boolean5 == boolean3);
      assertFalse(boolean4 == boolean1);
      assertFalse(boolean4 == boolean2);
      assertTrue(boolean4 == boolean3);
      assertFalse(boolean5);
      assertEquals(1250, hikariDataSource0.loginTimeout);
      assertFalse(hikariDataSource0.isShutdown);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertTrue(hikariPool0.isAutoCommit);
      assertFalse(hikariPool0.shutdown);
      assertFalse(hikariPool0.debug);
      assertEquals((-1), hikariPool0.transactionIsolation);
      
      IHikariConnectionProxy iHikariConnectionProxy1 = null;
      // Undeclared exception!
      try { 
        hikariPool0.closeConnection(iHikariConnectionProxy1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.zaxxer.hikari.util.ConcurrentBag", e);
      }
  }

  @Test(timeout = 11000)
  public void test33()  throws Throwable  {
      HikariConfig hikariConfig0 = new HikariConfig();
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertTrue(hikariConfig0.isAutoCommit());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertNotNull(hikariConfig0);
      
      String string0 = "z~NH}l5*1f$G/";
      HikariDataSource hikariDataSource0 = new HikariDataSource();
      assertFalse(hikariDataSource0.isRegisterMbeans());
      assertFalse(hikariDataSource0.getisShutdown());
      assertFalse(hikariDataSource0.isInitializationFailFast());
      assertEquals((-1), hikariDataSource0.getTransactionIsolation());
      assertNull(hikariDataSource0.getCatalog());
      assertEquals(0, hikariDataSource0.getAcquireIncrement());
      assertEquals(0L, hikariDataSource0.getLeakDetectionThreshold());
      assertEquals(60, hikariDataSource0.getMaximumPoolSize());
      assertNull(hikariDataSource0.getConnectionInitSql());
      assertNull(hikariDataSource0.getDataSourceClassName());
      assertNull(hikariDataSource0.getConnectionCustomizerClassName());
      assertEquals("HikariPool-1", hikariDataSource0.getPoolName());
      assertTrue(hikariDataSource0.isAutoCommit());
      assertTrue(hikariDataSource0.isJdbc4ConnectionTest());
      assertEquals(5000L, hikariDataSource0.getConnectionTimeout());
      assertEquals(10, hikariDataSource0.getMinimumPoolSize());
      assertEquals(0, hikariDataSource0.getLoginTimeout());
      assertEquals(0L, hikariDataSource0.getAcquireRetryDelay());
      assertEquals(1800000L, hikariDataSource0.getMaxLifetime());
      assertEquals(3, hikariDataSource0.getAcquireRetries());
      assertEquals(600000L, hikariDataSource0.getIdleTimeout());
      assertNull(hikariDataSource0.getConnectionTestQuery());
      assertNotNull(hikariDataSource0);
      assertFalse(hikariDataSource0.isShutdown);
      assertEquals(0, hikariDataSource0.loginTimeout);
      
      hikariConfig0.setDataSource(hikariDataSource0);
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertTrue(hikariConfig0.isAutoCommit());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertFalse(hikariDataSource0.isRegisterMbeans());
      assertFalse(hikariDataSource0.getisShutdown());
      assertFalse(hikariDataSource0.isInitializationFailFast());
      assertEquals((-1), hikariDataSource0.getTransactionIsolation());
      assertNull(hikariDataSource0.getCatalog());
      assertEquals(0, hikariDataSource0.getAcquireIncrement());
      assertEquals(0L, hikariDataSource0.getLeakDetectionThreshold());
      assertEquals(60, hikariDataSource0.getMaximumPoolSize());
      assertNull(hikariDataSource0.getConnectionInitSql());
      assertNull(hikariDataSource0.getDataSourceClassName());
      assertNull(hikariDataSource0.getConnectionCustomizerClassName());
      assertEquals("HikariPool-1", hikariDataSource0.getPoolName());
      assertTrue(hikariDataSource0.isAutoCommit());
      assertTrue(hikariDataSource0.isJdbc4ConnectionTest());
      assertEquals(5000L, hikariDataSource0.getConnectionTimeout());
      assertEquals(10, hikariDataSource0.getMinimumPoolSize());
      assertEquals(0, hikariDataSource0.getLoginTimeout());
      assertEquals(0L, hikariDataSource0.getAcquireRetryDelay());
      assertEquals(1800000L, hikariDataSource0.getMaxLifetime());
      assertEquals(3, hikariDataSource0.getAcquireRetries());
      assertEquals(600000L, hikariDataSource0.getIdleTimeout());
      assertNull(hikariDataSource0.getConnectionTestQuery());
      assertFalse(hikariDataSource0.isShutdown);
      assertEquals(0, hikariDataSource0.loginTimeout);
      
      hikariConfig0.setMaximumPoolSize(hikariDataSource0.loginTimeout);
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals(0, hikariConfig0.getMaximumPoolSize());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertFalse(hikariDataSource0.isRegisterMbeans());
      assertFalse(hikariDataSource0.getisShutdown());
      assertFalse(hikariDataSource0.isInitializationFailFast());
      assertEquals((-1), hikariDataSource0.getTransactionIsolation());
      assertNull(hikariDataSource0.getCatalog());
      assertEquals(0, hikariDataSource0.getAcquireIncrement());
      assertEquals(0L, hikariDataSource0.getLeakDetectionThreshold());
      assertEquals(60, hikariDataSource0.getMaximumPoolSize());
      assertNull(hikariDataSource0.getConnectionInitSql());
      assertNull(hikariDataSource0.getDataSourceClassName());
      assertNull(hikariDataSource0.getConnectionCustomizerClassName());
      assertEquals("HikariPool-1", hikariDataSource0.getPoolName());
      assertTrue(hikariDataSource0.isAutoCommit());
      assertTrue(hikariDataSource0.isJdbc4ConnectionTest());
      assertEquals(5000L, hikariDataSource0.getConnectionTimeout());
      assertEquals(10, hikariDataSource0.getMinimumPoolSize());
      assertEquals(0, hikariDataSource0.getLoginTimeout());
      assertEquals(0L, hikariDataSource0.getAcquireRetryDelay());
      assertEquals(1800000L, hikariDataSource0.getMaxLifetime());
      assertEquals(3, hikariDataSource0.getAcquireRetries());
      assertEquals(600000L, hikariDataSource0.getIdleTimeout());
      assertNull(hikariDataSource0.getConnectionTestQuery());
      assertFalse(hikariDataSource0.isShutdown);
      assertEquals(0, hikariDataSource0.loginTimeout);
      
      String string1 = "<h*3tU31q8JL`A&<";
      hikariConfig0.setDataSourceClassName(string1);
      assertNotSame(string1, string0);
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals("<h*3tU31q8JL`A&<", hikariConfig0.getDataSourceClassName());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals(0, hikariConfig0.getMaximumPoolSize());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertFalse(string1.equals((Object)string0));
      
      HikariPool hikariPool0 = new HikariPool(hikariConfig0);
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(10, hikariConfig0.getMaximumPoolSize());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals("<h*3tU31q8JL`A&<", hikariConfig0.getDataSourceClassName());
      assertTrue(hikariConfig0.isAutoCommit());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertFalse(hikariPool0.getdebug());
      assertNull(hikariPool0.getcatalog());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertFalse(hikariPool0.getshutdown());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertEquals(10, hikariPool0.getTotalConnections());
      assertTrue(hikariPool0.getisAutoCommit());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertNotNull(hikariPool0);
      assertFalse(hikariPool0.shutdown);
      assertTrue(hikariPool0.isAutoCommit);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertFalse(hikariPool0.debug);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertEquals((-1), hikariPool0.transactionIsolation);
      
      boolean boolean0 = false;
      hikariPool0.closeIdleConnections();
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(10, hikariConfig0.getMaximumPoolSize());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals("<h*3tU31q8JL`A&<", hikariConfig0.getDataSourceClassName());
      assertTrue(hikariConfig0.isAutoCommit());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertFalse(hikariPool0.getdebug());
      assertNull(hikariPool0.getcatalog());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertFalse(hikariPool0.getshutdown());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertEquals(10, hikariPool0.getTotalConnections());
      assertTrue(hikariPool0.getisAutoCommit());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertFalse(hikariPool0.shutdown);
      assertTrue(hikariPool0.isAutoCommit);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertFalse(hikariPool0.debug);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertEquals((-1), hikariPool0.transactionIsolation);
      
      IHikariConnectionProxy iHikariConnectionProxy0 = mock(IHikariConnectionProxy.class, new ViolatedAssumptionAnswer());
      doReturn(boolean0).when(iHikariConnectionProxy0).isValid(anyInt());
      boolean boolean1 = hikariPool0.isConnectionAlive(iHikariConnectionProxy0, hikariDataSource0.loginTimeout);
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(10, hikariConfig0.getMaximumPoolSize());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals("<h*3tU31q8JL`A&<", hikariConfig0.getDataSourceClassName());
      assertTrue(hikariConfig0.isAutoCommit());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertFalse(hikariDataSource0.isRegisterMbeans());
      assertFalse(hikariDataSource0.getisShutdown());
      assertFalse(hikariDataSource0.isInitializationFailFast());
      assertEquals((-1), hikariDataSource0.getTransactionIsolation());
      assertNull(hikariDataSource0.getCatalog());
      assertEquals(0, hikariDataSource0.getAcquireIncrement());
      assertEquals(0L, hikariDataSource0.getLeakDetectionThreshold());
      assertEquals(60, hikariDataSource0.getMaximumPoolSize());
      assertNull(hikariDataSource0.getConnectionInitSql());
      assertNull(hikariDataSource0.getDataSourceClassName());
      assertNull(hikariDataSource0.getConnectionCustomizerClassName());
      assertEquals("HikariPool-1", hikariDataSource0.getPoolName());
      assertTrue(hikariDataSource0.isAutoCommit());
      assertTrue(hikariDataSource0.isJdbc4ConnectionTest());
      assertEquals(5000L, hikariDataSource0.getConnectionTimeout());
      assertEquals(10, hikariDataSource0.getMinimumPoolSize());
      assertEquals(0L, hikariDataSource0.getAcquireRetryDelay());
      assertEquals(1250, hikariDataSource0.getLoginTimeout());
      assertEquals(1800000L, hikariDataSource0.getMaxLifetime());
      assertEquals(3, hikariDataSource0.getAcquireRetries());
      assertEquals(600000L, hikariDataSource0.getIdleTimeout());
      assertNull(hikariDataSource0.getConnectionTestQuery());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertFalse(hikariPool0.getdebug());
      assertNull(hikariPool0.getcatalog());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertFalse(hikariPool0.getshutdown());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertEquals(10, hikariPool0.getTotalConnections());
      assertTrue(hikariPool0.getisAutoCommit());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertFalse(hikariDataSource0.isShutdown);
      assertEquals(1250, hikariDataSource0.loginTimeout);
      assertFalse(hikariPool0.shutdown);
      assertTrue(hikariPool0.isAutoCommit);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertFalse(hikariPool0.debug);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertEquals((-1), hikariPool0.transactionIsolation);
      
      int int0 = hikariPool0.getThreadsAwaitingConnection();
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(10, hikariConfig0.getMaximumPoolSize());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals("<h*3tU31q8JL`A&<", hikariConfig0.getDataSourceClassName());
      assertTrue(hikariConfig0.isAutoCommit());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertFalse(hikariPool0.getdebug());
      assertNull(hikariPool0.getcatalog());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertFalse(hikariPool0.getshutdown());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertEquals(10, hikariPool0.getTotalConnections());
      assertTrue(hikariPool0.getisAutoCommit());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertEquals(0, int0);
      assertFalse(hikariPool0.shutdown);
      assertTrue(hikariPool0.isAutoCommit);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertFalse(hikariPool0.debug);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertEquals((-1), hikariPool0.transactionIsolation);
  }

  @Test(timeout = 11000)
  public void test34()  throws Throwable  {
      HikariConfig hikariConfig0 = new HikariConfig();
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertNull(hikariConfig0.getCatalog());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertNotNull(hikariConfig0);
      
      String string0 = "z~NH}l5*1f$G/";
      HikariDataSource hikariDataSource0 = new HikariDataSource();
      assertEquals(60, hikariDataSource0.getMaximumPoolSize());
      assertTrue(hikariDataSource0.isAutoCommit());
      assertTrue(hikariDataSource0.isJdbc4ConnectionTest());
      assertNull(hikariDataSource0.getConnectionTestQuery());
      assertNull(hikariDataSource0.getConnectionCustomizerClassName());
      assertNull(hikariDataSource0.getConnectionInitSql());
      assertEquals(1800000L, hikariDataSource0.getMaxLifetime());
      assertEquals((-1), hikariDataSource0.getTransactionIsolation());
      assertNull(hikariDataSource0.getDataSourceClassName());
      assertEquals(3, hikariDataSource0.getAcquireRetries());
      assertEquals(600000L, hikariDataSource0.getIdleTimeout());
      assertEquals(10, hikariDataSource0.getMinimumPoolSize());
      assertEquals("HikariPool-1", hikariDataSource0.getPoolName());
      assertFalse(hikariDataSource0.isRegisterMbeans());
      assertFalse(hikariDataSource0.getisShutdown());
      assertEquals(0, hikariDataSource0.getLoginTimeout());
      assertNull(hikariDataSource0.getCatalog());
      assertEquals(5000L, hikariDataSource0.getConnectionTimeout());
      assertFalse(hikariDataSource0.isInitializationFailFast());
      assertEquals(0L, hikariDataSource0.getAcquireRetryDelay());
      assertEquals(0L, hikariDataSource0.getLeakDetectionThreshold());
      assertEquals(0, hikariDataSource0.getAcquireIncrement());
      assertNotNull(hikariDataSource0);
      assertEquals(0, hikariDataSource0.loginTimeout);
      assertFalse(hikariDataSource0.isShutdown);
      
      hikariConfig0.setDataSource(hikariDataSource0);
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertNull(hikariConfig0.getCatalog());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(60, hikariDataSource0.getMaximumPoolSize());
      assertTrue(hikariDataSource0.isAutoCommit());
      assertTrue(hikariDataSource0.isJdbc4ConnectionTest());
      assertNull(hikariDataSource0.getConnectionTestQuery());
      assertNull(hikariDataSource0.getConnectionCustomizerClassName());
      assertNull(hikariDataSource0.getConnectionInitSql());
      assertEquals(1800000L, hikariDataSource0.getMaxLifetime());
      assertEquals((-1), hikariDataSource0.getTransactionIsolation());
      assertNull(hikariDataSource0.getDataSourceClassName());
      assertEquals(3, hikariDataSource0.getAcquireRetries());
      assertEquals(600000L, hikariDataSource0.getIdleTimeout());
      assertEquals(10, hikariDataSource0.getMinimumPoolSize());
      assertEquals("HikariPool-1", hikariDataSource0.getPoolName());
      assertFalse(hikariDataSource0.isRegisterMbeans());
      assertFalse(hikariDataSource0.getisShutdown());
      assertEquals(0, hikariDataSource0.getLoginTimeout());
      assertNull(hikariDataSource0.getCatalog());
      assertEquals(5000L, hikariDataSource0.getConnectionTimeout());
      assertFalse(hikariDataSource0.isInitializationFailFast());
      assertEquals(0L, hikariDataSource0.getAcquireRetryDelay());
      assertEquals(0L, hikariDataSource0.getLeakDetectionThreshold());
      assertEquals(0, hikariDataSource0.getAcquireIncrement());
      assertEquals(0, hikariDataSource0.loginTimeout);
      assertFalse(hikariDataSource0.isShutdown);
      
      hikariConfig0.setMaximumPoolSize(hikariDataSource0.loginTimeout);
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(0, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(60, hikariDataSource0.getMaximumPoolSize());
      assertTrue(hikariDataSource0.isAutoCommit());
      assertTrue(hikariDataSource0.isJdbc4ConnectionTest());
      assertNull(hikariDataSource0.getConnectionTestQuery());
      assertNull(hikariDataSource0.getConnectionCustomizerClassName());
      assertNull(hikariDataSource0.getConnectionInitSql());
      assertEquals(1800000L, hikariDataSource0.getMaxLifetime());
      assertEquals((-1), hikariDataSource0.getTransactionIsolation());
      assertNull(hikariDataSource0.getDataSourceClassName());
      assertEquals(3, hikariDataSource0.getAcquireRetries());
      assertEquals(600000L, hikariDataSource0.getIdleTimeout());
      assertEquals(10, hikariDataSource0.getMinimumPoolSize());
      assertEquals("HikariPool-1", hikariDataSource0.getPoolName());
      assertFalse(hikariDataSource0.isRegisterMbeans());
      assertFalse(hikariDataSource0.getisShutdown());
      assertEquals(0, hikariDataSource0.getLoginTimeout());
      assertNull(hikariDataSource0.getCatalog());
      assertEquals(5000L, hikariDataSource0.getConnectionTimeout());
      assertFalse(hikariDataSource0.isInitializationFailFast());
      assertEquals(0L, hikariDataSource0.getAcquireRetryDelay());
      assertEquals(0L, hikariDataSource0.getLeakDetectionThreshold());
      assertEquals(0, hikariDataSource0.getAcquireIncrement());
      assertEquals(0, hikariDataSource0.loginTimeout);
      assertFalse(hikariDataSource0.isShutdown);
      
      String string1 = "<h*3tU31q8JL`A&<";
      hikariConfig0.setDataSourceClassName(string1);
      assertNotSame(string1, string0);
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals("<h*3tU31q8JL`A&<", hikariConfig0.getDataSourceClassName());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(0, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertFalse(string1.equals((Object)string0));
      
      HikariPool hikariPool0 = new HikariPool(hikariConfig0);
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals("<h*3tU31q8JL`A&<", hikariConfig0.getDataSourceClassName());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertEquals(10, hikariConfig0.getMaximumPoolSize());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertNull(hikariConfig0.getCatalog());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertEquals(10, hikariPool0.getTotalConnections());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertFalse(hikariPool0.getshutdown());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertNull(hikariPool0.getcatalog());
      assertFalse(hikariPool0.getdebug());
      assertTrue(hikariPool0.getisAutoCommit());
      assertNotNull(hikariPool0);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertTrue(hikariPool0.isAutoCommit);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertFalse(hikariPool0.debug);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertFalse(hikariPool0.shutdown);
      
      boolean boolean0 = false;
      boolean boolean1 = false;
      hikariPool0.setshutdown(boolean1);
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals("<h*3tU31q8JL`A&<", hikariConfig0.getDataSourceClassName());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertEquals(10, hikariConfig0.getMaximumPoolSize());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertNull(hikariConfig0.getCatalog());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertEquals(10, hikariPool0.getTotalConnections());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertFalse(hikariPool0.getshutdown());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertNull(hikariPool0.getcatalog());
      assertFalse(hikariPool0.getdebug());
      assertTrue(hikariPool0.getisAutoCommit());
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertTrue(hikariPool0.isAutoCommit);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertFalse(hikariPool0.debug);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertFalse(hikariPool0.shutdown);
      
      hikariPool0.closeIdleConnections();
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals("<h*3tU31q8JL`A&<", hikariConfig0.getDataSourceClassName());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertEquals(10, hikariConfig0.getMaximumPoolSize());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertNull(hikariConfig0.getCatalog());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertEquals(10, hikariPool0.getTotalConnections());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertFalse(hikariPool0.getshutdown());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertNull(hikariPool0.getcatalog());
      assertFalse(hikariPool0.getdebug());
      assertTrue(hikariPool0.getisAutoCommit());
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertTrue(hikariPool0.isAutoCommit);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertFalse(hikariPool0.debug);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertFalse(hikariPool0.shutdown);
      
      IHikariConnectionProxy iHikariConnectionProxy0 = mock(IHikariConnectionProxy.class, new ViolatedAssumptionAnswer());
      doReturn(boolean0).when(iHikariConnectionProxy0).isValid(anyInt());
      boolean boolean2 = hikariPool0.isConnectionAlive(iHikariConnectionProxy0, hikariDataSource0.loginTimeout);
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals("<h*3tU31q8JL`A&<", hikariConfig0.getDataSourceClassName());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertEquals(10, hikariConfig0.getMaximumPoolSize());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertNull(hikariConfig0.getCatalog());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(60, hikariDataSource0.getMaximumPoolSize());
      assertTrue(hikariDataSource0.isAutoCommit());
      assertTrue(hikariDataSource0.isJdbc4ConnectionTest());
      assertNull(hikariDataSource0.getConnectionTestQuery());
      assertNull(hikariDataSource0.getConnectionCustomizerClassName());
      assertNull(hikariDataSource0.getConnectionInitSql());
      assertEquals(1800000L, hikariDataSource0.getMaxLifetime());
      assertEquals((-1), hikariDataSource0.getTransactionIsolation());
      assertNull(hikariDataSource0.getDataSourceClassName());
      assertEquals(3, hikariDataSource0.getAcquireRetries());
      assertEquals(600000L, hikariDataSource0.getIdleTimeout());
      assertEquals(10, hikariDataSource0.getMinimumPoolSize());
      assertEquals("HikariPool-1", hikariDataSource0.getPoolName());
      assertFalse(hikariDataSource0.isRegisterMbeans());
      assertFalse(hikariDataSource0.getisShutdown());
      assertNull(hikariDataSource0.getCatalog());
      assertEquals(5000L, hikariDataSource0.getConnectionTimeout());
      assertFalse(hikariDataSource0.isInitializationFailFast());
      assertEquals(0L, hikariDataSource0.getAcquireRetryDelay());
      assertEquals(1250, hikariDataSource0.getLoginTimeout());
      assertEquals(0L, hikariDataSource0.getLeakDetectionThreshold());
      assertEquals(0, hikariDataSource0.getAcquireIncrement());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertEquals(10, hikariPool0.getTotalConnections());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertFalse(hikariPool0.getshutdown());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertNull(hikariPool0.getcatalog());
      assertFalse(hikariPool0.getdebug());
      assertTrue(hikariPool0.getisAutoCommit());
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2);
      assertEquals(1250, hikariDataSource0.loginTimeout);
      assertFalse(hikariDataSource0.isShutdown);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertTrue(hikariPool0.isAutoCommit);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertFalse(hikariPool0.debug);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertFalse(hikariPool0.shutdown);
  }

  @Test(timeout = 11000)
  public void test35()  throws Throwable  {
      HikariConfig hikariConfig0 = new HikariConfig();
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertTrue(hikariConfig0.isAutoCommit());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertNotNull(hikariConfig0);
      
      String string0 = "z~NH}l5*1f$G/";
      hikariConfig0.setCatalog(string0);
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertTrue(hikariConfig0.isAutoCommit());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      
      HikariDataSource hikariDataSource0 = new HikariDataSource();
      assertEquals(10, hikariDataSource0.getMinimumPoolSize());
      assertNull(hikariDataSource0.getCatalog());
      assertEquals(0, hikariDataSource0.getLoginTimeout());
      assertEquals(0L, hikariDataSource0.getAcquireRetryDelay());
      assertEquals(5000L, hikariDataSource0.getConnectionTimeout());
      assertFalse(hikariDataSource0.getisShutdown());
      assertFalse(hikariDataSource0.isRegisterMbeans());
      assertEquals(60, hikariDataSource0.getMaximumPoolSize());
      assertEquals(0L, hikariDataSource0.getLeakDetectionThreshold());
      assertEquals(0, hikariDataSource0.getAcquireIncrement());
      assertNull(hikariDataSource0.getConnectionTestQuery());
      assertTrue(hikariDataSource0.isJdbc4ConnectionTest());
      assertEquals(3, hikariDataSource0.getAcquireRetries());
      assertNull(hikariDataSource0.getConnectionInitSql());
      assertTrue(hikariDataSource0.isAutoCommit());
      assertFalse(hikariDataSource0.isInitializationFailFast());
      assertNull(hikariDataSource0.getConnectionCustomizerClassName());
      assertNull(hikariDataSource0.getDataSourceClassName());
      assertEquals((-1), hikariDataSource0.getTransactionIsolation());
      assertEquals(1800000L, hikariDataSource0.getMaxLifetime());
      assertEquals(600000L, hikariDataSource0.getIdleTimeout());
      assertEquals("HikariPool-1", hikariDataSource0.getPoolName());
      assertNotNull(hikariDataSource0);
      assertEquals(0, hikariDataSource0.loginTimeout);
      assertFalse(hikariDataSource0.isShutdown);
      
      hikariConfig0.setDataSource(hikariDataSource0);
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertTrue(hikariConfig0.isAutoCommit());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals(10, hikariDataSource0.getMinimumPoolSize());
      assertNull(hikariDataSource0.getCatalog());
      assertEquals(0, hikariDataSource0.getLoginTimeout());
      assertEquals(0L, hikariDataSource0.getAcquireRetryDelay());
      assertEquals(5000L, hikariDataSource0.getConnectionTimeout());
      assertFalse(hikariDataSource0.getisShutdown());
      assertFalse(hikariDataSource0.isRegisterMbeans());
      assertEquals(60, hikariDataSource0.getMaximumPoolSize());
      assertEquals(0L, hikariDataSource0.getLeakDetectionThreshold());
      assertEquals(0, hikariDataSource0.getAcquireIncrement());
      assertNull(hikariDataSource0.getConnectionTestQuery());
      assertTrue(hikariDataSource0.isJdbc4ConnectionTest());
      assertEquals(3, hikariDataSource0.getAcquireRetries());
      assertNull(hikariDataSource0.getConnectionInitSql());
      assertTrue(hikariDataSource0.isAutoCommit());
      assertFalse(hikariDataSource0.isInitializationFailFast());
      assertNull(hikariDataSource0.getConnectionCustomizerClassName());
      assertNull(hikariDataSource0.getDataSourceClassName());
      assertEquals((-1), hikariDataSource0.getTransactionIsolation());
      assertEquals(1800000L, hikariDataSource0.getMaxLifetime());
      assertEquals(600000L, hikariDataSource0.getIdleTimeout());
      assertEquals("HikariPool-1", hikariDataSource0.getPoolName());
      assertEquals(0, hikariDataSource0.loginTimeout);
      assertFalse(hikariDataSource0.isShutdown);
      
      String string1 = "<h*3tU31q8JLA&<";
      hikariConfig0.setDataSourceClassName(string1);
      assertNotSame(string1, string0);
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertTrue(hikariConfig0.isAutoCommit());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals("<h*3tU31q8JLA&<", hikariConfig0.getDataSourceClassName());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertFalse(string1.equals((Object)string0));
      
      HikariPool hikariPool0 = new HikariPool(hikariConfig0);
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertTrue(hikariConfig0.isAutoCommit());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals("<h*3tU31q8JLA&<", hikariConfig0.getDataSourceClassName());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertEquals(10, hikariPool0.getTotalConnections());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertFalse(hikariPool0.getshutdown());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertEquals("z~NH}l5*1f$G/", hikariPool0.getcatalog());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertFalse(hikariPool0.getdebug());
      assertTrue(hikariPool0.getisAutoCommit());
      assertNotNull(hikariPool0);
      assertFalse(hikariPool0.debug);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertTrue(hikariPool0.isAutoCommit);
      assertFalse(hikariPool0.shutdown);
      assertEquals((-1), hikariPool0.transactionIsolation);
      
      IHikariConnectionProxy iHikariConnectionProxy0 = null;
      hikariPool0.bagIsEmpty();
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertTrue(hikariConfig0.isAutoCommit());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals("<h*3tU31q8JLA&<", hikariConfig0.getDataSourceClassName());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertFalse(hikariPool0.getshutdown());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertEquals("z~NH}l5*1f$G/", hikariPool0.getcatalog());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertFalse(hikariPool0.getdebug());
      assertTrue(hikariPool0.getisAutoCommit());
      assertEquals(11, hikariPool0.getTotalConnections());
      assertFalse(hikariPool0.debug);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertTrue(hikariPool0.isAutoCommit);
      assertFalse(hikariPool0.shutdown);
      assertEquals((-1), hikariPool0.transactionIsolation);
      
      hikariPool0.shutdown();
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertTrue(hikariConfig0.isAutoCommit());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals("<h*3tU31q8JLA&<", hikariConfig0.getDataSourceClassName());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertEquals("z~NH}l5*1f$G/", hikariPool0.getcatalog());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertTrue(hikariPool0.getshutdown());
      assertFalse(hikariPool0.getdebug());
      assertTrue(hikariPool0.getisAutoCommit());
      assertEquals(11, hikariPool0.getTotalConnections());
      assertFalse(hikariPool0.debug);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertTrue(hikariPool0.isAutoCommit);
      assertTrue(hikariPool0.shutdown);
      assertEquals((-1), hikariPool0.transactionIsolation);
      
      long long0 = 959L;
      boolean boolean0 = hikariPool0.getshutdown();
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertTrue(hikariConfig0.isAutoCommit());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals("<h*3tU31q8JLA&<", hikariConfig0.getDataSourceClassName());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertEquals("z~NH}l5*1f$G/", hikariPool0.getcatalog());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertTrue(hikariPool0.getshutdown());
      assertFalse(hikariPool0.getdebug());
      assertTrue(hikariPool0.getisAutoCommit());
      assertEquals(11, hikariPool0.getTotalConnections());
      assertTrue(boolean0);
      assertFalse(hikariPool0.debug);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertTrue(hikariPool0.isAutoCommit);
      assertTrue(hikariPool0.shutdown);
      assertEquals((-1), hikariPool0.transactionIsolation);
      
      // Undeclared exception!
      try { 
        hikariPool0.isConnectionAlive(iHikariConnectionProxy0, long0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.zaxxer.hikari.HikariPool", e);
      }
  }

  @Test(timeout = 11000)
  public void test36()  throws Throwable  {
      HikariConfig hikariConfig0 = new HikariConfig();
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertNull(hikariConfig0.getCatalog());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNotNull(hikariConfig0);
      
      String string0 = "(I)Ljava/lang/String;";
      hikariConfig0.setConnectionCustomizerClassName(string0);
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals("(I)Ljava/lang/String;", hikariConfig0.getConnectionCustomizerClassName());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertNull(hikariConfig0.getCatalog());
      assertNull(hikariConfig0.getConnectionInitSql());
      
      String string1 = "z~NH}l5*1f$G/";
      HikariDataSource hikariDataSource0 = new HikariDataSource();
      assertEquals(0L, hikariDataSource0.getAcquireRetryDelay());
      assertEquals(10, hikariDataSource0.getMinimumPoolSize());
      assertEquals(0, hikariDataSource0.getLoginTimeout());
      assertNull(hikariDataSource0.getCatalog());
      assertNull(hikariDataSource0.getDataSourceClassName());
      assertNull(hikariDataSource0.getConnectionCustomizerClassName());
      assertEquals(5000L, hikariDataSource0.getConnectionTimeout());
      assertEquals(60, hikariDataSource0.getMaximumPoolSize());
      assertEquals(0L, hikariDataSource0.getLeakDetectionThreshold());
      assertEquals(3, hikariDataSource0.getAcquireRetries());
      assertEquals(0, hikariDataSource0.getAcquireIncrement());
      assertNull(hikariDataSource0.getConnectionInitSql());
      assertEquals((-1), hikariDataSource0.getTransactionIsolation());
      assertNull(hikariDataSource0.getConnectionTestQuery());
      assertFalse(hikariDataSource0.isInitializationFailFast());
      assertTrue(hikariDataSource0.isJdbc4ConnectionTest());
      assertTrue(hikariDataSource0.isAutoCommit());
      assertFalse(hikariDataSource0.isRegisterMbeans());
      assertFalse(hikariDataSource0.getisShutdown());
      assertEquals("HikariPool-1", hikariDataSource0.getPoolName());
      assertEquals(1800000L, hikariDataSource0.getMaxLifetime());
      assertEquals(600000L, hikariDataSource0.getIdleTimeout());
      assertNotNull(hikariDataSource0);
      assertFalse(hikariDataSource0.isShutdown);
      assertEquals(0, hikariDataSource0.loginTimeout);
      
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      hikariConfig0.setMinimumPoolSize(hikariDataSource0.loginTimeout);
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals("(I)Ljava/lang/String;", hikariConfig0.getConnectionCustomizerClassName());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertNull(hikariConfig0.getCatalog());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertEquals(0, hikariConfig0.getMinimumPoolSize());
      assertEquals(0L, hikariDataSource0.getAcquireRetryDelay());
      assertEquals(10, hikariDataSource0.getMinimumPoolSize());
      assertEquals(0, hikariDataSource0.getLoginTimeout());
      assertNull(hikariDataSource0.getCatalog());
      assertNull(hikariDataSource0.getDataSourceClassName());
      assertNull(hikariDataSource0.getConnectionCustomizerClassName());
      assertEquals(5000L, hikariDataSource0.getConnectionTimeout());
      assertEquals(60, hikariDataSource0.getMaximumPoolSize());
      assertEquals(0L, hikariDataSource0.getLeakDetectionThreshold());
      assertEquals(3, hikariDataSource0.getAcquireRetries());
      assertEquals(0, hikariDataSource0.getAcquireIncrement());
      assertNull(hikariDataSource0.getConnectionInitSql());
      assertEquals((-1), hikariDataSource0.getTransactionIsolation());
      assertNull(hikariDataSource0.getConnectionTestQuery());
      assertFalse(hikariDataSource0.isInitializationFailFast());
      assertTrue(hikariDataSource0.isJdbc4ConnectionTest());
      assertTrue(hikariDataSource0.isAutoCommit());
      assertFalse(hikariDataSource0.isRegisterMbeans());
      assertFalse(hikariDataSource0.getisShutdown());
      assertEquals("HikariPool-1", hikariDataSource0.getPoolName());
      assertEquals(1800000L, hikariDataSource0.getMaxLifetime());
      assertEquals(600000L, hikariDataSource0.getIdleTimeout());
      assertFalse(hikariDataSource0.isShutdown);
      assertEquals(0, hikariDataSource0.loginTimeout);
      
      hikariConfig0.setDataSource(hikariDataSource0);
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals("(I)Ljava/lang/String;", hikariConfig0.getConnectionCustomizerClassName());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertNull(hikariConfig0.getCatalog());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertEquals(0, hikariConfig0.getMinimumPoolSize());
      assertEquals(0L, hikariDataSource0.getAcquireRetryDelay());
      assertEquals(10, hikariDataSource0.getMinimumPoolSize());
      assertEquals(0, hikariDataSource0.getLoginTimeout());
      assertNull(hikariDataSource0.getCatalog());
      assertNull(hikariDataSource0.getDataSourceClassName());
      assertNull(hikariDataSource0.getConnectionCustomizerClassName());
      assertEquals(5000L, hikariDataSource0.getConnectionTimeout());
      assertEquals(60, hikariDataSource0.getMaximumPoolSize());
      assertEquals(0L, hikariDataSource0.getLeakDetectionThreshold());
      assertEquals(3, hikariDataSource0.getAcquireRetries());
      assertEquals(0, hikariDataSource0.getAcquireIncrement());
      assertNull(hikariDataSource0.getConnectionInitSql());
      assertEquals((-1), hikariDataSource0.getTransactionIsolation());
      assertNull(hikariDataSource0.getConnectionTestQuery());
      assertFalse(hikariDataSource0.isInitializationFailFast());
      assertTrue(hikariDataSource0.isJdbc4ConnectionTest());
      assertTrue(hikariDataSource0.isAutoCommit());
      assertFalse(hikariDataSource0.isRegisterMbeans());
      assertFalse(hikariDataSource0.getisShutdown());
      assertEquals("HikariPool-1", hikariDataSource0.getPoolName());
      assertEquals(1800000L, hikariDataSource0.getMaxLifetime());
      assertEquals(600000L, hikariDataSource0.getIdleTimeout());
      assertFalse(hikariDataSource0.isShutdown);
      assertEquals(0, hikariDataSource0.loginTimeout);
      
      HikariPool hikariPool0 = new HikariPool(hikariConfig0);
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertNull(hikariConfig0.getCatalog());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertEquals(0, hikariConfig0.getMinimumPoolSize());
      assertNull(hikariPool0.getcatalog());
      assertFalse(hikariPool0.getshutdown());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertFalse(hikariPool0.getdebug());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertTrue(hikariPool0.getisAutoCommit());
      assertEquals(0, hikariPool0.getTotalConnections());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertNotNull(hikariPool0);
      assertTrue(hikariPool0.isAutoCommit);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertFalse(hikariPool0.shutdown);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertFalse(hikariPool0.debug);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
  }

  @Test(timeout = 11000)
  public void test37()  throws Throwable  {
      HikariConfig hikariConfig0 = new HikariConfig();
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isAutoCommit());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNotNull(hikariConfig0);
      
      String string0 = "(I)Ljava/lang/String;";
      hikariConfig0.setConnectionCustomizerClassName(string0);
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals("(I)Ljava/lang/String;", hikariConfig0.getConnectionCustomizerClassName());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertNull(hikariConfig0.getConnectionInitSql());
      
      String string1 = "z~NH}l5*1f$G/";
      HikariDataSource hikariDataSource0 = new HikariDataSource();
      assertEquals("HikariPool-1", hikariDataSource0.getPoolName());
      assertNull(hikariDataSource0.getConnectionCustomizerClassName());
      assertEquals(60, hikariDataSource0.getMaximumPoolSize());
      assertTrue(hikariDataSource0.isAutoCommit());
      assertEquals(3, hikariDataSource0.getAcquireRetries());
      assertEquals(0L, hikariDataSource0.getAcquireRetryDelay());
      assertNull(hikariDataSource0.getConnectionTestQuery());
      assertTrue(hikariDataSource0.isJdbc4ConnectionTest());
      assertEquals(1800000L, hikariDataSource0.getMaxLifetime());
      assertFalse(hikariDataSource0.isInitializationFailFast());
      assertEquals(600000L, hikariDataSource0.getIdleTimeout());
      assertNull(hikariDataSource0.getDataSourceClassName());
      assertEquals(5000L, hikariDataSource0.getConnectionTimeout());
      assertEquals(0, hikariDataSource0.getLoginTimeout());
      assertFalse(hikariDataSource0.isRegisterMbeans());
      assertFalse(hikariDataSource0.getisShutdown());
      assertEquals(10, hikariDataSource0.getMinimumPoolSize());
      assertEquals((-1), hikariDataSource0.getTransactionIsolation());
      assertEquals(0, hikariDataSource0.getAcquireIncrement());
      assertNull(hikariDataSource0.getConnectionInitSql());
      assertEquals(0L, hikariDataSource0.getLeakDetectionThreshold());
      assertNull(hikariDataSource0.getCatalog());
      assertNotNull(hikariDataSource0);
      assertEquals(0, hikariDataSource0.loginTimeout);
      assertFalse(hikariDataSource0.isShutdown);
      
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      hikariConfig0.setMinimumPoolSize(hikariDataSource0.loginTimeout);
      assertEquals(0, hikariConfig0.getMinimumPoolSize());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals("(I)Ljava/lang/String;", hikariConfig0.getConnectionCustomizerClassName());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertEquals("HikariPool-1", hikariDataSource0.getPoolName());
      assertNull(hikariDataSource0.getConnectionCustomizerClassName());
      assertEquals(60, hikariDataSource0.getMaximumPoolSize());
      assertTrue(hikariDataSource0.isAutoCommit());
      assertEquals(3, hikariDataSource0.getAcquireRetries());
      assertEquals(0L, hikariDataSource0.getAcquireRetryDelay());
      assertNull(hikariDataSource0.getConnectionTestQuery());
      assertTrue(hikariDataSource0.isJdbc4ConnectionTest());
      assertEquals(1800000L, hikariDataSource0.getMaxLifetime());
      assertFalse(hikariDataSource0.isInitializationFailFast());
      assertEquals(600000L, hikariDataSource0.getIdleTimeout());
      assertNull(hikariDataSource0.getDataSourceClassName());
      assertEquals(5000L, hikariDataSource0.getConnectionTimeout());
      assertEquals(0, hikariDataSource0.getLoginTimeout());
      assertFalse(hikariDataSource0.isRegisterMbeans());
      assertFalse(hikariDataSource0.getisShutdown());
      assertEquals(10, hikariDataSource0.getMinimumPoolSize());
      assertEquals((-1), hikariDataSource0.getTransactionIsolation());
      assertEquals(0, hikariDataSource0.getAcquireIncrement());
      assertNull(hikariDataSource0.getConnectionInitSql());
      assertEquals(0L, hikariDataSource0.getLeakDetectionThreshold());
      assertNull(hikariDataSource0.getCatalog());
      assertEquals(0, hikariDataSource0.loginTimeout);
      assertFalse(hikariDataSource0.isShutdown);
      
      hikariConfig0.setDataSource(hikariDataSource0);
      assertEquals(0, hikariConfig0.getMinimumPoolSize());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals("(I)Ljava/lang/String;", hikariConfig0.getConnectionCustomizerClassName());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertEquals("HikariPool-1", hikariDataSource0.getPoolName());
      assertNull(hikariDataSource0.getConnectionCustomizerClassName());
      assertEquals(60, hikariDataSource0.getMaximumPoolSize());
      assertTrue(hikariDataSource0.isAutoCommit());
      assertEquals(3, hikariDataSource0.getAcquireRetries());
      assertEquals(0L, hikariDataSource0.getAcquireRetryDelay());
      assertNull(hikariDataSource0.getConnectionTestQuery());
      assertTrue(hikariDataSource0.isJdbc4ConnectionTest());
      assertEquals(1800000L, hikariDataSource0.getMaxLifetime());
      assertFalse(hikariDataSource0.isInitializationFailFast());
      assertEquals(600000L, hikariDataSource0.getIdleTimeout());
      assertNull(hikariDataSource0.getDataSourceClassName());
      assertEquals(5000L, hikariDataSource0.getConnectionTimeout());
      assertEquals(0, hikariDataSource0.getLoginTimeout());
      assertFalse(hikariDataSource0.isRegisterMbeans());
      assertFalse(hikariDataSource0.getisShutdown());
      assertEquals(10, hikariDataSource0.getMinimumPoolSize());
      assertEquals((-1), hikariDataSource0.getTransactionIsolation());
      assertEquals(0, hikariDataSource0.getAcquireIncrement());
      assertNull(hikariDataSource0.getConnectionInitSql());
      assertEquals(0L, hikariDataSource0.getLeakDetectionThreshold());
      assertNull(hikariDataSource0.getCatalog());
      assertEquals(0, hikariDataSource0.loginTimeout);
      assertFalse(hikariDataSource0.isShutdown);
      
      String string2 = "<h*3tU31q8JLA&<";
      hikariConfig0.setDataSourceClassName(string2);
      assertNotSame(string2, string1);
      assertNotSame(string2, string0);
      assertEquals(0, hikariConfig0.getMinimumPoolSize());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals("(I)Ljava/lang/String;", hikariConfig0.getConnectionCustomizerClassName());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertEquals("<h*3tU31q8JLA&<", hikariConfig0.getDataSourceClassName());
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      
      HikariPool hikariPool0 = new HikariPool(hikariConfig0);
      assertEquals(0, hikariConfig0.getMinimumPoolSize());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isAutoCommit());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertEquals("<h*3tU31q8JLA&<", hikariConfig0.getDataSourceClassName());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertFalse(hikariPool0.getshutdown());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertFalse(hikariPool0.getdebug());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertNull(hikariPool0.getcatalog());
      assertTrue(hikariPool0.getisAutoCommit());
      assertEquals(0, hikariPool0.getTotalConnections());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertNotNull(hikariPool0);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertTrue(hikariPool0.isAutoCommit);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertFalse(hikariPool0.shutdown);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertFalse(hikariPool0.debug);
  }

  @Test(timeout = 11000)
  public void test38()  throws Throwable  {
      HikariConfig hikariConfig0 = new HikariConfig();
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertTrue(hikariConfig0.isAutoCommit());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertNotNull(hikariConfig0);
      
      String string0 = "z~NH}l5*1f$G/";
      hikariConfig0.setCatalog(string0);
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertTrue(hikariConfig0.isAutoCommit());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      
      HikariDataSource hikariDataSource0 = new HikariDataSource();
      assertEquals(5000L, hikariDataSource0.getConnectionTimeout());
      assertEquals(0L, hikariDataSource0.getAcquireRetryDelay());
      assertEquals(0, hikariDataSource0.getLoginTimeout());
      assertNull(hikariDataSource0.getCatalog());
      assertNull(hikariDataSource0.getDataSourceClassName());
      assertEquals(600000L, hikariDataSource0.getIdleTimeout());
      assertNull(hikariDataSource0.getConnectionCustomizerClassName());
      assertEquals(1800000L, hikariDataSource0.getMaxLifetime());
      assertFalse(hikariDataSource0.isRegisterMbeans());
      assertFalse(hikariDataSource0.getisShutdown());
      assertEquals("HikariPool-1", hikariDataSource0.getPoolName());
      assertEquals(10, hikariDataSource0.getMinimumPoolSize());
      assertEquals((-1), hikariDataSource0.getTransactionIsolation());
      assertTrue(hikariDataSource0.isJdbc4ConnectionTest());
      assertNull(hikariDataSource0.getConnectionTestQuery());
      assertEquals(60, hikariDataSource0.getMaximumPoolSize());
      assertTrue(hikariDataSource0.isAutoCommit());
      assertEquals(3, hikariDataSource0.getAcquireRetries());
      assertNull(hikariDataSource0.getConnectionInitSql());
      assertFalse(hikariDataSource0.isInitializationFailFast());
      assertEquals(0L, hikariDataSource0.getLeakDetectionThreshold());
      assertEquals(0, hikariDataSource0.getAcquireIncrement());
      assertNotNull(hikariDataSource0);
      assertEquals(0, hikariDataSource0.loginTimeout);
      assertFalse(hikariDataSource0.isShutdown);
      
      hikariConfig0.setDataSource(hikariDataSource0);
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertTrue(hikariConfig0.isAutoCommit());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(5000L, hikariDataSource0.getConnectionTimeout());
      assertEquals(0L, hikariDataSource0.getAcquireRetryDelay());
      assertEquals(0, hikariDataSource0.getLoginTimeout());
      assertNull(hikariDataSource0.getCatalog());
      assertNull(hikariDataSource0.getDataSourceClassName());
      assertEquals(600000L, hikariDataSource0.getIdleTimeout());
      assertNull(hikariDataSource0.getConnectionCustomizerClassName());
      assertEquals(1800000L, hikariDataSource0.getMaxLifetime());
      assertFalse(hikariDataSource0.isRegisterMbeans());
      assertFalse(hikariDataSource0.getisShutdown());
      assertEquals("HikariPool-1", hikariDataSource0.getPoolName());
      assertEquals(10, hikariDataSource0.getMinimumPoolSize());
      assertEquals((-1), hikariDataSource0.getTransactionIsolation());
      assertTrue(hikariDataSource0.isJdbc4ConnectionTest());
      assertNull(hikariDataSource0.getConnectionTestQuery());
      assertEquals(60, hikariDataSource0.getMaximumPoolSize());
      assertTrue(hikariDataSource0.isAutoCommit());
      assertEquals(3, hikariDataSource0.getAcquireRetries());
      assertNull(hikariDataSource0.getConnectionInitSql());
      assertFalse(hikariDataSource0.isInitializationFailFast());
      assertEquals(0L, hikariDataSource0.getLeakDetectionThreshold());
      assertEquals(0, hikariDataSource0.getAcquireIncrement());
      assertEquals(0, hikariDataSource0.loginTimeout);
      assertFalse(hikariDataSource0.isShutdown);
      
      String string1 = "<h*3tU31q8JLA&<";
      HikariPool hikariPool0 = new HikariPool(hikariConfig0);
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertTrue(hikariConfig0.isAutoCommit());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertEquals(10, hikariPool0.getTotalConnections());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertEquals("z~NH}l5*1f$G/", hikariPool0.getcatalog());
      assertFalse(hikariPool0.getshutdown());
      assertFalse(hikariPool0.getdebug());
      assertTrue(hikariPool0.getisAutoCommit());
      assertNotNull(hikariPool0);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertTrue(hikariPool0.isAutoCommit);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertFalse(hikariPool0.shutdown);
      assertFalse(hikariPool0.debug);
      assertEquals((-1), hikariPool0.transactionIsolation);
      
      hikariPool0.bagIsEmpty();
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertTrue(hikariConfig0.isAutoCommit());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertEquals(11, hikariPool0.getTotalConnections());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertEquals("z~NH}l5*1f$G/", hikariPool0.getcatalog());
      assertFalse(hikariPool0.getshutdown());
      assertFalse(hikariPool0.getdebug());
      assertTrue(hikariPool0.getisAutoCommit());
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertTrue(hikariPool0.isAutoCommit);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertFalse(hikariPool0.shutdown);
      assertFalse(hikariPool0.debug);
      assertEquals((-1), hikariPool0.transactionIsolation);
      
      hikariPool0.shutdown();
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertTrue(hikariConfig0.isAutoCommit());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertEquals(11, hikariPool0.getTotalConnections());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertEquals("z~NH}l5*1f$G/", hikariPool0.getcatalog());
      assertFalse(hikariPool0.getdebug());
      assertTrue(hikariPool0.getshutdown());
      assertTrue(hikariPool0.getisAutoCommit());
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertTrue(hikariPool0.isAutoCommit);
      assertTrue(hikariPool0.shutdown);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertFalse(hikariPool0.debug);
      assertEquals((-1), hikariPool0.transactionIsolation);
      
      long long0 = 959L;
      boolean boolean0 = hikariPool0.getshutdown();
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertTrue(hikariConfig0.isAutoCommit());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertEquals(11, hikariPool0.getTotalConnections());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertEquals("z~NH}l5*1f$G/", hikariPool0.getcatalog());
      assertFalse(hikariPool0.getdebug());
      assertTrue(hikariPool0.getshutdown());
      assertTrue(hikariPool0.getisAutoCommit());
      assertTrue(boolean0);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertTrue(hikariPool0.isAutoCommit);
      assertTrue(hikariPool0.shutdown);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertFalse(hikariPool0.debug);
      assertEquals((-1), hikariPool0.transactionIsolation);
      
      int int0 = hikariPool0.getActiveConnections();
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertTrue(hikariConfig0.isAutoCommit());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertEquals(11, hikariPool0.getTotalConnections());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertEquals("z~NH}l5*1f$G/", hikariPool0.getcatalog());
      assertFalse(hikariPool0.getdebug());
      assertTrue(hikariPool0.getshutdown());
      assertTrue(hikariPool0.getisAutoCommit());
      assertEquals(11, int0);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertTrue(hikariPool0.isAutoCommit);
      assertTrue(hikariPool0.shutdown);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertFalse(hikariPool0.debug);
      assertEquals((-1), hikariPool0.transactionIsolation);
      
      boolean boolean1 = hikariPool0.getjdbc4ConnectionTest();
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertTrue(hikariConfig0.isAutoCommit());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertEquals(11, hikariPool0.getTotalConnections());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertEquals("z~NH}l5*1f$G/", hikariPool0.getcatalog());
      assertFalse(hikariPool0.getdebug());
      assertTrue(hikariPool0.getshutdown());
      assertTrue(hikariPool0.getisAutoCommit());
      assertTrue(boolean1 == boolean0);
      assertTrue(boolean1);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertTrue(hikariPool0.isAutoCommit);
      assertTrue(hikariPool0.shutdown);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertFalse(hikariPool0.debug);
      assertEquals((-1), hikariPool0.transactionIsolation);
      
      HikariPool.HouseKeeper hikariPool_HouseKeeper0 = hikariPool0.new HouseKeeper();
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertTrue(hikariConfig0.isAutoCommit());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertEquals(11, hikariPool0.getTotalConnections());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertEquals("z~NH}l5*1f$G/", hikariPool0.getcatalog());
      assertFalse(hikariPool0.getdebug());
      assertTrue(hikariPool0.getshutdown());
      assertTrue(hikariPool0.getisAutoCommit());
      assertEquals(0L, hikariPool_HouseKeeper0.scheduledExecutionTime());
      assertNotNull(hikariPool_HouseKeeper0);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertTrue(hikariPool0.isAutoCommit);
      assertTrue(hikariPool0.shutdown);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertFalse(hikariPool0.debug);
      assertEquals((-1), hikariPool0.transactionIsolation);
      
      hikariPool_HouseKeeper0.run();
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertTrue(hikariConfig0.isAutoCommit());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertEquals(11, hikariPool0.getTotalConnections());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertEquals("z~NH}l5*1f$G/", hikariPool0.getcatalog());
      assertFalse(hikariPool0.getdebug());
      assertTrue(hikariPool0.getshutdown());
      assertTrue(hikariPool0.getisAutoCommit());
      assertEquals(0L, hikariPool_HouseKeeper0.scheduledExecutionTime());
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertTrue(hikariPool0.isAutoCommit);
      assertTrue(hikariPool0.shutdown);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertFalse(hikariPool0.debug);
      assertEquals((-1), hikariPool0.transactionIsolation);
  }

  @Test(timeout = 11000)
  public void test39()  throws Throwable  {
      HikariConfig hikariConfig0 = new HikariConfig();
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isAutoCommit());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getCatalog());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertNotNull(hikariConfig0);
      
      String string0 = "z~NH}l5*1f$G/";
      hikariConfig0.setCatalog(string0);
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isAutoCommit());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertNull(hikariConfig0.getDataSourceClassName());
      
      HikariDataSource hikariDataSource0 = new HikariDataSource();
      assertEquals(5000L, hikariDataSource0.getConnectionTimeout());
      assertEquals(10, hikariDataSource0.getMinimumPoolSize());
      assertNull(hikariDataSource0.getCatalog());
      assertEquals(0, hikariDataSource0.getLoginTimeout());
      assertEquals(0L, hikariDataSource0.getAcquireRetryDelay());
      assertFalse(hikariDataSource0.getisShutdown());
      assertFalse(hikariDataSource0.isRegisterMbeans());
      assertEquals(0L, hikariDataSource0.getLeakDetectionThreshold());
      assertEquals(0, hikariDataSource0.getAcquireIncrement());
      assertEquals(60, hikariDataSource0.getMaximumPoolSize());
      assertNull(hikariDataSource0.getConnectionInitSql());
      assertTrue(hikariDataSource0.isJdbc4ConnectionTest());
      assertNull(hikariDataSource0.getConnectionCustomizerClassName());
      assertTrue(hikariDataSource0.isAutoCommit());
      assertFalse(hikariDataSource0.isInitializationFailFast());
      assertNull(hikariDataSource0.getDataSourceClassName());
      assertEquals((-1), hikariDataSource0.getTransactionIsolation());
      assertEquals("HikariPool-1", hikariDataSource0.getPoolName());
      assertEquals(3, hikariDataSource0.getAcquireRetries());
      assertNull(hikariDataSource0.getConnectionTestQuery());
      assertEquals(1800000L, hikariDataSource0.getMaxLifetime());
      assertEquals(600000L, hikariDataSource0.getIdleTimeout());
      assertNotNull(hikariDataSource0);
      assertEquals(0, hikariDataSource0.loginTimeout);
      assertFalse(hikariDataSource0.isShutdown);
      
      hikariConfig0.setDataSource(hikariDataSource0);
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isAutoCommit());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals(5000L, hikariDataSource0.getConnectionTimeout());
      assertEquals(10, hikariDataSource0.getMinimumPoolSize());
      assertNull(hikariDataSource0.getCatalog());
      assertEquals(0, hikariDataSource0.getLoginTimeout());
      assertEquals(0L, hikariDataSource0.getAcquireRetryDelay());
      assertFalse(hikariDataSource0.getisShutdown());
      assertFalse(hikariDataSource0.isRegisterMbeans());
      assertEquals(0L, hikariDataSource0.getLeakDetectionThreshold());
      assertEquals(0, hikariDataSource0.getAcquireIncrement());
      assertEquals(60, hikariDataSource0.getMaximumPoolSize());
      assertNull(hikariDataSource0.getConnectionInitSql());
      assertTrue(hikariDataSource0.isJdbc4ConnectionTest());
      assertNull(hikariDataSource0.getConnectionCustomizerClassName());
      assertTrue(hikariDataSource0.isAutoCommit());
      assertFalse(hikariDataSource0.isInitializationFailFast());
      assertNull(hikariDataSource0.getDataSourceClassName());
      assertEquals((-1), hikariDataSource0.getTransactionIsolation());
      assertEquals("HikariPool-1", hikariDataSource0.getPoolName());
      assertEquals(3, hikariDataSource0.getAcquireRetries());
      assertNull(hikariDataSource0.getConnectionTestQuery());
      assertEquals(1800000L, hikariDataSource0.getMaxLifetime());
      assertEquals(600000L, hikariDataSource0.getIdleTimeout());
      assertEquals(0, hikariDataSource0.loginTimeout);
      assertFalse(hikariDataSource0.isShutdown);
      
      Properties properties0 = hikariDataSource0.getDataSourceProperties();
      assertEquals(5000L, hikariDataSource0.getConnectionTimeout());
      assertEquals(10, hikariDataSource0.getMinimumPoolSize());
      assertNull(hikariDataSource0.getCatalog());
      assertEquals(0, hikariDataSource0.getLoginTimeout());
      assertEquals(0L, hikariDataSource0.getAcquireRetryDelay());
      assertFalse(hikariDataSource0.getisShutdown());
      assertFalse(hikariDataSource0.isRegisterMbeans());
      assertEquals(0L, hikariDataSource0.getLeakDetectionThreshold());
      assertEquals(0, hikariDataSource0.getAcquireIncrement());
      assertEquals(60, hikariDataSource0.getMaximumPoolSize());
      assertNull(hikariDataSource0.getConnectionInitSql());
      assertTrue(hikariDataSource0.isJdbc4ConnectionTest());
      assertNull(hikariDataSource0.getConnectionCustomizerClassName());
      assertTrue(hikariDataSource0.isAutoCommit());
      assertFalse(hikariDataSource0.isInitializationFailFast());
      assertNull(hikariDataSource0.getDataSourceClassName());
      assertEquals((-1), hikariDataSource0.getTransactionIsolation());
      assertEquals("HikariPool-1", hikariDataSource0.getPoolName());
      assertEquals(3, hikariDataSource0.getAcquireRetries());
      assertNull(hikariDataSource0.getConnectionTestQuery());
      assertEquals(1800000L, hikariDataSource0.getMaxLifetime());
      assertEquals(600000L, hikariDataSource0.getIdleTimeout());
      assertEquals(0, properties0.size());
      assertTrue(properties0.isEmpty());
      assertNotNull(properties0);
      assertEquals(0, hikariDataSource0.loginTimeout);
      assertFalse(hikariDataSource0.isShutdown);
      
      hikariConfig0.setDataSourceProperties(properties0);
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isAutoCommit());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals(5000L, hikariDataSource0.getConnectionTimeout());
      assertEquals(10, hikariDataSource0.getMinimumPoolSize());
      assertNull(hikariDataSource0.getCatalog());
      assertEquals(0, hikariDataSource0.getLoginTimeout());
      assertEquals(0L, hikariDataSource0.getAcquireRetryDelay());
      assertFalse(hikariDataSource0.getisShutdown());
      assertFalse(hikariDataSource0.isRegisterMbeans());
      assertEquals(0L, hikariDataSource0.getLeakDetectionThreshold());
      assertEquals(0, hikariDataSource0.getAcquireIncrement());
      assertEquals(60, hikariDataSource0.getMaximumPoolSize());
      assertNull(hikariDataSource0.getConnectionInitSql());
      assertTrue(hikariDataSource0.isJdbc4ConnectionTest());
      assertNull(hikariDataSource0.getConnectionCustomizerClassName());
      assertTrue(hikariDataSource0.isAutoCommit());
      assertFalse(hikariDataSource0.isInitializationFailFast());
      assertNull(hikariDataSource0.getDataSourceClassName());
      assertEquals((-1), hikariDataSource0.getTransactionIsolation());
      assertEquals("HikariPool-1", hikariDataSource0.getPoolName());
      assertEquals(3, hikariDataSource0.getAcquireRetries());
      assertNull(hikariDataSource0.getConnectionTestQuery());
      assertEquals(1800000L, hikariDataSource0.getMaxLifetime());
      assertEquals(600000L, hikariDataSource0.getIdleTimeout());
      assertEquals(0, properties0.size());
      assertTrue(properties0.isEmpty());
      assertEquals(0, hikariDataSource0.loginTimeout);
      assertFalse(hikariDataSource0.isShutdown);
      
      String string1 = "<h*3tU31q8JLA&<";
      hikariConfig0.setDataSourceClassName(string1);
      assertNotSame(string1, string0);
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isAutoCommit());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals("<h*3tU31q8JLA&<", hikariConfig0.getDataSourceClassName());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertFalse(string1.equals((Object)string0));
      
      HikariPool hikariPool0 = new HikariPool(hikariConfig0);
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isAutoCommit());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals("<h*3tU31q8JLA&<", hikariConfig0.getDataSourceClassName());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertEquals("z~NH}l5*1f$G/", hikariPool0.getcatalog());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertFalse(hikariPool0.getshutdown());
      assertFalse(hikariPool0.getdebug());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertEquals(10, hikariPool0.getTotalConnections());
      assertTrue(hikariPool0.getisAutoCommit());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertNotNull(hikariPool0);
      assertFalse(hikariPool0.shutdown);
      assertTrue(hikariPool0.isAutoCommit);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertFalse(hikariPool0.debug);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertEquals((-1), hikariPool0.transactionIsolation);
      
      boolean boolean0 = hikariPool0.getjdbc4ConnectionTest();
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isAutoCommit());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals("<h*3tU31q8JLA&<", hikariConfig0.getDataSourceClassName());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertEquals("z~NH}l5*1f$G/", hikariPool0.getcatalog());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertFalse(hikariPool0.getshutdown());
      assertFalse(hikariPool0.getdebug());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertEquals(10, hikariPool0.getTotalConnections());
      assertTrue(hikariPool0.getisAutoCommit());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertTrue(boolean0);
      assertFalse(hikariPool0.shutdown);
      assertTrue(hikariPool0.isAutoCommit);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertFalse(hikariPool0.debug);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertEquals((-1), hikariPool0.transactionIsolation);
      
      hikariPool0.fillPool();
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isAutoCommit());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals("<h*3tU31q8JLA&<", hikariConfig0.getDataSourceClassName());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertEquals("z~NH}l5*1f$G/", hikariPool0.getcatalog());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertFalse(hikariPool0.getshutdown());
      assertFalse(hikariPool0.getdebug());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertEquals(10, hikariPool0.getTotalConnections());
      assertTrue(hikariPool0.getisAutoCommit());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertFalse(hikariPool0.shutdown);
      assertTrue(hikariPool0.isAutoCommit);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertFalse(hikariPool0.debug);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertEquals((-1), hikariPool0.transactionIsolation);
  }

  @Test(timeout = 11000)
  public void test40()  throws Throwable  {
      HikariConfig hikariConfig0 = new HikariConfig();
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertNotNull(hikariConfig0);
      
      String string0 = "z~NH}l5*1f$G/";
      hikariConfig0.setCatalog(string0);
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      
      HikariDataSource hikariDataSource0 = new HikariDataSource();
      assertEquals(0L, hikariDataSource0.getLeakDetectionThreshold());
      assertEquals(3, hikariDataSource0.getAcquireRetries());
      assertEquals(0, hikariDataSource0.getAcquireIncrement());
      assertNull(hikariDataSource0.getConnectionInitSql());
      assertNull(hikariDataSource0.getConnectionTestQuery());
      assertEquals(1800000L, hikariDataSource0.getMaxLifetime());
      assertEquals(600000L, hikariDataSource0.getIdleTimeout());
      assertFalse(hikariDataSource0.isInitializationFailFast());
      assertTrue(hikariDataSource0.isJdbc4ConnectionTest());
      assertFalse(hikariDataSource0.isRegisterMbeans());
      assertFalse(hikariDataSource0.getisShutdown());
      assertNull(hikariDataSource0.getConnectionCustomizerClassName());
      assertTrue(hikariDataSource0.isAutoCommit());
      assertEquals(10, hikariDataSource0.getMinimumPoolSize());
      assertEquals((-1), hikariDataSource0.getTransactionIsolation());
      assertEquals("HikariPool-1", hikariDataSource0.getPoolName());
      assertEquals(0L, hikariDataSource0.getAcquireRetryDelay());
      assertEquals(5000L, hikariDataSource0.getConnectionTimeout());
      assertNull(hikariDataSource0.getDataSourceClassName());
      assertNull(hikariDataSource0.getCatalog());
      assertEquals(0, hikariDataSource0.getLoginTimeout());
      assertEquals(60, hikariDataSource0.getMaximumPoolSize());
      assertNotNull(hikariDataSource0);
      assertFalse(hikariDataSource0.isShutdown);
      assertEquals(0, hikariDataSource0.loginTimeout);
      
      hikariConfig0.setDataSource(hikariDataSource0);
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(0L, hikariDataSource0.getLeakDetectionThreshold());
      assertEquals(3, hikariDataSource0.getAcquireRetries());
      assertEquals(0, hikariDataSource0.getAcquireIncrement());
      assertNull(hikariDataSource0.getConnectionInitSql());
      assertNull(hikariDataSource0.getConnectionTestQuery());
      assertEquals(1800000L, hikariDataSource0.getMaxLifetime());
      assertEquals(600000L, hikariDataSource0.getIdleTimeout());
      assertFalse(hikariDataSource0.isInitializationFailFast());
      assertTrue(hikariDataSource0.isJdbc4ConnectionTest());
      assertFalse(hikariDataSource0.isRegisterMbeans());
      assertFalse(hikariDataSource0.getisShutdown());
      assertNull(hikariDataSource0.getConnectionCustomizerClassName());
      assertTrue(hikariDataSource0.isAutoCommit());
      assertEquals(10, hikariDataSource0.getMinimumPoolSize());
      assertEquals((-1), hikariDataSource0.getTransactionIsolation());
      assertEquals("HikariPool-1", hikariDataSource0.getPoolName());
      assertEquals(0L, hikariDataSource0.getAcquireRetryDelay());
      assertEquals(5000L, hikariDataSource0.getConnectionTimeout());
      assertNull(hikariDataSource0.getDataSourceClassName());
      assertNull(hikariDataSource0.getCatalog());
      assertEquals(0, hikariDataSource0.getLoginTimeout());
      assertEquals(60, hikariDataSource0.getMaximumPoolSize());
      assertFalse(hikariDataSource0.isShutdown);
      assertEquals(0, hikariDataSource0.loginTimeout);
      
      String string1 = "<h*3tU31q8JLA&<";
      hikariConfig0.setDataSourceClassName(string1);
      assertNotSame(string1, string0);
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals("<h*3tU31q8JLA&<", hikariConfig0.getDataSourceClassName());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertFalse(string1.equals((Object)string0));
      
      HikariPool hikariPool0 = new HikariPool(hikariConfig0);
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals("<h*3tU31q8JLA&<", hikariConfig0.getDataSourceClassName());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertEquals("z~NH}l5*1f$G/", hikariPool0.getcatalog());
      assertTrue(hikariPool0.getisAutoCommit());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertFalse(hikariPool0.getshutdown());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertEquals(10, hikariPool0.getTotalConnections());
      assertFalse(hikariPool0.getdebug());
      assertNotNull(hikariPool0);
      assertFalse(hikariPool0.shutdown);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertFalse(hikariPool0.debug);
      assertTrue(hikariPool0.isAutoCommit);
      
      String[] stringArray0 = new String[9];
      stringArray0[0] = hikariPool0.catalog;
      stringArray0[1] = string0;
      stringArray0[2] = string0;
      stringArray0[3] = hikariPool0.catalog;
      stringArray0[4] = hikariPool0.catalog;
      stringArray0[5] = hikariPool0.catalog;
      stringArray0[6] = hikariPool0.catalog;
      stringArray0[7] = hikariPool0.catalog;
      stringArray0[8] = string1;
      hikariPool0.logPoolState(stringArray0);
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals("<h*3tU31q8JLA&<", hikariConfig0.getDataSourceClassName());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertEquals("z~NH}l5*1f$G/", hikariPool0.getcatalog());
      assertTrue(hikariPool0.getisAutoCommit());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertFalse(hikariPool0.getshutdown());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertEquals(10, hikariPool0.getTotalConnections());
      assertFalse(hikariPool0.getdebug());
      assertEquals(9, stringArray0.length);
      assertFalse(hikariPool0.shutdown);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertFalse(hikariPool0.debug);
      assertTrue(hikariPool0.isAutoCommit);
      
      boolean boolean0 = hikariPool0.getjdbc4ConnectionTest();
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals("<h*3tU31q8JLA&<", hikariConfig0.getDataSourceClassName());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertEquals("z~NH}l5*1f$G/", hikariPool0.getcatalog());
      assertTrue(hikariPool0.getisAutoCommit());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertFalse(hikariPool0.getshutdown());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertEquals(10, hikariPool0.getTotalConnections());
      assertFalse(hikariPool0.getdebug());
      assertTrue(boolean0);
      assertFalse(hikariPool0.shutdown);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertFalse(hikariPool0.debug);
      assertTrue(hikariPool0.isAutoCommit);
  }

  @Test(timeout = 11000)
  public void test41()  throws Throwable  {
      HikariConfig hikariConfig0 = new HikariConfig();
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertTrue(hikariConfig0.isAutoCommit());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertNotNull(hikariConfig0);
      
      String string0 = "(I)Ljava/lang/String;";
      hikariConfig0.setConnectionCustomizerClassName(string0);
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals("(I)Ljava/lang/String;", hikariConfig0.getConnectionCustomizerClassName());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      
      String string1 = "z~NH}l5*1f$G/";
      HikariDataSource hikariDataSource0 = new HikariDataSource();
      assertEquals(5000L, hikariDataSource0.getConnectionTimeout());
      assertFalse(hikariDataSource0.isInitializationFailFast());
      assertFalse(hikariDataSource0.isRegisterMbeans());
      assertFalse(hikariDataSource0.getisShutdown());
      assertEquals(0L, hikariDataSource0.getLeakDetectionThreshold());
      assertEquals(0, hikariDataSource0.getAcquireIncrement());
      assertNull(hikariDataSource0.getCatalog());
      assertNull(hikariDataSource0.getConnectionInitSql());
      assertEquals(60, hikariDataSource0.getMaximumPoolSize());
      assertEquals("HikariPool-1", hikariDataSource0.getPoolName());
      assertNull(hikariDataSource0.getConnectionCustomizerClassName());
      assertTrue(hikariDataSource0.isJdbc4ConnectionTest());
      assertTrue(hikariDataSource0.isAutoCommit());
      assertEquals(3, hikariDataSource0.getAcquireRetries());
      assertEquals(0L, hikariDataSource0.getAcquireRetryDelay());
      assertNull(hikariDataSource0.getDataSourceClassName());
      assertEquals(10, hikariDataSource0.getMinimumPoolSize());
      assertEquals((-1), hikariDataSource0.getTransactionIsolation());
      assertEquals(0, hikariDataSource0.getLoginTimeout());
      assertNull(hikariDataSource0.getConnectionTestQuery());
      assertEquals(1800000L, hikariDataSource0.getMaxLifetime());
      assertEquals(600000L, hikariDataSource0.getIdleTimeout());
      assertNotNull(hikariDataSource0);
      assertFalse(hikariDataSource0.isShutdown);
      assertEquals(0, hikariDataSource0.loginTimeout);
      
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      hikariDataSource0.setPoolName(string0);
      assertNotSame(string0, string1);
      assertEquals(5000L, hikariDataSource0.getConnectionTimeout());
      assertFalse(hikariDataSource0.isInitializationFailFast());
      assertFalse(hikariDataSource0.isRegisterMbeans());
      assertFalse(hikariDataSource0.getisShutdown());
      assertEquals(0L, hikariDataSource0.getLeakDetectionThreshold());
      assertEquals(0, hikariDataSource0.getAcquireIncrement());
      assertNull(hikariDataSource0.getCatalog());
      assertNull(hikariDataSource0.getConnectionInitSql());
      assertEquals("(I)Ljava/lang/String;", hikariDataSource0.getPoolName());
      assertEquals(60, hikariDataSource0.getMaximumPoolSize());
      assertNull(hikariDataSource0.getConnectionCustomizerClassName());
      assertTrue(hikariDataSource0.isJdbc4ConnectionTest());
      assertTrue(hikariDataSource0.isAutoCommit());
      assertEquals(3, hikariDataSource0.getAcquireRetries());
      assertEquals(0L, hikariDataSource0.getAcquireRetryDelay());
      assertNull(hikariDataSource0.getDataSourceClassName());
      assertEquals(10, hikariDataSource0.getMinimumPoolSize());
      assertEquals((-1), hikariDataSource0.getTransactionIsolation());
      assertEquals(0, hikariDataSource0.getLoginTimeout());
      assertNull(hikariDataSource0.getConnectionTestQuery());
      assertEquals(1800000L, hikariDataSource0.getMaxLifetime());
      assertEquals(600000L, hikariDataSource0.getIdleTimeout());
      assertFalse(string0.equals((Object)string1));
      assertFalse(hikariDataSource0.isShutdown);
      assertEquals(0, hikariDataSource0.loginTimeout);
      
      EvoSuiteFile evoSuiteFile0 = null;
      boolean boolean0 = FileSystemHandling.createFolder(evoSuiteFile0);
      assertFalse(boolean0);
      
      hikariConfig0.setIdleTimeout(hikariDataSource0.loginTimeout);
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals("(I)Ljava/lang/String;", hikariConfig0.getConnectionCustomizerClassName());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(0L, hikariConfig0.getIdleTimeout());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(5000L, hikariDataSource0.getConnectionTimeout());
      assertFalse(hikariDataSource0.isInitializationFailFast());
      assertFalse(hikariDataSource0.isRegisterMbeans());
      assertFalse(hikariDataSource0.getisShutdown());
      assertEquals(0L, hikariDataSource0.getLeakDetectionThreshold());
      assertEquals(0, hikariDataSource0.getAcquireIncrement());
      assertNull(hikariDataSource0.getCatalog());
      assertNull(hikariDataSource0.getConnectionInitSql());
      assertEquals("(I)Ljava/lang/String;", hikariDataSource0.getPoolName());
      assertEquals(60, hikariDataSource0.getMaximumPoolSize());
      assertNull(hikariDataSource0.getConnectionCustomizerClassName());
      assertTrue(hikariDataSource0.isJdbc4ConnectionTest());
      assertTrue(hikariDataSource0.isAutoCommit());
      assertEquals(3, hikariDataSource0.getAcquireRetries());
      assertEquals(0L, hikariDataSource0.getAcquireRetryDelay());
      assertNull(hikariDataSource0.getDataSourceClassName());
      assertEquals(10, hikariDataSource0.getMinimumPoolSize());
      assertEquals((-1), hikariDataSource0.getTransactionIsolation());
      assertEquals(0, hikariDataSource0.getLoginTimeout());
      assertNull(hikariDataSource0.getConnectionTestQuery());
      assertEquals(1800000L, hikariDataSource0.getMaxLifetime());
      assertEquals(600000L, hikariDataSource0.getIdleTimeout());
      assertFalse(hikariDataSource0.isShutdown);
      assertEquals(0, hikariDataSource0.loginTimeout);
      
      String string2 = "H5PCLlS:sDwB9";
      hikariConfig0.setConnectionTestQuery(string2);
      assertNotSame(string2, string1);
      assertNotSame(string2, string0);
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals("(I)Ljava/lang/String;", hikariConfig0.getConnectionCustomizerClassName());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals("H5PCLlS:sDwB9", hikariConfig0.getConnectionTestQuery());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(0L, hikariConfig0.getIdleTimeout());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      
      hikariConfig0.setDataSource(hikariDataSource0);
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals("(I)Ljava/lang/String;", hikariConfig0.getConnectionCustomizerClassName());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals("H5PCLlS:sDwB9", hikariConfig0.getConnectionTestQuery());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(0L, hikariConfig0.getIdleTimeout());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(5000L, hikariDataSource0.getConnectionTimeout());
      assertFalse(hikariDataSource0.isInitializationFailFast());
      assertFalse(hikariDataSource0.isRegisterMbeans());
      assertFalse(hikariDataSource0.getisShutdown());
      assertEquals(0L, hikariDataSource0.getLeakDetectionThreshold());
      assertEquals(0, hikariDataSource0.getAcquireIncrement());
      assertNull(hikariDataSource0.getCatalog());
      assertNull(hikariDataSource0.getConnectionInitSql());
      assertEquals("(I)Ljava/lang/String;", hikariDataSource0.getPoolName());
      assertEquals(60, hikariDataSource0.getMaximumPoolSize());
      assertNull(hikariDataSource0.getConnectionCustomizerClassName());
      assertTrue(hikariDataSource0.isJdbc4ConnectionTest());
      assertTrue(hikariDataSource0.isAutoCommit());
      assertEquals(3, hikariDataSource0.getAcquireRetries());
      assertEquals(0L, hikariDataSource0.getAcquireRetryDelay());
      assertNull(hikariDataSource0.getDataSourceClassName());
      assertEquals(10, hikariDataSource0.getMinimumPoolSize());
      assertEquals((-1), hikariDataSource0.getTransactionIsolation());
      assertEquals(0, hikariDataSource0.getLoginTimeout());
      assertNull(hikariDataSource0.getConnectionTestQuery());
      assertEquals(1800000L, hikariDataSource0.getMaxLifetime());
      assertEquals(600000L, hikariDataSource0.getIdleTimeout());
      assertFalse(hikariDataSource0.isShutdown);
      assertEquals(0, hikariDataSource0.loginTimeout);
      
      String string3 = "<h*<U31q8JLA&<";
      hikariConfig0.setDataSourceClassName(string3);
      assertNotSame(string3, string0);
      assertNotSame(string3, string2);
      assertNotSame(string3, string1);
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals("(I)Ljava/lang/String;", hikariConfig0.getConnectionCustomizerClassName());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals("H5PCLlS:sDwB9", hikariConfig0.getConnectionTestQuery());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertEquals("<h*<U31q8JLA&<", hikariConfig0.getDataSourceClassName());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(0L, hikariConfig0.getIdleTimeout());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string1));
      
      HikariPool hikariPool0 = new HikariPool(hikariConfig0);
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertTrue(hikariConfig0.isAutoCommit());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals("H5PCLlS:sDwB9", hikariConfig0.getConnectionTestQuery());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertEquals("<h*<U31q8JLA&<", hikariConfig0.getDataSourceClassName());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(0L, hikariConfig0.getIdleTimeout());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertNull(hikariPool0.getcatalog());
      assertTrue(hikariPool0.getisAutoCommit());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertEquals(10, hikariPool0.getTotalConnections());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertFalse(hikariPool0.getshutdown());
      assertFalse(hikariPool0.getdebug());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertNotNull(hikariPool0);
      assertFalse(hikariPool0.shutdown);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertFalse(hikariPool0.debug);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertTrue(hikariPool0.isAutoCommit);
      
      ConcurrentBag<IHikariConnectionProxy> concurrentBag0 = hikariPool0.getidleConnectionBag();
      assertEquals(1, concurrentBag0.getSTATE_IN_USE());
      assertEquals(0, concurrentBag0.getSTATE_NOT_IN_USE());
      assertEquals((-1), concurrentBag0.getSTATE_REMOVED());
      assertEquals((-2), concurrentBag0.getSTATE_RESERVED());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertTrue(hikariConfig0.isAutoCommit());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals("H5PCLlS:sDwB9", hikariConfig0.getConnectionTestQuery());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertEquals("<h*<U31q8JLA&<", hikariConfig0.getDataSourceClassName());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(0L, hikariConfig0.getIdleTimeout());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertNull(hikariPool0.getcatalog());
      assertTrue(hikariPool0.getisAutoCommit());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertEquals(10, hikariPool0.getTotalConnections());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertFalse(hikariPool0.getshutdown());
      assertFalse(hikariPool0.getdebug());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertNotNull(concurrentBag0);
      assertEquals((-1), ConcurrentBag.STATE_REMOVED);
      assertEquals(0, ConcurrentBag.STATE_NOT_IN_USE);
      assertEquals(1, ConcurrentBag.STATE_IN_USE);
      assertEquals((-2), ConcurrentBag.STATE_RESERVED);
      assertFalse(hikariPool0.shutdown);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertFalse(hikariPool0.debug);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertTrue(hikariPool0.isAutoCommit);
  }

  @Test(timeout = 11000)
  public void test42()  throws Throwable  {
      HikariConfig hikariConfig0 = new HikariConfig();
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertNotNull(hikariConfig0);
      
      HikariDataSource hikariDataSource0 = new HikariDataSource();
      assertEquals(1800000L, hikariDataSource0.getMaxLifetime());
      assertEquals(600000L, hikariDataSource0.getIdleTimeout());
      assertEquals(0L, hikariDataSource0.getLeakDetectionThreshold());
      assertEquals(3, hikariDataSource0.getAcquireRetries());
      assertEquals(0, hikariDataSource0.getAcquireIncrement());
      assertEquals(0L, hikariDataSource0.getAcquireRetryDelay());
      assertEquals(0, hikariDataSource0.getLoginTimeout());
      assertNull(hikariDataSource0.getConnectionTestQuery());
      assertFalse(hikariDataSource0.isInitializationFailFast());
      assertNull(hikariDataSource0.getDataSourceClassName());
      assertTrue(hikariDataSource0.isJdbc4ConnectionTest());
      assertEquals(5000L, hikariDataSource0.getConnectionTimeout());
      assertEquals("HikariPool-1", hikariDataSource0.getPoolName());
      assertEquals(60, hikariDataSource0.getMaximumPoolSize());
      assertEquals(10, hikariDataSource0.getMinimumPoolSize());
      assertNull(hikariDataSource0.getCatalog());
      assertEquals((-1), hikariDataSource0.getTransactionIsolation());
      assertNull(hikariDataSource0.getConnectionInitSql());
      assertTrue(hikariDataSource0.isAutoCommit());
      assertFalse(hikariDataSource0.isRegisterMbeans());
      assertNull(hikariDataSource0.getConnectionCustomizerClassName());
      assertFalse(hikariDataSource0.getisShutdown());
      assertNotNull(hikariDataSource0);
      assertEquals(0, hikariDataSource0.loginTimeout);
      assertFalse(hikariDataSource0.isShutdown);
      
      hikariConfig0.setDataSource(hikariDataSource0);
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(1800000L, hikariDataSource0.getMaxLifetime());
      assertEquals(600000L, hikariDataSource0.getIdleTimeout());
      assertEquals(0L, hikariDataSource0.getLeakDetectionThreshold());
      assertEquals(3, hikariDataSource0.getAcquireRetries());
      assertEquals(0, hikariDataSource0.getAcquireIncrement());
      assertEquals(0L, hikariDataSource0.getAcquireRetryDelay());
      assertEquals(0, hikariDataSource0.getLoginTimeout());
      assertNull(hikariDataSource0.getConnectionTestQuery());
      assertFalse(hikariDataSource0.isInitializationFailFast());
      assertNull(hikariDataSource0.getDataSourceClassName());
      assertTrue(hikariDataSource0.isJdbc4ConnectionTest());
      assertEquals(5000L, hikariDataSource0.getConnectionTimeout());
      assertEquals("HikariPool-1", hikariDataSource0.getPoolName());
      assertEquals(60, hikariDataSource0.getMaximumPoolSize());
      assertEquals(10, hikariDataSource0.getMinimumPoolSize());
      assertNull(hikariDataSource0.getCatalog());
      assertEquals((-1), hikariDataSource0.getTransactionIsolation());
      assertNull(hikariDataSource0.getConnectionInitSql());
      assertTrue(hikariDataSource0.isAutoCommit());
      assertFalse(hikariDataSource0.isRegisterMbeans());
      assertNull(hikariDataSource0.getConnectionCustomizerClassName());
      assertFalse(hikariDataSource0.getisShutdown());
      assertEquals(0, hikariDataSource0.loginTimeout);
      assertFalse(hikariDataSource0.isShutdown);
      
      String string0 = "<h*3tU31q8JLA&<";
      hikariConfig0.setDataSourceClassName(string0);
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getCatalog());
      assertEquals("<h*3tU31q8JLA&<", hikariConfig0.getDataSourceClassName());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      
      HikariPool hikariPool0 = new HikariPool(hikariConfig0);
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getCatalog());
      assertEquals("<h*3tU31q8JLA&<", hikariConfig0.getDataSourceClassName());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertFalse(hikariPool0.getshutdown());
      assertFalse(hikariPool0.getdebug());
      assertNull(hikariPool0.getcatalog());
      assertEquals(10, hikariPool0.getTotalConnections());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertTrue(hikariPool0.getisAutoCommit());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertNotNull(hikariPool0);
      assertTrue(hikariPool0.isAutoCommit);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertFalse(hikariPool0.shutdown);
      assertFalse(hikariPool0.debug);
      
      String[] stringArray0 = new String[9];
      stringArray0[0] = hikariPool0.catalog;
      stringArray0[3] = hikariPool0.catalog;
      stringArray0[5] = hikariPool0.catalog;
      stringArray0[6] = hikariPool0.catalog;
      stringArray0[7] = hikariPool0.catalog;
      stringArray0[8] = string0;
      hikariPool0.logPoolState(stringArray0);
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getCatalog());
      assertEquals("<h*3tU31q8JLA&<", hikariConfig0.getDataSourceClassName());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertFalse(hikariPool0.getshutdown());
      assertFalse(hikariPool0.getdebug());
      assertNull(hikariPool0.getcatalog());
      assertEquals(10, hikariPool0.getTotalConnections());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertTrue(hikariPool0.getisAutoCommit());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertEquals(9, stringArray0.length);
      assertTrue(hikariPool0.isAutoCommit);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertFalse(hikariPool0.shutdown);
      assertFalse(hikariPool0.debug);
      
      boolean boolean0 = hikariPool0.getjdbc4ConnectionTest();
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getCatalog());
      assertEquals("<h*3tU31q8JLA&<", hikariConfig0.getDataSourceClassName());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertFalse(hikariPool0.getshutdown());
      assertFalse(hikariPool0.getdebug());
      assertNull(hikariPool0.getcatalog());
      assertEquals(10, hikariPool0.getTotalConnections());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertTrue(hikariPool0.getisAutoCommit());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertTrue(boolean0);
      assertTrue(hikariPool0.isAutoCommit);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertFalse(hikariPool0.shutdown);
      assertFalse(hikariPool0.debug);
      
      String string1 = hikariPool0.toString();
      assertNotSame(string1, string0);
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getCatalog());
      assertEquals("<h*3tU31q8JLA&<", hikariConfig0.getDataSourceClassName());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertFalse(hikariPool0.getshutdown());
      assertFalse(hikariPool0.getdebug());
      assertNull(hikariPool0.getcatalog());
      assertEquals(10, hikariPool0.getTotalConnections());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertTrue(hikariPool0.getisAutoCommit());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("HikariPool-0", string1);
      assertTrue(hikariPool0.isAutoCommit);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertFalse(hikariPool0.shutdown);
      assertFalse(hikariPool0.debug);
  }

  @Test(timeout = 11000)
  public void test43()  throws Throwable  {
      HikariConfig hikariConfig0 = new HikariConfig();
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isAutoCommit());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertNotNull(hikariConfig0);
      
      String string0 = "z~NH}l5*1f$G/";
      hikariConfig0.setCatalog(string0);
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isAutoCommit());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      
      HikariDataSource hikariDataSource0 = new HikariDataSource();
      assertEquals(0L, hikariDataSource0.getLeakDetectionThreshold());
      assertEquals(3, hikariDataSource0.getAcquireRetries());
      assertEquals(0, hikariDataSource0.getAcquireIncrement());
      assertNull(hikariDataSource0.getConnectionInitSql());
      assertEquals((-1), hikariDataSource0.getTransactionIsolation());
      assertNull(hikariDataSource0.getConnectionTestQuery());
      assertEquals(1800000L, hikariDataSource0.getMaxLifetime());
      assertEquals(600000L, hikariDataSource0.getIdleTimeout());
      assertEquals(60, hikariDataSource0.getMaximumPoolSize());
      assertTrue(hikariDataSource0.isJdbc4ConnectionTest());
      assertEquals(5000L, hikariDataSource0.getConnectionTimeout());
      assertFalse(hikariDataSource0.isInitializationFailFast());
      assertEquals(0L, hikariDataSource0.getAcquireRetryDelay());
      assertEquals(0, hikariDataSource0.getLoginTimeout());
      assertEquals(10, hikariDataSource0.getMinimumPoolSize());
      assertNull(hikariDataSource0.getCatalog());
      assertNull(hikariDataSource0.getDataSourceClassName());
      assertEquals("HikariPool-1", hikariDataSource0.getPoolName());
      assertFalse(hikariDataSource0.isRegisterMbeans());
      assertNull(hikariDataSource0.getConnectionCustomizerClassName());
      assertFalse(hikariDataSource0.getisShutdown());
      assertTrue(hikariDataSource0.isAutoCommit());
      assertNotNull(hikariDataSource0);
      assertEquals(0, hikariDataSource0.loginTimeout);
      assertFalse(hikariDataSource0.isShutdown);
      
      hikariConfig0.setDataSource(hikariDataSource0);
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isAutoCommit());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals(0L, hikariDataSource0.getLeakDetectionThreshold());
      assertEquals(3, hikariDataSource0.getAcquireRetries());
      assertEquals(0, hikariDataSource0.getAcquireIncrement());
      assertNull(hikariDataSource0.getConnectionInitSql());
      assertEquals((-1), hikariDataSource0.getTransactionIsolation());
      assertNull(hikariDataSource0.getConnectionTestQuery());
      assertEquals(1800000L, hikariDataSource0.getMaxLifetime());
      assertEquals(600000L, hikariDataSource0.getIdleTimeout());
      assertEquals(60, hikariDataSource0.getMaximumPoolSize());
      assertTrue(hikariDataSource0.isJdbc4ConnectionTest());
      assertEquals(5000L, hikariDataSource0.getConnectionTimeout());
      assertFalse(hikariDataSource0.isInitializationFailFast());
      assertEquals(0L, hikariDataSource0.getAcquireRetryDelay());
      assertEquals(0, hikariDataSource0.getLoginTimeout());
      assertEquals(10, hikariDataSource0.getMinimumPoolSize());
      assertNull(hikariDataSource0.getCatalog());
      assertNull(hikariDataSource0.getDataSourceClassName());
      assertEquals("HikariPool-1", hikariDataSource0.getPoolName());
      assertFalse(hikariDataSource0.isRegisterMbeans());
      assertNull(hikariDataSource0.getConnectionCustomizerClassName());
      assertFalse(hikariDataSource0.getisShutdown());
      assertTrue(hikariDataSource0.isAutoCommit());
      assertEquals(0, hikariDataSource0.loginTimeout);
      assertFalse(hikariDataSource0.isShutdown);
      
      String string1 = "<h*3tU31q8JLA&<";
      hikariConfig0.setDataSourceClassName(string1);
      assertNotSame(string1, string0);
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals("<h*3tU31q8JLA&<", hikariConfig0.getDataSourceClassName());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertFalse(string1.equals((Object)string0));
      
      HikariPool hikariPool0 = new HikariPool(hikariConfig0);
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals("<h*3tU31q8JLA&<", hikariConfig0.getDataSourceClassName());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals(10, hikariPool0.getTotalConnections());
      assertFalse(hikariPool0.getdebug());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertTrue(hikariPool0.getisAutoCommit());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertEquals("z~NH}l5*1f$G/", hikariPool0.getcatalog());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertFalse(hikariPool0.getshutdown());
      assertNotNull(hikariPool0);
      assertTrue(hikariPool0.isAutoCommit);
      assertFalse(hikariPool0.debug);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertFalse(hikariPool0.shutdown);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertFalse(hikariPool0.isRegisteredMbeans);
      
      IHikariConnectionProxy iHikariConnectionProxy0 = null;
      hikariPool0.bagIsEmpty();
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals("<h*3tU31q8JLA&<", hikariConfig0.getDataSourceClassName());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertFalse(hikariPool0.getdebug());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertEquals(11, hikariPool0.getTotalConnections());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertTrue(hikariPool0.getisAutoCommit());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertEquals("z~NH}l5*1f$G/", hikariPool0.getcatalog());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertFalse(hikariPool0.getshutdown());
      assertTrue(hikariPool0.isAutoCommit);
      assertFalse(hikariPool0.debug);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertFalse(hikariPool0.shutdown);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertFalse(hikariPool0.isRegisteredMbeans);
      
      hikariPool0.shutdown();
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals("<h*3tU31q8JLA&<", hikariConfig0.getDataSourceClassName());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertFalse(hikariPool0.getdebug());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertEquals(11, hikariPool0.getTotalConnections());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertTrue(hikariPool0.getisAutoCommit());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertTrue(hikariPool0.getshutdown());
      assertEquals("z~NH}l5*1f$G/", hikariPool0.getcatalog());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertTrue(hikariPool0.isAutoCommit);
      assertFalse(hikariPool0.debug);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertTrue(hikariPool0.shutdown);
      assertFalse(hikariPool0.isRegisteredMbeans);
      
      long long0 = 959L;
      boolean boolean0 = hikariPool0.getdebug();
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals("<h*3tU31q8JLA&<", hikariConfig0.getDataSourceClassName());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertFalse(hikariPool0.getdebug());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertEquals(11, hikariPool0.getTotalConnections());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertTrue(hikariPool0.getisAutoCommit());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertTrue(hikariPool0.getshutdown());
      assertEquals("z~NH}l5*1f$G/", hikariPool0.getcatalog());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertFalse(boolean0);
      assertTrue(hikariPool0.isAutoCommit);
      assertFalse(hikariPool0.debug);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertTrue(hikariPool0.shutdown);
      assertFalse(hikariPool0.isRegisteredMbeans);
      
      // Undeclared exception!
      try { 
        hikariPool0.isConnectionAlive(iHikariConnectionProxy0, long0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.zaxxer.hikari.HikariPool", e);
      }
  }

  @Test(timeout = 11000)
  public void test44()  throws Throwable  {
      HikariConfig hikariConfig0 = new HikariConfig();
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertTrue(hikariConfig0.isAutoCommit());
      assertNotNull(hikariConfig0);
      
      String string0 = "Ho";
      HikariDataSource hikariDataSource0 = new HikariDataSource();
      assertNull(hikariDataSource0.getCatalog());
      assertFalse(hikariDataSource0.isRegisterMbeans());
      assertEquals(0, hikariDataSource0.getLoginTimeout());
      assertFalse(hikariDataSource0.isInitializationFailFast());
      assertEquals(0L, hikariDataSource0.getAcquireRetryDelay());
      assertEquals(5000L, hikariDataSource0.getConnectionTimeout());
      assertFalse(hikariDataSource0.getisShutdown());
      assertNull(hikariDataSource0.getConnectionInitSql());
      assertEquals(0L, hikariDataSource0.getLeakDetectionThreshold());
      assertEquals(0, hikariDataSource0.getAcquireIncrement());
      assertEquals(60, hikariDataSource0.getMaximumPoolSize());
      assertTrue(hikariDataSource0.isAutoCommit());
      assertTrue(hikariDataSource0.isJdbc4ConnectionTest());
      assertNull(hikariDataSource0.getConnectionCustomizerClassName());
      assertEquals((-1), hikariDataSource0.getTransactionIsolation());
      assertEquals(1800000L, hikariDataSource0.getMaxLifetime());
      assertEquals(600000L, hikariDataSource0.getIdleTimeout());
      assertEquals(3, hikariDataSource0.getAcquireRetries());
      assertNull(hikariDataSource0.getDataSourceClassName());
      assertEquals(10, hikariDataSource0.getMinimumPoolSize());
      assertNull(hikariDataSource0.getConnectionTestQuery());
      assertEquals("HikariPool-1", hikariDataSource0.getPoolName());
      assertNotNull(hikariDataSource0);
      assertEquals(0, hikariDataSource0.loginTimeout);
      assertFalse(hikariDataSource0.isShutdown);
      
      hikariConfig0.setDataSource(hikariDataSource0);
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertTrue(hikariConfig0.isAutoCommit());
      assertNull(hikariDataSource0.getCatalog());
      assertFalse(hikariDataSource0.isRegisterMbeans());
      assertEquals(0, hikariDataSource0.getLoginTimeout());
      assertFalse(hikariDataSource0.isInitializationFailFast());
      assertEquals(0L, hikariDataSource0.getAcquireRetryDelay());
      assertEquals(5000L, hikariDataSource0.getConnectionTimeout());
      assertFalse(hikariDataSource0.getisShutdown());
      assertNull(hikariDataSource0.getConnectionInitSql());
      assertEquals(0L, hikariDataSource0.getLeakDetectionThreshold());
      assertEquals(0, hikariDataSource0.getAcquireIncrement());
      assertEquals(60, hikariDataSource0.getMaximumPoolSize());
      assertTrue(hikariDataSource0.isAutoCommit());
      assertTrue(hikariDataSource0.isJdbc4ConnectionTest());
      assertNull(hikariDataSource0.getConnectionCustomizerClassName());
      assertEquals((-1), hikariDataSource0.getTransactionIsolation());
      assertEquals(1800000L, hikariDataSource0.getMaxLifetime());
      assertEquals(600000L, hikariDataSource0.getIdleTimeout());
      assertEquals(3, hikariDataSource0.getAcquireRetries());
      assertNull(hikariDataSource0.getDataSourceClassName());
      assertEquals(10, hikariDataSource0.getMinimumPoolSize());
      assertNull(hikariDataSource0.getConnectionTestQuery());
      assertEquals("HikariPool-1", hikariDataSource0.getPoolName());
      assertEquals(0, hikariDataSource0.loginTimeout);
      assertFalse(hikariDataSource0.isShutdown);
      
      hikariConfig0.setDataSourceClassName(string0);
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals("Ho", hikariConfig0.getDataSourceClassName());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertTrue(hikariConfig0.isAutoCommit());
      
      HikariPool hikariPool0 = new HikariPool(hikariConfig0);
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals("Ho", hikariConfig0.getDataSourceClassName());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertTrue(hikariConfig0.isAutoCommit());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertNull(hikariPool0.getcatalog());
      assertFalse(hikariPool0.getshutdown());
      assertFalse(hikariPool0.getdebug());
      assertEquals(10, hikariPool0.getTotalConnections());
      assertTrue(hikariPool0.getisAutoCommit());
      assertNotNull(hikariPool0);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertTrue(hikariPool0.isAutoCommit);
      assertFalse(hikariPool0.debug);
      assertFalse(hikariPool0.shutdown);
      assertEquals((-1), hikariPool0.transactionIsolation);
      
      int int0 = 4112;
      hikariPool0.settransactionIsolation(int0);
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals("Ho", hikariConfig0.getDataSourceClassName());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals(4112, hikariPool0.gettransactionIsolation());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertNull(hikariPool0.getcatalog());
      assertFalse(hikariPool0.getshutdown());
      assertFalse(hikariPool0.getdebug());
      assertEquals(10, hikariPool0.getTotalConnections());
      assertTrue(hikariPool0.getisAutoCommit());
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertTrue(hikariPool0.isAutoCommit);
      assertFalse(hikariPool0.debug);
      assertEquals(4112, hikariPool0.transactionIsolation);
      assertFalse(hikariPool0.shutdown);
      
      boolean boolean0 = hikariPool0.getjdbc4ConnectionTest();
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals("Ho", hikariConfig0.getDataSourceClassName());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals(4112, hikariPool0.gettransactionIsolation());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertNull(hikariPool0.getcatalog());
      assertFalse(hikariPool0.getshutdown());
      assertFalse(hikariPool0.getdebug());
      assertEquals(10, hikariPool0.getTotalConnections());
      assertTrue(hikariPool0.getisAutoCommit());
      assertTrue(boolean0);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertTrue(hikariPool0.isAutoCommit);
      assertFalse(hikariPool0.debug);
      assertEquals(4112, hikariPool0.transactionIsolation);
      assertFalse(hikariPool0.shutdown);
  }

  @Test(timeout = 11000)
  public void test45()  throws Throwable  {
      HikariConfig hikariConfig0 = new HikariConfig();
      assertNull(hikariConfig0.getDataSourceClassName());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertTrue(hikariConfig0.isAutoCommit());
      assertNull(hikariConfig0.getCatalog());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertNotNull(hikariConfig0);
      
      String string0 = "z~NH}l5*1f$G/";
      hikariConfig0.setCatalog(string0);
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertTrue(hikariConfig0.isAutoCommit());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      
      HikariDataSource hikariDataSource0 = new HikariDataSource();
      assertEquals(60, hikariDataSource0.getMaximumPoolSize());
      assertTrue(hikariDataSource0.isAutoCommit());
      assertNull(hikariDataSource0.getConnectionCustomizerClassName());
      assertEquals("HikariPool-1", hikariDataSource0.getPoolName());
      assertNull(hikariDataSource0.getDataSourceClassName());
      assertNull(hikariDataSource0.getConnectionInitSql());
      assertEquals(3, hikariDataSource0.getAcquireRetries());
      assertNull(hikariDataSource0.getConnectionTestQuery());
      assertEquals((-1), hikariDataSource0.getTransactionIsolation());
      assertEquals(10, hikariDataSource0.getMinimumPoolSize());
      assertFalse(hikariDataSource0.isRegisterMbeans());
      assertFalse(hikariDataSource0.getisShutdown());
      assertNull(hikariDataSource0.getCatalog());
      assertEquals(0, hikariDataSource0.getLoginTimeout());
      assertEquals(1800000L, hikariDataSource0.getMaxLifetime());
      assertEquals(600000L, hikariDataSource0.getIdleTimeout());
      assertFalse(hikariDataSource0.isInitializationFailFast());
      assertEquals(0L, hikariDataSource0.getLeakDetectionThreshold());
      assertEquals(0, hikariDataSource0.getAcquireIncrement());
      assertEquals(0L, hikariDataSource0.getAcquireRetryDelay());
      assertEquals(5000L, hikariDataSource0.getConnectionTimeout());
      assertTrue(hikariDataSource0.isJdbc4ConnectionTest());
      assertNotNull(hikariDataSource0);
      assertFalse(hikariDataSource0.isShutdown);
      assertEquals(0, hikariDataSource0.loginTimeout);
      
      boolean boolean0 = false;
      hikariDataSource0.setAutoCommit(boolean0);
      assertEquals(60, hikariDataSource0.getMaximumPoolSize());
      assertNull(hikariDataSource0.getConnectionCustomizerClassName());
      assertEquals("HikariPool-1", hikariDataSource0.getPoolName());
      assertNull(hikariDataSource0.getDataSourceClassName());
      assertNull(hikariDataSource0.getConnectionInitSql());
      assertEquals(3, hikariDataSource0.getAcquireRetries());
      assertNull(hikariDataSource0.getConnectionTestQuery());
      assertEquals((-1), hikariDataSource0.getTransactionIsolation());
      assertFalse(hikariDataSource0.isAutoCommit());
      assertEquals(10, hikariDataSource0.getMinimumPoolSize());
      assertFalse(hikariDataSource0.isRegisterMbeans());
      assertFalse(hikariDataSource0.getisShutdown());
      assertNull(hikariDataSource0.getCatalog());
      assertEquals(0, hikariDataSource0.getLoginTimeout());
      assertEquals(1800000L, hikariDataSource0.getMaxLifetime());
      assertEquals(600000L, hikariDataSource0.getIdleTimeout());
      assertFalse(hikariDataSource0.isInitializationFailFast());
      assertEquals(0L, hikariDataSource0.getLeakDetectionThreshold());
      assertEquals(0, hikariDataSource0.getAcquireIncrement());
      assertEquals(0L, hikariDataSource0.getAcquireRetryDelay());
      assertEquals(5000L, hikariDataSource0.getConnectionTimeout());
      assertTrue(hikariDataSource0.isJdbc4ConnectionTest());
      assertFalse(hikariDataSource0.isShutdown);
      assertEquals(0, hikariDataSource0.loginTimeout);
      
      hikariConfig0.setDataSource(hikariDataSource0);
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertTrue(hikariConfig0.isAutoCommit());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(60, hikariDataSource0.getMaximumPoolSize());
      assertNull(hikariDataSource0.getConnectionCustomizerClassName());
      assertEquals("HikariPool-1", hikariDataSource0.getPoolName());
      assertNull(hikariDataSource0.getDataSourceClassName());
      assertNull(hikariDataSource0.getConnectionInitSql());
      assertEquals(3, hikariDataSource0.getAcquireRetries());
      assertNull(hikariDataSource0.getConnectionTestQuery());
      assertEquals((-1), hikariDataSource0.getTransactionIsolation());
      assertFalse(hikariDataSource0.isAutoCommit());
      assertEquals(10, hikariDataSource0.getMinimumPoolSize());
      assertFalse(hikariDataSource0.isRegisterMbeans());
      assertFalse(hikariDataSource0.getisShutdown());
      assertNull(hikariDataSource0.getCatalog());
      assertEquals(0, hikariDataSource0.getLoginTimeout());
      assertEquals(1800000L, hikariDataSource0.getMaxLifetime());
      assertEquals(600000L, hikariDataSource0.getIdleTimeout());
      assertFalse(hikariDataSource0.isInitializationFailFast());
      assertEquals(0L, hikariDataSource0.getLeakDetectionThreshold());
      assertEquals(0, hikariDataSource0.getAcquireIncrement());
      assertEquals(0L, hikariDataSource0.getAcquireRetryDelay());
      assertEquals(5000L, hikariDataSource0.getConnectionTimeout());
      assertTrue(hikariDataSource0.isJdbc4ConnectionTest());
      assertFalse(hikariDataSource0.isShutdown);
      assertEquals(0, hikariDataSource0.loginTimeout);
      
      String string1 = "<h*3tU31q8JLA&<";
      HikariPool hikariPool0 = new HikariPool(hikariConfig0);
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertTrue(hikariConfig0.isAutoCommit());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertFalse(hikariPool0.getdebug());
      assertFalse(hikariPool0.getshutdown());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertEquals("z~NH}l5*1f$G/", hikariPool0.getcatalog());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertTrue(hikariPool0.getisAutoCommit());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertEquals(10, hikariPool0.getTotalConnections());
      assertNotNull(hikariPool0);
      assertTrue(hikariPool0.isAutoCommit);
      assertFalse(hikariPool0.debug);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertFalse(hikariPool0.shutdown);
      
      hikariPool0.bagIsEmpty();
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertTrue(hikariConfig0.isAutoCommit());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertFalse(hikariPool0.getdebug());
      assertFalse(hikariPool0.getshutdown());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertEquals("z~NH}l5*1f$G/", hikariPool0.getcatalog());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertTrue(hikariPool0.getisAutoCommit());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertEquals(11, hikariPool0.getTotalConnections());
      assertTrue(hikariPool0.isAutoCommit);
      assertFalse(hikariPool0.debug);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertFalse(hikariPool0.shutdown);
      
      hikariPool0.shutdown();
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertTrue(hikariConfig0.isAutoCommit());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertFalse(hikariPool0.getdebug());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertTrue(hikariPool0.getshutdown());
      assertEquals("z~NH}l5*1f$G/", hikariPool0.getcatalog());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertTrue(hikariPool0.getisAutoCommit());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertEquals(11, hikariPool0.getTotalConnections());
      assertTrue(hikariPool0.isAutoCommit);
      assertFalse(hikariPool0.debug);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertTrue(hikariPool0.shutdown);
      assertFalse(hikariPool0.isRegisteredMbeans);
      
      long long0 = 959L;
      boolean boolean1 = hikariPool0.getshutdown();
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertTrue(hikariConfig0.isAutoCommit());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertFalse(hikariPool0.getdebug());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertTrue(hikariPool0.getshutdown());
      assertEquals("z~NH}l5*1f$G/", hikariPool0.getcatalog());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertTrue(hikariPool0.getisAutoCommit());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertEquals(11, hikariPool0.getTotalConnections());
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
      assertTrue(hikariPool0.isAutoCommit);
      assertFalse(hikariPool0.debug);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertTrue(hikariPool0.shutdown);
      assertFalse(hikariPool0.isRegisteredMbeans);
      
      int int0 = hikariPool0.getActiveConnections();
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertTrue(hikariConfig0.isAutoCommit());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertFalse(hikariPool0.getdebug());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertTrue(hikariPool0.getshutdown());
      assertEquals("z~NH}l5*1f$G/", hikariPool0.getcatalog());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertTrue(hikariPool0.getisAutoCommit());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertEquals(11, hikariPool0.getTotalConnections());
      assertEquals(11, int0);
      assertTrue(hikariPool0.isAutoCommit);
      assertFalse(hikariPool0.debug);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertTrue(hikariPool0.shutdown);
      assertFalse(hikariPool0.isRegisteredMbeans);
      
      boolean boolean2 = hikariPool0.getjdbc4ConnectionTest();
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertTrue(hikariConfig0.isAutoCommit());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertFalse(hikariPool0.getdebug());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertTrue(hikariPool0.getshutdown());
      assertEquals("z~NH}l5*1f$G/", hikariPool0.getcatalog());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertTrue(hikariPool0.getisAutoCommit());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertEquals(11, hikariPool0.getTotalConnections());
      assertFalse(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2);
      assertTrue(hikariPool0.isAutoCommit);
      assertFalse(hikariPool0.debug);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertTrue(hikariPool0.shutdown);
      assertFalse(hikariPool0.isRegisteredMbeans);
      
      boolean boolean3 = hikariPool0.getisAutoCommit();
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertTrue(hikariConfig0.isAutoCommit());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertFalse(hikariPool0.getdebug());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertTrue(hikariPool0.getshutdown());
      assertEquals("z~NH}l5*1f$G/", hikariPool0.getcatalog());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertTrue(hikariPool0.getisAutoCommit());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertEquals(11, hikariPool0.getTotalConnections());
      assertFalse(boolean3 == boolean0);
      assertTrue(boolean3 == boolean2);
      assertTrue(boolean3 == boolean1);
      assertTrue(boolean3);
      assertTrue(hikariPool0.isAutoCommit);
      assertFalse(hikariPool0.debug);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertTrue(hikariPool0.shutdown);
      assertFalse(hikariPool0.isRegisteredMbeans);
  }

  @Test(timeout = 11000)
  public void test46()  throws Throwable  {
      HikariConfig hikariConfig0 = new HikariConfig();
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertNotNull(hikariConfig0);
      
      String string0 = "z~NH}l5*1f$G/";
      hikariConfig0.setCatalog(string0);
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      
      HikariDataSource hikariDataSource0 = new HikariDataSource();
      assertNull(hikariDataSource0.getDataSourceClassName());
      assertEquals(0, hikariDataSource0.getLoginTimeout());
      assertNull(hikariDataSource0.getConnectionCustomizerClassName());
      assertNull(hikariDataSource0.getCatalog());
      assertEquals(5000L, hikariDataSource0.getConnectionTimeout());
      assertEquals(0L, hikariDataSource0.getAcquireRetryDelay());
      assertTrue(hikariDataSource0.isAutoCommit());
      assertEquals(10, hikariDataSource0.getMinimumPoolSize());
      assertEquals("HikariPool-1", hikariDataSource0.getPoolName());
      assertEquals((-1), hikariDataSource0.getTransactionIsolation());
      assertEquals(3, hikariDataSource0.getAcquireRetries());
      assertEquals(1800000L, hikariDataSource0.getMaxLifetime());
      assertEquals(600000L, hikariDataSource0.getIdleTimeout());
      assertNull(hikariDataSource0.getConnectionInitSql());
      assertFalse(hikariDataSource0.isRegisterMbeans());
      assertNull(hikariDataSource0.getConnectionTestQuery());
      assertFalse(hikariDataSource0.getisShutdown());
      assertFalse(hikariDataSource0.isInitializationFailFast());
      assertEquals(60, hikariDataSource0.getMaximumPoolSize());
      assertTrue(hikariDataSource0.isJdbc4ConnectionTest());
      assertEquals(0L, hikariDataSource0.getLeakDetectionThreshold());
      assertEquals(0, hikariDataSource0.getAcquireIncrement());
      assertNotNull(hikariDataSource0);
      assertFalse(hikariDataSource0.isShutdown);
      assertEquals(0, hikariDataSource0.loginTimeout);
      
      hikariConfig0.setDataSource(hikariDataSource0);
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertNull(hikariDataSource0.getDataSourceClassName());
      assertEquals(0, hikariDataSource0.getLoginTimeout());
      assertNull(hikariDataSource0.getConnectionCustomizerClassName());
      assertNull(hikariDataSource0.getCatalog());
      assertEquals(5000L, hikariDataSource0.getConnectionTimeout());
      assertEquals(0L, hikariDataSource0.getAcquireRetryDelay());
      assertTrue(hikariDataSource0.isAutoCommit());
      assertEquals(10, hikariDataSource0.getMinimumPoolSize());
      assertEquals("HikariPool-1", hikariDataSource0.getPoolName());
      assertEquals((-1), hikariDataSource0.getTransactionIsolation());
      assertEquals(3, hikariDataSource0.getAcquireRetries());
      assertEquals(1800000L, hikariDataSource0.getMaxLifetime());
      assertEquals(600000L, hikariDataSource0.getIdleTimeout());
      assertNull(hikariDataSource0.getConnectionInitSql());
      assertFalse(hikariDataSource0.isRegisterMbeans());
      assertNull(hikariDataSource0.getConnectionTestQuery());
      assertFalse(hikariDataSource0.getisShutdown());
      assertFalse(hikariDataSource0.isInitializationFailFast());
      assertEquals(60, hikariDataSource0.getMaximumPoolSize());
      assertTrue(hikariDataSource0.isJdbc4ConnectionTest());
      assertEquals(0L, hikariDataSource0.getLeakDetectionThreshold());
      assertEquals(0, hikariDataSource0.getAcquireIncrement());
      assertFalse(hikariDataSource0.isShutdown);
      assertEquals(0, hikariDataSource0.loginTimeout);
      
      String string1 = "<h*3tU31q8JLA&<";
      hikariConfig0.setDataSourceClassName(string1);
      assertNotSame(string1, string0);
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals("<h*3tU31q8JLA&<", hikariConfig0.getDataSourceClassName());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertFalse(string1.equals((Object)string0));
      
      HikariPool hikariPool0 = new HikariPool(hikariConfig0);
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals("<h*3tU31q8JLA&<", hikariConfig0.getDataSourceClassName());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertEquals(10, hikariPool0.getTotalConnections());
      assertFalse(hikariPool0.getdebug());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertFalse(hikariPool0.getshutdown());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertEquals("z~NH}l5*1f$G/", hikariPool0.getcatalog());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertTrue(hikariPool0.getisAutoCommit());
      assertNotNull(hikariPool0);
      assertTrue(hikariPool0.isAutoCommit);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertFalse(hikariPool0.shutdown);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertFalse(hikariPool0.debug);
      
      boolean boolean0 = hikariPool0.getjdbc4ConnectionTest();
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals("<h*3tU31q8JLA&<", hikariConfig0.getDataSourceClassName());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertEquals(10, hikariPool0.getTotalConnections());
      assertFalse(hikariPool0.getdebug());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertFalse(hikariPool0.getshutdown());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertEquals("z~NH}l5*1f$G/", hikariPool0.getcatalog());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertTrue(hikariPool0.getisAutoCommit());
      assertTrue(boolean0);
      assertTrue(hikariPool0.isAutoCommit);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertFalse(hikariPool0.shutdown);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertFalse(hikariPool0.debug);
      
      hikariPool0.setdebug(boolean0);
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals("<h*3tU31q8JLA&<", hikariConfig0.getDataSourceClassName());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertEquals(10, hikariPool0.getTotalConnections());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertFalse(hikariPool0.getshutdown());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertEquals("z~NH}l5*1f$G/", hikariPool0.getcatalog());
      assertTrue(hikariPool0.getdebug());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertTrue(hikariPool0.getisAutoCommit());
      assertTrue(hikariPool0.isAutoCommit);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertTrue(hikariPool0.debug);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertFalse(hikariPool0.shutdown);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
  }

  @Test(timeout = 11000)
  public void test47()  throws Throwable  {
      HikariConfig hikariConfig0 = new HikariConfig();
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertTrue(hikariConfig0.isAutoCommit());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertNotNull(hikariConfig0);
      
      String string0 = "z~NH}l5*1f$G/";
      hikariConfig0.setCatalog(string0);
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertTrue(hikariConfig0.isAutoCommit());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      
      HikariDataSource hikariDataSource0 = new HikariDataSource();
      assertFalse(hikariDataSource0.isRegisterMbeans());
      assertFalse(hikariDataSource0.getisShutdown());
      assertEquals(1800000L, hikariDataSource0.getMaxLifetime());
      assertEquals(600000L, hikariDataSource0.getIdleTimeout());
      assertEquals((-1), hikariDataSource0.getTransactionIsolation());
      assertEquals(0L, hikariDataSource0.getLeakDetectionThreshold());
      assertEquals(0, hikariDataSource0.getAcquireIncrement());
      assertNull(hikariDataSource0.getConnectionTestQuery());
      assertEquals(5000L, hikariDataSource0.getConnectionTimeout());
      assertTrue(hikariDataSource0.isJdbc4ConnectionTest());
      assertEquals(3, hikariDataSource0.getAcquireRetries());
      assertNull(hikariDataSource0.getDataSourceClassName());
      assertFalse(hikariDataSource0.isInitializationFailFast());
      assertEquals(0L, hikariDataSource0.getAcquireRetryDelay());
      assertEquals(0, hikariDataSource0.getLoginTimeout());
      assertNull(hikariDataSource0.getConnectionCustomizerClassName());
      assertEquals(60, hikariDataSource0.getMaximumPoolSize());
      assertEquals("HikariPool-1", hikariDataSource0.getPoolName());
      assertEquals(10, hikariDataSource0.getMinimumPoolSize());
      assertNull(hikariDataSource0.getCatalog());
      assertNull(hikariDataSource0.getConnectionInitSql());
      assertTrue(hikariDataSource0.isAutoCommit());
      assertNotNull(hikariDataSource0);
      assertEquals(0, hikariDataSource0.loginTimeout);
      assertFalse(hikariDataSource0.isShutdown);
      
      long long0 = 120000L;
      hikariDataSource0.setMaxLifetime(long0);
      assertFalse(hikariDataSource0.isRegisterMbeans());
      assertFalse(hikariDataSource0.getisShutdown());
      assertEquals(600000L, hikariDataSource0.getIdleTimeout());
      assertEquals((-1), hikariDataSource0.getTransactionIsolation());
      assertEquals(0L, hikariDataSource0.getLeakDetectionThreshold());
      assertEquals(0, hikariDataSource0.getAcquireIncrement());
      assertNull(hikariDataSource0.getConnectionTestQuery());
      assertEquals(5000L, hikariDataSource0.getConnectionTimeout());
      assertTrue(hikariDataSource0.isJdbc4ConnectionTest());
      assertEquals(3, hikariDataSource0.getAcquireRetries());
      assertNull(hikariDataSource0.getDataSourceClassName());
      assertFalse(hikariDataSource0.isInitializationFailFast());
      assertEquals(0L, hikariDataSource0.getAcquireRetryDelay());
      assertEquals(0, hikariDataSource0.getLoginTimeout());
      assertNull(hikariDataSource0.getConnectionCustomizerClassName());
      assertEquals(60, hikariDataSource0.getMaximumPoolSize());
      assertEquals("HikariPool-1", hikariDataSource0.getPoolName());
      assertEquals(10, hikariDataSource0.getMinimumPoolSize());
      assertNull(hikariDataSource0.getCatalog());
      assertNull(hikariDataSource0.getConnectionInitSql());
      assertEquals(120000L, hikariDataSource0.getMaxLifetime());
      assertTrue(hikariDataSource0.isAutoCommit());
      assertEquals(0, hikariDataSource0.loginTimeout);
      assertFalse(hikariDataSource0.isShutdown);
      
      hikariConfig0.setDataSource(hikariDataSource0);
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertTrue(hikariConfig0.isAutoCommit());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertFalse(hikariDataSource0.isRegisterMbeans());
      assertFalse(hikariDataSource0.getisShutdown());
      assertEquals(600000L, hikariDataSource0.getIdleTimeout());
      assertEquals((-1), hikariDataSource0.getTransactionIsolation());
      assertEquals(0L, hikariDataSource0.getLeakDetectionThreshold());
      assertEquals(0, hikariDataSource0.getAcquireIncrement());
      assertNull(hikariDataSource0.getConnectionTestQuery());
      assertEquals(5000L, hikariDataSource0.getConnectionTimeout());
      assertTrue(hikariDataSource0.isJdbc4ConnectionTest());
      assertEquals(3, hikariDataSource0.getAcquireRetries());
      assertNull(hikariDataSource0.getDataSourceClassName());
      assertFalse(hikariDataSource0.isInitializationFailFast());
      assertEquals(0L, hikariDataSource0.getAcquireRetryDelay());
      assertEquals(0, hikariDataSource0.getLoginTimeout());
      assertNull(hikariDataSource0.getConnectionCustomizerClassName());
      assertEquals(60, hikariDataSource0.getMaximumPoolSize());
      assertEquals("HikariPool-1", hikariDataSource0.getPoolName());
      assertEquals(10, hikariDataSource0.getMinimumPoolSize());
      assertNull(hikariDataSource0.getCatalog());
      assertNull(hikariDataSource0.getConnectionInitSql());
      assertEquals(120000L, hikariDataSource0.getMaxLifetime());
      assertTrue(hikariDataSource0.isAutoCommit());
      assertEquals(0, hikariDataSource0.loginTimeout);
      assertFalse(hikariDataSource0.isShutdown);
      
      String string1 = "<h*3tU31q8JLA&<";
      HikariPool hikariPool0 = new HikariPool(hikariConfig0);
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertTrue(hikariConfig0.isAutoCommit());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertTrue(hikariPool0.getisAutoCommit());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertEquals("z~NH}l5*1f$G/", hikariPool0.getcatalog());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertFalse(hikariPool0.getshutdown());
      assertFalse(hikariPool0.getdebug());
      assertEquals(10, hikariPool0.getTotalConnections());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertNotNull(hikariPool0);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertFalse(hikariPool0.debug);
      assertTrue(hikariPool0.isAutoCommit);
      assertFalse(hikariPool0.shutdown);
      
      hikariPool0.bagIsEmpty();
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertTrue(hikariConfig0.isAutoCommit());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertTrue(hikariPool0.getisAutoCommit());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertEquals(11, hikariPool0.getTotalConnections());
      assertEquals("z~NH}l5*1f$G/", hikariPool0.getcatalog());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertFalse(hikariPool0.getshutdown());
      assertFalse(hikariPool0.getdebug());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertFalse(hikariPool0.debug);
      assertTrue(hikariPool0.isAutoCommit);
      assertFalse(hikariPool0.shutdown);
      
      hikariPool0.shutdown();
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertTrue(hikariConfig0.isAutoCommit());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertTrue(hikariPool0.getisAutoCommit());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertEquals(11, hikariPool0.getTotalConnections());
      assertEquals("z~NH}l5*1f$G/", hikariPool0.getcatalog());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertTrue(hikariPool0.getshutdown());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertFalse(hikariPool0.getdebug());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertTrue(hikariPool0.shutdown);
      assertFalse(hikariPool0.debug);
      assertTrue(hikariPool0.isAutoCommit);
      
      long long1 = 959L;
      boolean boolean0 = hikariPool0.getshutdown();
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertTrue(hikariConfig0.isAutoCommit());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertTrue(hikariPool0.getisAutoCommit());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertEquals(11, hikariPool0.getTotalConnections());
      assertEquals("z~NH}l5*1f$G/", hikariPool0.getcatalog());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertTrue(hikariPool0.getshutdown());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertFalse(hikariPool0.getdebug());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertTrue(boolean0);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertTrue(hikariPool0.shutdown);
      assertFalse(hikariPool0.debug);
      assertTrue(hikariPool0.isAutoCommit);
      
      int int0 = hikariPool0.getActiveConnections();
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertTrue(hikariConfig0.isAutoCommit());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertTrue(hikariPool0.getisAutoCommit());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertEquals(11, hikariPool0.getTotalConnections());
      assertEquals("z~NH}l5*1f$G/", hikariPool0.getcatalog());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertTrue(hikariPool0.getshutdown());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertFalse(hikariPool0.getdebug());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertEquals(11, int0);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertTrue(hikariPool0.shutdown);
      assertFalse(hikariPool0.debug);
      assertTrue(hikariPool0.isAutoCommit);
      
      boolean boolean1 = hikariPool0.getjdbc4ConnectionTest();
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertTrue(hikariConfig0.isAutoCommit());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertTrue(hikariPool0.getisAutoCommit());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertEquals(11, hikariPool0.getTotalConnections());
      assertEquals("z~NH}l5*1f$G/", hikariPool0.getcatalog());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertTrue(hikariPool0.getshutdown());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertFalse(hikariPool0.getdebug());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertTrue(boolean1 == boolean0);
      assertTrue(boolean1);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertTrue(hikariPool0.shutdown);
      assertFalse(hikariPool0.debug);
      assertTrue(hikariPool0.isAutoCommit);
      
      boolean boolean2 = hikariPool0.getdebug();
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertTrue(hikariConfig0.isAutoCommit());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertTrue(hikariPool0.getisAutoCommit());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertEquals(11, hikariPool0.getTotalConnections());
      assertEquals("z~NH}l5*1f$G/", hikariPool0.getcatalog());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertTrue(hikariPool0.getshutdown());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertFalse(hikariPool0.getdebug());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertFalse(boolean2 == boolean1);
      assertFalse(boolean2 == boolean0);
      assertFalse(boolean2);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertTrue(hikariPool0.shutdown);
      assertFalse(hikariPool0.debug);
      assertTrue(hikariPool0.isAutoCommit);
      
      try { 
        hikariPool0.getConnection();
        fail("Expecting exception: SQLException");
      
      } catch(SQLException e) {
         //
         // Pool has been shutdown
         //
         verifyException("com.zaxxer.hikari.HikariPool", e);
      }
  }

  @Test(timeout = 11000)
  public void test48()  throws Throwable  {
      HikariConfig hikariConfig0 = new HikariConfig();
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertNotNull(hikariConfig0);
      
      String string0 = "z~NH}l5*1f$G/";
      HikariDataSource hikariDataSource0 = new HikariDataSource();
      assertFalse(hikariDataSource0.isInitializationFailFast());
      assertEquals(1800000L, hikariDataSource0.getMaxLifetime());
      assertEquals(600000L, hikariDataSource0.getIdleTimeout());
      assertEquals(3, hikariDataSource0.getAcquireRetries());
      assertFalse(hikariDataSource0.getisShutdown());
      assertFalse(hikariDataSource0.isRegisterMbeans());
      assertTrue(hikariDataSource0.isJdbc4ConnectionTest());
      assertEquals(5000L, hikariDataSource0.getConnectionTimeout());
      assertEquals(60, hikariDataSource0.getMaximumPoolSize());
      assertNull(hikariDataSource0.getConnectionInitSql());
      assertEquals(0L, hikariDataSource0.getLeakDetectionThreshold());
      assertEquals(0, hikariDataSource0.getAcquireIncrement());
      assertNull(hikariDataSource0.getDataSourceClassName());
      assertEquals(0L, hikariDataSource0.getAcquireRetryDelay());
      assertNull(hikariDataSource0.getConnectionCustomizerClassName());
      assertNull(hikariDataSource0.getCatalog());
      assertEquals(0, hikariDataSource0.getLoginTimeout());
      assertTrue(hikariDataSource0.isAutoCommit());
      assertNull(hikariDataSource0.getConnectionTestQuery());
      assertEquals(10, hikariDataSource0.getMinimumPoolSize());
      assertEquals((-1), hikariDataSource0.getTransactionIsolation());
      assertEquals("HikariPool-1", hikariDataSource0.getPoolName());
      assertNotNull(hikariDataSource0);
      assertFalse(hikariDataSource0.isShutdown);
      assertEquals(0, hikariDataSource0.loginTimeout);
      
      hikariConfig0.setDataSource(hikariDataSource0);
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertFalse(hikariDataSource0.isInitializationFailFast());
      assertEquals(1800000L, hikariDataSource0.getMaxLifetime());
      assertEquals(600000L, hikariDataSource0.getIdleTimeout());
      assertEquals(3, hikariDataSource0.getAcquireRetries());
      assertFalse(hikariDataSource0.getisShutdown());
      assertFalse(hikariDataSource0.isRegisterMbeans());
      assertTrue(hikariDataSource0.isJdbc4ConnectionTest());
      assertEquals(5000L, hikariDataSource0.getConnectionTimeout());
      assertEquals(60, hikariDataSource0.getMaximumPoolSize());
      assertNull(hikariDataSource0.getConnectionInitSql());
      assertEquals(0L, hikariDataSource0.getLeakDetectionThreshold());
      assertEquals(0, hikariDataSource0.getAcquireIncrement());
      assertNull(hikariDataSource0.getDataSourceClassName());
      assertEquals(0L, hikariDataSource0.getAcquireRetryDelay());
      assertNull(hikariDataSource0.getConnectionCustomizerClassName());
      assertNull(hikariDataSource0.getCatalog());
      assertEquals(0, hikariDataSource0.getLoginTimeout());
      assertTrue(hikariDataSource0.isAutoCommit());
      assertNull(hikariDataSource0.getConnectionTestQuery());
      assertEquals(10, hikariDataSource0.getMinimumPoolSize());
      assertEquals((-1), hikariDataSource0.getTransactionIsolation());
      assertEquals("HikariPool-1", hikariDataSource0.getPoolName());
      assertFalse(hikariDataSource0.isShutdown);
      assertEquals(0, hikariDataSource0.loginTimeout);
      
      hikariConfig0.setMaximumPoolSize(hikariDataSource0.loginTimeout);
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals(0, hikariConfig0.getMaximumPoolSize());
      assertFalse(hikariDataSource0.isInitializationFailFast());
      assertEquals(1800000L, hikariDataSource0.getMaxLifetime());
      assertEquals(600000L, hikariDataSource0.getIdleTimeout());
      assertEquals(3, hikariDataSource0.getAcquireRetries());
      assertFalse(hikariDataSource0.getisShutdown());
      assertFalse(hikariDataSource0.isRegisterMbeans());
      assertTrue(hikariDataSource0.isJdbc4ConnectionTest());
      assertEquals(5000L, hikariDataSource0.getConnectionTimeout());
      assertEquals(60, hikariDataSource0.getMaximumPoolSize());
      assertNull(hikariDataSource0.getConnectionInitSql());
      assertEquals(0L, hikariDataSource0.getLeakDetectionThreshold());
      assertEquals(0, hikariDataSource0.getAcquireIncrement());
      assertNull(hikariDataSource0.getDataSourceClassName());
      assertEquals(0L, hikariDataSource0.getAcquireRetryDelay());
      assertNull(hikariDataSource0.getConnectionCustomizerClassName());
      assertNull(hikariDataSource0.getCatalog());
      assertEquals(0, hikariDataSource0.getLoginTimeout());
      assertTrue(hikariDataSource0.isAutoCommit());
      assertNull(hikariDataSource0.getConnectionTestQuery());
      assertEquals(10, hikariDataSource0.getMinimumPoolSize());
      assertEquals((-1), hikariDataSource0.getTransactionIsolation());
      assertEquals("HikariPool-1", hikariDataSource0.getPoolName());
      assertFalse(hikariDataSource0.isShutdown);
      assertEquals(0, hikariDataSource0.loginTimeout);
      
      String string1 = "<h*3tU31q8JLA&<";
      hikariConfig0.setDataSourceClassName(string1);
      assertNotSame(string1, string0);
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals(0, hikariConfig0.getMaximumPoolSize());
      assertEquals("<h*3tU31q8JLA&<", hikariConfig0.getDataSourceClassName());
      assertFalse(string1.equals((Object)string0));
      
      HikariPool hikariPool0 = new HikariPool(hikariConfig0);
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals(10, hikariConfig0.getMaximumPoolSize());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals("<h*3tU31q8JLA&<", hikariConfig0.getDataSourceClassName());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertEquals(10, hikariPool0.getTotalConnections());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertTrue(hikariPool0.getisAutoCommit());
      assertNull(hikariPool0.getcatalog());
      assertFalse(hikariPool0.getdebug());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertFalse(hikariPool0.getshutdown());
      assertNotNull(hikariPool0);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertFalse(hikariPool0.debug);
      assertFalse(hikariPool0.shutdown);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertTrue(hikariPool0.isAutoCommit);
      
      hikariPool0.addConnection();
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals(10, hikariConfig0.getMaximumPoolSize());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals("<h*3tU31q8JLA&<", hikariConfig0.getDataSourceClassName());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertEquals(10, hikariPool0.getTotalConnections());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertTrue(hikariPool0.getisAutoCommit());
      assertNull(hikariPool0.getcatalog());
      assertFalse(hikariPool0.getdebug());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertFalse(hikariPool0.getshutdown());
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertFalse(hikariPool0.debug);
      assertFalse(hikariPool0.shutdown);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertTrue(hikariPool0.isAutoCommit);
      
      boolean boolean0 = false;
      hikariPool0.closeIdleConnections();
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals(10, hikariConfig0.getMaximumPoolSize());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals("<h*3tU31q8JLA&<", hikariConfig0.getDataSourceClassName());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertEquals(10, hikariPool0.getTotalConnections());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertTrue(hikariPool0.getisAutoCommit());
      assertNull(hikariPool0.getcatalog());
      assertFalse(hikariPool0.getdebug());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertFalse(hikariPool0.getshutdown());
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertFalse(hikariPool0.debug);
      assertFalse(hikariPool0.shutdown);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertTrue(hikariPool0.isAutoCommit);
      
      HikariDataSource hikariDataSource1 = (HikariDataSource)hikariPool0.getdataSource();
      assertSame(hikariDataSource1, hikariDataSource0);
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals(10, hikariConfig0.getMaximumPoolSize());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals("<h*3tU31q8JLA&<", hikariConfig0.getDataSourceClassName());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertEquals(10, hikariPool0.getTotalConnections());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertTrue(hikariPool0.getisAutoCommit());
      assertNull(hikariPool0.getcatalog());
      assertFalse(hikariPool0.getdebug());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertFalse(hikariPool0.getshutdown());
      assertEquals(1250, hikariDataSource1.getLoginTimeout());
      assertEquals(5000L, hikariDataSource1.getConnectionTimeout());
      assertEquals(10, hikariDataSource1.getMinimumPoolSize());
      assertNull(hikariDataSource1.getCatalog());
      assertEquals(0L, hikariDataSource1.getAcquireRetryDelay());
      assertFalse(hikariDataSource1.isRegisterMbeans());
      assertFalse(hikariDataSource1.getisShutdown());
      assertEquals(0, hikariDataSource1.getAcquireIncrement());
      assertNull(hikariDataSource1.getConnectionInitSql());
      assertEquals(0L, hikariDataSource1.getLeakDetectionThreshold());
      assertEquals(60, hikariDataSource1.getMaximumPoolSize());
      assertNull(hikariDataSource1.getConnectionCustomizerClassName());
      assertTrue(hikariDataSource1.isAutoCommit());
      assertTrue(hikariDataSource1.isJdbc4ConnectionTest());
      assertFalse(hikariDataSource1.isInitializationFailFast());
      assertEquals(600000L, hikariDataSource1.getIdleTimeout());
      assertNull(hikariDataSource1.getDataSourceClassName());
      assertEquals((-1), hikariDataSource1.getTransactionIsolation());
      assertEquals(3, hikariDataSource1.getAcquireRetries());
      assertEquals("HikariPool-1", hikariDataSource1.getPoolName());
      assertNull(hikariDataSource1.getConnectionTestQuery());
      assertEquals(1800000L, hikariDataSource1.getMaxLifetime());
      assertNotNull(hikariDataSource1);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertFalse(hikariPool0.debug);
      assertFalse(hikariPool0.shutdown);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertTrue(hikariPool0.isAutoCommit);
      assertEquals(1250, hikariDataSource1.loginTimeout);
      assertFalse(hikariDataSource1.isShutdown);
  }

  @Test(timeout = 11000)
  public void test49()  throws Throwable  {
      HikariConfig hikariConfig0 = new HikariConfig();
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertTrue(hikariConfig0.isAutoCommit());
      assertNotNull(hikariConfig0);
      
      HikariDataSource hikariDataSource0 = new HikariDataSource();
      assertEquals(60, hikariDataSource0.getMaximumPoolSize());
      assertTrue(hikariDataSource0.isAutoCommit());
      assertEquals("HikariPool-1", hikariDataSource0.getPoolName());
      assertNull(hikariDataSource0.getConnectionInitSql());
      assertEquals(3, hikariDataSource0.getAcquireRetries());
      assertNull(hikariDataSource0.getConnectionTestQuery());
      assertNull(hikariDataSource0.getDataSourceClassName());
      assertEquals(0L, hikariDataSource0.getLeakDetectionThreshold());
      assertFalse(hikariDataSource0.isInitializationFailFast());
      assertEquals(0, hikariDataSource0.getAcquireIncrement());
      assertEquals(0L, hikariDataSource0.getAcquireRetryDelay());
      assertTrue(hikariDataSource0.isJdbc4ConnectionTest());
      assertEquals(5000L, hikariDataSource0.getConnectionTimeout());
      assertEquals(0, hikariDataSource0.getLoginTimeout());
      assertNull(hikariDataSource0.getCatalog());
      assertEquals(600000L, hikariDataSource0.getIdleTimeout());
      assertEquals(1800000L, hikariDataSource0.getMaxLifetime());
      assertEquals((-1), hikariDataSource0.getTransactionIsolation());
      assertFalse(hikariDataSource0.isRegisterMbeans());
      assertFalse(hikariDataSource0.getisShutdown());
      assertNull(hikariDataSource0.getConnectionCustomizerClassName());
      assertEquals(10, hikariDataSource0.getMinimumPoolSize());
      assertNotNull(hikariDataSource0);
      assertEquals(0, hikariDataSource0.loginTimeout);
      assertFalse(hikariDataSource0.isShutdown);
      
      hikariConfig0.setDataSource(hikariDataSource0);
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals(60, hikariDataSource0.getMaximumPoolSize());
      assertTrue(hikariDataSource0.isAutoCommit());
      assertEquals("HikariPool-1", hikariDataSource0.getPoolName());
      assertNull(hikariDataSource0.getConnectionInitSql());
      assertEquals(3, hikariDataSource0.getAcquireRetries());
      assertNull(hikariDataSource0.getConnectionTestQuery());
      assertNull(hikariDataSource0.getDataSourceClassName());
      assertEquals(0L, hikariDataSource0.getLeakDetectionThreshold());
      assertFalse(hikariDataSource0.isInitializationFailFast());
      assertEquals(0, hikariDataSource0.getAcquireIncrement());
      assertEquals(0L, hikariDataSource0.getAcquireRetryDelay());
      assertTrue(hikariDataSource0.isJdbc4ConnectionTest());
      assertEquals(5000L, hikariDataSource0.getConnectionTimeout());
      assertEquals(0, hikariDataSource0.getLoginTimeout());
      assertNull(hikariDataSource0.getCatalog());
      assertEquals(600000L, hikariDataSource0.getIdleTimeout());
      assertEquals(1800000L, hikariDataSource0.getMaxLifetime());
      assertEquals((-1), hikariDataSource0.getTransactionIsolation());
      assertFalse(hikariDataSource0.isRegisterMbeans());
      assertFalse(hikariDataSource0.getisShutdown());
      assertNull(hikariDataSource0.getConnectionCustomizerClassName());
      assertEquals(10, hikariDataSource0.getMinimumPoolSize());
      assertEquals(0, hikariDataSource0.loginTimeout);
      assertFalse(hikariDataSource0.isShutdown);
      
      String string0 = "<h*3tU31q8JLA&<";
      HikariPool hikariPool0 = new HikariPool(hikariConfig0);
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertEquals(10, hikariPool0.getTotalConnections());
      assertFalse(hikariPool0.getshutdown());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertFalse(hikariPool0.getdebug());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertNull(hikariPool0.getcatalog());
      assertTrue(hikariPool0.getisAutoCommit());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertNotNull(hikariPool0);
      assertTrue(hikariPool0.isAutoCommit);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertFalse(hikariPool0.shutdown);
      assertFalse(hikariPool0.debug);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      
      hikariPool0.bagIsEmpty();
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertEquals(11, hikariPool0.getTotalConnections());
      assertFalse(hikariPool0.getshutdown());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertFalse(hikariPool0.getdebug());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertNull(hikariPool0.getcatalog());
      assertTrue(hikariPool0.getisAutoCommit());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertTrue(hikariPool0.isAutoCommit);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertFalse(hikariPool0.shutdown);
      assertFalse(hikariPool0.debug);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      
      hikariPool0.shutdown();
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertEquals(11, hikariPool0.getTotalConnections());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertFalse(hikariPool0.getdebug());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertNull(hikariPool0.getcatalog());
      assertTrue(hikariPool0.getisAutoCommit());
      assertTrue(hikariPool0.getshutdown());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertTrue(hikariPool0.shutdown);
      assertTrue(hikariPool0.isAutoCommit);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertFalse(hikariPool0.debug);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      
      long long0 = 959L;
      boolean boolean0 = hikariPool0.getshutdown();
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertEquals(11, hikariPool0.getTotalConnections());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertFalse(hikariPool0.getdebug());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertNull(hikariPool0.getcatalog());
      assertTrue(hikariPool0.getisAutoCommit());
      assertTrue(hikariPool0.getshutdown());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertTrue(boolean0);
      assertTrue(hikariPool0.shutdown);
      assertTrue(hikariPool0.isAutoCommit);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertFalse(hikariPool0.debug);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      
      int int0 = hikariPool0.getActiveConnections();
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertEquals(11, hikariPool0.getTotalConnections());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertFalse(hikariPool0.getdebug());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertNull(hikariPool0.getcatalog());
      assertTrue(hikariPool0.getisAutoCommit());
      assertTrue(hikariPool0.getshutdown());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertEquals(11, int0);
      assertTrue(hikariPool0.shutdown);
      assertTrue(hikariPool0.isAutoCommit);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertFalse(hikariPool0.debug);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      
      SerializedObjectSupporter serializedObjectSupporter0 = new SerializedObjectSupporter();
      assertNotNull(serializedObjectSupporter0);
      
      hikariPool0.serializedObjectSupporter = serializedObjectSupporter0;
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertEquals(11, hikariPool0.getTotalConnections());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertFalse(hikariPool0.getdebug());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertNull(hikariPool0.getcatalog());
      assertTrue(hikariPool0.getisAutoCommit());
      assertTrue(hikariPool0.getshutdown());
      assertEquals("HikariPool-0", hikariPool0.toString());
      
      boolean boolean1 = hikariPool0.getjdbc4ConnectionTest();
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertEquals(11, hikariPool0.getTotalConnections());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertFalse(hikariPool0.getdebug());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertNull(hikariPool0.getcatalog());
      assertTrue(hikariPool0.getisAutoCommit());
      assertTrue(hikariPool0.getshutdown());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertTrue(boolean1 == boolean0);
      assertTrue(boolean1);
      assertTrue(hikariPool0.shutdown);
      assertTrue(hikariPool0.isAutoCommit);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertFalse(hikariPool0.debug);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      
      HikariPool.HouseKeeper hikariPool_HouseKeeper0 = hikariPool0.new HouseKeeper();
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertEquals(11, hikariPool0.getTotalConnections());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertFalse(hikariPool0.getdebug());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertNull(hikariPool0.getcatalog());
      assertTrue(hikariPool0.getisAutoCommit());
      assertTrue(hikariPool0.getshutdown());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertEquals(0L, hikariPool_HouseKeeper0.scheduledExecutionTime());
      assertNotNull(hikariPool_HouseKeeper0);
      assertTrue(hikariPool0.shutdown);
      assertTrue(hikariPool0.isAutoCommit);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertFalse(hikariPool0.debug);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      
      hikariPool_HouseKeeper0.run();
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertEquals(11, hikariPool0.getTotalConnections());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertFalse(hikariPool0.getdebug());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertNull(hikariPool0.getcatalog());
      assertTrue(hikariPool0.getisAutoCommit());
      assertTrue(hikariPool0.getshutdown());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertEquals(0L, hikariPool_HouseKeeper0.scheduledExecutionTime());
      assertTrue(hikariPool0.shutdown);
      assertTrue(hikariPool0.isAutoCommit);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertFalse(hikariPool0.debug);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      
      boolean boolean2 = hikariPool0.getisRegisteredMbeans();
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertEquals(11, hikariPool0.getTotalConnections());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertFalse(hikariPool0.getdebug());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertNull(hikariPool0.getcatalog());
      assertTrue(hikariPool0.getisAutoCommit());
      assertTrue(hikariPool0.getshutdown());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertFalse(boolean2 == boolean0);
      assertFalse(boolean2 == boolean1);
      assertFalse(boolean2);
      assertTrue(hikariPool0.shutdown);
      assertTrue(hikariPool0.isAutoCommit);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertFalse(hikariPool0.debug);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
  }

  @Test(timeout = 11000)
  public void test50()  throws Throwable  {
      HikariConfig hikariConfig0 = new HikariConfig();
      assertNull(hikariConfig0.getCatalog());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertNotNull(hikariConfig0);
      
      HikariDataSource hikariDataSource0 = new HikariDataSource();
      assertEquals(3, hikariDataSource0.getAcquireRetries());
      assertEquals(0, hikariDataSource0.getAcquireIncrement());
      assertNull(hikariDataSource0.getConnectionInitSql());
      assertEquals(0L, hikariDataSource0.getLeakDetectionThreshold());
      assertNull(hikariDataSource0.getConnectionTestQuery());
      assertTrue(hikariDataSource0.isJdbc4ConnectionTest());
      assertEquals(1800000L, hikariDataSource0.getMaxLifetime());
      assertEquals((-1), hikariDataSource0.getTransactionIsolation());
      assertNull(hikariDataSource0.getConnectionCustomizerClassName());
      assertFalse(hikariDataSource0.isRegisterMbeans());
      assertFalse(hikariDataSource0.getisShutdown());
      assertEquals(60, hikariDataSource0.getMaximumPoolSize());
      assertTrue(hikariDataSource0.isAutoCommit());
      assertNull(hikariDataSource0.getCatalog());
      assertEquals(0L, hikariDataSource0.getAcquireRetryDelay());
      assertEquals(10, hikariDataSource0.getMinimumPoolSize());
      assertEquals("HikariPool-1", hikariDataSource0.getPoolName());
      assertEquals(600000L, hikariDataSource0.getIdleTimeout());
      assertNull(hikariDataSource0.getDataSourceClassName());
      assertFalse(hikariDataSource0.isInitializationFailFast());
      assertEquals(5000L, hikariDataSource0.getConnectionTimeout());
      assertEquals(0, hikariDataSource0.getLoginTimeout());
      assertNotNull(hikariDataSource0);
      assertEquals(0, hikariDataSource0.loginTimeout);
      assertFalse(hikariDataSource0.isShutdown);
      
      hikariConfig0.setDataSource(hikariDataSource0);
      assertNull(hikariConfig0.getCatalog());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(3, hikariDataSource0.getAcquireRetries());
      assertEquals(0, hikariDataSource0.getAcquireIncrement());
      assertNull(hikariDataSource0.getConnectionInitSql());
      assertEquals(0L, hikariDataSource0.getLeakDetectionThreshold());
      assertNull(hikariDataSource0.getConnectionTestQuery());
      assertTrue(hikariDataSource0.isJdbc4ConnectionTest());
      assertEquals(1800000L, hikariDataSource0.getMaxLifetime());
      assertEquals((-1), hikariDataSource0.getTransactionIsolation());
      assertNull(hikariDataSource0.getConnectionCustomizerClassName());
      assertFalse(hikariDataSource0.isRegisterMbeans());
      assertFalse(hikariDataSource0.getisShutdown());
      assertEquals(60, hikariDataSource0.getMaximumPoolSize());
      assertTrue(hikariDataSource0.isAutoCommit());
      assertNull(hikariDataSource0.getCatalog());
      assertEquals(0L, hikariDataSource0.getAcquireRetryDelay());
      assertEquals(10, hikariDataSource0.getMinimumPoolSize());
      assertEquals("HikariPool-1", hikariDataSource0.getPoolName());
      assertEquals(600000L, hikariDataSource0.getIdleTimeout());
      assertNull(hikariDataSource0.getDataSourceClassName());
      assertFalse(hikariDataSource0.isInitializationFailFast());
      assertEquals(5000L, hikariDataSource0.getConnectionTimeout());
      assertEquals(0, hikariDataSource0.getLoginTimeout());
      assertEquals(0, hikariDataSource0.loginTimeout);
      assertFalse(hikariDataSource0.isShutdown);
      
      String string0 = "<h*3tU31!8JLA&<";
      HikariPool hikariPool0 = new HikariPool(hikariConfig0);
      assertNull(hikariConfig0.getCatalog());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertTrue(hikariPool0.getisAutoCommit());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertNull(hikariPool0.getcatalog());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertFalse(hikariPool0.getshutdown());
      assertEquals(10, hikariPool0.getTotalConnections());
      assertFalse(hikariPool0.getdebug());
      assertNotNull(hikariPool0);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertFalse(hikariPool0.debug);
      assertTrue(hikariPool0.isAutoCommit);
      assertFalse(hikariPool0.shutdown);
      
      hikariPool0.bagIsEmpty();
      assertNull(hikariConfig0.getCatalog());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertTrue(hikariPool0.getisAutoCommit());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertNull(hikariPool0.getcatalog());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertFalse(hikariPool0.getshutdown());
      assertEquals(11, hikariPool0.getTotalConnections());
      assertFalse(hikariPool0.getdebug());
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertFalse(hikariPool0.debug);
      assertTrue(hikariPool0.isAutoCommit);
      assertFalse(hikariPool0.shutdown);
      
      hikariPool0.shutdown();
      assertNull(hikariConfig0.getCatalog());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertTrue(hikariPool0.getshutdown());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertTrue(hikariPool0.getisAutoCommit());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertNull(hikariPool0.getcatalog());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertEquals(11, hikariPool0.getTotalConnections());
      assertFalse(hikariPool0.getdebug());
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertTrue(hikariPool0.shutdown);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertFalse(hikariPool0.debug);
      assertTrue(hikariPool0.isAutoCommit);
      
      long long0 = 959L;
      boolean boolean0 = hikariPool0.getshutdown();
      assertNull(hikariConfig0.getCatalog());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertTrue(hikariPool0.getshutdown());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertTrue(hikariPool0.getisAutoCommit());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertNull(hikariPool0.getcatalog());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertEquals(11, hikariPool0.getTotalConnections());
      assertFalse(hikariPool0.getdebug());
      assertTrue(boolean0);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertTrue(hikariPool0.shutdown);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertFalse(hikariPool0.debug);
      assertTrue(hikariPool0.isAutoCommit);
      
      int int0 = hikariPool0.getActiveConnections();
      assertNull(hikariConfig0.getCatalog());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertTrue(hikariPool0.getshutdown());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertTrue(hikariPool0.getisAutoCommit());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertNull(hikariPool0.getcatalog());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertEquals(11, hikariPool0.getTotalConnections());
      assertFalse(hikariPool0.getdebug());
      assertEquals(11, int0);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertTrue(hikariPool0.shutdown);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertFalse(hikariPool0.debug);
      assertTrue(hikariPool0.isAutoCommit);
      
      hikariPool0.bagIsEmpty();
      assertNull(hikariConfig0.getCatalog());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertTrue(hikariPool0.getshutdown());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertTrue(hikariPool0.getisAutoCommit());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertNull(hikariPool0.getcatalog());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertEquals(11, hikariPool0.getTotalConnections());
      assertFalse(hikariPool0.getdebug());
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertTrue(hikariPool0.shutdown);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertFalse(hikariPool0.debug);
      assertTrue(hikariPool0.isAutoCommit);
      
      boolean boolean1 = hikariPool0.getjdbc4ConnectionTest();
      assertNull(hikariConfig0.getCatalog());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertTrue(hikariPool0.getshutdown());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertTrue(hikariPool0.getisAutoCommit());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertNull(hikariPool0.getcatalog());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertEquals(11, hikariPool0.getTotalConnections());
      assertFalse(hikariPool0.getdebug());
      assertTrue(boolean1 == boolean0);
      assertTrue(boolean1);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertTrue(hikariPool0.shutdown);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertFalse(hikariPool0.debug);
      assertTrue(hikariPool0.isAutoCommit);
      
      HikariPool.HouseKeeper hikariPool_HouseKeeper0 = hikariPool0.new HouseKeeper();
      assertNull(hikariConfig0.getCatalog());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertTrue(hikariPool0.getshutdown());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertTrue(hikariPool0.getisAutoCommit());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertNull(hikariPool0.getcatalog());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertEquals(11, hikariPool0.getTotalConnections());
      assertFalse(hikariPool0.getdebug());
      assertEquals(0L, hikariPool_HouseKeeper0.scheduledExecutionTime());
      assertNotNull(hikariPool_HouseKeeper0);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertTrue(hikariPool0.shutdown);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertFalse(hikariPool0.debug);
      assertTrue(hikariPool0.isAutoCommit);
      
      hikariPool_HouseKeeper0.run();
      assertNull(hikariConfig0.getCatalog());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertTrue(hikariPool0.getshutdown());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertTrue(hikariPool0.getisAutoCommit());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertNull(hikariPool0.getcatalog());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertEquals(11, hikariPool0.getTotalConnections());
      assertFalse(hikariPool0.getdebug());
      assertEquals(0L, hikariPool_HouseKeeper0.scheduledExecutionTime());
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertTrue(hikariPool0.shutdown);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertFalse(hikariPool0.debug);
      assertTrue(hikariPool0.isAutoCommit);
  }

  @Test(timeout = 11000)
  public void test51()  throws Throwable  {
      HikariConfig hikariConfig0 = new HikariConfig();
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertTrue(hikariConfig0.isAutoCommit());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertNotNull(hikariConfig0);
      
      String string0 = "(I)Ljava/lang/String;";
      hikariConfig0.setConnectionCustomizerClassName(string0);
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals("(I)Ljava/lang/String;", hikariConfig0.getConnectionCustomizerClassName());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      
      String string1 = "z~NH}l5*1f$G/";
      HikariDataSource hikariDataSource0 = new HikariDataSource();
      assertEquals((-1), hikariDataSource0.getTransactionIsolation());
      assertEquals(1800000L, hikariDataSource0.getMaxLifetime());
      assertEquals(600000L, hikariDataSource0.getIdleTimeout());
      assertFalse(hikariDataSource0.isInitializationFailFast());
      assertEquals(0L, hikariDataSource0.getLeakDetectionThreshold());
      assertEquals(0, hikariDataSource0.getAcquireIncrement());
      assertTrue(hikariDataSource0.isJdbc4ConnectionTest());
      assertEquals(5000L, hikariDataSource0.getConnectionTimeout());
      assertNull(hikariDataSource0.getConnectionTestQuery());
      assertEquals(0, hikariDataSource0.getLoginTimeout());
      assertEquals(3, hikariDataSource0.getAcquireRetries());
      assertNull(hikariDataSource0.getDataSourceClassName());
      assertEquals(0L, hikariDataSource0.getAcquireRetryDelay());
      assertEquals(10, hikariDataSource0.getMinimumPoolSize());
      assertEquals("HikariPool-1", hikariDataSource0.getPoolName());
      assertEquals(60, hikariDataSource0.getMaximumPoolSize());
      assertTrue(hikariDataSource0.isAutoCommit());
      assertNull(hikariDataSource0.getConnectionCustomizerClassName());
      assertFalse(hikariDataSource0.getisShutdown());
      assertNull(hikariDataSource0.getCatalog());
      assertNull(hikariDataSource0.getConnectionInitSql());
      assertFalse(hikariDataSource0.isRegisterMbeans());
      assertNotNull(hikariDataSource0);
      assertFalse(hikariDataSource0.isShutdown);
      assertEquals(0, hikariDataSource0.loginTimeout);
      
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      String string2 = "sQMQ\\\\=p6;m-2V?P ";
      hikariConfig0.setConnectionTestQuery(string2);
      assertNotSame(string2, string0);
      assertNotSame(string2, string1);
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals("sQMQ\\\\=p6;m-2V?P ", hikariConfig0.getConnectionTestQuery());
      assertEquals("(I)Ljava/lang/String;", hikariConfig0.getConnectionCustomizerClassName());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      
      hikariConfig0.setDataSource(hikariDataSource0);
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals("sQMQ\\\\=p6;m-2V?P ", hikariConfig0.getConnectionTestQuery());
      assertEquals("(I)Ljava/lang/String;", hikariConfig0.getConnectionCustomizerClassName());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals((-1), hikariDataSource0.getTransactionIsolation());
      assertEquals(1800000L, hikariDataSource0.getMaxLifetime());
      assertEquals(600000L, hikariDataSource0.getIdleTimeout());
      assertFalse(hikariDataSource0.isInitializationFailFast());
      assertEquals(0L, hikariDataSource0.getLeakDetectionThreshold());
      assertEquals(0, hikariDataSource0.getAcquireIncrement());
      assertTrue(hikariDataSource0.isJdbc4ConnectionTest());
      assertEquals(5000L, hikariDataSource0.getConnectionTimeout());
      assertNull(hikariDataSource0.getConnectionTestQuery());
      assertEquals(0, hikariDataSource0.getLoginTimeout());
      assertEquals(3, hikariDataSource0.getAcquireRetries());
      assertNull(hikariDataSource0.getDataSourceClassName());
      assertEquals(0L, hikariDataSource0.getAcquireRetryDelay());
      assertEquals(10, hikariDataSource0.getMinimumPoolSize());
      assertEquals("HikariPool-1", hikariDataSource0.getPoolName());
      assertEquals(60, hikariDataSource0.getMaximumPoolSize());
      assertTrue(hikariDataSource0.isAutoCommit());
      assertNull(hikariDataSource0.getConnectionCustomizerClassName());
      assertFalse(hikariDataSource0.getisShutdown());
      assertNull(hikariDataSource0.getCatalog());
      assertNull(hikariDataSource0.getConnectionInitSql());
      assertFalse(hikariDataSource0.isRegisterMbeans());
      assertFalse(hikariDataSource0.isShutdown);
      assertEquals(0, hikariDataSource0.loginTimeout);
      
      String string3 = "<h*3tU31q8JLA&<";
      hikariConfig0.setDataSourceClassName(string3);
      assertNotSame(string3, string0);
      assertNotSame(string3, string2);
      assertNotSame(string3, string1);
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals("<h*3tU31q8JLA&<", hikariConfig0.getDataSourceClassName());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals("sQMQ\\\\=p6;m-2V?P ", hikariConfig0.getConnectionTestQuery());
      assertEquals("(I)Ljava/lang/String;", hikariConfig0.getConnectionCustomizerClassName());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string1));
      
      HikariPool hikariPool0 = new HikariPool(hikariConfig0);
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals("<h*3tU31q8JLA&<", hikariConfig0.getDataSourceClassName());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals("sQMQ\\\\=p6;m-2V?P ", hikariConfig0.getConnectionTestQuery());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(10, hikariPool0.getTotalConnections());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertTrue(hikariPool0.getisAutoCommit());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertNull(hikariPool0.getcatalog());
      assertFalse(hikariPool0.getdebug());
      assertFalse(hikariPool0.getshutdown());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertNotNull(hikariPool0);
      assertTrue(hikariPool0.isAutoCommit);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertFalse(hikariPool0.debug);
      assertFalse(hikariPool0.shutdown);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertFalse(hikariPool0.isRegisteredMbeans);
      
      ConcurrentBag<IHikariConnectionProxy> concurrentBag0 = hikariPool0.getidleConnectionBag();
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals("<h*3tU31q8JLA&<", hikariConfig0.getDataSourceClassName());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals("sQMQ\\\\=p6;m-2V?P ", hikariConfig0.getConnectionTestQuery());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(10, hikariPool0.getTotalConnections());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertTrue(hikariPool0.getisAutoCommit());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertNull(hikariPool0.getcatalog());
      assertFalse(hikariPool0.getdebug());
      assertFalse(hikariPool0.getshutdown());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertEquals((-2), concurrentBag0.getSTATE_RESERVED());
      assertEquals((-1), concurrentBag0.getSTATE_REMOVED());
      assertEquals(1, concurrentBag0.getSTATE_IN_USE());
      assertEquals(0, concurrentBag0.getSTATE_NOT_IN_USE());
      assertNotNull(concurrentBag0);
      assertTrue(hikariPool0.isAutoCommit);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertFalse(hikariPool0.debug);
      assertFalse(hikariPool0.shutdown);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertEquals((-1), ConcurrentBag.STATE_REMOVED);
      assertEquals((-2), ConcurrentBag.STATE_RESERVED);
      assertEquals(1, ConcurrentBag.STATE_IN_USE);
      assertEquals(0, ConcurrentBag.STATE_NOT_IN_USE);
      
      String string4 = hikariPool0.getcatalog();
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals("<h*3tU31q8JLA&<", hikariConfig0.getDataSourceClassName());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals("sQMQ\\\\=p6;m-2V?P ", hikariConfig0.getConnectionTestQuery());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(10, hikariPool0.getTotalConnections());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertTrue(hikariPool0.getisAutoCommit());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertNull(hikariPool0.getcatalog());
      assertFalse(hikariPool0.getdebug());
      assertFalse(hikariPool0.getshutdown());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertNull(string4);
      assertTrue(hikariPool0.isAutoCommit);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertFalse(hikariPool0.debug);
      assertFalse(hikariPool0.shutdown);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertFalse(hikariPool0.isRegisteredMbeans);
  }

  @Test(timeout = 11000)
  public void test52()  throws Throwable  {
      HikariConfig hikariConfig0 = new HikariConfig();
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertNull(hikariConfig0.getCatalog());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertNotNull(hikariConfig0);
      
      HikariDataSource hikariDataSource0 = new HikariDataSource();
      assertEquals("HikariPool-1", hikariDataSource0.getPoolName());
      assertEquals(60, hikariDataSource0.getMaximumPoolSize());
      assertTrue(hikariDataSource0.isAutoCommit());
      assertNull(hikariDataSource0.getConnectionCustomizerClassName());
      assertNull(hikariDataSource0.getConnectionInitSql());
      assertNull(hikariDataSource0.getConnectionTestQuery());
      assertNull(hikariDataSource0.getDataSourceClassName());
      assertEquals(3, hikariDataSource0.getAcquireRetries());
      assertEquals(10, hikariDataSource0.getMinimumPoolSize());
      assertEquals((-1), hikariDataSource0.getTransactionIsolation());
      assertFalse(hikariDataSource0.isRegisterMbeans());
      assertFalse(hikariDataSource0.getisShutdown());
      assertFalse(hikariDataSource0.isInitializationFailFast());
      assertEquals(1800000L, hikariDataSource0.getMaxLifetime());
      assertEquals(600000L, hikariDataSource0.getIdleTimeout());
      assertNull(hikariDataSource0.getCatalog());
      assertEquals(0, hikariDataSource0.getLoginTimeout());
      assertEquals(0L, hikariDataSource0.getLeakDetectionThreshold());
      assertEquals(0, hikariDataSource0.getAcquireIncrement());
      assertEquals(0L, hikariDataSource0.getAcquireRetryDelay());
      assertEquals(5000L, hikariDataSource0.getConnectionTimeout());
      assertTrue(hikariDataSource0.isJdbc4ConnectionTest());
      assertNotNull(hikariDataSource0);
      assertFalse(hikariDataSource0.isShutdown);
      assertEquals(0, hikariDataSource0.loginTimeout);
      
      hikariConfig0.setDataSource(hikariDataSource0);
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertNull(hikariConfig0.getCatalog());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals("HikariPool-1", hikariDataSource0.getPoolName());
      assertEquals(60, hikariDataSource0.getMaximumPoolSize());
      assertTrue(hikariDataSource0.isAutoCommit());
      assertNull(hikariDataSource0.getConnectionCustomizerClassName());
      assertNull(hikariDataSource0.getConnectionInitSql());
      assertNull(hikariDataSource0.getConnectionTestQuery());
      assertNull(hikariDataSource0.getDataSourceClassName());
      assertEquals(3, hikariDataSource0.getAcquireRetries());
      assertEquals(10, hikariDataSource0.getMinimumPoolSize());
      assertEquals((-1), hikariDataSource0.getTransactionIsolation());
      assertFalse(hikariDataSource0.isRegisterMbeans());
      assertFalse(hikariDataSource0.getisShutdown());
      assertFalse(hikariDataSource0.isInitializationFailFast());
      assertEquals(1800000L, hikariDataSource0.getMaxLifetime());
      assertEquals(600000L, hikariDataSource0.getIdleTimeout());
      assertNull(hikariDataSource0.getCatalog());
      assertEquals(0, hikariDataSource0.getLoginTimeout());
      assertEquals(0L, hikariDataSource0.getLeakDetectionThreshold());
      assertEquals(0, hikariDataSource0.getAcquireIncrement());
      assertEquals(0L, hikariDataSource0.getAcquireRetryDelay());
      assertEquals(5000L, hikariDataSource0.getConnectionTimeout());
      assertTrue(hikariDataSource0.isJdbc4ConnectionTest());
      assertFalse(hikariDataSource0.isShutdown);
      assertEquals(0, hikariDataSource0.loginTimeout);
      
      String string0 = "<h*3tU31q8JLA&<";
      hikariConfig0.copyState(hikariDataSource0);
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertNull(hikariConfig0.getCatalog());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals("HikariPool-0", hikariDataSource0.getPoolName());
      assertEquals(60, hikariDataSource0.getMaximumPoolSize());
      assertTrue(hikariDataSource0.isAutoCommit());
      assertNull(hikariDataSource0.getConnectionCustomizerClassName());
      assertNull(hikariDataSource0.getConnectionInitSql());
      assertNull(hikariDataSource0.getConnectionTestQuery());
      assertNull(hikariDataSource0.getDataSourceClassName());
      assertEquals(3, hikariDataSource0.getAcquireRetries());
      assertEquals(10, hikariDataSource0.getMinimumPoolSize());
      assertEquals((-1), hikariDataSource0.getTransactionIsolation());
      assertFalse(hikariDataSource0.isRegisterMbeans());
      assertFalse(hikariDataSource0.getisShutdown());
      assertFalse(hikariDataSource0.isInitializationFailFast());
      assertEquals(1800000L, hikariDataSource0.getMaxLifetime());
      assertEquals(600000L, hikariDataSource0.getIdleTimeout());
      assertNull(hikariDataSource0.getCatalog());
      assertEquals(0, hikariDataSource0.getLoginTimeout());
      assertEquals(0L, hikariDataSource0.getLeakDetectionThreshold());
      assertEquals(0, hikariDataSource0.getAcquireIncrement());
      assertEquals(0L, hikariDataSource0.getAcquireRetryDelay());
      assertEquals(5000L, hikariDataSource0.getConnectionTimeout());
      assertTrue(hikariDataSource0.isJdbc4ConnectionTest());
      assertFalse(hikariDataSource0.isShutdown);
      assertEquals(0, hikariDataSource0.loginTimeout);
      
      HikariPool hikariPool0 = null;
      try {
        hikariPool0 = new HikariPool(hikariConfig0);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
      }
  }

  @Test(timeout = 11000)
  public void test53()  throws Throwable  {
      HikariConfig hikariConfig0 = new HikariConfig();
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertNotNull(hikariConfig0);
      
      String string0 = "z~NH}l5*1f$G/";
      hikariConfig0.setCatalog(string0);
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      
      HikariDataSource hikariDataSource0 = new HikariDataSource();
      assertEquals(0L, hikariDataSource0.getAcquireRetryDelay());
      assertEquals(10, hikariDataSource0.getMinimumPoolSize());
      assertEquals("HikariPool-1", hikariDataSource0.getPoolName());
      assertEquals(5000L, hikariDataSource0.getConnectionTimeout());
      assertEquals(0, hikariDataSource0.getLoginTimeout());
      assertEquals(1800000L, hikariDataSource0.getMaxLifetime());
      assertEquals(3, hikariDataSource0.getAcquireRetries());
      assertEquals(600000L, hikariDataSource0.getIdleTimeout());
      assertNull(hikariDataSource0.getDataSourceClassName());
      assertNull(hikariDataSource0.getConnectionTestQuery());
      assertEquals((-1), hikariDataSource0.getTransactionIsolation());
      assertFalse(hikariDataSource0.isInitializationFailFast());
      assertEquals(0L, hikariDataSource0.getLeakDetectionThreshold());
      assertEquals(0, hikariDataSource0.getAcquireIncrement());
      assertTrue(hikariDataSource0.isJdbc4ConnectionTest());
      assertEquals(60, hikariDataSource0.getMaximumPoolSize());
      assertTrue(hikariDataSource0.isAutoCommit());
      assertNull(hikariDataSource0.getConnectionCustomizerClassName());
      assertFalse(hikariDataSource0.isRegisterMbeans());
      assertFalse(hikariDataSource0.getisShutdown());
      assertNull(hikariDataSource0.getCatalog());
      assertNull(hikariDataSource0.getConnectionInitSql());
      assertNotNull(hikariDataSource0);
      assertFalse(hikariDataSource0.isShutdown);
      assertEquals(0, hikariDataSource0.loginTimeout);
      
      hikariConfig0.setDataSource(hikariDataSource0);
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals(0L, hikariDataSource0.getAcquireRetryDelay());
      assertEquals(10, hikariDataSource0.getMinimumPoolSize());
      assertEquals("HikariPool-1", hikariDataSource0.getPoolName());
      assertEquals(5000L, hikariDataSource0.getConnectionTimeout());
      assertEquals(0, hikariDataSource0.getLoginTimeout());
      assertEquals(1800000L, hikariDataSource0.getMaxLifetime());
      assertEquals(3, hikariDataSource0.getAcquireRetries());
      assertEquals(600000L, hikariDataSource0.getIdleTimeout());
      assertNull(hikariDataSource0.getDataSourceClassName());
      assertNull(hikariDataSource0.getConnectionTestQuery());
      assertEquals((-1), hikariDataSource0.getTransactionIsolation());
      assertFalse(hikariDataSource0.isInitializationFailFast());
      assertEquals(0L, hikariDataSource0.getLeakDetectionThreshold());
      assertEquals(0, hikariDataSource0.getAcquireIncrement());
      assertTrue(hikariDataSource0.isJdbc4ConnectionTest());
      assertEquals(60, hikariDataSource0.getMaximumPoolSize());
      assertTrue(hikariDataSource0.isAutoCommit());
      assertNull(hikariDataSource0.getConnectionCustomizerClassName());
      assertFalse(hikariDataSource0.isRegisterMbeans());
      assertFalse(hikariDataSource0.getisShutdown());
      assertNull(hikariDataSource0.getCatalog());
      assertNull(hikariDataSource0.getConnectionInitSql());
      assertFalse(hikariDataSource0.isShutdown);
      assertEquals(0, hikariDataSource0.loginTimeout);
      
      String string1 = "<h*3tU31q8JLA&<";
      HikariPool hikariPool0 = new HikariPool(hikariConfig0);
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertFalse(hikariPool0.getshutdown());
      assertFalse(hikariPool0.getdebug());
      assertEquals(10, hikariPool0.getTotalConnections());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertTrue(hikariPool0.getisAutoCommit());
      assertEquals("z~NH}l5*1f$G/", hikariPool0.getcatalog());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertNotNull(hikariPool0);
      assertTrue(hikariPool0.isAutoCommit);
      assertFalse(hikariPool0.debug);
      assertFalse(hikariPool0.shutdown);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      
      hikariPool0.shutdown();
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertFalse(hikariPool0.getdebug());
      assertEquals(10, hikariPool0.getTotalConnections());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertTrue(hikariPool0.getisAutoCommit());
      assertTrue(hikariPool0.getshutdown());
      assertEquals("z~NH}l5*1f$G/", hikariPool0.getcatalog());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertTrue(hikariPool0.isAutoCommit);
      assertFalse(hikariPool0.debug);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertTrue(hikariPool0.shutdown);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      
      long long0 = 959L;
      boolean boolean0 = hikariPool0.getshutdown();
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertFalse(hikariPool0.getdebug());
      assertEquals(10, hikariPool0.getTotalConnections());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertTrue(hikariPool0.getisAutoCommit());
      assertTrue(hikariPool0.getshutdown());
      assertEquals("z~NH}l5*1f$G/", hikariPool0.getcatalog());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertTrue(boolean0);
      assertTrue(hikariPool0.isAutoCommit);
      assertFalse(hikariPool0.debug);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertTrue(hikariPool0.shutdown);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      
      int int0 = hikariPool0.getActiveConnections();
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertFalse(hikariPool0.getdebug());
      assertEquals(10, hikariPool0.getTotalConnections());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertTrue(hikariPool0.getisAutoCommit());
      assertTrue(hikariPool0.getshutdown());
      assertEquals("z~NH}l5*1f$G/", hikariPool0.getcatalog());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertEquals(10, int0);
      assertTrue(hikariPool0.isAutoCommit);
      assertFalse(hikariPool0.debug);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertTrue(hikariPool0.shutdown);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      
      boolean boolean1 = hikariPool0.getjdbc4ConnectionTest();
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertFalse(hikariPool0.getdebug());
      assertEquals(10, hikariPool0.getTotalConnections());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertTrue(hikariPool0.getisAutoCommit());
      assertTrue(hikariPool0.getshutdown());
      assertEquals("z~NH}l5*1f$G/", hikariPool0.getcatalog());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertTrue(boolean1 == boolean0);
      assertTrue(boolean1);
      assertTrue(hikariPool0.isAutoCommit);
      assertFalse(hikariPool0.debug);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertTrue(hikariPool0.shutdown);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      
      HikariPool.HouseKeeper hikariPool_HouseKeeper0 = hikariPool0.new HouseKeeper();
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertFalse(hikariPool0.getdebug());
      assertEquals(10, hikariPool0.getTotalConnections());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertTrue(hikariPool0.getisAutoCommit());
      assertTrue(hikariPool0.getshutdown());
      assertEquals("z~NH}l5*1f$G/", hikariPool0.getcatalog());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertEquals(0L, hikariPool_HouseKeeper0.scheduledExecutionTime());
      assertNotNull(hikariPool_HouseKeeper0);
      assertTrue(hikariPool0.isAutoCommit);
      assertFalse(hikariPool0.debug);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertTrue(hikariPool0.shutdown);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      
      hikariPool_HouseKeeper0.run();
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertFalse(hikariPool0.getdebug());
      assertEquals(10, hikariPool0.getTotalConnections());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertTrue(hikariPool0.getisAutoCommit());
      assertTrue(hikariPool0.getshutdown());
      assertEquals("z~NH}l5*1f$G/", hikariPool0.getcatalog());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertEquals(0L, hikariPool_HouseKeeper0.scheduledExecutionTime());
      assertTrue(hikariPool0.isAutoCommit);
      assertFalse(hikariPool0.debug);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertTrue(hikariPool0.shutdown);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      
      hikariPool0.fillPool();
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertFalse(hikariPool0.getdebug());
      assertEquals(10, hikariPool0.getTotalConnections());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertTrue(hikariPool0.getisAutoCommit());
      assertTrue(hikariPool0.getshutdown());
      assertEquals("z~NH}l5*1f$G/", hikariPool0.getcatalog());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertTrue(hikariPool0.isAutoCommit);
      assertFalse(hikariPool0.debug);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertTrue(hikariPool0.shutdown);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
  }

  @Test(timeout = 11000)
  public void test54()  throws Throwable  {
      HikariConfig hikariConfig0 = new HikariConfig();
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isAutoCommit());
      assertNull(hikariConfig0.getCatalog());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertNotNull(hikariConfig0);
      
      HikariDataSource hikariDataSource0 = new HikariDataSource();
      assertFalse(hikariDataSource0.getisShutdown());
      assertFalse(hikariDataSource0.isRegisterMbeans());
      assertEquals(1800000L, hikariDataSource0.getMaxLifetime());
      assertEquals(600000L, hikariDataSource0.getIdleTimeout());
      assertEquals(0, hikariDataSource0.getLoginTimeout());
      assertEquals(0L, hikariDataSource0.getLeakDetectionThreshold());
      assertEquals(3, hikariDataSource0.getAcquireRetries());
      assertEquals(0, hikariDataSource0.getAcquireIncrement());
      assertNull(hikariDataSource0.getConnectionTestQuery());
      assertEquals(0L, hikariDataSource0.getAcquireRetryDelay());
      assertFalse(hikariDataSource0.isInitializationFailFast());
      assertEquals(5000L, hikariDataSource0.getConnectionTimeout());
      assertTrue(hikariDataSource0.isJdbc4ConnectionTest());
      assertNull(hikariDataSource0.getConnectionCustomizerClassName());
      assertEquals("HikariPool-1", hikariDataSource0.getPoolName());
      assertNull(hikariDataSource0.getDataSourceClassName());
      assertEquals(60, hikariDataSource0.getMaximumPoolSize());
      assertNull(hikariDataSource0.getConnectionInitSql());
      assertEquals(10, hikariDataSource0.getMinimumPoolSize());
      assertNull(hikariDataSource0.getCatalog());
      assertEquals((-1), hikariDataSource0.getTransactionIsolation());
      assertTrue(hikariDataSource0.isAutoCommit());
      assertNotNull(hikariDataSource0);
      assertFalse(hikariDataSource0.isShutdown);
      assertEquals(0, hikariDataSource0.loginTimeout);
      
      hikariConfig0.setDataSource(hikariDataSource0);
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isAutoCommit());
      assertNull(hikariConfig0.getCatalog());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertFalse(hikariDataSource0.getisShutdown());
      assertFalse(hikariDataSource0.isRegisterMbeans());
      assertEquals(1800000L, hikariDataSource0.getMaxLifetime());
      assertEquals(600000L, hikariDataSource0.getIdleTimeout());
      assertEquals(0, hikariDataSource0.getLoginTimeout());
      assertEquals(0L, hikariDataSource0.getLeakDetectionThreshold());
      assertEquals(3, hikariDataSource0.getAcquireRetries());
      assertEquals(0, hikariDataSource0.getAcquireIncrement());
      assertNull(hikariDataSource0.getConnectionTestQuery());
      assertEquals(0L, hikariDataSource0.getAcquireRetryDelay());
      assertFalse(hikariDataSource0.isInitializationFailFast());
      assertEquals(5000L, hikariDataSource0.getConnectionTimeout());
      assertTrue(hikariDataSource0.isJdbc4ConnectionTest());
      assertNull(hikariDataSource0.getConnectionCustomizerClassName());
      assertEquals("HikariPool-1", hikariDataSource0.getPoolName());
      assertNull(hikariDataSource0.getDataSourceClassName());
      assertEquals(60, hikariDataSource0.getMaximumPoolSize());
      assertNull(hikariDataSource0.getConnectionInitSql());
      assertEquals(10, hikariDataSource0.getMinimumPoolSize());
      assertNull(hikariDataSource0.getCatalog());
      assertEquals((-1), hikariDataSource0.getTransactionIsolation());
      assertTrue(hikariDataSource0.isAutoCommit());
      assertFalse(hikariDataSource0.isShutdown);
      assertEquals(0, hikariDataSource0.loginTimeout);
      
      String string0 = "<h*3tU31q8JLA&<";
      HikariPool hikariPool0 = new HikariPool(hikariConfig0);
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isAutoCommit());
      assertNull(hikariConfig0.getCatalog());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertFalse(hikariPool0.getdebug());
      assertNull(hikariPool0.getcatalog());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertFalse(hikariPool0.getshutdown());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertEquals(10, hikariPool0.getTotalConnections());
      assertTrue(hikariPool0.getisAutoCommit());
      assertNotNull(hikariPool0);
      assertTrue(hikariPool0.isAutoCommit);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertFalse(hikariPool0.shutdown);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertFalse(hikariPool0.debug);
      
      hikariPool0.bagIsEmpty();
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isAutoCommit());
      assertNull(hikariConfig0.getCatalog());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertFalse(hikariPool0.getdebug());
      assertNull(hikariPool0.getcatalog());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertFalse(hikariPool0.getshutdown());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertEquals(11, hikariPool0.getTotalConnections());
      assertTrue(hikariPool0.getisAutoCommit());
      assertTrue(hikariPool0.isAutoCommit);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertFalse(hikariPool0.shutdown);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertFalse(hikariPool0.debug);
      
      hikariPool0.shutdown();
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isAutoCommit());
      assertNull(hikariConfig0.getCatalog());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertFalse(hikariPool0.getdebug());
      assertNull(hikariPool0.getcatalog());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertEquals(11, hikariPool0.getTotalConnections());
      assertTrue(hikariPool0.getshutdown());
      assertTrue(hikariPool0.getisAutoCommit());
      assertTrue(hikariPool0.isAutoCommit);
      assertTrue(hikariPool0.shutdown);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertFalse(hikariPool0.debug);
      
      long long0 = 959L;
      boolean boolean0 = hikariPool0.getshutdown();
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isAutoCommit());
      assertNull(hikariConfig0.getCatalog());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertFalse(hikariPool0.getdebug());
      assertNull(hikariPool0.getcatalog());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertEquals(11, hikariPool0.getTotalConnections());
      assertTrue(hikariPool0.getshutdown());
      assertTrue(hikariPool0.getisAutoCommit());
      assertTrue(boolean0);
      assertTrue(hikariPool0.isAutoCommit);
      assertTrue(hikariPool0.shutdown);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertFalse(hikariPool0.debug);
      
      int int0 = hikariPool0.getActiveConnections();
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isAutoCommit());
      assertNull(hikariConfig0.getCatalog());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertFalse(hikariPool0.getdebug());
      assertNull(hikariPool0.getcatalog());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertEquals(11, hikariPool0.getTotalConnections());
      assertTrue(hikariPool0.getshutdown());
      assertTrue(hikariPool0.getisAutoCommit());
      assertEquals(11, int0);
      assertTrue(hikariPool0.isAutoCommit);
      assertTrue(hikariPool0.shutdown);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertFalse(hikariPool0.debug);
      
      SerializedObjectSupporter serializedObjectSupporter0 = new SerializedObjectSupporter();
      assertNotNull(serializedObjectSupporter0);
      
      hikariPool0.serializedObjectSupporter = serializedObjectSupporter0;
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isAutoCommit());
      assertNull(hikariConfig0.getCatalog());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertFalse(hikariPool0.getdebug());
      assertNull(hikariPool0.getcatalog());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertEquals(11, hikariPool0.getTotalConnections());
      assertTrue(hikariPool0.getshutdown());
      assertTrue(hikariPool0.getisAutoCommit());
      
      boolean boolean1 = hikariPool0.getjdbc4ConnectionTest();
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isAutoCommit());
      assertNull(hikariConfig0.getCatalog());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertFalse(hikariPool0.getdebug());
      assertNull(hikariPool0.getcatalog());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertEquals(11, hikariPool0.getTotalConnections());
      assertTrue(hikariPool0.getshutdown());
      assertTrue(hikariPool0.getisAutoCommit());
      assertTrue(boolean1 == boolean0);
      assertTrue(boolean1);
      assertTrue(hikariPool0.isAutoCommit);
      assertTrue(hikariPool0.shutdown);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertFalse(hikariPool0.debug);
      
      HikariPool.HouseKeeper hikariPool_HouseKeeper0 = hikariPool0.new HouseKeeper();
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isAutoCommit());
      assertNull(hikariConfig0.getCatalog());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertFalse(hikariPool0.getdebug());
      assertNull(hikariPool0.getcatalog());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertEquals(11, hikariPool0.getTotalConnections());
      assertTrue(hikariPool0.getshutdown());
      assertTrue(hikariPool0.getisAutoCommit());
      assertEquals(0L, hikariPool_HouseKeeper0.scheduledExecutionTime());
      assertNotNull(hikariPool_HouseKeeper0);
      assertTrue(hikariPool0.isAutoCommit);
      assertTrue(hikariPool0.shutdown);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertFalse(hikariPool0.debug);
      
      hikariPool_HouseKeeper0.run();
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isAutoCommit());
      assertNull(hikariConfig0.getCatalog());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertFalse(hikariPool0.getdebug());
      assertNull(hikariPool0.getcatalog());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertEquals(11, hikariPool0.getTotalConnections());
      assertTrue(hikariPool0.getshutdown());
      assertTrue(hikariPool0.getisAutoCommit());
      assertEquals(0L, hikariPool_HouseKeeper0.scheduledExecutionTime());
      assertTrue(hikariPool0.isAutoCommit);
      assertTrue(hikariPool0.shutdown);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertFalse(hikariPool0.debug);
      
      long long1 = hikariPool0.getleakDetectionThreshold();
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isAutoCommit());
      assertNull(hikariConfig0.getCatalog());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertFalse(hikariPool0.getdebug());
      assertNull(hikariPool0.getcatalog());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertEquals(11, hikariPool0.getTotalConnections());
      assertTrue(hikariPool0.getshutdown());
      assertTrue(hikariPool0.getisAutoCommit());
      assertFalse(long1 == long0);
      assertEquals(0L, long1);
      assertTrue(hikariPool0.isAutoCommit);
      assertTrue(hikariPool0.shutdown);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertFalse(hikariPool0.debug);
  }

  @Test(timeout = 11000)
  public void test55()  throws Throwable  {
      HikariConfig hikariConfig0 = new HikariConfig();
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertTrue(hikariConfig0.isAutoCommit());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertNotNull(hikariConfig0);
      
      HikariDataSource hikariDataSource0 = new HikariDataSource();
      assertNull(hikariDataSource0.getDataSourceClassName());
      assertEquals(0L, hikariDataSource0.getAcquireRetryDelay());
      assertNull(hikariDataSource0.getConnectionCustomizerClassName());
      assertTrue(hikariDataSource0.isAutoCommit());
      assertNull(hikariDataSource0.getCatalog());
      assertEquals(0, hikariDataSource0.getAcquireIncrement());
      assertNull(hikariDataSource0.getConnectionInitSql());
      assertEquals(0L, hikariDataSource0.getLeakDetectionThreshold());
      assertEquals(60, hikariDataSource0.getMaximumPoolSize());
      assertFalse(hikariDataSource0.isInitializationFailFast());
      assertEquals(600000L, hikariDataSource0.getIdleTimeout());
      assertEquals((-1), hikariDataSource0.getTransactionIsolation());
      assertFalse(hikariDataSource0.isRegisterMbeans());
      assertFalse(hikariDataSource0.getisShutdown());
      assertTrue(hikariDataSource0.isJdbc4ConnectionTest());
      assertEquals(5000L, hikariDataSource0.getConnectionTimeout());
      assertEquals(10, hikariDataSource0.getMinimumPoolSize());
      assertEquals(0, hikariDataSource0.getLoginTimeout());
      assertEquals(3, hikariDataSource0.getAcquireRetries());
      assertEquals("HikariPool-1", hikariDataSource0.getPoolName());
      assertNull(hikariDataSource0.getConnectionTestQuery());
      assertEquals(1800000L, hikariDataSource0.getMaxLifetime());
      assertNotNull(hikariDataSource0);
      assertFalse(hikariDataSource0.isShutdown);
      assertEquals(0, hikariDataSource0.loginTimeout);
      
      hikariConfig0.setDataSource(hikariDataSource0);
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertTrue(hikariConfig0.isAutoCommit());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertNull(hikariDataSource0.getDataSourceClassName());
      assertEquals(0L, hikariDataSource0.getAcquireRetryDelay());
      assertNull(hikariDataSource0.getConnectionCustomizerClassName());
      assertTrue(hikariDataSource0.isAutoCommit());
      assertNull(hikariDataSource0.getCatalog());
      assertEquals(0, hikariDataSource0.getAcquireIncrement());
      assertNull(hikariDataSource0.getConnectionInitSql());
      assertEquals(0L, hikariDataSource0.getLeakDetectionThreshold());
      assertEquals(60, hikariDataSource0.getMaximumPoolSize());
      assertFalse(hikariDataSource0.isInitializationFailFast());
      assertEquals(600000L, hikariDataSource0.getIdleTimeout());
      assertEquals((-1), hikariDataSource0.getTransactionIsolation());
      assertFalse(hikariDataSource0.isRegisterMbeans());
      assertFalse(hikariDataSource0.getisShutdown());
      assertTrue(hikariDataSource0.isJdbc4ConnectionTest());
      assertEquals(5000L, hikariDataSource0.getConnectionTimeout());
      assertEquals(10, hikariDataSource0.getMinimumPoolSize());
      assertEquals(0, hikariDataSource0.getLoginTimeout());
      assertEquals(3, hikariDataSource0.getAcquireRetries());
      assertEquals("HikariPool-1", hikariDataSource0.getPoolName());
      assertNull(hikariDataSource0.getConnectionTestQuery());
      assertEquals(1800000L, hikariDataSource0.getMaxLifetime());
      assertFalse(hikariDataSource0.isShutdown);
      assertEquals(0, hikariDataSource0.loginTimeout);
      
      String string0 = "<h*3tU31q8JLA&<";
      HikariPool hikariPool0 = new HikariPool(hikariConfig0);
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertTrue(hikariConfig0.isAutoCommit());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertTrue(hikariPool0.getisAutoCommit());
      assertEquals(10, hikariPool0.getTotalConnections());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertFalse(hikariPool0.getdebug());
      assertFalse(hikariPool0.getshutdown());
      assertNull(hikariPool0.getcatalog());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertNotNull(hikariPool0);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertFalse(hikariPool0.shutdown);
      assertFalse(hikariPool0.debug);
      assertTrue(hikariPool0.isAutoCommit);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      
      hikariPool0.bagIsEmpty();
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertTrue(hikariConfig0.isAutoCommit());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertTrue(hikariPool0.getisAutoCommit());
      assertEquals(11, hikariPool0.getTotalConnections());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertFalse(hikariPool0.getdebug());
      assertFalse(hikariPool0.getshutdown());
      assertNull(hikariPool0.getcatalog());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertFalse(hikariPool0.shutdown);
      assertFalse(hikariPool0.debug);
      assertTrue(hikariPool0.isAutoCommit);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      
      hikariPool0.shutdown();
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertTrue(hikariConfig0.isAutoCommit());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertTrue(hikariPool0.getisAutoCommit());
      assertEquals(11, hikariPool0.getTotalConnections());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertFalse(hikariPool0.getdebug());
      assertNull(hikariPool0.getcatalog());
      assertTrue(hikariPool0.getshutdown());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertTrue(hikariPool0.shutdown);
      assertFalse(hikariPool0.debug);
      assertTrue(hikariPool0.isAutoCommit);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      
      long long0 = 959L;
      int int0 = hikariPool0.getActiveConnections();
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertTrue(hikariConfig0.isAutoCommit());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertTrue(hikariPool0.getisAutoCommit());
      assertEquals(11, hikariPool0.getTotalConnections());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertFalse(hikariPool0.getdebug());
      assertNull(hikariPool0.getcatalog());
      assertTrue(hikariPool0.getshutdown());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertEquals(11, int0);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertTrue(hikariPool0.shutdown);
      assertFalse(hikariPool0.debug);
      assertTrue(hikariPool0.isAutoCommit);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      
      SerializedObjectSupporter serializedObjectSupporter0 = new SerializedObjectSupporter();
      assertNotNull(serializedObjectSupporter0);
      
      hikariPool0.serializedObjectSupporter = serializedObjectSupporter0;
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertTrue(hikariConfig0.isAutoCommit());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertTrue(hikariPool0.getisAutoCommit());
      assertEquals(11, hikariPool0.getTotalConnections());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertFalse(hikariPool0.getdebug());
      assertNull(hikariPool0.getcatalog());
      assertTrue(hikariPool0.getshutdown());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      
      boolean boolean0 = hikariPool0.getjdbc4ConnectionTest();
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertTrue(hikariConfig0.isAutoCommit());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertTrue(hikariPool0.getisAutoCommit());
      assertEquals(11, hikariPool0.getTotalConnections());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertFalse(hikariPool0.getdebug());
      assertNull(hikariPool0.getcatalog());
      assertTrue(hikariPool0.getshutdown());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertTrue(boolean0);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertTrue(hikariPool0.shutdown);
      assertFalse(hikariPool0.debug);
      assertTrue(hikariPool0.isAutoCommit);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      
      HikariPool.HouseKeeper hikariPool_HouseKeeper0 = hikariPool0.new HouseKeeper();
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertTrue(hikariConfig0.isAutoCommit());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertTrue(hikariPool0.getisAutoCommit());
      assertEquals(11, hikariPool0.getTotalConnections());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertFalse(hikariPool0.getdebug());
      assertNull(hikariPool0.getcatalog());
      assertTrue(hikariPool0.getshutdown());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertEquals(0L, hikariPool_HouseKeeper0.scheduledExecutionTime());
      assertNotNull(hikariPool_HouseKeeper0);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertTrue(hikariPool0.shutdown);
      assertFalse(hikariPool0.debug);
      assertTrue(hikariPool0.isAutoCommit);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      
      hikariPool_HouseKeeper0.run();
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertTrue(hikariConfig0.isAutoCommit());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertTrue(hikariPool0.getisAutoCommit());
      assertEquals(11, hikariPool0.getTotalConnections());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertFalse(hikariPool0.getdebug());
      assertNull(hikariPool0.getcatalog());
      assertTrue(hikariPool0.getshutdown());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertEquals(0L, hikariPool_HouseKeeper0.scheduledExecutionTime());
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertTrue(hikariPool0.shutdown);
      assertFalse(hikariPool0.debug);
      assertTrue(hikariPool0.isAutoCommit);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      
      hikariPool0.fillPool();
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertTrue(hikariConfig0.isAutoCommit());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertTrue(hikariPool0.getisAutoCommit());
      assertEquals(11, hikariPool0.getTotalConnections());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertFalse(hikariPool0.getdebug());
      assertNull(hikariPool0.getcatalog());
      assertTrue(hikariPool0.getshutdown());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertTrue(hikariPool0.shutdown);
      assertFalse(hikariPool0.debug);
      assertTrue(hikariPool0.isAutoCommit);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
  }

  @Test(timeout = 11000)
  public void test56()  throws Throwable  {
      HikariConfig hikariConfig0 = new HikariConfig();
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertTrue(hikariConfig0.isAutoCommit());
      assertNotNull(hikariConfig0);
      
      String string0 = "(I)Ljava/lang/String;";
      hikariConfig0.setConnectionCustomizerClassName(string0);
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertEquals("(I)Ljava/lang/String;", hikariConfig0.getConnectionCustomizerClassName());
      assertTrue(hikariConfig0.isAutoCommit());
      
      String string1 = "z~NH}l5*1f$G/";
      HikariDataSource hikariDataSource0 = new HikariDataSource();
      assertFalse(hikariDataSource0.getisShutdown());
      assertFalse(hikariDataSource0.isRegisterMbeans());
      assertFalse(hikariDataSource0.isInitializationFailFast());
      assertEquals(5000L, hikariDataSource0.getConnectionTimeout());
      assertNull(hikariDataSource0.getConnectionInitSql());
      assertEquals(0L, hikariDataSource0.getLeakDetectionThreshold());
      assertEquals(0, hikariDataSource0.getAcquireIncrement());
      assertNull(hikariDataSource0.getCatalog());
      assertEquals(60, hikariDataSource0.getMaximumPoolSize());
      assertNull(hikariDataSource0.getConnectionCustomizerClassName());
      assertEquals("HikariPool-1", hikariDataSource0.getPoolName());
      assertNull(hikariDataSource0.getDataSourceClassName());
      assertTrue(hikariDataSource0.isJdbc4ConnectionTest());
      assertTrue(hikariDataSource0.isAutoCommit());
      assertEquals(0, hikariDataSource0.getLoginTimeout());
      assertEquals(3, hikariDataSource0.getAcquireRetries());
      assertNull(hikariDataSource0.getConnectionTestQuery());
      assertEquals(0L, hikariDataSource0.getAcquireRetryDelay());
      assertEquals(10, hikariDataSource0.getMinimumPoolSize());
      assertEquals((-1), hikariDataSource0.getTransactionIsolation());
      assertEquals(1800000L, hikariDataSource0.getMaxLifetime());
      assertEquals(600000L, hikariDataSource0.getIdleTimeout());
      assertNotNull(hikariDataSource0);
      assertFalse(hikariDataSource0.isShutdown);
      assertEquals(0, hikariDataSource0.loginTimeout);
      
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      String string2 = "sQMQ\\\\=p6;m-2V?P ";
      hikariConfig0.setConnectionTestQuery(string2);
      assertNotSame(string2, string0);
      assertNotSame(string2, string1);
      assertEquals("sQMQ\\\\=p6;m-2V?P ", hikariConfig0.getConnectionTestQuery());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertEquals("(I)Ljava/lang/String;", hikariConfig0.getConnectionCustomizerClassName());
      assertTrue(hikariConfig0.isAutoCommit());
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      
      hikariConfig0.setDataSource(hikariDataSource0);
      assertEquals("sQMQ\\\\=p6;m-2V?P ", hikariConfig0.getConnectionTestQuery());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertEquals("(I)Ljava/lang/String;", hikariConfig0.getConnectionCustomizerClassName());
      assertTrue(hikariConfig0.isAutoCommit());
      assertFalse(hikariDataSource0.getisShutdown());
      assertFalse(hikariDataSource0.isRegisterMbeans());
      assertFalse(hikariDataSource0.isInitializationFailFast());
      assertEquals(5000L, hikariDataSource0.getConnectionTimeout());
      assertNull(hikariDataSource0.getConnectionInitSql());
      assertEquals(0L, hikariDataSource0.getLeakDetectionThreshold());
      assertEquals(0, hikariDataSource0.getAcquireIncrement());
      assertNull(hikariDataSource0.getCatalog());
      assertEquals(60, hikariDataSource0.getMaximumPoolSize());
      assertNull(hikariDataSource0.getConnectionCustomizerClassName());
      assertEquals("HikariPool-1", hikariDataSource0.getPoolName());
      assertNull(hikariDataSource0.getDataSourceClassName());
      assertTrue(hikariDataSource0.isJdbc4ConnectionTest());
      assertTrue(hikariDataSource0.isAutoCommit());
      assertEquals(0, hikariDataSource0.getLoginTimeout());
      assertEquals(3, hikariDataSource0.getAcquireRetries());
      assertNull(hikariDataSource0.getConnectionTestQuery());
      assertEquals(0L, hikariDataSource0.getAcquireRetryDelay());
      assertEquals(10, hikariDataSource0.getMinimumPoolSize());
      assertEquals((-1), hikariDataSource0.getTransactionIsolation());
      assertEquals(1800000L, hikariDataSource0.getMaxLifetime());
      assertEquals(600000L, hikariDataSource0.getIdleTimeout());
      assertFalse(hikariDataSource0.isShutdown);
      assertEquals(0, hikariDataSource0.loginTimeout);
      
      String string3 = "<h*3tU31q8JLA&<";
      hikariConfig0.setDataSourceClassName(string3);
      assertNotSame(string3, string2);
      assertNotSame(string3, string0);
      assertNotSame(string3, string1);
      assertEquals("sQMQ\\\\=p6;m-2V?P ", hikariConfig0.getConnectionTestQuery());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals("<h*3tU31q8JLA&<", hikariConfig0.getDataSourceClassName());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertEquals("(I)Ljava/lang/String;", hikariConfig0.getConnectionCustomizerClassName());
      assertTrue(hikariConfig0.isAutoCommit());
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      
      HikariPool hikariPool0 = new HikariPool(hikariConfig0);
      assertEquals("sQMQ\\\\=p6;m-2V?P ", hikariConfig0.getConnectionTestQuery());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals("<h*3tU31q8JLA&<", hikariConfig0.getDataSourceClassName());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertTrue(hikariConfig0.isAutoCommit());
      assertFalse(hikariPool0.getdebug());
      assertNull(hikariPool0.getcatalog());
      assertTrue(hikariPool0.getisAutoCommit());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertEquals(10, hikariPool0.getTotalConnections());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertFalse(hikariPool0.getshutdown());
      assertNotNull(hikariPool0);
      assertFalse(hikariPool0.shutdown);
      assertFalse(hikariPool0.debug);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertTrue(hikariPool0.isAutoCommit);
      assertFalse(hikariPool0.isRegisteredMbeans);
      
      hikariPool0.setdebug(hikariDataSource0.isShutdown);
      assertEquals("sQMQ\\\\=p6;m-2V?P ", hikariConfig0.getConnectionTestQuery());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals("<h*3tU31q8JLA&<", hikariConfig0.getDataSourceClassName());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertTrue(hikariConfig0.isAutoCommit());
      assertFalse(hikariDataSource0.getisShutdown());
      assertFalse(hikariDataSource0.isRegisterMbeans());
      assertFalse(hikariDataSource0.isInitializationFailFast());
      assertEquals(1250, hikariDataSource0.getLoginTimeout());
      assertEquals(5000L, hikariDataSource0.getConnectionTimeout());
      assertNull(hikariDataSource0.getConnectionInitSql());
      assertEquals(0L, hikariDataSource0.getLeakDetectionThreshold());
      assertEquals(0, hikariDataSource0.getAcquireIncrement());
      assertNull(hikariDataSource0.getCatalog());
      assertEquals(60, hikariDataSource0.getMaximumPoolSize());
      assertNull(hikariDataSource0.getConnectionCustomizerClassName());
      assertEquals("HikariPool-1", hikariDataSource0.getPoolName());
      assertNull(hikariDataSource0.getDataSourceClassName());
      assertTrue(hikariDataSource0.isJdbc4ConnectionTest());
      assertTrue(hikariDataSource0.isAutoCommit());
      assertEquals(3, hikariDataSource0.getAcquireRetries());
      assertNull(hikariDataSource0.getConnectionTestQuery());
      assertEquals(0L, hikariDataSource0.getAcquireRetryDelay());
      assertEquals(10, hikariDataSource0.getMinimumPoolSize());
      assertEquals((-1), hikariDataSource0.getTransactionIsolation());
      assertEquals(1800000L, hikariDataSource0.getMaxLifetime());
      assertEquals(600000L, hikariDataSource0.getIdleTimeout());
      assertFalse(hikariPool0.getdebug());
      assertNull(hikariPool0.getcatalog());
      assertTrue(hikariPool0.getisAutoCommit());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertEquals(10, hikariPool0.getTotalConnections());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertFalse(hikariPool0.getshutdown());
      assertFalse(hikariDataSource0.isShutdown);
      assertEquals(1250, hikariDataSource0.loginTimeout);
      assertFalse(hikariPool0.shutdown);
      assertFalse(hikariPool0.debug);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertTrue(hikariPool0.isAutoCommit);
      assertFalse(hikariPool0.isRegisteredMbeans);
      
      ConcurrentBag<IHikariConnectionProxy> concurrentBag0 = hikariPool0.getidleConnectionBag();
      assertEquals("sQMQ\\\\=p6;m-2V?P ", hikariConfig0.getConnectionTestQuery());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals("<h*3tU31q8JLA&<", hikariConfig0.getDataSourceClassName());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertTrue(hikariConfig0.isAutoCommit());
      assertFalse(hikariPool0.getdebug());
      assertNull(hikariPool0.getcatalog());
      assertTrue(hikariPool0.getisAutoCommit());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertEquals(10, hikariPool0.getTotalConnections());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertFalse(hikariPool0.getshutdown());
      assertEquals(0, concurrentBag0.getSTATE_NOT_IN_USE());
      assertEquals((-2), concurrentBag0.getSTATE_RESERVED());
      assertEquals((-1), concurrentBag0.getSTATE_REMOVED());
      assertEquals(1, concurrentBag0.getSTATE_IN_USE());
      assertNotNull(concurrentBag0);
      assertFalse(hikariPool0.shutdown);
      assertFalse(hikariPool0.debug);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertTrue(hikariPool0.isAutoCommit);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertEquals(1, ConcurrentBag.STATE_IN_USE);
      assertEquals((-1), ConcurrentBag.STATE_REMOVED);
      assertEquals((-2), ConcurrentBag.STATE_RESERVED);
      assertEquals(0, ConcurrentBag.STATE_NOT_IN_USE);
  }

  @Test(timeout = 11000)
  public void test57()  throws Throwable  {
      HikariConfig hikariConfig0 = new HikariConfig();
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertNotNull(hikariConfig0);
      
      String string0 = "(I)Ljava/lang/String;";
      hikariConfig0.setConnectionCustomizerClassName(string0);
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals("(I)Ljava/lang/String;", hikariConfig0.getConnectionCustomizerClassName());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      
      String string1 = "z~NH}l5*1f$G/";
      HikariDataSource hikariDataSource0 = new HikariDataSource();
      assertNull(hikariDataSource0.getConnectionCustomizerClassName());
      assertEquals(0, hikariDataSource0.getLoginTimeout());
      assertEquals(0L, hikariDataSource0.getAcquireRetryDelay());
      assertNull(hikariDataSource0.getCatalog());
      assertNull(hikariDataSource0.getDataSourceClassName());
      assertTrue(hikariDataSource0.isAutoCommit());
      assertEquals("HikariPool-1", hikariDataSource0.getPoolName());
      assertEquals(10, hikariDataSource0.getMinimumPoolSize());
      assertEquals((-1), hikariDataSource0.getTransactionIsolation());
      assertEquals(1800000L, hikariDataSource0.getMaxLifetime());
      assertEquals(600000L, hikariDataSource0.getIdleTimeout());
      assertFalse(hikariDataSource0.isInitializationFailFast());
      assertNull(hikariDataSource0.getConnectionInitSql());
      assertFalse(hikariDataSource0.getisShutdown());
      assertEquals(3, hikariDataSource0.getAcquireRetries());
      assertFalse(hikariDataSource0.isRegisterMbeans());
      assertNull(hikariDataSource0.getConnectionTestQuery());
      assertEquals(5000L, hikariDataSource0.getConnectionTimeout());
      assertTrue(hikariDataSource0.isJdbc4ConnectionTest());
      assertEquals(60, hikariDataSource0.getMaximumPoolSize());
      assertEquals(0L, hikariDataSource0.getLeakDetectionThreshold());
      assertEquals(0, hikariDataSource0.getAcquireIncrement());
      assertNotNull(hikariDataSource0);
      assertFalse(hikariDataSource0.isShutdown);
      assertEquals(0, hikariDataSource0.loginTimeout);
      
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      String string2 = "sQMQ\\\\=p6;m-2V?P ";
      hikariConfig0.setConnectionTestQuery(string2);
      assertNotSame(string2, string0);
      assertNotSame(string2, string1);
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals("(I)Ljava/lang/String;", hikariConfig0.getConnectionCustomizerClassName());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals("sQMQ\\\\=p6;m-2V?P ", hikariConfig0.getConnectionTestQuery());
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      
      hikariConfig0.setDataSource(hikariDataSource0);
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals("(I)Ljava/lang/String;", hikariConfig0.getConnectionCustomizerClassName());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals("sQMQ\\\\=p6;m-2V?P ", hikariConfig0.getConnectionTestQuery());
      assertNull(hikariDataSource0.getConnectionCustomizerClassName());
      assertEquals(0, hikariDataSource0.getLoginTimeout());
      assertEquals(0L, hikariDataSource0.getAcquireRetryDelay());
      assertNull(hikariDataSource0.getCatalog());
      assertNull(hikariDataSource0.getDataSourceClassName());
      assertTrue(hikariDataSource0.isAutoCommit());
      assertEquals("HikariPool-1", hikariDataSource0.getPoolName());
      assertEquals(10, hikariDataSource0.getMinimumPoolSize());
      assertEquals((-1), hikariDataSource0.getTransactionIsolation());
      assertEquals(1800000L, hikariDataSource0.getMaxLifetime());
      assertEquals(600000L, hikariDataSource0.getIdleTimeout());
      assertFalse(hikariDataSource0.isInitializationFailFast());
      assertNull(hikariDataSource0.getConnectionInitSql());
      assertFalse(hikariDataSource0.getisShutdown());
      assertEquals(3, hikariDataSource0.getAcquireRetries());
      assertFalse(hikariDataSource0.isRegisterMbeans());
      assertNull(hikariDataSource0.getConnectionTestQuery());
      assertEquals(5000L, hikariDataSource0.getConnectionTimeout());
      assertTrue(hikariDataSource0.isJdbc4ConnectionTest());
      assertEquals(60, hikariDataSource0.getMaximumPoolSize());
      assertEquals(0L, hikariDataSource0.getLeakDetectionThreshold());
      assertEquals(0, hikariDataSource0.getAcquireIncrement());
      assertFalse(hikariDataSource0.isShutdown);
      assertEquals(0, hikariDataSource0.loginTimeout);
      
      String string3 = "<h*3tU31q8JLA&<";
      hikariConfig0.setDataSourceClassName(string3);
      assertNotSame(string3, string0);
      assertNotSame(string3, string1);
      assertNotSame(string3, string2);
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals("(I)Ljava/lang/String;", hikariConfig0.getConnectionCustomizerClassName());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals("<h*3tU31q8JLA&<", hikariConfig0.getDataSourceClassName());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals("sQMQ\\\\=p6;m-2V?P ", hikariConfig0.getConnectionTestQuery());
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string2));
      
      HikariPool hikariPool0 = new HikariPool(hikariConfig0);
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals("<h*3tU31q8JLA&<", hikariConfig0.getDataSourceClassName());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals("sQMQ\\\\=p6;m-2V?P ", hikariConfig0.getConnectionTestQuery());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertTrue(hikariPool0.getisAutoCommit());
      assertEquals(10, hikariPool0.getTotalConnections());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertFalse(hikariPool0.getdebug());
      assertNull(hikariPool0.getcatalog());
      assertFalse(hikariPool0.getshutdown());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertNotNull(hikariPool0);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertFalse(hikariPool0.shutdown);
      assertTrue(hikariPool0.isAutoCommit);
      assertFalse(hikariPool0.debug);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      
      hikariPool0.settransactionIsolation(hikariDataSource0.loginTimeout);
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals("<h*3tU31q8JLA&<", hikariConfig0.getDataSourceClassName());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals("sQMQ\\\\=p6;m-2V?P ", hikariConfig0.getConnectionTestQuery());
      assertNull(hikariDataSource0.getConnectionCustomizerClassName());
      assertEquals(0L, hikariDataSource0.getAcquireRetryDelay());
      assertNull(hikariDataSource0.getCatalog());
      assertNull(hikariDataSource0.getDataSourceClassName());
      assertTrue(hikariDataSource0.isAutoCommit());
      assertEquals("HikariPool-1", hikariDataSource0.getPoolName());
      assertEquals(10, hikariDataSource0.getMinimumPoolSize());
      assertEquals((-1), hikariDataSource0.getTransactionIsolation());
      assertEquals(1800000L, hikariDataSource0.getMaxLifetime());
      assertEquals(600000L, hikariDataSource0.getIdleTimeout());
      assertFalse(hikariDataSource0.isInitializationFailFast());
      assertNull(hikariDataSource0.getConnectionInitSql());
      assertFalse(hikariDataSource0.getisShutdown());
      assertEquals(3, hikariDataSource0.getAcquireRetries());
      assertFalse(hikariDataSource0.isRegisterMbeans());
      assertNull(hikariDataSource0.getConnectionTestQuery());
      assertEquals(1250, hikariDataSource0.getLoginTimeout());
      assertEquals(5000L, hikariDataSource0.getConnectionTimeout());
      assertTrue(hikariDataSource0.isJdbc4ConnectionTest());
      assertEquals(60, hikariDataSource0.getMaximumPoolSize());
      assertEquals(0L, hikariDataSource0.getLeakDetectionThreshold());
      assertEquals(0, hikariDataSource0.getAcquireIncrement());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertTrue(hikariPool0.getisAutoCommit());
      assertEquals(10, hikariPool0.getTotalConnections());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertFalse(hikariPool0.getdebug());
      assertNull(hikariPool0.getcatalog());
      assertFalse(hikariPool0.getshutdown());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertEquals(1250, hikariPool0.gettransactionIsolation());
      assertFalse(hikariDataSource0.isShutdown);
      assertEquals(1250, hikariDataSource0.loginTimeout);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertFalse(hikariPool0.shutdown);
      assertTrue(hikariPool0.isAutoCommit);
      assertFalse(hikariPool0.debug);
      assertEquals(1250, hikariPool0.transactionIsolation);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      
      int int0 = hikariPool0.getThreadsAwaitingConnection();
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals("<h*3tU31q8JLA&<", hikariConfig0.getDataSourceClassName());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals("sQMQ\\\\=p6;m-2V?P ", hikariConfig0.getConnectionTestQuery());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertTrue(hikariPool0.getisAutoCommit());
      assertEquals(10, hikariPool0.getTotalConnections());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertFalse(hikariPool0.getdebug());
      assertNull(hikariPool0.getcatalog());
      assertFalse(hikariPool0.getshutdown());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertEquals(1250, hikariPool0.gettransactionIsolation());
      assertEquals(0, int0);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertFalse(hikariPool0.shutdown);
      assertTrue(hikariPool0.isAutoCommit);
      assertFalse(hikariPool0.debug);
      assertEquals(1250, hikariPool0.transactionIsolation);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      
      ConcurrentBag<IHikariConnectionProxy> concurrentBag0 = hikariPool0.getidleConnectionBag();
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals("<h*3tU31q8JLA&<", hikariConfig0.getDataSourceClassName());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals("sQMQ\\\\=p6;m-2V?P ", hikariConfig0.getConnectionTestQuery());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertTrue(hikariPool0.getisAutoCommit());
      assertEquals(10, hikariPool0.getTotalConnections());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertFalse(hikariPool0.getdebug());
      assertNull(hikariPool0.getcatalog());
      assertFalse(hikariPool0.getshutdown());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertEquals(1250, hikariPool0.gettransactionIsolation());
      assertEquals((-1), concurrentBag0.getSTATE_REMOVED());
      assertEquals((-2), concurrentBag0.getSTATE_RESERVED());
      assertEquals(0, concurrentBag0.getSTATE_NOT_IN_USE());
      assertEquals(1, concurrentBag0.getSTATE_IN_USE());
      assertNotNull(concurrentBag0);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertFalse(hikariPool0.shutdown);
      assertTrue(hikariPool0.isAutoCommit);
      assertFalse(hikariPool0.debug);
      assertEquals(1250, hikariPool0.transactionIsolation);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertEquals(0, ConcurrentBag.STATE_NOT_IN_USE);
      assertEquals((-2), ConcurrentBag.STATE_RESERVED);
      assertEquals(1, ConcurrentBag.STATE_IN_USE);
      assertEquals((-1), ConcurrentBag.STATE_REMOVED);
      
      boolean boolean0 = true;
      hikariPool0.setshutdown(boolean0);
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals("<h*3tU31q8JLA&<", hikariConfig0.getDataSourceClassName());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals("sQMQ\\\\=p6;m-2V?P ", hikariConfig0.getConnectionTestQuery());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertTrue(hikariPool0.getisAutoCommit());
      assertEquals(10, hikariPool0.getTotalConnections());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertFalse(hikariPool0.getdebug());
      assertNull(hikariPool0.getcatalog());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertTrue(hikariPool0.getshutdown());
      assertEquals(1250, hikariPool0.gettransactionIsolation());
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertTrue(hikariPool0.shutdown);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertTrue(hikariPool0.isAutoCommit);
      assertFalse(hikariPool0.debug);
      assertEquals(1250, hikariPool0.transactionIsolation);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
  }

  @Test(timeout = 11000)
  public void test58()  throws Throwable  {
      HikariConfig hikariConfig0 = new HikariConfig();
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertTrue(hikariConfig0.isAutoCommit());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertNotNull(hikariConfig0);
      
      HikariDataSource hikariDataSource0 = new HikariDataSource();
      assertNull(hikariDataSource0.getConnectionCustomizerClassName());
      assertTrue(hikariDataSource0.isAutoCommit());
      assertNull(hikariDataSource0.getDataSourceClassName());
      assertEquals(0L, hikariDataSource0.getAcquireRetryDelay());
      assertEquals(0, hikariDataSource0.getLoginTimeout());
      assertEquals(10, hikariDataSource0.getMinimumPoolSize());
      assertEquals(3, hikariDataSource0.getAcquireRetries());
      assertNull(hikariDataSource0.getConnectionTestQuery());
      assertEquals(1800000L, hikariDataSource0.getMaxLifetime());
      assertEquals((-1), hikariDataSource0.getTransactionIsolation());
      assertEquals("HikariPool-1", hikariDataSource0.getPoolName());
      assertFalse(hikariDataSource0.isRegisterMbeans());
      assertFalse(hikariDataSource0.getisShutdown());
      assertEquals(600000L, hikariDataSource0.getIdleTimeout());
      assertEquals(5000L, hikariDataSource0.getConnectionTimeout());
      assertFalse(hikariDataSource0.isInitializationFailFast());
      assertNull(hikariDataSource0.getConnectionInitSql());
      assertNull(hikariDataSource0.getCatalog());
      assertTrue(hikariDataSource0.isJdbc4ConnectionTest());
      assertEquals(60, hikariDataSource0.getMaximumPoolSize());
      assertEquals(0L, hikariDataSource0.getLeakDetectionThreshold());
      assertEquals(0, hikariDataSource0.getAcquireIncrement());
      assertNotNull(hikariDataSource0);
      assertFalse(hikariDataSource0.isShutdown);
      assertEquals(0, hikariDataSource0.loginTimeout);
      
      hikariConfig0.setDataSource(hikariDataSource0);
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertTrue(hikariConfig0.isAutoCommit());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertNull(hikariDataSource0.getConnectionCustomizerClassName());
      assertTrue(hikariDataSource0.isAutoCommit());
      assertNull(hikariDataSource0.getDataSourceClassName());
      assertEquals(0L, hikariDataSource0.getAcquireRetryDelay());
      assertEquals(0, hikariDataSource0.getLoginTimeout());
      assertEquals(10, hikariDataSource0.getMinimumPoolSize());
      assertEquals(3, hikariDataSource0.getAcquireRetries());
      assertNull(hikariDataSource0.getConnectionTestQuery());
      assertEquals(1800000L, hikariDataSource0.getMaxLifetime());
      assertEquals((-1), hikariDataSource0.getTransactionIsolation());
      assertEquals("HikariPool-1", hikariDataSource0.getPoolName());
      assertFalse(hikariDataSource0.isRegisterMbeans());
      assertFalse(hikariDataSource0.getisShutdown());
      assertEquals(600000L, hikariDataSource0.getIdleTimeout());
      assertEquals(5000L, hikariDataSource0.getConnectionTimeout());
      assertFalse(hikariDataSource0.isInitializationFailFast());
      assertNull(hikariDataSource0.getConnectionInitSql());
      assertNull(hikariDataSource0.getCatalog());
      assertTrue(hikariDataSource0.isJdbc4ConnectionTest());
      assertEquals(60, hikariDataSource0.getMaximumPoolSize());
      assertEquals(0L, hikariDataSource0.getLeakDetectionThreshold());
      assertEquals(0, hikariDataSource0.getAcquireIncrement());
      assertFalse(hikariDataSource0.isShutdown);
      assertEquals(0, hikariDataSource0.loginTimeout);
      
      String string0 = "<h*3tU31q8JLA&<";
      HikariPool hikariPool0 = new HikariPool(hikariConfig0);
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertTrue(hikariConfig0.isAutoCommit());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertNull(hikariPool0.getcatalog());
      assertFalse(hikariPool0.getdebug());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertFalse(hikariPool0.getshutdown());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertEquals(10, hikariPool0.getTotalConnections());
      assertTrue(hikariPool0.getisAutoCommit());
      assertNotNull(hikariPool0);
      assertFalse(hikariPool0.debug);
      assertTrue(hikariPool0.isAutoCommit);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertFalse(hikariPool0.shutdown);
      assertEquals((-1), hikariPool0.transactionIsolation);
      
      hikariPool0.bagIsEmpty();
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertTrue(hikariConfig0.isAutoCommit());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertNull(hikariPool0.getcatalog());
      assertFalse(hikariPool0.getdebug());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertFalse(hikariPool0.getshutdown());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertEquals(11, hikariPool0.getTotalConnections());
      assertTrue(hikariPool0.getisAutoCommit());
      assertFalse(hikariPool0.debug);
      assertTrue(hikariPool0.isAutoCommit);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertFalse(hikariPool0.shutdown);
      assertEquals((-1), hikariPool0.transactionIsolation);
      
      hikariPool0.shutdown();
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertTrue(hikariConfig0.isAutoCommit());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertNull(hikariPool0.getcatalog());
      assertFalse(hikariPool0.getdebug());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertTrue(hikariPool0.getshutdown());
      assertEquals(11, hikariPool0.getTotalConnections());
      assertTrue(hikariPool0.getisAutoCommit());
      assertFalse(hikariPool0.debug);
      assertTrue(hikariPool0.isAutoCommit);
      assertTrue(hikariPool0.shutdown);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertEquals((-1), hikariPool0.transactionIsolation);
      
      boolean boolean0 = hikariPool0.getshutdown();
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertTrue(hikariConfig0.isAutoCommit());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertNull(hikariPool0.getcatalog());
      assertFalse(hikariPool0.getdebug());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertTrue(hikariPool0.getshutdown());
      assertEquals(11, hikariPool0.getTotalConnections());
      assertTrue(hikariPool0.getisAutoCommit());
      assertTrue(boolean0);
      assertFalse(hikariPool0.debug);
      assertTrue(hikariPool0.isAutoCommit);
      assertTrue(hikariPool0.shutdown);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertEquals((-1), hikariPool0.transactionIsolation);
      
      int int0 = hikariPool0.getActiveConnections();
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertTrue(hikariConfig0.isAutoCommit());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertNull(hikariPool0.getcatalog());
      assertFalse(hikariPool0.getdebug());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertTrue(hikariPool0.getshutdown());
      assertEquals(11, hikariPool0.getTotalConnections());
      assertTrue(hikariPool0.getisAutoCommit());
      assertEquals(11, int0);
      assertFalse(hikariPool0.debug);
      assertTrue(hikariPool0.isAutoCommit);
      assertTrue(hikariPool0.shutdown);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertEquals((-1), hikariPool0.transactionIsolation);
      
      SerializedObjectSupporter serializedObjectSupporter0 = new SerializedObjectSupporter();
      assertNotNull(serializedObjectSupporter0);
      
      hikariPool0.serializedObjectSupporter = serializedObjectSupporter0;
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertTrue(hikariConfig0.isAutoCommit());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertNull(hikariPool0.getcatalog());
      assertFalse(hikariPool0.getdebug());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertTrue(hikariPool0.getshutdown());
      assertEquals(11, hikariPool0.getTotalConnections());
      assertTrue(hikariPool0.getisAutoCommit());
      
      boolean boolean1 = hikariPool0.getjdbc4ConnectionTest();
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertTrue(hikariConfig0.isAutoCommit());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertNull(hikariPool0.getcatalog());
      assertFalse(hikariPool0.getdebug());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertTrue(hikariPool0.getshutdown());
      assertEquals(11, hikariPool0.getTotalConnections());
      assertTrue(hikariPool0.getisAutoCommit());
      assertTrue(boolean1 == boolean0);
      assertTrue(boolean1);
      assertFalse(hikariPool0.debug);
      assertTrue(hikariPool0.isAutoCommit);
      assertTrue(hikariPool0.shutdown);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertEquals((-1), hikariPool0.transactionIsolation);
      
      HikariPool.HouseKeeper hikariPool_HouseKeeper0 = hikariPool0.new HouseKeeper();
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertTrue(hikariConfig0.isAutoCommit());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertNull(hikariPool0.getcatalog());
      assertFalse(hikariPool0.getdebug());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertTrue(hikariPool0.getshutdown());
      assertEquals(11, hikariPool0.getTotalConnections());
      assertTrue(hikariPool0.getisAutoCommit());
      assertEquals(0L, hikariPool_HouseKeeper0.scheduledExecutionTime());
      assertNotNull(hikariPool_HouseKeeper0);
      assertFalse(hikariPool0.debug);
      assertTrue(hikariPool0.isAutoCommit);
      assertTrue(hikariPool0.shutdown);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertEquals((-1), hikariPool0.transactionIsolation);
      
      boolean boolean2 = false;
      boolean boolean3 = false;
      hikariPool_HouseKeeper0.run();
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertTrue(hikariConfig0.isAutoCommit());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertNull(hikariPool0.getcatalog());
      assertFalse(hikariPool0.getdebug());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertTrue(hikariPool0.getshutdown());
      assertEquals(11, hikariPool0.getTotalConnections());
      assertTrue(hikariPool0.getisAutoCommit());
      assertEquals(0L, hikariPool_HouseKeeper0.scheduledExecutionTime());
      assertFalse(hikariPool0.debug);
      assertTrue(hikariPool0.isAutoCommit);
      assertTrue(hikariPool0.shutdown);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertEquals((-1), hikariPool0.transactionIsolation);
      
      Timer timer0 = hikariPool0.gethouseKeepingTimer();
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertTrue(hikariConfig0.isAutoCommit());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertNull(hikariPool0.getcatalog());
      assertFalse(hikariPool0.getdebug());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertTrue(hikariPool0.getshutdown());
      assertEquals(11, hikariPool0.getTotalConnections());
      assertTrue(hikariPool0.getisAutoCommit());
      assertNotNull(timer0);
      assertFalse(hikariPool0.debug);
      assertTrue(hikariPool0.isAutoCommit);
      assertTrue(hikariPool0.shutdown);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertEquals((-1), hikariPool0.transactionIsolation);
      
      IHikariConnectionProxy iHikariConnectionProxy0 = mock(IHikariConnectionProxy.class, new ViolatedAssumptionAnswer());
      doReturn(boolean2).when(iHikariConnectionProxy0).isBrokenConnection();
      doReturn(boolean3, hikariPool0.debug).when(iHikariConnectionProxy0).compareAndSetState(anyInt() , anyInt());
      // Undeclared exception!
      try { 
        hikariPool0.releaseConnection(iHikariConnectionProxy0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Attempt to remove an object from the bag that was not borrowed or reserved
         //
         verifyException("com.zaxxer.hikari.util.ConcurrentBag", e);
      }
  }

  @Test(timeout = 11000)
  public void test59()  throws Throwable  {
      HikariConfig hikariConfig0 = new HikariConfig();
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isAutoCommit());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getCatalog());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertNotNull(hikariConfig0);
      
      HikariDataSource hikariDataSource0 = new HikariDataSource();
      assertNull(hikariDataSource0.getDataSourceClassName());
      assertTrue(hikariDataSource0.isAutoCommit());
      assertNull(hikariDataSource0.getConnectionCustomizerClassName());
      assertEquals(0L, hikariDataSource0.getAcquireRetryDelay());
      assertNull(hikariDataSource0.getCatalog());
      assertTrue(hikariDataSource0.isJdbc4ConnectionTest());
      assertNull(hikariDataSource0.getConnectionInitSql());
      assertEquals(60, hikariDataSource0.getMaximumPoolSize());
      assertEquals(0L, hikariDataSource0.getLeakDetectionThreshold());
      assertEquals(0, hikariDataSource0.getAcquireIncrement());
      assertEquals(1800000L, hikariDataSource0.getMaxLifetime());
      assertEquals(600000L, hikariDataSource0.getIdleTimeout());
      assertFalse(hikariDataSource0.isInitializationFailFast());
      assertFalse(hikariDataSource0.isRegisterMbeans());
      assertEquals(5000L, hikariDataSource0.getConnectionTimeout());
      assertFalse(hikariDataSource0.getisShutdown());
      assertEquals(10, hikariDataSource0.getMinimumPoolSize());
      assertEquals(0, hikariDataSource0.getLoginTimeout());
      assertEquals(3, hikariDataSource0.getAcquireRetries());
      assertNull(hikariDataSource0.getConnectionTestQuery());
      assertEquals((-1), hikariDataSource0.getTransactionIsolation());
      assertEquals("HikariPool-1", hikariDataSource0.getPoolName());
      assertNotNull(hikariDataSource0);
      assertFalse(hikariDataSource0.isShutdown);
      assertEquals(0, hikariDataSource0.loginTimeout);
      
      hikariConfig0.setDataSource(hikariDataSource0);
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isAutoCommit());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getCatalog());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertNull(hikariDataSource0.getDataSourceClassName());
      assertTrue(hikariDataSource0.isAutoCommit());
      assertNull(hikariDataSource0.getConnectionCustomizerClassName());
      assertEquals(0L, hikariDataSource0.getAcquireRetryDelay());
      assertNull(hikariDataSource0.getCatalog());
      assertTrue(hikariDataSource0.isJdbc4ConnectionTest());
      assertNull(hikariDataSource0.getConnectionInitSql());
      assertEquals(60, hikariDataSource0.getMaximumPoolSize());
      assertEquals(0L, hikariDataSource0.getLeakDetectionThreshold());
      assertEquals(0, hikariDataSource0.getAcquireIncrement());
      assertEquals(1800000L, hikariDataSource0.getMaxLifetime());
      assertEquals(600000L, hikariDataSource0.getIdleTimeout());
      assertFalse(hikariDataSource0.isInitializationFailFast());
      assertFalse(hikariDataSource0.isRegisterMbeans());
      assertEquals(5000L, hikariDataSource0.getConnectionTimeout());
      assertFalse(hikariDataSource0.getisShutdown());
      assertEquals(10, hikariDataSource0.getMinimumPoolSize());
      assertEquals(0, hikariDataSource0.getLoginTimeout());
      assertEquals(3, hikariDataSource0.getAcquireRetries());
      assertNull(hikariDataSource0.getConnectionTestQuery());
      assertEquals((-1), hikariDataSource0.getTransactionIsolation());
      assertEquals("HikariPool-1", hikariDataSource0.getPoolName());
      assertFalse(hikariDataSource0.isShutdown);
      assertEquals(0, hikariDataSource0.loginTimeout);
      
      String string0 = "<h*3tU31q8JLA&<";
      HikariPool hikariPool0 = new HikariPool(hikariConfig0);
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isAutoCommit());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getCatalog());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertTrue(hikariPool0.getisAutoCommit());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertFalse(hikariPool0.getshutdown());
      assertNull(hikariPool0.getcatalog());
      assertEquals(10, hikariPool0.getTotalConnections());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertFalse(hikariPool0.getdebug());
      assertNotNull(hikariPool0);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertFalse(hikariPool0.debug);
      assertTrue(hikariPool0.isAutoCommit);
      assertFalse(hikariPool0.shutdown);
      
      hikariPool0.bagIsEmpty();
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isAutoCommit());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getCatalog());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertTrue(hikariPool0.getisAutoCommit());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertFalse(hikariPool0.getshutdown());
      assertNull(hikariPool0.getcatalog());
      assertEquals(11, hikariPool0.getTotalConnections());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertFalse(hikariPool0.getdebug());
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertFalse(hikariPool0.debug);
      assertTrue(hikariPool0.isAutoCommit);
      assertFalse(hikariPool0.shutdown);
      
      hikariPool0.shutdown();
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isAutoCommit());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getCatalog());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertTrue(hikariPool0.getisAutoCommit());
      assertTrue(hikariPool0.getshutdown());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertNull(hikariPool0.getcatalog());
      assertEquals(11, hikariPool0.getTotalConnections());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertFalse(hikariPool0.getdebug());
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertTrue(hikariPool0.shutdown);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertFalse(hikariPool0.debug);
      assertTrue(hikariPool0.isAutoCommit);
      
      boolean boolean0 = hikariPool0.getshutdown();
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isAutoCommit());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getCatalog());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertTrue(hikariPool0.getisAutoCommit());
      assertTrue(hikariPool0.getshutdown());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertNull(hikariPool0.getcatalog());
      assertEquals(11, hikariPool0.getTotalConnections());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertFalse(hikariPool0.getdebug());
      assertTrue(boolean0);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertTrue(hikariPool0.shutdown);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertFalse(hikariPool0.debug);
      assertTrue(hikariPool0.isAutoCommit);
      
      int int0 = hikariPool0.getActiveConnections();
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isAutoCommit());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getCatalog());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertTrue(hikariPool0.getisAutoCommit());
      assertTrue(hikariPool0.getshutdown());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertNull(hikariPool0.getcatalog());
      assertEquals(11, hikariPool0.getTotalConnections());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertFalse(hikariPool0.getdebug());
      assertEquals(11, int0);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertTrue(hikariPool0.shutdown);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertFalse(hikariPool0.debug);
      assertTrue(hikariPool0.isAutoCommit);
      
      SerializedObjectSupporter serializedObjectSupporter0 = new SerializedObjectSupporter();
      assertNotNull(serializedObjectSupporter0);
      
      hikariPool0.serializedObjectSupporter = serializedObjectSupporter0;
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isAutoCommit());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getCatalog());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertTrue(hikariPool0.getisAutoCommit());
      assertTrue(hikariPool0.getshutdown());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertNull(hikariPool0.getcatalog());
      assertEquals(11, hikariPool0.getTotalConnections());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertFalse(hikariPool0.getdebug());
      
      boolean boolean1 = hikariPool0.getjdbc4ConnectionTest();
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isAutoCommit());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getCatalog());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertTrue(hikariPool0.getisAutoCommit());
      assertTrue(hikariPool0.getshutdown());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertNull(hikariPool0.getcatalog());
      assertEquals(11, hikariPool0.getTotalConnections());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertFalse(hikariPool0.getdebug());
      assertTrue(boolean1 == boolean0);
      assertTrue(boolean1);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertTrue(hikariPool0.shutdown);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertFalse(hikariPool0.debug);
      assertTrue(hikariPool0.isAutoCommit);
      
      HikariPool.HouseKeeper hikariPool_HouseKeeper0 = hikariPool0.new HouseKeeper();
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isAutoCommit());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getCatalog());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertTrue(hikariPool0.getisAutoCommit());
      assertTrue(hikariPool0.getshutdown());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertNull(hikariPool0.getcatalog());
      assertEquals(11, hikariPool0.getTotalConnections());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertFalse(hikariPool0.getdebug());
      assertEquals(0L, hikariPool_HouseKeeper0.scheduledExecutionTime());
      assertNotNull(hikariPool_HouseKeeper0);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertTrue(hikariPool0.shutdown);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertFalse(hikariPool0.debug);
      assertTrue(hikariPool0.isAutoCommit);
      
      IHikariConnectionProxy iHikariConnectionProxy0 = mock(IHikariConnectionProxy.class, new ViolatedAssumptionAnswer());
      doReturn(hikariPool0.isAutoCommit).when(iHikariConnectionProxy0).isBrokenConnection();
      doReturn(hikariDataSource0.isShutdown, hikariPool0.isRegisteredMbeans).when(iHikariConnectionProxy0).compareAndSetState(anyInt() , anyInt());
      // Undeclared exception!
      try { 
        hikariPool0.releaseConnection(iHikariConnectionProxy0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Attempt to remove an object from the bag that was not borrowed or reserved
         //
         verifyException("com.zaxxer.hikari.util.ConcurrentBag", e);
      }
  }

  @Test(timeout = 11000)
  public void test60()  throws Throwable  {
      HikariConfig hikariConfig0 = new HikariConfig();
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertTrue(hikariConfig0.isAutoCommit());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertNotNull(hikariConfig0);
      
      HikariDataSource hikariDataSource0 = new HikariDataSource();
      assertEquals(0L, hikariDataSource0.getAcquireRetryDelay());
      assertEquals(10, hikariDataSource0.getMinimumPoolSize());
      assertEquals(60, hikariDataSource0.getMaximumPoolSize());
      assertTrue(hikariDataSource0.isAutoCommit());
      assertNull(hikariDataSource0.getConnectionCustomizerClassName());
      assertFalse(hikariDataSource0.isRegisterMbeans());
      assertFalse(hikariDataSource0.getisShutdown());
      assertNull(hikariDataSource0.getCatalog());
      assertNull(hikariDataSource0.getConnectionInitSql());
      assertEquals((-1), hikariDataSource0.getTransactionIsolation());
      assertEquals(1800000L, hikariDataSource0.getMaxLifetime());
      assertFalse(hikariDataSource0.isInitializationFailFast());
      assertEquals(0, hikariDataSource0.getAcquireIncrement());
      assertEquals(0L, hikariDataSource0.getLeakDetectionThreshold());
      assertTrue(hikariDataSource0.isJdbc4ConnectionTest());
      assertEquals("HikariPool-1", hikariDataSource0.getPoolName());
      assertEquals(5000L, hikariDataSource0.getConnectionTimeout());
      assertNull(hikariDataSource0.getConnectionTestQuery());
      assertEquals(0, hikariDataSource0.getLoginTimeout());
      assertEquals(3, hikariDataSource0.getAcquireRetries());
      assertEquals(600000L, hikariDataSource0.getIdleTimeout());
      assertNull(hikariDataSource0.getDataSourceClassName());
      assertNotNull(hikariDataSource0);
      assertFalse(hikariDataSource0.isShutdown);
      assertEquals(0, hikariDataSource0.loginTimeout);
      
      hikariConfig0.setDataSource(hikariDataSource0);
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertTrue(hikariConfig0.isAutoCommit());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals(0L, hikariDataSource0.getAcquireRetryDelay());
      assertEquals(10, hikariDataSource0.getMinimumPoolSize());
      assertEquals(60, hikariDataSource0.getMaximumPoolSize());
      assertTrue(hikariDataSource0.isAutoCommit());
      assertNull(hikariDataSource0.getConnectionCustomizerClassName());
      assertFalse(hikariDataSource0.isRegisterMbeans());
      assertFalse(hikariDataSource0.getisShutdown());
      assertNull(hikariDataSource0.getCatalog());
      assertNull(hikariDataSource0.getConnectionInitSql());
      assertEquals((-1), hikariDataSource0.getTransactionIsolation());
      assertEquals(1800000L, hikariDataSource0.getMaxLifetime());
      assertFalse(hikariDataSource0.isInitializationFailFast());
      assertEquals(0, hikariDataSource0.getAcquireIncrement());
      assertEquals(0L, hikariDataSource0.getLeakDetectionThreshold());
      assertTrue(hikariDataSource0.isJdbc4ConnectionTest());
      assertEquals("HikariPool-1", hikariDataSource0.getPoolName());
      assertEquals(5000L, hikariDataSource0.getConnectionTimeout());
      assertNull(hikariDataSource0.getConnectionTestQuery());
      assertEquals(0, hikariDataSource0.getLoginTimeout());
      assertEquals(3, hikariDataSource0.getAcquireRetries());
      assertEquals(600000L, hikariDataSource0.getIdleTimeout());
      assertNull(hikariDataSource0.getDataSourceClassName());
      assertFalse(hikariDataSource0.isShutdown);
      assertEquals(0, hikariDataSource0.loginTimeout);
      
      String string0 = "<h*3tU31q8JLA&<";
      HikariPool hikariPool0 = new HikariPool(hikariConfig0);
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertTrue(hikariConfig0.isAutoCommit());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertFalse(hikariPool0.getshutdown());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertNull(hikariPool0.getcatalog());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertTrue(hikariPool0.getisAutoCommit());
      assertFalse(hikariPool0.getdebug());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertEquals(10, hikariPool0.getTotalConnections());
      assertNotNull(hikariPool0);
      assertTrue(hikariPool0.isAutoCommit);
      assertFalse(hikariPool0.debug);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertFalse(hikariPool0.shutdown);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertFalse(hikariPool0.isRegisteredMbeans);
      
      hikariPool0.bagIsEmpty();
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertTrue(hikariConfig0.isAutoCommit());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertFalse(hikariPool0.getshutdown());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertNull(hikariPool0.getcatalog());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertTrue(hikariPool0.getisAutoCommit());
      assertFalse(hikariPool0.getdebug());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertEquals(11, hikariPool0.getTotalConnections());
      assertTrue(hikariPool0.isAutoCommit);
      assertFalse(hikariPool0.debug);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertFalse(hikariPool0.shutdown);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertFalse(hikariPool0.isRegisteredMbeans);
      
      hikariPool0.shutdown();
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertTrue(hikariConfig0.isAutoCommit());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertNull(hikariPool0.getcatalog());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertTrue(hikariPool0.getshutdown());
      assertTrue(hikariPool0.getisAutoCommit());
      assertFalse(hikariPool0.getdebug());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertEquals(11, hikariPool0.getTotalConnections());
      assertTrue(hikariPool0.isAutoCommit);
      assertFalse(hikariPool0.debug);
      assertTrue(hikariPool0.shutdown);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertFalse(hikariPool0.isRegisteredMbeans);
      
      boolean boolean0 = hikariPool0.getshutdown();
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertTrue(hikariConfig0.isAutoCommit());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertNull(hikariPool0.getcatalog());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertTrue(hikariPool0.getshutdown());
      assertTrue(hikariPool0.getisAutoCommit());
      assertFalse(hikariPool0.getdebug());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertEquals(11, hikariPool0.getTotalConnections());
      assertTrue(boolean0);
      assertTrue(hikariPool0.isAutoCommit);
      assertFalse(hikariPool0.debug);
      assertTrue(hikariPool0.shutdown);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertFalse(hikariPool0.isRegisteredMbeans);
      
      int int0 = hikariPool0.getActiveConnections();
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertTrue(hikariConfig0.isAutoCommit());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertNull(hikariPool0.getcatalog());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertTrue(hikariPool0.getshutdown());
      assertTrue(hikariPool0.getisAutoCommit());
      assertFalse(hikariPool0.getdebug());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertEquals(11, hikariPool0.getTotalConnections());
      assertEquals(11, int0);
      assertTrue(hikariPool0.isAutoCommit);
      assertFalse(hikariPool0.debug);
      assertTrue(hikariPool0.shutdown);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertFalse(hikariPool0.isRegisteredMbeans);
      
      SerializedObjectSupporter serializedObjectSupporter0 = new SerializedObjectSupporter();
      assertNotNull(serializedObjectSupporter0);
      
      hikariPool0.serializedObjectSupporter = serializedObjectSupporter0;
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertTrue(hikariConfig0.isAutoCommit());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertNull(hikariPool0.getcatalog());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertTrue(hikariPool0.getshutdown());
      assertTrue(hikariPool0.getisAutoCommit());
      assertFalse(hikariPool0.getdebug());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertEquals(11, hikariPool0.getTotalConnections());
      
      boolean boolean1 = hikariPool0.getjdbc4ConnectionTest();
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertTrue(hikariConfig0.isAutoCommit());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertNull(hikariPool0.getcatalog());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertTrue(hikariPool0.getshutdown());
      assertTrue(hikariPool0.getisAutoCommit());
      assertFalse(hikariPool0.getdebug());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertEquals(11, hikariPool0.getTotalConnections());
      assertTrue(boolean1 == boolean0);
      assertTrue(boolean1);
      assertTrue(hikariPool0.isAutoCommit);
      assertFalse(hikariPool0.debug);
      assertTrue(hikariPool0.shutdown);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertFalse(hikariPool0.isRegisteredMbeans);
      
      HikariPool.HouseKeeper hikariPool_HouseKeeper0 = hikariPool0.new HouseKeeper();
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertTrue(hikariConfig0.isAutoCommit());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertNull(hikariPool0.getcatalog());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertTrue(hikariPool0.getshutdown());
      assertTrue(hikariPool0.getisAutoCommit());
      assertFalse(hikariPool0.getdebug());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertEquals(11, hikariPool0.getTotalConnections());
      assertEquals(0L, hikariPool_HouseKeeper0.scheduledExecutionTime());
      assertNotNull(hikariPool_HouseKeeper0);
      assertTrue(hikariPool0.isAutoCommit);
      assertFalse(hikariPool0.debug);
      assertTrue(hikariPool0.shutdown);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertFalse(hikariPool0.isRegisteredMbeans);
      
      boolean boolean2 = false;
      boolean boolean3 = false;
      IHikariConnectionProxy iHikariConnectionProxy0 = mock(IHikariConnectionProxy.class, new ViolatedAssumptionAnswer());
      doReturn(hikariPool0.isAutoCommit).when(iHikariConnectionProxy0).isBrokenConnection();
      doReturn(boolean2, boolean3).when(iHikariConnectionProxy0).compareAndSetState(anyInt() , anyInt());
      // Undeclared exception!
      try { 
        hikariPool0.releaseConnection(iHikariConnectionProxy0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Attempt to remove an object from the bag that was not borrowed or reserved
         //
         verifyException("com.zaxxer.hikari.util.ConcurrentBag", e);
      }
  }

  @Test(timeout = 11000)
  public void test61()  throws Throwable  {
      HikariConfig hikariConfig0 = new HikariConfig();
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertNull(hikariConfig0.getCatalog());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertTrue(hikariConfig0.isAutoCommit());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertNotNull(hikariConfig0);
      
      String string0 = "z~NH}l5*1f$G/";
      HikariDataSource hikariDataSource0 = new HikariDataSource();
      assertEquals(5000L, hikariDataSource0.getConnectionTimeout());
      assertEquals(0, hikariDataSource0.getLoginTimeout());
      assertNull(hikariDataSource0.getCatalog());
      assertEquals(1800000L, hikariDataSource0.getMaxLifetime());
      assertEquals(600000L, hikariDataSource0.getIdleTimeout());
      assertFalse(hikariDataSource0.isRegisterMbeans());
      assertFalse(hikariDataSource0.getisShutdown());
      assertNull(hikariDataSource0.getConnectionCustomizerClassName());
      assertEquals("HikariPool-1", hikariDataSource0.getPoolName());
      assertEquals(10, hikariDataSource0.getMinimumPoolSize());
      assertEquals((-1), hikariDataSource0.getTransactionIsolation());
      assertTrue(hikariDataSource0.isJdbc4ConnectionTest());
      assertEquals(60, hikariDataSource0.getMaximumPoolSize());
      assertTrue(hikariDataSource0.isAutoCommit());
      assertEquals(3, hikariDataSource0.getAcquireRetries());
      assertNull(hikariDataSource0.getConnectionInitSql());
      assertNull(hikariDataSource0.getConnectionTestQuery());
      assertNull(hikariDataSource0.getDataSourceClassName());
      assertFalse(hikariDataSource0.isInitializationFailFast());
      assertEquals(0L, hikariDataSource0.getLeakDetectionThreshold());
      assertEquals(0, hikariDataSource0.getAcquireIncrement());
      assertEquals(0L, hikariDataSource0.getAcquireRetryDelay());
      assertNotNull(hikariDataSource0);
      assertEquals(0, hikariDataSource0.loginTimeout);
      assertFalse(hikariDataSource0.isShutdown);
      
      hikariConfig0.setDataSource(hikariDataSource0);
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertNull(hikariConfig0.getCatalog());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertTrue(hikariConfig0.isAutoCommit());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(5000L, hikariDataSource0.getConnectionTimeout());
      assertEquals(0, hikariDataSource0.getLoginTimeout());
      assertNull(hikariDataSource0.getCatalog());
      assertEquals(1800000L, hikariDataSource0.getMaxLifetime());
      assertEquals(600000L, hikariDataSource0.getIdleTimeout());
      assertFalse(hikariDataSource0.isRegisterMbeans());
      assertFalse(hikariDataSource0.getisShutdown());
      assertNull(hikariDataSource0.getConnectionCustomizerClassName());
      assertEquals("HikariPool-1", hikariDataSource0.getPoolName());
      assertEquals(10, hikariDataSource0.getMinimumPoolSize());
      assertEquals((-1), hikariDataSource0.getTransactionIsolation());
      assertTrue(hikariDataSource0.isJdbc4ConnectionTest());
      assertEquals(60, hikariDataSource0.getMaximumPoolSize());
      assertTrue(hikariDataSource0.isAutoCommit());
      assertEquals(3, hikariDataSource0.getAcquireRetries());
      assertNull(hikariDataSource0.getConnectionInitSql());
      assertNull(hikariDataSource0.getConnectionTestQuery());
      assertNull(hikariDataSource0.getDataSourceClassName());
      assertFalse(hikariDataSource0.isInitializationFailFast());
      assertEquals(0L, hikariDataSource0.getLeakDetectionThreshold());
      assertEquals(0, hikariDataSource0.getAcquireIncrement());
      assertEquals(0L, hikariDataSource0.getAcquireRetryDelay());
      assertEquals(0, hikariDataSource0.loginTimeout);
      assertFalse(hikariDataSource0.isShutdown);
      
      hikariConfig0.setMaximumPoolSize(hikariDataSource0.loginTimeout);
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertNull(hikariConfig0.getCatalog());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertTrue(hikariConfig0.isAutoCommit());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(0, hikariConfig0.getMaximumPoolSize());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(5000L, hikariDataSource0.getConnectionTimeout());
      assertEquals(0, hikariDataSource0.getLoginTimeout());
      assertNull(hikariDataSource0.getCatalog());
      assertEquals(1800000L, hikariDataSource0.getMaxLifetime());
      assertEquals(600000L, hikariDataSource0.getIdleTimeout());
      assertFalse(hikariDataSource0.isRegisterMbeans());
      assertFalse(hikariDataSource0.getisShutdown());
      assertNull(hikariDataSource0.getConnectionCustomizerClassName());
      assertEquals("HikariPool-1", hikariDataSource0.getPoolName());
      assertEquals(10, hikariDataSource0.getMinimumPoolSize());
      assertEquals((-1), hikariDataSource0.getTransactionIsolation());
      assertTrue(hikariDataSource0.isJdbc4ConnectionTest());
      assertEquals(60, hikariDataSource0.getMaximumPoolSize());
      assertTrue(hikariDataSource0.isAutoCommit());
      assertEquals(3, hikariDataSource0.getAcquireRetries());
      assertNull(hikariDataSource0.getConnectionInitSql());
      assertNull(hikariDataSource0.getConnectionTestQuery());
      assertNull(hikariDataSource0.getDataSourceClassName());
      assertFalse(hikariDataSource0.isInitializationFailFast());
      assertEquals(0L, hikariDataSource0.getLeakDetectionThreshold());
      assertEquals(0, hikariDataSource0.getAcquireIncrement());
      assertEquals(0L, hikariDataSource0.getAcquireRetryDelay());
      assertEquals(0, hikariDataSource0.loginTimeout);
      assertFalse(hikariDataSource0.isShutdown);
      
      String string1 = "<h*3tU31q8JLA&<";
      hikariConfig0.setDataSourceClassName(string1);
      assertNotSame(string1, string0);
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertTrue(hikariConfig0.isAutoCommit());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(0, hikariConfig0.getMaximumPoolSize());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals("<h*3tU31q8JLA&<", hikariConfig0.getDataSourceClassName());
      assertFalse(string1.equals((Object)string0));
      
      HikariPool hikariPool0 = new HikariPool(hikariConfig0);
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(10, hikariConfig0.getMaximumPoolSize());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertTrue(hikariConfig0.isAutoCommit());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals("<h*3tU31q8JLA&<", hikariConfig0.getDataSourceClassName());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertTrue(hikariPool0.getisAutoCommit());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertNull(hikariPool0.getcatalog());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertFalse(hikariPool0.getshutdown());
      assertEquals(10, hikariPool0.getTotalConnections());
      assertFalse(hikariPool0.getdebug());
      assertNotNull(hikariPool0);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertFalse(hikariPool0.shutdown);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertFalse(hikariPool0.debug);
      assertTrue(hikariPool0.isAutoCommit);
      
      String[] stringArray0 = null;
      // Undeclared exception!
      try { 
        hikariPool0.logPoolState(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.zaxxer.hikari.HikariPool", e);
      }
  }

  @Test(timeout = 11000)
  public void test62()  throws Throwable  {
      HikariConfig hikariConfig0 = new HikariConfig();
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertNull(hikariConfig0.getCatalog());
      assertTrue(hikariConfig0.isAutoCommit());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertNotNull(hikariConfig0);
      
      String string0 = "z~NH}l5*1f$G/";
      hikariConfig0.setCatalog(string0);
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertTrue(hikariConfig0.isAutoCommit());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      
      HikariDataSource hikariDataSource0 = new HikariDataSource();
      assertEquals(60, hikariDataSource0.getMaximumPoolSize());
      assertTrue(hikariDataSource0.isAutoCommit());
      assertTrue(hikariDataSource0.isJdbc4ConnectionTest());
      assertNull(hikariDataSource0.getConnectionCustomizerClassName());
      assertEquals("HikariPool-1", hikariDataSource0.getPoolName());
      assertEquals(0L, hikariDataSource0.getLeakDetectionThreshold());
      assertEquals(0, hikariDataSource0.getAcquireIncrement());
      assertNull(hikariDataSource0.getCatalog());
      assertNull(hikariDataSource0.getConnectionInitSql());
      assertFalse(hikariDataSource0.isRegisterMbeans());
      assertFalse(hikariDataSource0.getisShutdown());
      assertEquals(5000L, hikariDataSource0.getConnectionTimeout());
      assertEquals(10, hikariDataSource0.getMinimumPoolSize());
      assertEquals((-1), hikariDataSource0.getTransactionIsolation());
      assertEquals(1800000L, hikariDataSource0.getMaxLifetime());
      assertEquals(600000L, hikariDataSource0.getIdleTimeout());
      assertFalse(hikariDataSource0.isInitializationFailFast());
      assertEquals(0L, hikariDataSource0.getAcquireRetryDelay());
      assertNull(hikariDataSource0.getConnectionTestQuery());
      assertEquals(0, hikariDataSource0.getLoginTimeout());
      assertEquals(3, hikariDataSource0.getAcquireRetries());
      assertNull(hikariDataSource0.getDataSourceClassName());
      assertNotNull(hikariDataSource0);
      assertFalse(hikariDataSource0.isShutdown);
      assertEquals(0, hikariDataSource0.loginTimeout);
      
      hikariConfig0.setDataSource(hikariDataSource0);
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertTrue(hikariConfig0.isAutoCommit());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(60, hikariDataSource0.getMaximumPoolSize());
      assertTrue(hikariDataSource0.isAutoCommit());
      assertTrue(hikariDataSource0.isJdbc4ConnectionTest());
      assertNull(hikariDataSource0.getConnectionCustomizerClassName());
      assertEquals("HikariPool-1", hikariDataSource0.getPoolName());
      assertEquals(0L, hikariDataSource0.getLeakDetectionThreshold());
      assertEquals(0, hikariDataSource0.getAcquireIncrement());
      assertNull(hikariDataSource0.getCatalog());
      assertNull(hikariDataSource0.getConnectionInitSql());
      assertFalse(hikariDataSource0.isRegisterMbeans());
      assertFalse(hikariDataSource0.getisShutdown());
      assertEquals(5000L, hikariDataSource0.getConnectionTimeout());
      assertEquals(10, hikariDataSource0.getMinimumPoolSize());
      assertEquals((-1), hikariDataSource0.getTransactionIsolation());
      assertEquals(1800000L, hikariDataSource0.getMaxLifetime());
      assertEquals(600000L, hikariDataSource0.getIdleTimeout());
      assertFalse(hikariDataSource0.isInitializationFailFast());
      assertEquals(0L, hikariDataSource0.getAcquireRetryDelay());
      assertNull(hikariDataSource0.getConnectionTestQuery());
      assertEquals(0, hikariDataSource0.getLoginTimeout());
      assertEquals(3, hikariDataSource0.getAcquireRetries());
      assertNull(hikariDataSource0.getDataSourceClassName());
      assertFalse(hikariDataSource0.isShutdown);
      assertEquals(0, hikariDataSource0.loginTimeout);
      
      String string1 = "<h*3tU31q8JLA&<";
      hikariConfig0.setDataSourceClassName(string1);
      assertNotSame(string1, string0);
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertEquals("<h*3tU31q8JLA&<", hikariConfig0.getDataSourceClassName());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertTrue(hikariConfig0.isAutoCommit());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertFalse(string1.equals((Object)string0));
      
      HikariPool hikariPool0 = new HikariPool(hikariConfig0);
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertEquals("<h*3tU31q8JLA&<", hikariConfig0.getDataSourceClassName());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertTrue(hikariConfig0.isAutoCommit());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertEquals("z~NH}l5*1f$G/", hikariPool0.getcatalog());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertFalse(hikariPool0.getdebug());
      assertFalse(hikariPool0.getshutdown());
      assertTrue(hikariPool0.getisAutoCommit());
      assertEquals(10, hikariPool0.getTotalConnections());
      assertNotNull(hikariPool0);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertTrue(hikariPool0.isAutoCommit);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertFalse(hikariPool0.debug);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertFalse(hikariPool0.shutdown);
      
      IHikariConnectionProxy iHikariConnectionProxy0 = null;
      boolean boolean0 = true;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      hikariPool0.debug = boolean0;
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertEquals("<h*3tU31q8JLA&<", hikariConfig0.getDataSourceClassName());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertTrue(hikariConfig0.isAutoCommit());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertEquals("z~NH}l5*1f$G/", hikariPool0.getcatalog());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertTrue(hikariPool0.getdebug());
      assertFalse(hikariPool0.getshutdown());
      assertTrue(hikariPool0.getisAutoCommit());
      assertEquals(10, hikariPool0.getTotalConnections());
      
      hikariPool0.setshutdown(hikariDataSource0.isShutdown);
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertEquals("<h*3tU31q8JLA&<", hikariConfig0.getDataSourceClassName());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertTrue(hikariConfig0.isAutoCommit());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(60, hikariDataSource0.getMaximumPoolSize());
      assertTrue(hikariDataSource0.isAutoCommit());
      assertTrue(hikariDataSource0.isJdbc4ConnectionTest());
      assertNull(hikariDataSource0.getConnectionCustomizerClassName());
      assertEquals("HikariPool-1", hikariDataSource0.getPoolName());
      assertEquals(0L, hikariDataSource0.getLeakDetectionThreshold());
      assertEquals(0, hikariDataSource0.getAcquireIncrement());
      assertNull(hikariDataSource0.getCatalog());
      assertNull(hikariDataSource0.getConnectionInitSql());
      assertFalse(hikariDataSource0.isRegisterMbeans());
      assertFalse(hikariDataSource0.getisShutdown());
      assertEquals(1250, hikariDataSource0.getLoginTimeout());
      assertEquals(5000L, hikariDataSource0.getConnectionTimeout());
      assertEquals(10, hikariDataSource0.getMinimumPoolSize());
      assertEquals((-1), hikariDataSource0.getTransactionIsolation());
      assertEquals(1800000L, hikariDataSource0.getMaxLifetime());
      assertEquals(600000L, hikariDataSource0.getIdleTimeout());
      assertFalse(hikariDataSource0.isInitializationFailFast());
      assertEquals(0L, hikariDataSource0.getAcquireRetryDelay());
      assertNull(hikariDataSource0.getConnectionTestQuery());
      assertEquals(3, hikariDataSource0.getAcquireRetries());
      assertNull(hikariDataSource0.getDataSourceClassName());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertEquals("z~NH}l5*1f$G/", hikariPool0.getcatalog());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertTrue(hikariPool0.getdebug());
      assertFalse(hikariPool0.getshutdown());
      assertTrue(hikariPool0.getisAutoCommit());
      assertEquals(10, hikariPool0.getTotalConnections());
      assertFalse(hikariDataSource0.isShutdown);
      assertEquals(1250, hikariDataSource0.loginTimeout);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertTrue(hikariPool0.isAutoCommit);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertTrue(hikariPool0.debug);
      assertFalse(hikariPool0.shutdown);
      
      hikariPool0.bagIsEmpty();
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertEquals("<h*3tU31q8JLA&<", hikariConfig0.getDataSourceClassName());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertTrue(hikariConfig0.isAutoCommit());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertEquals("z~NH}l5*1f$G/", hikariPool0.getcatalog());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertTrue(hikariPool0.getdebug());
      assertFalse(hikariPool0.getshutdown());
      assertTrue(hikariPool0.getisAutoCommit());
      assertEquals(11, hikariPool0.getTotalConnections());
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertTrue(hikariPool0.isAutoCommit);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertTrue(hikariPool0.debug);
      assertFalse(hikariPool0.shutdown);
      
      hikariPool0.shutdown();
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertEquals("<h*3tU31q8JLA&<", hikariConfig0.getDataSourceClassName());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertTrue(hikariConfig0.isAutoCommit());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertTrue(hikariPool0.getshutdown());
      assertEquals("z~NH}l5*1f$G/", hikariPool0.getcatalog());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertTrue(hikariPool0.getdebug());
      assertTrue(hikariPool0.getisAutoCommit());
      assertEquals(11, hikariPool0.getTotalConnections());
      assertTrue(hikariPool0.shutdown);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertTrue(hikariPool0.isAutoCommit);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertTrue(hikariPool0.debug);
      
      long long0 = 959L;
      boolean boolean1 = hikariPool0.getshutdown();
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertEquals("<h*3tU31q8JLA&<", hikariConfig0.getDataSourceClassName());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertTrue(hikariConfig0.isAutoCommit());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertTrue(hikariPool0.getshutdown());
      assertEquals("z~NH}l5*1f$G/", hikariPool0.getcatalog());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertTrue(hikariPool0.getdebug());
      assertTrue(hikariPool0.getisAutoCommit());
      assertEquals(11, hikariPool0.getTotalConnections());
      assertTrue(boolean1 == boolean0);
      assertTrue(boolean1);
      assertTrue(hikariPool0.shutdown);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertTrue(hikariPool0.isAutoCommit);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertTrue(hikariPool0.debug);
      
      // Undeclared exception!
      try { 
        hikariPool0.isConnectionAlive(iHikariConnectionProxy0, long0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.zaxxer.hikari.HikariPool", e);
      }
  }

  @Test(timeout = 11000)
  public void test63()  throws Throwable  {
      HikariConfig hikariConfig0 = new HikariConfig();
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertTrue(hikariConfig0.isAutoCommit());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertNotNull(hikariConfig0);
      
      HikariDataSource hikariDataSource0 = new HikariDataSource();
      assertEquals(60, hikariDataSource0.getMaximumPoolSize());
      assertTrue(hikariDataSource0.isAutoCommit());
      assertTrue(hikariDataSource0.isJdbc4ConnectionTest());
      assertNull(hikariDataSource0.getConnectionInitSql());
      assertNull(hikariDataSource0.getConnectionTestQuery());
      assertNull(hikariDataSource0.getConnectionCustomizerClassName());
      assertEquals(0L, hikariDataSource0.getLeakDetectionThreshold());
      assertEquals(0, hikariDataSource0.getAcquireIncrement());
      assertNull(hikariDataSource0.getCatalog());
      assertFalse(hikariDataSource0.isRegisterMbeans());
      assertEquals(5000L, hikariDataSource0.getConnectionTimeout());
      assertFalse(hikariDataSource0.getisShutdown());
      assertFalse(hikariDataSource0.isInitializationFailFast());
      assertEquals(0L, hikariDataSource0.getAcquireRetryDelay());
      assertEquals(0, hikariDataSource0.getLoginTimeout());
      assertEquals((-1), hikariDataSource0.getTransactionIsolation());
      assertNull(hikariDataSource0.getDataSourceClassName());
      assertEquals(3, hikariDataSource0.getAcquireRetries());
      assertEquals(1800000L, hikariDataSource0.getMaxLifetime());
      assertEquals(600000L, hikariDataSource0.getIdleTimeout());
      assertEquals(10, hikariDataSource0.getMinimumPoolSize());
      assertEquals("HikariPool-1", hikariDataSource0.getPoolName());
      assertNotNull(hikariDataSource0);
      assertEquals(0, hikariDataSource0.loginTimeout);
      assertFalse(hikariDataSource0.isShutdown);
      
      hikariConfig0.setDataSource(hikariDataSource0);
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertTrue(hikariConfig0.isAutoCommit());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(60, hikariDataSource0.getMaximumPoolSize());
      assertTrue(hikariDataSource0.isAutoCommit());
      assertTrue(hikariDataSource0.isJdbc4ConnectionTest());
      assertNull(hikariDataSource0.getConnectionInitSql());
      assertNull(hikariDataSource0.getConnectionTestQuery());
      assertNull(hikariDataSource0.getConnectionCustomizerClassName());
      assertEquals(0L, hikariDataSource0.getLeakDetectionThreshold());
      assertEquals(0, hikariDataSource0.getAcquireIncrement());
      assertNull(hikariDataSource0.getCatalog());
      assertFalse(hikariDataSource0.isRegisterMbeans());
      assertEquals(5000L, hikariDataSource0.getConnectionTimeout());
      assertFalse(hikariDataSource0.getisShutdown());
      assertFalse(hikariDataSource0.isInitializationFailFast());
      assertEquals(0L, hikariDataSource0.getAcquireRetryDelay());
      assertEquals(0, hikariDataSource0.getLoginTimeout());
      assertEquals((-1), hikariDataSource0.getTransactionIsolation());
      assertNull(hikariDataSource0.getDataSourceClassName());
      assertEquals(3, hikariDataSource0.getAcquireRetries());
      assertEquals(1800000L, hikariDataSource0.getMaxLifetime());
      assertEquals(600000L, hikariDataSource0.getIdleTimeout());
      assertEquals(10, hikariDataSource0.getMinimumPoolSize());
      assertEquals("HikariPool-1", hikariDataSource0.getPoolName());
      assertEquals(0, hikariDataSource0.loginTimeout);
      assertFalse(hikariDataSource0.isShutdown);
      
      HikariPool hikariPool0 = new HikariPool(hikariConfig0);
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertTrue(hikariConfig0.isAutoCommit());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertTrue(hikariPool0.getisAutoCommit());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertEquals(10, hikariPool0.getTotalConnections());
      assertNull(hikariPool0.getcatalog());
      assertFalse(hikariPool0.getdebug());
      assertFalse(hikariPool0.getshutdown());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertNotNull(hikariPool0);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertFalse(hikariPool0.shutdown);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertFalse(hikariPool0.debug);
      assertTrue(hikariPool0.isAutoCommit);
      assertFalse(hikariPool0.isRegisteredMbeans);
      
      hikariPool0.bagIsEmpty();
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertTrue(hikariConfig0.isAutoCommit());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertTrue(hikariPool0.getisAutoCommit());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertEquals(11, hikariPool0.getTotalConnections());
      assertNull(hikariPool0.getcatalog());
      assertFalse(hikariPool0.getdebug());
      assertFalse(hikariPool0.getshutdown());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertFalse(hikariPool0.shutdown);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertFalse(hikariPool0.debug);
      assertTrue(hikariPool0.isAutoCommit);
      assertFalse(hikariPool0.isRegisteredMbeans);
      
      hikariPool0.shutdown();
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertTrue(hikariConfig0.isAutoCommit());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertTrue(hikariPool0.getshutdown());
      assertTrue(hikariPool0.getisAutoCommit());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertEquals(11, hikariPool0.getTotalConnections());
      assertNull(hikariPool0.getcatalog());
      assertFalse(hikariPool0.getdebug());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertFalse(hikariPool0.debug);
      assertTrue(hikariPool0.isAutoCommit);
      assertTrue(hikariPool0.shutdown);
      assertFalse(hikariPool0.isRegisteredMbeans);
      
      long long0 = 959L;
      boolean boolean0 = hikariPool0.getshutdown();
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertTrue(hikariConfig0.isAutoCommit());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertTrue(hikariPool0.getshutdown());
      assertTrue(hikariPool0.getisAutoCommit());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertEquals(11, hikariPool0.getTotalConnections());
      assertNull(hikariPool0.getcatalog());
      assertFalse(hikariPool0.getdebug());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertTrue(boolean0);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertFalse(hikariPool0.debug);
      assertTrue(hikariPool0.isAutoCommit);
      assertTrue(hikariPool0.shutdown);
      assertFalse(hikariPool0.isRegisteredMbeans);
      
      SerializedObjectSupporter serializedObjectSupporter0 = new SerializedObjectSupporter();
      assertNotNull(serializedObjectSupporter0);
      
      hikariPool0.serializedObjectSupporter = serializedObjectSupporter0;
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertTrue(hikariConfig0.isAutoCommit());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertTrue(hikariPool0.getshutdown());
      assertTrue(hikariPool0.getisAutoCommit());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertEquals(11, hikariPool0.getTotalConnections());
      assertNull(hikariPool0.getcatalog());
      assertFalse(hikariPool0.getdebug());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      
      HikariPool.HouseKeeper hikariPool_HouseKeeper0 = hikariPool0.new HouseKeeper();
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertTrue(hikariConfig0.isAutoCommit());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertTrue(hikariPool0.getshutdown());
      assertTrue(hikariPool0.getisAutoCommit());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertEquals(11, hikariPool0.getTotalConnections());
      assertNull(hikariPool0.getcatalog());
      assertFalse(hikariPool0.getdebug());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertEquals(0L, hikariPool_HouseKeeper0.scheduledExecutionTime());
      assertNotNull(hikariPool_HouseKeeper0);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertFalse(hikariPool0.debug);
      assertTrue(hikariPool0.isAutoCommit);
      assertTrue(hikariPool0.shutdown);
      assertFalse(hikariPool0.isRegisteredMbeans);
      
      hikariPool_HouseKeeper0.run();
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertTrue(hikariConfig0.isAutoCommit());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertTrue(hikariPool0.getshutdown());
      assertTrue(hikariPool0.getisAutoCommit());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertEquals(11, hikariPool0.getTotalConnections());
      assertNull(hikariPool0.getcatalog());
      assertFalse(hikariPool0.getdebug());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertEquals(0L, hikariPool_HouseKeeper0.scheduledExecutionTime());
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertFalse(hikariPool0.debug);
      assertTrue(hikariPool0.isAutoCommit);
      assertTrue(hikariPool0.shutdown);
      assertFalse(hikariPool0.isRegisteredMbeans);
      
      long long1 = hikariPool0.getleakDetectionThreshold();
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertTrue(hikariConfig0.isAutoCommit());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertTrue(hikariPool0.getshutdown());
      assertTrue(hikariPool0.getisAutoCommit());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertEquals(11, hikariPool0.getTotalConnections());
      assertNull(hikariPool0.getcatalog());
      assertFalse(hikariPool0.getdebug());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertFalse(long1 == long0);
      assertEquals(0L, long1);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertFalse(hikariPool0.debug);
      assertTrue(hikariPool0.isAutoCommit);
      assertTrue(hikariPool0.shutdown);
      assertFalse(hikariPool0.isRegisteredMbeans);
      
      IConnectionCustomizer iConnectionCustomizer0 = hikariPool0.getconnectionCustomizer();
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertTrue(hikariConfig0.isAutoCommit());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertTrue(hikariPool0.getshutdown());
      assertTrue(hikariPool0.getisAutoCommit());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertEquals(11, hikariPool0.getTotalConnections());
      assertNull(hikariPool0.getcatalog());
      assertFalse(hikariPool0.getdebug());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertNull(iConnectionCustomizer0);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertFalse(hikariPool0.debug);
      assertTrue(hikariPool0.isAutoCommit);
      assertTrue(hikariPool0.shutdown);
      assertFalse(hikariPool0.isRegisteredMbeans);
  }

  @Test(timeout = 11000)
  public void test64()  throws Throwable  {
      HikariConfig hikariConfig0 = new HikariConfig();
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getCatalog());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertNotNull(hikariConfig0);
      
      String string0 = "z~NH}l5*1f$G/";
      hikariConfig0.setCatalog(string0);
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertNull(hikariConfig0.getDataSourceClassName());
      
      HikariDataSource hikariDataSource0 = new HikariDataSource();
      assertEquals(1800000L, hikariDataSource0.getMaxLifetime());
      assertEquals(600000L, hikariDataSource0.getIdleTimeout());
      assertFalse(hikariDataSource0.isInitializationFailFast());
      assertFalse(hikariDataSource0.isRegisterMbeans());
      assertEquals(5000L, hikariDataSource0.getConnectionTimeout());
      assertFalse(hikariDataSource0.getisShutdown());
      assertNull(hikariDataSource0.getCatalog());
      assertTrue(hikariDataSource0.isJdbc4ConnectionTest());
      assertNull(hikariDataSource0.getConnectionInitSql());
      assertEquals(60, hikariDataSource0.getMaximumPoolSize());
      assertEquals(0L, hikariDataSource0.getLeakDetectionThreshold());
      assertEquals(0, hikariDataSource0.getAcquireIncrement());
      assertNull(hikariDataSource0.getDataSourceClassName());
      assertTrue(hikariDataSource0.isAutoCommit());
      assertNull(hikariDataSource0.getConnectionCustomizerClassName());
      assertEquals(0L, hikariDataSource0.getAcquireRetryDelay());
      assertEquals(10, hikariDataSource0.getMinimumPoolSize());
      assertEquals(0, hikariDataSource0.getLoginTimeout());
      assertEquals(3, hikariDataSource0.getAcquireRetries());
      assertNull(hikariDataSource0.getConnectionTestQuery());
      assertEquals((-1), hikariDataSource0.getTransactionIsolation());
      assertEquals("HikariPool-1", hikariDataSource0.getPoolName());
      assertNotNull(hikariDataSource0);
      assertFalse(hikariDataSource0.isShutdown);
      assertEquals(0, hikariDataSource0.loginTimeout);
      
      hikariConfig0.setDataSource(hikariDataSource0);
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals(1800000L, hikariDataSource0.getMaxLifetime());
      assertEquals(600000L, hikariDataSource0.getIdleTimeout());
      assertFalse(hikariDataSource0.isInitializationFailFast());
      assertFalse(hikariDataSource0.isRegisterMbeans());
      assertEquals(5000L, hikariDataSource0.getConnectionTimeout());
      assertFalse(hikariDataSource0.getisShutdown());
      assertNull(hikariDataSource0.getCatalog());
      assertTrue(hikariDataSource0.isJdbc4ConnectionTest());
      assertNull(hikariDataSource0.getConnectionInitSql());
      assertEquals(60, hikariDataSource0.getMaximumPoolSize());
      assertEquals(0L, hikariDataSource0.getLeakDetectionThreshold());
      assertEquals(0, hikariDataSource0.getAcquireIncrement());
      assertNull(hikariDataSource0.getDataSourceClassName());
      assertTrue(hikariDataSource0.isAutoCommit());
      assertNull(hikariDataSource0.getConnectionCustomizerClassName());
      assertEquals(0L, hikariDataSource0.getAcquireRetryDelay());
      assertEquals(10, hikariDataSource0.getMinimumPoolSize());
      assertEquals(0, hikariDataSource0.getLoginTimeout());
      assertEquals(3, hikariDataSource0.getAcquireRetries());
      assertNull(hikariDataSource0.getConnectionTestQuery());
      assertEquals((-1), hikariDataSource0.getTransactionIsolation());
      assertEquals("HikariPool-1", hikariDataSource0.getPoolName());
      assertFalse(hikariDataSource0.isShutdown);
      assertEquals(0, hikariDataSource0.loginTimeout);
      
      String string1 = "<h*3tU31q8JLA&<";
      HikariPool hikariPool0 = new HikariPool(hikariConfig0);
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertFalse(hikariPool0.getshutdown());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertEquals("z~NH}l5*1f$G/", hikariPool0.getcatalog());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertTrue(hikariPool0.getisAutoCommit());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertEquals(10, hikariPool0.getTotalConnections());
      assertFalse(hikariPool0.getdebug());
      assertNotNull(hikariPool0);
      assertTrue(hikariPool0.isAutoCommit);
      assertFalse(hikariPool0.debug);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertFalse(hikariPool0.shutdown);
      
      hikariPool0.bagIsEmpty();
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertFalse(hikariPool0.getshutdown());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertEquals("z~NH}l5*1f$G/", hikariPool0.getcatalog());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertEquals(11, hikariPool0.getTotalConnections());
      assertTrue(hikariPool0.getisAutoCommit());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertFalse(hikariPool0.getdebug());
      assertTrue(hikariPool0.isAutoCommit);
      assertFalse(hikariPool0.debug);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertFalse(hikariPool0.shutdown);
      
      String[] stringArray0 = new String[4];
      stringArray0[0] = hikariPool0.catalog;
      stringArray0[1] = string1;
      stringArray0[2] = string0;
      stringArray0[3] = hikariPool0.catalog;
      hikariPool0.logPoolState(stringArray0);
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertFalse(hikariPool0.getshutdown());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertEquals("z~NH}l5*1f$G/", hikariPool0.getcatalog());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertEquals(11, hikariPool0.getTotalConnections());
      assertTrue(hikariPool0.getisAutoCommit());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertFalse(hikariPool0.getdebug());
      assertEquals(4, stringArray0.length);
      assertTrue(hikariPool0.isAutoCommit);
      assertFalse(hikariPool0.debug);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertFalse(hikariPool0.shutdown);
      
      hikariPool0.shutdown();
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertTrue(hikariPool0.getshutdown());
      assertEquals("z~NH}l5*1f$G/", hikariPool0.getcatalog());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertEquals(11, hikariPool0.getTotalConnections());
      assertTrue(hikariPool0.getisAutoCommit());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertFalse(hikariPool0.getdebug());
      assertTrue(hikariPool0.isAutoCommit);
      assertFalse(hikariPool0.debug);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertTrue(hikariPool0.shutdown);
      
      long long0 = 959L;
      boolean boolean0 = hikariPool0.getshutdown();
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertTrue(hikariPool0.getshutdown());
      assertEquals("z~NH}l5*1f$G/", hikariPool0.getcatalog());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertEquals(11, hikariPool0.getTotalConnections());
      assertTrue(hikariPool0.getisAutoCommit());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertFalse(hikariPool0.getdebug());
      assertTrue(boolean0);
      assertTrue(hikariPool0.isAutoCommit);
      assertFalse(hikariPool0.debug);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertTrue(hikariPool0.shutdown);
      
      int int0 = hikariPool0.getActiveConnections();
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertTrue(hikariPool0.getshutdown());
      assertEquals("z~NH}l5*1f$G/", hikariPool0.getcatalog());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertEquals(11, hikariPool0.getTotalConnections());
      assertTrue(hikariPool0.getisAutoCommit());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertFalse(hikariPool0.getdebug());
      assertEquals(11, int0);
      assertTrue(hikariPool0.isAutoCommit);
      assertFalse(hikariPool0.debug);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertTrue(hikariPool0.shutdown);
      
      boolean boolean1 = hikariPool0.getjdbc4ConnectionTest();
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertTrue(hikariPool0.getshutdown());
      assertEquals("z~NH}l5*1f$G/", hikariPool0.getcatalog());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertEquals(11, hikariPool0.getTotalConnections());
      assertTrue(hikariPool0.getisAutoCommit());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertFalse(hikariPool0.getdebug());
      assertTrue(boolean1 == boolean0);
      assertTrue(boolean1);
      assertTrue(hikariPool0.isAutoCommit);
      assertFalse(hikariPool0.debug);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertTrue(hikariPool0.shutdown);
      
      HikariPool.HouseKeeper hikariPool_HouseKeeper0 = hikariPool0.new HouseKeeper();
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals(0L, hikariPool_HouseKeeper0.scheduledExecutionTime());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertTrue(hikariPool0.getshutdown());
      assertEquals("z~NH}l5*1f$G/", hikariPool0.getcatalog());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertEquals(11, hikariPool0.getTotalConnections());
      assertTrue(hikariPool0.getisAutoCommit());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertFalse(hikariPool0.getdebug());
      assertNotNull(hikariPool_HouseKeeper0);
      assertTrue(hikariPool0.isAutoCommit);
      assertFalse(hikariPool0.debug);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertTrue(hikariPool0.shutdown);
      
      boolean boolean2 = hikariPool0.getdebug();
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertTrue(hikariPool0.getshutdown());
      assertEquals("z~NH}l5*1f$G/", hikariPool0.getcatalog());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertEquals(11, hikariPool0.getTotalConnections());
      assertTrue(hikariPool0.getisAutoCommit());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertFalse(hikariPool0.getdebug());
      assertFalse(boolean2 == boolean1);
      assertFalse(boolean2 == boolean0);
      assertFalse(boolean2);
      assertTrue(hikariPool0.isAutoCommit);
      assertFalse(hikariPool0.debug);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertTrue(hikariPool0.shutdown);
      
      boolean boolean3 = hikariPool0.getisAutoCommit();
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertTrue(hikariPool0.getshutdown());
      assertEquals("z~NH}l5*1f$G/", hikariPool0.getcatalog());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertEquals(11, hikariPool0.getTotalConnections());
      assertTrue(hikariPool0.getisAutoCommit());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertFalse(hikariPool0.getdebug());
      assertFalse(boolean3 == boolean2);
      assertTrue(boolean3 == boolean1);
      assertTrue(boolean3 == boolean0);
      assertTrue(boolean3);
      assertTrue(hikariPool0.isAutoCommit);
      assertFalse(hikariPool0.debug);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertTrue(hikariPool0.shutdown);
  }

  @Test(timeout = 11000)
  public void test65()  throws Throwable  {
      HikariConfig hikariConfig0 = new HikariConfig();
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertNotNull(hikariConfig0);
      
      String string0 = "z~NH}l5*1f$G/";
      hikariConfig0.setCatalog(string0);
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      
      HikariDataSource hikariDataSource0 = new HikariDataSource();
      assertNull(hikariDataSource0.getConnectionInitSql());
      assertEquals(0L, hikariDataSource0.getLeakDetectionThreshold());
      assertEquals(3, hikariDataSource0.getAcquireRetries());
      assertEquals(0, hikariDataSource0.getAcquireIncrement());
      assertNull(hikariDataSource0.getConnectionTestQuery());
      assertTrue(hikariDataSource0.isJdbc4ConnectionTest());
      assertEquals(1800000L, hikariDataSource0.getMaxLifetime());
      assertEquals(600000L, hikariDataSource0.getIdleTimeout());
      assertFalse(hikariDataSource0.isInitializationFailFast());
      assertNull(hikariDataSource0.getConnectionCustomizerClassName());
      assertEquals("HikariPool-1", hikariDataSource0.getPoolName());
      assertFalse(hikariDataSource0.getisShutdown());
      assertFalse(hikariDataSource0.isRegisterMbeans());
      assertTrue(hikariDataSource0.isAutoCommit());
      assertEquals(10, hikariDataSource0.getMinimumPoolSize());
      assertEquals((-1), hikariDataSource0.getTransactionIsolation());
      assertEquals(0, hikariDataSource0.getLoginTimeout());
      assertEquals(0L, hikariDataSource0.getAcquireRetryDelay());
      assertEquals(5000L, hikariDataSource0.getConnectionTimeout());
      assertNull(hikariDataSource0.getDataSourceClassName());
      assertNull(hikariDataSource0.getCatalog());
      assertEquals(60, hikariDataSource0.getMaximumPoolSize());
      assertNotNull(hikariDataSource0);
      assertEquals(0, hikariDataSource0.loginTimeout);
      assertFalse(hikariDataSource0.isShutdown);
      
      hikariConfig0.setDataSource(hikariDataSource0);
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertNull(hikariDataSource0.getConnectionInitSql());
      assertEquals(0L, hikariDataSource0.getLeakDetectionThreshold());
      assertEquals(3, hikariDataSource0.getAcquireRetries());
      assertEquals(0, hikariDataSource0.getAcquireIncrement());
      assertNull(hikariDataSource0.getConnectionTestQuery());
      assertTrue(hikariDataSource0.isJdbc4ConnectionTest());
      assertEquals(1800000L, hikariDataSource0.getMaxLifetime());
      assertEquals(600000L, hikariDataSource0.getIdleTimeout());
      assertFalse(hikariDataSource0.isInitializationFailFast());
      assertNull(hikariDataSource0.getConnectionCustomizerClassName());
      assertEquals("HikariPool-1", hikariDataSource0.getPoolName());
      assertFalse(hikariDataSource0.getisShutdown());
      assertFalse(hikariDataSource0.isRegisterMbeans());
      assertTrue(hikariDataSource0.isAutoCommit());
      assertEquals(10, hikariDataSource0.getMinimumPoolSize());
      assertEquals((-1), hikariDataSource0.getTransactionIsolation());
      assertEquals(0, hikariDataSource0.getLoginTimeout());
      assertEquals(0L, hikariDataSource0.getAcquireRetryDelay());
      assertEquals(5000L, hikariDataSource0.getConnectionTimeout());
      assertNull(hikariDataSource0.getDataSourceClassName());
      assertNull(hikariDataSource0.getCatalog());
      assertEquals(60, hikariDataSource0.getMaximumPoolSize());
      assertEquals(0, hikariDataSource0.loginTimeout);
      assertFalse(hikariDataSource0.isShutdown);
      
      String string1 = "<h*3tU31q8JLA&<";
      HikariPool hikariPool0 = new HikariPool(hikariConfig0);
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertFalse(hikariPool0.getshutdown());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertEquals(10, hikariPool0.getTotalConnections());
      assertFalse(hikariPool0.getdebug());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertEquals("z~NH}l5*1f$G/", hikariPool0.getcatalog());
      assertTrue(hikariPool0.getisAutoCommit());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertNotNull(hikariPool0);
      assertFalse(hikariPool0.debug);
      assertTrue(hikariPool0.isAutoCommit);
      assertFalse(hikariPool0.shutdown);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      
      String[] stringArray0 = new String[4];
      stringArray0[0] = hikariPool0.catalog;
      stringArray0[1] = string1;
      int int0 = hikariPool0.getActiveConnections();
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertFalse(hikariPool0.getshutdown());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertEquals(10, hikariPool0.getTotalConnections());
      assertFalse(hikariPool0.getdebug());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertEquals("z~NH}l5*1f$G/", hikariPool0.getcatalog());
      assertTrue(hikariPool0.getisAutoCommit());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertEquals(10, int0);
      assertFalse(hikariPool0.debug);
      assertTrue(hikariPool0.isAutoCommit);
      assertFalse(hikariPool0.shutdown);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      
      stringArray0[2] = string0;
      stringArray0[3] = hikariPool0.catalog;
      hikariPool0.logPoolState(stringArray0);
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertFalse(hikariPool0.getshutdown());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertEquals(10, hikariPool0.getTotalConnections());
      assertFalse(hikariPool0.getdebug());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertEquals("z~NH}l5*1f$G/", hikariPool0.getcatalog());
      assertTrue(hikariPool0.getisAutoCommit());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertEquals(4, stringArray0.length);
      assertFalse(hikariPool0.debug);
      assertTrue(hikariPool0.isAutoCommit);
      assertFalse(hikariPool0.shutdown);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      
      hikariPool0.shutdown();
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertEquals(10, hikariPool0.getTotalConnections());
      assertFalse(hikariPool0.getdebug());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertTrue(hikariPool0.getshutdown());
      assertEquals("z~NH}l5*1f$G/", hikariPool0.getcatalog());
      assertTrue(hikariPool0.getisAutoCommit());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertFalse(hikariPool0.debug);
      assertTrue(hikariPool0.isAutoCommit);
      assertTrue(hikariPool0.shutdown);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      
      long long0 = 959L;
      boolean boolean0 = hikariPool0.getshutdown();
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertEquals(10, hikariPool0.getTotalConnections());
      assertFalse(hikariPool0.getdebug());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertTrue(hikariPool0.getshutdown());
      assertEquals("z~NH}l5*1f$G/", hikariPool0.getcatalog());
      assertTrue(hikariPool0.getisAutoCommit());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertTrue(boolean0);
      assertFalse(hikariPool0.debug);
      assertTrue(hikariPool0.isAutoCommit);
      assertTrue(hikariPool0.shutdown);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      
      int int1 = hikariPool0.getActiveConnections();
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertEquals(10, hikariPool0.getTotalConnections());
      assertFalse(hikariPool0.getdebug());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertTrue(hikariPool0.getshutdown());
      assertEquals("z~NH}l5*1f$G/", hikariPool0.getcatalog());
      assertTrue(hikariPool0.getisAutoCommit());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertTrue(int1 == int0);
      assertEquals(10, int1);
      assertFalse(hikariPool0.debug);
      assertTrue(hikariPool0.isAutoCommit);
      assertTrue(hikariPool0.shutdown);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      
      boolean boolean1 = hikariPool0.getjdbc4ConnectionTest();
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertEquals(10, hikariPool0.getTotalConnections());
      assertFalse(hikariPool0.getdebug());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertTrue(hikariPool0.getshutdown());
      assertEquals("z~NH}l5*1f$G/", hikariPool0.getcatalog());
      assertTrue(hikariPool0.getisAutoCommit());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertTrue(boolean1 == boolean0);
      assertTrue(boolean1);
      assertFalse(hikariPool0.debug);
      assertTrue(hikariPool0.isAutoCommit);
      assertTrue(hikariPool0.shutdown);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      
      HikariPool.HouseKeeper hikariPool_HouseKeeper0 = hikariPool0.new HouseKeeper();
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(0L, hikariPool_HouseKeeper0.scheduledExecutionTime());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertEquals(10, hikariPool0.getTotalConnections());
      assertFalse(hikariPool0.getdebug());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertTrue(hikariPool0.getshutdown());
      assertEquals("z~NH}l5*1f$G/", hikariPool0.getcatalog());
      assertTrue(hikariPool0.getisAutoCommit());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertNotNull(hikariPool_HouseKeeper0);
      assertFalse(hikariPool0.debug);
      assertTrue(hikariPool0.isAutoCommit);
      assertTrue(hikariPool0.shutdown);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      
      hikariPool_HouseKeeper0.run();
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(0L, hikariPool_HouseKeeper0.scheduledExecutionTime());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertEquals(10, hikariPool0.getTotalConnections());
      assertFalse(hikariPool0.getdebug());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertTrue(hikariPool0.getshutdown());
      assertEquals("z~NH}l5*1f$G/", hikariPool0.getcatalog());
      assertTrue(hikariPool0.getisAutoCommit());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertFalse(hikariPool0.debug);
      assertTrue(hikariPool0.isAutoCommit);
      assertTrue(hikariPool0.shutdown);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      
      IHikariConnectionProxy iHikariConnectionProxy0 = mock(IHikariConnectionProxy.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(iHikariConnectionProxy0).isValid(anyInt());
      boolean boolean2 = hikariPool0.isConnectionAlive(iHikariConnectionProxy0, int0);
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertEquals(10, hikariPool0.getTotalConnections());
      assertFalse(hikariPool0.getdebug());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertTrue(hikariPool0.getshutdown());
      assertEquals("z~NH}l5*1f$G/", hikariPool0.getcatalog());
      assertTrue(hikariPool0.getisAutoCommit());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertFalse(boolean2 == boolean1);
      assertFalse(boolean2 == boolean0);
      assertTrue(int0 == int1);
      assertFalse(boolean2);
      assertFalse(hikariPool0.debug);
      assertTrue(hikariPool0.isAutoCommit);
      assertTrue(hikariPool0.shutdown);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      
      hikariPool0.addConnection();
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertEquals(10, hikariPool0.getTotalConnections());
      assertFalse(hikariPool0.getdebug());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertTrue(hikariPool0.getshutdown());
      assertEquals("z~NH}l5*1f$G/", hikariPool0.getcatalog());
      assertTrue(hikariPool0.getisAutoCommit());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertFalse(hikariPool0.debug);
      assertTrue(hikariPool0.isAutoCommit);
      assertTrue(hikariPool0.shutdown);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
  }

  @Test(timeout = 11000)
  public void test66()  throws Throwable  {
      HikariConfig hikariConfig0 = new HikariConfig();
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertTrue(hikariConfig0.isAutoCommit());
      assertNotNull(hikariConfig0);
      
      String string0 = "z~NH}l5*1f$G/";
      boolean boolean0 = false;
      hikariConfig0.setAutoCommit(boolean0);
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertFalse(hikariConfig0.isAutoCommit());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      
      HikariDataSource hikariDataSource0 = new HikariDataSource();
      assertTrue(hikariDataSource0.isJdbc4ConnectionTest());
      assertNull(hikariDataSource0.getConnectionCustomizerClassName());
      assertEquals(60, hikariDataSource0.getMaximumPoolSize());
      assertTrue(hikariDataSource0.isAutoCommit());
      assertNull(hikariDataSource0.getConnectionInitSql());
      assertNull(hikariDataSource0.getConnectionTestQuery());
      assertEquals(3, hikariDataSource0.getAcquireRetries());
      assertNull(hikariDataSource0.getDataSourceClassName());
      assertEquals(1800000L, hikariDataSource0.getMaxLifetime());
      assertEquals(600000L, hikariDataSource0.getIdleTimeout());
      assertEquals("HikariPool-1", hikariDataSource0.getPoolName());
      assertEquals(10, hikariDataSource0.getMinimumPoolSize());
      assertEquals((-1), hikariDataSource0.getTransactionIsolation());
      assertEquals(5000L, hikariDataSource0.getConnectionTimeout());
      assertFalse(hikariDataSource0.isRegisterMbeans());
      assertFalse(hikariDataSource0.getisShutdown());
      assertEquals(0, hikariDataSource0.getLoginTimeout());
      assertNull(hikariDataSource0.getCatalog());
      assertFalse(hikariDataSource0.isInitializationFailFast());
      assertEquals(0L, hikariDataSource0.getLeakDetectionThreshold());
      assertEquals(0L, hikariDataSource0.getAcquireRetryDelay());
      assertEquals(0, hikariDataSource0.getAcquireIncrement());
      assertNotNull(hikariDataSource0);
      assertFalse(hikariDataSource0.isShutdown);
      assertEquals(0, hikariDataSource0.loginTimeout);
      
      hikariConfig0.setDataSource(hikariDataSource0);
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertFalse(hikariConfig0.isAutoCommit());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertTrue(hikariDataSource0.isJdbc4ConnectionTest());
      assertNull(hikariDataSource0.getConnectionCustomizerClassName());
      assertEquals(60, hikariDataSource0.getMaximumPoolSize());
      assertTrue(hikariDataSource0.isAutoCommit());
      assertNull(hikariDataSource0.getConnectionInitSql());
      assertNull(hikariDataSource0.getConnectionTestQuery());
      assertEquals(3, hikariDataSource0.getAcquireRetries());
      assertNull(hikariDataSource0.getDataSourceClassName());
      assertEquals(1800000L, hikariDataSource0.getMaxLifetime());
      assertEquals(600000L, hikariDataSource0.getIdleTimeout());
      assertEquals("HikariPool-1", hikariDataSource0.getPoolName());
      assertEquals(10, hikariDataSource0.getMinimumPoolSize());
      assertEquals((-1), hikariDataSource0.getTransactionIsolation());
      assertEquals(5000L, hikariDataSource0.getConnectionTimeout());
      assertFalse(hikariDataSource0.isRegisterMbeans());
      assertFalse(hikariDataSource0.getisShutdown());
      assertEquals(0, hikariDataSource0.getLoginTimeout());
      assertNull(hikariDataSource0.getCatalog());
      assertFalse(hikariDataSource0.isInitializationFailFast());
      assertEquals(0L, hikariDataSource0.getLeakDetectionThreshold());
      assertEquals(0L, hikariDataSource0.getAcquireRetryDelay());
      assertEquals(0, hikariDataSource0.getAcquireIncrement());
      assertFalse(hikariDataSource0.isShutdown);
      assertEquals(0, hikariDataSource0.loginTimeout);
      
      String string1 = "<h*3tU31q8JLA&<";
      hikariConfig0.setDataSourceClassName(string1);
      assertNotSame(string1, string0);
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals("<h*3tU31q8JLA&<", hikariConfig0.getDataSourceClassName());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertFalse(hikariConfig0.isAutoCommit());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertFalse(string1.equals((Object)string0));
      
      HikariPool hikariPool0 = new HikariPool(hikariConfig0);
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals("<h*3tU31q8JLA&<", hikariConfig0.getDataSourceClassName());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertFalse(hikariConfig0.isAutoCommit());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertNull(hikariPool0.getcatalog());
      assertFalse(hikariPool0.getisAutoCommit());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertEquals(10, hikariPool0.getTotalConnections());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertFalse(hikariPool0.getshutdown());
      assertFalse(hikariPool0.getdebug());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertNotNull(hikariPool0);
      assertFalse(hikariPool0.shutdown);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertFalse(hikariPool0.debug);
      assertFalse(hikariPool0.isAutoCommit);
      assertFalse(hikariPool0.isRegisteredMbeans);
      
      IHikariConnectionProxy iHikariConnectionProxy0 = null;
      hikariPool0.setshutdown(hikariDataSource0.isShutdown);
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals("<h*3tU31q8JLA&<", hikariConfig0.getDataSourceClassName());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertFalse(hikariConfig0.isAutoCommit());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertTrue(hikariDataSource0.isJdbc4ConnectionTest());
      assertNull(hikariDataSource0.getConnectionCustomizerClassName());
      assertEquals(60, hikariDataSource0.getMaximumPoolSize());
      assertTrue(hikariDataSource0.isAutoCommit());
      assertNull(hikariDataSource0.getConnectionInitSql());
      assertNull(hikariDataSource0.getConnectionTestQuery());
      assertEquals(3, hikariDataSource0.getAcquireRetries());
      assertNull(hikariDataSource0.getDataSourceClassName());
      assertEquals(1800000L, hikariDataSource0.getMaxLifetime());
      assertEquals(600000L, hikariDataSource0.getIdleTimeout());
      assertEquals("HikariPool-1", hikariDataSource0.getPoolName());
      assertEquals(10, hikariDataSource0.getMinimumPoolSize());
      assertEquals((-1), hikariDataSource0.getTransactionIsolation());
      assertEquals(1250, hikariDataSource0.getLoginTimeout());
      assertEquals(5000L, hikariDataSource0.getConnectionTimeout());
      assertFalse(hikariDataSource0.isRegisterMbeans());
      assertFalse(hikariDataSource0.getisShutdown());
      assertNull(hikariDataSource0.getCatalog());
      assertFalse(hikariDataSource0.isInitializationFailFast());
      assertEquals(0L, hikariDataSource0.getLeakDetectionThreshold());
      assertEquals(0L, hikariDataSource0.getAcquireRetryDelay());
      assertEquals(0, hikariDataSource0.getAcquireIncrement());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertNull(hikariPool0.getcatalog());
      assertFalse(hikariPool0.getisAutoCommit());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertEquals(10, hikariPool0.getTotalConnections());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertFalse(hikariPool0.getshutdown());
      assertFalse(hikariPool0.getdebug());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertFalse(hikariDataSource0.isShutdown);
      assertEquals(1250, hikariDataSource0.loginTimeout);
      assertFalse(hikariPool0.shutdown);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertFalse(hikariPool0.debug);
      assertFalse(hikariPool0.isAutoCommit);
      assertFalse(hikariPool0.isRegisteredMbeans);
      
      hikariPool0.bagIsEmpty();
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals("<h*3tU31q8JLA&<", hikariConfig0.getDataSourceClassName());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertFalse(hikariConfig0.isAutoCommit());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertNull(hikariPool0.getcatalog());
      assertFalse(hikariPool0.getisAutoCommit());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertEquals(11, hikariPool0.getTotalConnections());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertFalse(hikariPool0.getshutdown());
      assertFalse(hikariPool0.getdebug());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertFalse(hikariPool0.shutdown);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertFalse(hikariPool0.debug);
      assertFalse(hikariPool0.isAutoCommit);
      assertFalse(hikariPool0.isRegisteredMbeans);
      
      hikariPool0.shutdown();
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals("<h*3tU31q8JLA&<", hikariConfig0.getDataSourceClassName());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertFalse(hikariConfig0.isAutoCommit());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertNull(hikariPool0.getcatalog());
      assertFalse(hikariPool0.getisAutoCommit());
      assertTrue(hikariPool0.getshutdown());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertEquals(11, hikariPool0.getTotalConnections());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertFalse(hikariPool0.getdebug());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertFalse(hikariPool0.debug);
      assertTrue(hikariPool0.shutdown);
      assertFalse(hikariPool0.isAutoCommit);
      assertFalse(hikariPool0.isRegisteredMbeans);
      
      long long0 = 959L;
      boolean boolean1 = hikariPool0.getshutdown();
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertNull(hikariConfig0.getCatalog());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertEquals("<h*3tU31q8JLA&<", hikariConfig0.getDataSourceClassName());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertFalse(hikariConfig0.isAutoCommit());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertNull(hikariPool0.getcatalog());
      assertFalse(hikariPool0.getisAutoCommit());
      assertTrue(hikariPool0.getshutdown());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertEquals(11, hikariPool0.getTotalConnections());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertFalse(hikariPool0.getdebug());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertFalse(hikariPool0.debug);
      assertTrue(hikariPool0.shutdown);
      assertFalse(hikariPool0.isAutoCommit);
      assertFalse(hikariPool0.isRegisteredMbeans);
      
      // Undeclared exception!
      try { 
        hikariPool0.isConnectionAlive(iHikariConnectionProxy0, long0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.zaxxer.hikari.HikariPool", e);
      }
  }

  @Test(timeout = 11000)
  public void test67()  throws Throwable  {
      HikariConfig hikariConfig0 = new HikariConfig();
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariConfig0.getCatalog());
      assertNotNull(hikariConfig0);
      
      String string0 = "z~NH}l5*1f$G/";
      hikariConfig0.setCatalog(string0);
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertFalse(hikariConfig0.isRegisterMbeans());
      
      HikariDataSource hikariDataSource0 = new HikariDataSource();
      assertNull(hikariDataSource0.getDataSourceClassName());
      assertNull(hikariDataSource0.getConnectionCustomizerClassName());
      assertEquals(0L, hikariDataSource0.getAcquireRetryDelay());
      assertEquals(0, hikariDataSource0.getLoginTimeout());
      assertNull(hikariDataSource0.getCatalog());
      assertTrue(hikariDataSource0.isJdbc4ConnectionTest());
      assertEquals(60, hikariDataSource0.getMaximumPoolSize());
      assertEquals(5000L, hikariDataSource0.getConnectionTimeout());
      assertEquals(0L, hikariDataSource0.getLeakDetectionThreshold());
      assertEquals(0, hikariDataSource0.getAcquireIncrement());
      assertFalse(hikariDataSource0.isInitializationFailFast());
      assertEquals(1800000L, hikariDataSource0.getMaxLifetime());
      assertEquals(600000L, hikariDataSource0.getIdleTimeout());
      assertFalse(hikariDataSource0.isRegisterMbeans());
      assertFalse(hikariDataSource0.getisShutdown());
      assertEquals(3, hikariDataSource0.getAcquireRetries());
      assertNull(hikariDataSource0.getConnectionInitSql());
      assertNull(hikariDataSource0.getConnectionTestQuery());
      assertTrue(hikariDataSource0.isAutoCommit());
      assertEquals("HikariPool-1", hikariDataSource0.getPoolName());
      assertEquals(10, hikariDataSource0.getMinimumPoolSize());
      assertEquals((-1), hikariDataSource0.getTransactionIsolation());
      assertNotNull(hikariDataSource0);
      assertFalse(hikariDataSource0.isShutdown);
      assertEquals(0, hikariDataSource0.loginTimeout);
      
      hikariConfig0.setDataSource(hikariDataSource0);
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertNull(hikariDataSource0.getDataSourceClassName());
      assertNull(hikariDataSource0.getConnectionCustomizerClassName());
      assertEquals(0L, hikariDataSource0.getAcquireRetryDelay());
      assertEquals(0, hikariDataSource0.getLoginTimeout());
      assertNull(hikariDataSource0.getCatalog());
      assertTrue(hikariDataSource0.isJdbc4ConnectionTest());
      assertEquals(60, hikariDataSource0.getMaximumPoolSize());
      assertEquals(5000L, hikariDataSource0.getConnectionTimeout());
      assertEquals(0L, hikariDataSource0.getLeakDetectionThreshold());
      assertEquals(0, hikariDataSource0.getAcquireIncrement());
      assertFalse(hikariDataSource0.isInitializationFailFast());
      assertEquals(1800000L, hikariDataSource0.getMaxLifetime());
      assertEquals(600000L, hikariDataSource0.getIdleTimeout());
      assertFalse(hikariDataSource0.isRegisterMbeans());
      assertFalse(hikariDataSource0.getisShutdown());
      assertEquals(3, hikariDataSource0.getAcquireRetries());
      assertNull(hikariDataSource0.getConnectionInitSql());
      assertNull(hikariDataSource0.getConnectionTestQuery());
      assertTrue(hikariDataSource0.isAutoCommit());
      assertEquals("HikariPool-1", hikariDataSource0.getPoolName());
      assertEquals(10, hikariDataSource0.getMinimumPoolSize());
      assertEquals((-1), hikariDataSource0.getTransactionIsolation());
      assertFalse(hikariDataSource0.isShutdown);
      assertEquals(0, hikariDataSource0.loginTimeout);
      
      String string1 = "<h*3tU31q8JLA&<";
      HikariPool hikariPool0 = new HikariPool(hikariConfig0);
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertTrue(hikariPool0.getisAutoCommit());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertEquals("z~NH}l5*1f$G/", hikariPool0.getcatalog());
      assertEquals(10, hikariPool0.getTotalConnections());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertFalse(hikariPool0.getshutdown());
      assertFalse(hikariPool0.getdebug());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertNotNull(hikariPool0);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertFalse(hikariPool0.shutdown);
      assertTrue(hikariPool0.isAutoCommit);
      assertFalse(hikariPool0.debug);
      
      hikariPool0.addConnection();
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertTrue(hikariPool0.getisAutoCommit());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertEquals("z~NH}l5*1f$G/", hikariPool0.getcatalog());
      assertEquals(11, hikariPool0.getTotalConnections());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertFalse(hikariPool0.getshutdown());
      assertFalse(hikariPool0.getdebug());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertFalse(hikariPool0.shutdown);
      assertTrue(hikariPool0.isAutoCommit);
      assertFalse(hikariPool0.debug);
      
      hikariPool0.bagIsEmpty();
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertTrue(hikariPool0.getisAutoCommit());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertEquals(12, hikariPool0.getTotalConnections());
      assertEquals("z~NH}l5*1f$G/", hikariPool0.getcatalog());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertFalse(hikariPool0.getshutdown());
      assertFalse(hikariPool0.getdebug());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertFalse(hikariPool0.shutdown);
      assertTrue(hikariPool0.isAutoCommit);
      assertFalse(hikariPool0.debug);
      
      String[] stringArray0 = new String[4];
      stringArray0[0] = hikariPool0.catalog;
      stringArray0[1] = string1;
      stringArray0[2] = string0;
      stringArray0[3] = hikariPool0.catalog;
      hikariPool0.logPoolState(stringArray0);
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertTrue(hikariPool0.getisAutoCommit());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertEquals(12, hikariPool0.getTotalConnections());
      assertEquals("z~NH}l5*1f$G/", hikariPool0.getcatalog());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertFalse(hikariPool0.getshutdown());
      assertFalse(hikariPool0.getdebug());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertEquals(4, stringArray0.length);
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertFalse(hikariPool0.shutdown);
      assertTrue(hikariPool0.isAutoCommit);
      assertFalse(hikariPool0.debug);
      
      hikariPool0.shutdown();
      assertTrue(hikariConfig0.isJdbc4ConnectionTest());
      assertEquals(60, hikariConfig0.getMaximumPoolSize());
      assertTrue(hikariConfig0.isAutoCommit());
      assertEquals(0L, hikariConfig0.getLeakDetectionThreshold());
      assertEquals(0, hikariConfig0.getAcquireIncrement());
      assertEquals((-1), hikariConfig0.getTransactionIsolation());
      assertEquals("HikariPool-0", hikariConfig0.getPoolName());
      assertEquals(600000L, hikariConfig0.getIdleTimeout());
      assertNull(hikariConfig0.getDataSourceClassName());
      assertEquals(1800000L, hikariConfig0.getMaxLifetime());
      assertFalse(hikariConfig0.isInitializationFailFast());
      assertEquals(3, hikariConfig0.getAcquireRetries());
      assertNull(hikariConfig0.getConnectionTestQuery());
      assertEquals(0L, hikariConfig0.getAcquireRetryDelay());
      assertEquals("z~NH}l5*1f$G/", hikariConfig0.getCatalog());
      assertEquals(5000L, hikariConfig0.getConnectionTimeout());
      assertEquals(10, hikariConfig0.getMinimumPoolSize());
      assertNull(hikariConfig0.getConnectionCustomizerClassName());
      assertNull(hikariConfig0.getConnectionInitSql());
      assertFalse(hikariConfig0.isRegisterMbeans());
      assertTrue(hikariPool0.getjdbc4ConnectionTest());
      assertTrue(hikariPool0.getisAutoCommit());
      assertFalse(hikariPool0.getisRegisteredMbeans());
      assertEquals(12, hikariPool0.getTotalConnections());
      assertEquals("z~NH}l5*1f$G/", hikariPool0.getcatalog());
      assertEquals(0L, hikariPool0.getleakDetectionThreshold());
      assertFalse(hikariPool0.getdebug());
      assertEquals((-1), hikariPool0.gettransactionIsolation());
      assertTrue(hikariPool0.getshutdown());
      assertEquals("HikariPool-0", hikariPool0.toString());
      assertEquals(0L, hikariPool0.leakDetectionThreshold);
      assertFalse(hikariPool0.isRegisteredMbeans);
      assertEquals((-1), hikariPool0.transactionIsolation);
      assertTrue(hikariPool0.jdbc4ConnectionTest);
      assertTrue(hikariPool0.shutdown);
      assertTrue(hikariPool0.isAutoCommit);
      assertFalse(hikariPool0.debug);
      
      IHikariConnectionProxy iHikariConnectionProxy0 = mock(IHikariConnectionProxy.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(iHikariConnectionProxy0).compareAndSetState(anyInt() , anyInt());
      // Undeclared exception!
      try { 
        hikariPool0.closeConnection(iHikariConnectionProxy0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Attempt to remove an object from the bag that was not borrowed or reserved
         //
         verifyException("com.zaxxer.hikari.util.ConcurrentBag", e);
      }
  }
}
