import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest5 {

    public static boolean debug = false;

    @Test
    public void test02501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02501");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader2.parseOperationPath("hi!", strMap15);
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.Class<?> wildcardClass20 = springMvcApiReader19.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass20);
        java.util.Map<java.lang.String, java.lang.String> strMap23 = null;
        java.lang.String str24 = springMvcApiReader2.parseOperationPath("/hi!", strMap23);
        io.swagger.models.Swagger swagger25 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter26 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader27 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger25, logAdapter26);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter28 = springMvcApiReader27.LOG;
        java.util.Set<java.lang.reflect.Type> typeSet29 = springMvcApiReader27.getTypesToSkip();
        springMvcApiReader2.typesToSkip = typeSet29;
        io.swagger.annotations.Api api32 = null;
        boolean boolean33 = springMvcApiReader2.canReadApi(true, api32);
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap34 = null;
        io.swagger.annotations.Api api35 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, io.swagger.models.Tag> strMap36 = springMvcApiReader2.updateTagsForApi(strMap34, api35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/hi!" + "'", str16, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "/hi!" + "'", str24, "/hi!");
        org.junit.Assert.assertNull(logAdapter28);
        org.junit.Assert.assertNotNull(typeSet29);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test02502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02502");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.models.Swagger swagger3 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter4 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader5 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger3, logAdapter4);
        java.lang.reflect.Type[] typeArray6 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet7 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet7, typeArray6);
        springMvcApiReader5.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet7);
        java.lang.annotation.Annotation[] annotationArray10 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList11 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList11, annotationArray10);
        boolean boolean13 = springMvcApiReader5.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList11);
        boolean boolean14 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList11);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type[] typeArray18 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet19 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet19, typeArray18);
        springMvcApiReader17.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet19);
        java.lang.annotation.Annotation[] annotationArray22 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList23 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList23, annotationArray22);
        boolean boolean25 = springMvcApiReader17.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList23);
        boolean boolean26 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList23);
        java.util.Set<java.lang.reflect.Type> typeSet27 = null;
        springMvcApiReader2.typesToSkip = typeSet27;
        io.swagger.models.Swagger swagger29 = null;
        springMvcApiReader2.swagger = swagger29;
        io.swagger.models.Operation operation31 = null;
        io.swagger.annotations.ApiOperation apiOperation32 = null;
        springMvcApiReader2.updateTagsForOperation(operation31, apiOperation32);
        java.util.Set<java.lang.reflect.Type> typeSet34 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger35 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter36 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader37 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger35, logAdapter36);
        java.lang.reflect.Type[] typeArray38 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet39 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet39, typeArray38);
        springMvcApiReader37.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet39);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter42 = springMvcApiReader37.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap44 = null;
        java.lang.String str45 = springMvcApiReader37.parseOperationPath("", strMap44);
        io.swagger.models.Swagger swagger46 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter47 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader48 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger46, logAdapter47);
        java.lang.Class<?> wildcardClass49 = springMvcApiReader48.getClass();
        java.lang.reflect.Type[] typeArray50 = new java.lang.reflect.Type[] { wildcardClass49 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet51 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet51, typeArray50);
        springMvcApiReader37.typesToSkip = typeSet51;
        java.util.Set<java.lang.reflect.Type> typeSet54 = springMvcApiReader37.getTypesToSkip();
        io.swagger.models.Swagger swagger55 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter56 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader57 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger55, logAdapter56);
        java.lang.reflect.Type type58 = null;
        springMvcApiReader57.addTypeToSkippedTypes(type58);
        java.util.Set<java.lang.reflect.Type> typeSet60 = springMvcApiReader57.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet61 = springMvcApiReader57.typesToSkip;
        springMvcApiReader37.setTypesToSkip(typeSet61);
        springMvcApiReader2.setTypesToSkip(typeSet61);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Operation operation65 = null;
        io.swagger.annotations.ApiResponses apiResponses66 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateApiResponse(operation65, apiResponses66);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(annotationArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(typeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(annotationArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(typeSet34);
        org.junit.Assert.assertNotNull(typeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(logAdapter42);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(typeArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(typeSet54);
        org.junit.Assert.assertNotNull(typeSet60);
        org.junit.Assert.assertNotNull(typeSet61);
    }

    @Test
    public void test02503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02503");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        springMvcApiReader2.LOG = logAdapter8;
        springMvcApiReader2.updateExtensionChain();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = null;
        java.lang.String str13 = springMvcApiReader2.parseOperationPath("", strMap12);
        io.swagger.annotations.Api api15 = null;
        boolean boolean16 = springMvcApiReader2.canReadApi(false, api15);
        java.util.Set<java.lang.reflect.Type> typeSet17 = springMvcApiReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass18 = typeSet17.getClass();
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(typeSet17);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test02504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02504");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.models.Swagger swagger3 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter4 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader5 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger3, logAdapter4);
        java.lang.reflect.Type[] typeArray6 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet7 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet7, typeArray6);
        springMvcApiReader5.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet7);
        java.lang.annotation.Annotation[] annotationArray10 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList11 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList11, annotationArray10);
        boolean boolean13 = springMvcApiReader5.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList11);
        boolean boolean14 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList11);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type[] typeArray18 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet19 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet19, typeArray18);
        springMvcApiReader17.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet19);
        java.lang.annotation.Annotation[] annotationArray22 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList23 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList23, annotationArray22);
        boolean boolean25 = springMvcApiReader17.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList23);
        boolean boolean26 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList23);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter27 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger28 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter29 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader30 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger28, logAdapter29);
        java.lang.reflect.Type[] typeArray31 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet32 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet32, typeArray31);
        springMvcApiReader30.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet32);
        io.swagger.models.Swagger swagger35 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter36 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader37 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger35, logAdapter36);
        java.lang.reflect.Type[] typeArray38 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet39 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet39, typeArray38);
        springMvcApiReader37.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet39);
        springMvcApiReader30.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet39);
        java.util.Map<java.lang.String, java.lang.String> strMap44 = null;
        java.lang.String str45 = springMvcApiReader30.parseOperationPath("/hi!", strMap44);
        io.swagger.models.Swagger swagger46 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter47 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader48 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger46, logAdapter47);
        java.lang.reflect.Type[] typeArray49 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet50 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet50, typeArray49);
        springMvcApiReader48.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet50);
        java.lang.annotation.Annotation[] annotationArray53 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList54 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList54, annotationArray53);
        boolean boolean56 = springMvcApiReader48.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList54);
        io.swagger.models.Swagger swagger57 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter58 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader59 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger57, logAdapter58);
        java.lang.Class<?> wildcardClass60 = springMvcApiReader59.getClass();
        springMvcApiReader48.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass60);
        springMvcApiReader30.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass60);
        io.swagger.models.Swagger swagger63 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter64 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader65 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger63, logAdapter64);
        java.lang.reflect.Type[] typeArray66 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet67 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet67, typeArray66);
        springMvcApiReader65.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet67);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter70 = springMvcApiReader65.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap72 = null;
        java.lang.String str73 = springMvcApiReader65.parseOperationPath("", strMap72);
        io.swagger.annotations.Api api75 = null;
        boolean boolean76 = springMvcApiReader65.canReadApi(false, api75);
        java.util.Map<java.lang.String, java.lang.String> strMap78 = null;
        java.lang.String str79 = springMvcApiReader65.parseOperationPath("hi!", strMap78);
        io.swagger.models.Swagger swagger80 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter81 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader82 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger80, logAdapter81);
        java.lang.Class<?> wildcardClass83 = springMvcApiReader82.getClass();
        springMvcApiReader65.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass83);
        java.util.Map<java.lang.String, java.lang.String> strMap86 = null;
        java.lang.String str87 = springMvcApiReader65.parseOperationPath("/hi!", strMap86);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray88 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap89 = springMvcApiReader65.parseResponseHeaders(responseHeaderArray88);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap90 = springMvcApiReader30.parseResponseHeaders(responseHeaderArray88);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap91 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray88);
        io.swagger.models.Swagger swagger92 = springMvcApiReader2.swagger;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter93 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger94 = springMvcApiReader2.swagger;
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap95 = null;
        io.swagger.annotations.Api api96 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, io.swagger.models.Tag> strMap97 = springMvcApiReader2.updateTagsForApi(strMap95, api96);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(annotationArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(typeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(annotationArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(logAdapter27);
        org.junit.Assert.assertNotNull(typeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(typeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "/hi!" + "'", str45, "/hi!");
        org.junit.Assert.assertNotNull(typeArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(annotationArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(typeArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNull(logAdapter70);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "" + "'", str73, "");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "/hi!" + "'", str79, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "/hi!" + "'", str87, "/hi!");
        org.junit.Assert.assertNotNull(responseHeaderArray88);
        org.junit.Assert.assertNull(strMap89);
        org.junit.Assert.assertNull(strMap90);
        org.junit.Assert.assertNull(strMap91);
        org.junit.Assert.assertNull(swagger92);
        org.junit.Assert.assertNull(logAdapter93);
        org.junit.Assert.assertNull(swagger94);
    }

    @Test
    public void test02505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02505");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.lang.annotation.Annotation[] annotationArray7 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList8 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList8, annotationArray7);
        boolean boolean10 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList8);
        io.swagger.models.Swagger swagger11 = null;
        springMvcApiReader2.swagger = swagger11;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter13 = null;
        springMvcApiReader2.LOG = logAdapter13;
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type[] typeArray18 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet19 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet19, typeArray18);
        springMvcApiReader17.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet19);
        java.util.Set<java.lang.reflect.Type> typeSet22 = springMvcApiReader17.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet23 = springMvcApiReader17.getTypesToSkip();
        springMvcApiReader2.typesToSkip = typeSet23;
        java.util.Map<java.lang.String, java.lang.String> strMap26 = null;
        java.lang.String str27 = springMvcApiReader2.parseOperationPath("", strMap26);
        io.swagger.models.Swagger swagger28 = springMvcApiReader2.swagger;
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(annotationArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(typeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(typeSet22);
        org.junit.Assert.assertNotNull(typeSet23);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNull(swagger28);
    }

    @Test
    public void test02506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02506");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type type18 = null;
        springMvcApiReader17.addTypeToSkippedTypes(type18);
        java.util.Set<java.lang.reflect.Type> typeSet20 = springMvcApiReader17.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet20);
        java.util.Set<java.lang.reflect.Type> typeSet22 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger23 = null;
        springMvcApiReader2.swagger = swagger23;
        java.util.Map<java.lang.String, java.lang.String> strMap26 = null;
        java.lang.String str27 = springMvcApiReader2.parseOperationPath("hi!", strMap26);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray28 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap29 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray28);
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeSet20);
        org.junit.Assert.assertNotNull(typeSet22);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "/hi!" + "'", str27, "/hi!");
        org.junit.Assert.assertNull(strMap29);
    }

    @Test
    public void test02507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02507");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader2.parseOperationPath("hi!", strMap15);
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.Class<?> wildcardClass20 = springMvcApiReader19.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass20);
        io.swagger.models.Swagger swagger22 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader24 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger22, logAdapter23);
        java.lang.reflect.Type[] typeArray25 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet26 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet26, typeArray25);
        springMvcApiReader24.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet26);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter29 = springMvcApiReader24.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap31 = null;
        java.lang.String str32 = springMvcApiReader24.parseOperationPath("", strMap31);
        java.lang.reflect.Type[] typeArray33 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList34 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList34, typeArray33);
        springMvcApiReader24.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList34);
        java.lang.String[] strArray37 = new java.lang.String[] {};
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!", "", "hi!" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap42 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray43 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList44 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList44, securityRequirementArray43);
        io.swagger.models.Operation operation46 = null;
        springMvcApiReader24.updateOperation(strArray37, strArray41, strMap42, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList44, operation46);
        java.lang.String[] strArray54 = new java.lang.String[] { "/hi!", "", "/hi!", "hi!", "hi!", "hi!" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap55 = null;
        io.swagger.models.Swagger swagger56 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter57 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader58 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger56, logAdapter57);
        java.lang.reflect.Type[] typeArray59 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet60 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet60, typeArray59);
        springMvcApiReader58.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet60);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter63 = springMvcApiReader58.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap65 = null;
        java.lang.String str66 = springMvcApiReader58.parseOperationPath("", strMap65);
        java.lang.reflect.Type[] typeArray67 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList68 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList68, typeArray67);
        springMvcApiReader58.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList68);
        java.lang.String[] strArray71 = new java.lang.String[] {};
        java.lang.String[] strArray75 = new java.lang.String[] { "hi!", "", "hi!" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap76 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray77 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList78 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList78, securityRequirementArray77);
        io.swagger.models.Operation operation80 = null;
        springMvcApiReader58.updateOperation(strArray71, strArray75, strMap76, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList78, operation80);
        io.swagger.models.Operation operation82 = null;
        springMvcApiReader2.updateOperation(strArray37, strArray54, strMap55, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList78, operation82);
        io.swagger.models.Swagger swagger84 = null;
        springMvcApiReader2.swagger = swagger84;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter86 = springMvcApiReader2.LOG;
        io.swagger.models.Operation operation87 = null;
        io.swagger.annotations.ApiOperation apiOperation88 = null;
        springMvcApiReader2.updateTagsForOperation(operation87, apiOperation88);
        io.swagger.models.Swagger swagger90 = springMvcApiReader2.swagger;
        io.swagger.annotations.ResponseHeader[] responseHeaderArray91 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap92 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray91);
        io.swagger.models.Swagger swagger93 = null;
        springMvcApiReader2.swagger = swagger93;
        io.swagger.annotations.Api api95 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.lang.String> strSet96 = springMvcApiReader2.extractTags(api95);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/hi!" + "'", str16, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(typeArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(logAdapter29);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertNotNull(typeArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(securityRequirementArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(typeArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNull(logAdapter63);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "" + "'", str66, "");
        org.junit.Assert.assertNotNull(typeArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertNotNull(securityRequirementArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNull(logAdapter86);
        org.junit.Assert.assertNull(swagger90);
        org.junit.Assert.assertNull(strMap92);
    }

    @Test
    public void test02508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02508");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.lang.annotation.Annotation[] annotationArray7 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList8 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList8, annotationArray7);
        boolean boolean10 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList8);
        io.swagger.models.Swagger swagger11 = null;
        springMvcApiReader2.swagger = swagger11;
        java.util.Set<java.lang.reflect.Type> typeSet13 = springMvcApiReader2.getTypesToSkip();
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader2.parseOperationPath("/hi!", strMap15);
        java.util.Set<java.lang.reflect.Type> typeSet17 = springMvcApiReader2.getTypesToSkip();
        io.swagger.annotations.ApiOperation apiOperation18 = null;
        io.swagger.models.Operation operation19 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateOperationProtocols(apiOperation18, operation19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(annotationArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(typeSet13);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/hi!" + "'", str16, "/hi!");
        org.junit.Assert.assertNotNull(typeSet17);
    }

    @Test
    public void test02509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02509");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader2.parseOperationPath("hi!", strMap15);
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.reflect.Type[] typeArray20 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet21 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet21, typeArray20);
        springMvcApiReader19.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet21);
        io.swagger.models.Swagger swagger24 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter25 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader26 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger24, logAdapter25);
        java.lang.reflect.Type[] typeArray27 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet28 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet28, typeArray27);
        springMvcApiReader26.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet28);
        springMvcApiReader19.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet28);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.reflect.Type[] typeArray35 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet36 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet36, typeArray35);
        springMvcApiReader34.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet36);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter39 = springMvcApiReader34.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap41 = null;
        java.lang.String str42 = springMvcApiReader34.parseOperationPath("", strMap41);
        io.swagger.annotations.Api api44 = null;
        boolean boolean45 = springMvcApiReader34.canReadApi(false, api44);
        java.util.Map<java.lang.String, java.lang.String> strMap47 = null;
        java.lang.String str48 = springMvcApiReader34.parseOperationPath("hi!", strMap47);
        io.swagger.models.Swagger swagger49 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter50 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader51 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger49, logAdapter50);
        java.lang.Class<?> wildcardClass52 = springMvcApiReader51.getClass();
        springMvcApiReader34.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        springMvcApiReader19.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        io.swagger.models.Swagger swagger56 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter57 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader58 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger56, logAdapter57);
        java.lang.reflect.Type[] typeArray59 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet60 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet60, typeArray59);
        springMvcApiReader58.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet60);
        java.util.Set<java.lang.reflect.Type> typeSet63 = springMvcApiReader58.typesToSkip;
        springMvcApiReader2.typesToSkip = typeSet63;
        io.swagger.annotations.ApiOperation apiOperation65 = null;
        io.swagger.models.Operation operation66 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateOperationProtocols(apiOperation65, operation66);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/hi!" + "'", str16, "/hi!");
        org.junit.Assert.assertNotNull(typeArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(typeArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(typeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(logAdapter39);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "/hi!" + "'", str48, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(typeArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(typeSet63);
    }

    @Test
    public void test02510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02510");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.lang.annotation.Annotation[] annotationArray7 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList8 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList8, annotationArray7);
        boolean boolean10 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList8);
        io.swagger.models.Swagger swagger11 = null;
        springMvcApiReader2.swagger = swagger11;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter13 = null;
        springMvcApiReader2.LOG = logAdapter13;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Operation operation16 = null;
        io.swagger.annotations.ApiOperation apiOperation17 = null;
        springMvcApiReader2.updateTagsForOperation(operation16, apiOperation17);
        io.swagger.models.Swagger swagger19 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter20 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader21 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger19, logAdapter20);
        java.lang.reflect.Type[] typeArray22 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet23 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet23, typeArray22);
        springMvcApiReader21.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet23);
        io.swagger.models.Swagger swagger26 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter27 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader28 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger26, logAdapter27);
        java.lang.reflect.Type[] typeArray29 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet30 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet30, typeArray29);
        springMvcApiReader28.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet30);
        springMvcApiReader21.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet30);
        io.swagger.models.Swagger swagger34 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter35 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader36 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger34, logAdapter35);
        java.lang.reflect.Type[] typeArray37 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet38 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet38, typeArray37);
        springMvcApiReader36.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet38);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter41 = springMvcApiReader36.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap43 = null;
        java.lang.String str44 = springMvcApiReader36.parseOperationPath("", strMap43);
        io.swagger.annotations.Api api46 = null;
        boolean boolean47 = springMvcApiReader36.canReadApi(false, api46);
        java.util.Map<java.lang.String, java.lang.String> strMap49 = null;
        java.lang.String str50 = springMvcApiReader36.parseOperationPath("hi!", strMap49);
        io.swagger.models.Swagger swagger51 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter52 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader53 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger51, logAdapter52);
        java.lang.Class<?> wildcardClass54 = springMvcApiReader53.getClass();
        springMvcApiReader36.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass54);
        springMvcApiReader21.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass54);
        springMvcApiReader21.updateExtensionChain();
        io.swagger.models.Swagger swagger58 = null;
        springMvcApiReader21.swagger = swagger58;
        java.util.Map<java.lang.String, java.lang.String> strMap61 = null;
        java.lang.String str62 = springMvcApiReader21.parseOperationPath("hi!", strMap61);
        java.util.Set<java.lang.reflect.Type> typeSet63 = springMvcApiReader21.getTypesToSkip();
        springMvcApiReader2.setTypesToSkip(typeSet63);
        io.swagger.annotations.Api api65 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.lang.String> strSet66 = springMvcApiReader2.extractTags(api65);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(annotationArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(typeArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(typeArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(typeArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(logAdapter41);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "/hi!" + "'", str50, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "/hi!" + "'", str62, "/hi!");
        org.junit.Assert.assertNotNull(typeSet63);
    }

    @Test
    public void test02511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02511");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type[] typeArray18 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet19 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet19, typeArray18);
        springMvcApiReader17.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet19);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = springMvcApiReader17.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap24 = null;
        java.lang.String str25 = springMvcApiReader17.parseOperationPath("", strMap24);
        io.swagger.annotations.Api api27 = null;
        boolean boolean28 = springMvcApiReader17.canReadApi(false, api27);
        java.util.Map<java.lang.String, java.lang.String> strMap30 = null;
        java.lang.String str31 = springMvcApiReader17.parseOperationPath("hi!", strMap30);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.Class<?> wildcardClass35 = springMvcApiReader34.getClass();
        springMvcApiReader17.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter38 = springMvcApiReader2.LOG;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger40 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter41 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader42 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger40, logAdapter41);
        java.lang.reflect.Type[] typeArray43 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet44 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet44, typeArray43);
        springMvcApiReader42.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet44);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter47 = springMvcApiReader42.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap49 = null;
        java.lang.String str50 = springMvcApiReader42.parseOperationPath("", strMap49);
        java.lang.reflect.Type[] typeArray51 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList52 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList52, typeArray51);
        springMvcApiReader42.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList52);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList52);
        java.util.Map<java.lang.String, java.lang.String> strMap57 = null;
        java.lang.String str58 = springMvcApiReader2.parseOperationPath("hi!", strMap57);
        java.util.Map<java.lang.String, java.lang.String> strMap60 = null;
        java.lang.String str61 = springMvcApiReader2.parseOperationPath("/hi!", strMap60);
        io.swagger.models.Swagger swagger62 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter63 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader64 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger62, logAdapter63);
        java.lang.reflect.Type type65 = null;
        springMvcApiReader64.addTypeToSkippedTypes(type65);
        java.util.Set<java.lang.reflect.Type> typeSet67 = springMvcApiReader64.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet67);
        io.swagger.annotations.ApiOperation apiOperation69 = null;
        io.swagger.models.Operation operation70 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateOperationProtocols(apiOperation69, operation70);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(logAdapter22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "/hi!" + "'", str31, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNull(logAdapter38);
        org.junit.Assert.assertNotNull(typeArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(logAdapter47);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertNotNull(typeArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "/hi!" + "'", str58, "/hi!");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "/hi!" + "'", str61, "/hi!");
        org.junit.Assert.assertNotNull(typeSet67);
    }

    @Test
    public void test02512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02512");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.lang.annotation.Annotation[] annotationArray7 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList8 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList8, annotationArray7);
        boolean boolean10 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList8);
        java.util.Map<java.lang.String, java.lang.String> strMap12 = null;
        java.lang.String str13 = springMvcApiReader2.parseOperationPath("hi!", strMap12);
        io.swagger.models.Swagger swagger14 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter15 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader16 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger14, logAdapter15);
        java.lang.reflect.Type[] typeArray17 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet18 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet18, typeArray17);
        springMvcApiReader16.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet18);
        io.swagger.models.Swagger swagger21 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader23 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger21, logAdapter22);
        java.lang.reflect.Type[] typeArray24 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet25 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet25, typeArray24);
        springMvcApiReader23.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet25);
        springMvcApiReader16.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet25);
        io.swagger.models.Swagger swagger29 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter30 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader31 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger29, logAdapter30);
        java.lang.reflect.Type[] typeArray32 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet33 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet33, typeArray32);
        springMvcApiReader31.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet33);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter36 = springMvcApiReader31.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap38 = null;
        java.lang.String str39 = springMvcApiReader31.parseOperationPath("", strMap38);
        io.swagger.annotations.Api api41 = null;
        boolean boolean42 = springMvcApiReader31.canReadApi(false, api41);
        java.util.Map<java.lang.String, java.lang.String> strMap44 = null;
        java.lang.String str45 = springMvcApiReader31.parseOperationPath("hi!", strMap44);
        io.swagger.models.Swagger swagger46 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter47 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader48 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger46, logAdapter47);
        java.lang.Class<?> wildcardClass49 = springMvcApiReader48.getClass();
        springMvcApiReader31.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass49);
        springMvcApiReader16.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass49);
        springMvcApiReader16.updateExtensionChain();
        io.swagger.models.Swagger swagger53 = null;
        springMvcApiReader16.swagger = swagger53;
        java.util.Map<java.lang.String, java.lang.String> strMap56 = null;
        java.lang.String str57 = springMvcApiReader16.parseOperationPath("hi!", strMap56);
        java.util.Set<java.lang.reflect.Type> typeSet58 = springMvcApiReader16.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet59 = springMvcApiReader16.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet59);
        io.swagger.annotations.Api api61 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.lang.String> strSet62 = springMvcApiReader2.extractTags(api61);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(annotationArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "/hi!" + "'", str13, "/hi!");
        org.junit.Assert.assertNotNull(typeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(typeArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(typeArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(logAdapter36);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "/hi!" + "'", str45, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "/hi!" + "'", str57, "/hi!");
        org.junit.Assert.assertNotNull(typeSet58);
        org.junit.Assert.assertNotNull(typeSet59);
    }

    @Test
    public void test02513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02513");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        io.swagger.models.Swagger swagger5 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter6 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader7 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger5, logAdapter6);
        java.lang.reflect.Type[] typeArray8 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet9 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet9, typeArray8);
        springMvcApiReader7.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet9);
        io.swagger.models.Swagger swagger12 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter13 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader14 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger12, logAdapter13);
        java.lang.reflect.Type[] typeArray15 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet16 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet16, typeArray15);
        springMvcApiReader14.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet16);
        springMvcApiReader7.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet16);
        io.swagger.models.Swagger swagger20 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter21 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader22 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger20, logAdapter21);
        java.lang.reflect.Type[] typeArray23 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet24 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet24, typeArray23);
        springMvcApiReader22.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet24);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter27 = springMvcApiReader22.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap29 = null;
        java.lang.String str30 = springMvcApiReader22.parseOperationPath("", strMap29);
        io.swagger.annotations.Api api32 = null;
        boolean boolean33 = springMvcApiReader22.canReadApi(false, api32);
        java.util.Map<java.lang.String, java.lang.String> strMap35 = null;
        java.lang.String str36 = springMvcApiReader22.parseOperationPath("hi!", strMap35);
        io.swagger.models.Swagger swagger37 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter38 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader39 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger37, logAdapter38);
        java.lang.Class<?> wildcardClass40 = springMvcApiReader39.getClass();
        springMvcApiReader22.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass40);
        springMvcApiReader7.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass40);
        java.util.Set<java.lang.reflect.Type> typeSet43 = springMvcApiReader7.getTypesToSkip();
        springMvcApiReader2.typesToSkip = typeSet43;
        java.util.Set<java.lang.reflect.Type> typeSet45 = springMvcApiReader2.getTypesToSkip();
        io.swagger.annotations.Api api47 = null;
        boolean boolean48 = springMvcApiReader2.canReadApi(false, api47);
        io.swagger.models.Swagger swagger49 = springMvcApiReader2.swagger;
        io.swagger.models.Operation operation50 = null;
        io.swagger.annotations.ApiOperation apiOperation51 = null;
        springMvcApiReader2.updateTagsForOperation(operation50, apiOperation51);
        springMvcApiReader2.updateExtensionChain();
        springMvcApiReader2.updateExtensionChain();
        java.util.Map<java.lang.String, java.lang.String> strMap56 = null;
        java.lang.String str57 = springMvcApiReader2.parseOperationPath("hi!", strMap56);
        org.junit.Assert.assertNotNull(typeArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(typeArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(typeArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(logAdapter27);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "/hi!" + "'", str36, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(typeSet43);
        org.junit.Assert.assertNotNull(typeSet45);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(swagger49);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "/hi!" + "'", str57, "/hi!");
    }

    @Test
    public void test02514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02514");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        java.util.Set<java.lang.reflect.Type> typeSet5 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet6 = springMvcApiReader2.getTypesToSkip();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = null;
        java.lang.String str9 = springMvcApiReader2.parseOperationPath("", strMap8);
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader12 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger10, logAdapter11);
        java.lang.reflect.Type[] typeArray13 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet14 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet14, typeArray13);
        springMvcApiReader12.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet14);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter17 = springMvcApiReader12.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap19 = null;
        java.lang.String str20 = springMvcApiReader12.parseOperationPath("", strMap19);
        io.swagger.annotations.Api api22 = null;
        boolean boolean23 = springMvcApiReader12.canReadApi(false, api22);
        java.util.Map<java.lang.String, java.lang.String> strMap25 = null;
        java.lang.String str26 = springMvcApiReader12.parseOperationPath("hi!", strMap25);
        io.swagger.models.Swagger swagger27 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter28 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader29 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger27, logAdapter28);
        java.lang.Class<?> wildcardClass30 = springMvcApiReader29.getClass();
        springMvcApiReader12.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass30);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.reflect.Type[] typeArray35 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet36 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet36, typeArray35);
        springMvcApiReader34.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet36);
        java.lang.annotation.Annotation[] annotationArray39 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList40 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList40, annotationArray39);
        boolean boolean42 = springMvcApiReader34.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList40);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList43 = springMvcApiReader2.getParameters((java.lang.reflect.Type) wildcardClass30, (java.util.List<java.lang.annotation.Annotation>) annotationList40);
        springMvcApiReader2.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet45 = springMvcApiReader2.typesToSkip;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter46 = springMvcApiReader2.LOG;
        java.lang.Class<?> wildcardClass47 = springMvcApiReader2.getClass();
        org.junit.Assert.assertNotNull(typeSet5);
        org.junit.Assert.assertNotNull(typeSet6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(typeArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(logAdapter17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "/hi!" + "'", str26, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(typeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(annotationArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(parameterList43);
        org.junit.Assert.assertNotNull(typeSet45);
        org.junit.Assert.assertNull(logAdapter46);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test02515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02515");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.annotations.Api api8 = null;
        boolean boolean9 = springMvcApiReader2.canReadApi(false, api8);
        java.util.Map<java.lang.String, java.lang.String> strMap11 = null;
        java.lang.String str12 = springMvcApiReader2.parseOperationPath("hi!", strMap11);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter13 = springMvcApiReader2.LOG;
        springMvcApiReader2.updateExtensionChain();
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "/hi!" + "'", str12, "/hi!");
        org.junit.Assert.assertNull(logAdapter13);
    }

    @Test
    public void test02516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02516");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader2.parseOperationPath("hi!", strMap15);
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.reflect.Type[] typeArray20 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet21 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet21, typeArray20);
        springMvcApiReader19.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet21);
        io.swagger.models.Swagger swagger24 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter25 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader26 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger24, logAdapter25);
        java.lang.reflect.Type[] typeArray27 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet28 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet28, typeArray27);
        springMvcApiReader26.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet28);
        springMvcApiReader19.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet28);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.reflect.Type[] typeArray35 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet36 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet36, typeArray35);
        springMvcApiReader34.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet36);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter39 = springMvcApiReader34.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap41 = null;
        java.lang.String str42 = springMvcApiReader34.parseOperationPath("", strMap41);
        io.swagger.annotations.Api api44 = null;
        boolean boolean45 = springMvcApiReader34.canReadApi(false, api44);
        java.util.Map<java.lang.String, java.lang.String> strMap47 = null;
        java.lang.String str48 = springMvcApiReader34.parseOperationPath("hi!", strMap47);
        io.swagger.models.Swagger swagger49 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter50 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader51 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger49, logAdapter50);
        java.lang.Class<?> wildcardClass52 = springMvcApiReader51.getClass();
        springMvcApiReader34.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        springMvcApiReader19.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        io.swagger.models.Swagger swagger56 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter57 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader58 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger56, logAdapter57);
        java.lang.reflect.Type[] typeArray59 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet60 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet60, typeArray59);
        springMvcApiReader58.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet60);
        java.util.Set<java.lang.reflect.Type> typeSet63 = springMvcApiReader58.typesToSkip;
        springMvcApiReader2.typesToSkip = typeSet63;
        io.swagger.models.Swagger swagger65 = springMvcApiReader2.swagger;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass66 = swagger65.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/hi!" + "'", str16, "/hi!");
        org.junit.Assert.assertNotNull(typeArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(typeArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(typeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(logAdapter39);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "/hi!" + "'", str48, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(typeArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(typeSet63);
        org.junit.Assert.assertNull(swagger65);
    }

    @Test
    public void test02517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02517");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        java.util.Set<java.lang.reflect.Type> typeSet5 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet6 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger14 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter15 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader16 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger14, logAdapter15);
        java.lang.reflect.Type[] typeArray17 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet18 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet18, typeArray17);
        springMvcApiReader16.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet18);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet18);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet18);
        io.swagger.models.Operation operation23 = null;
        io.swagger.annotations.ApiOperation apiOperation24 = null;
        springMvcApiReader2.updateTagsForOperation(operation23, apiOperation24);
        io.swagger.annotations.Api api27 = null;
        boolean boolean28 = springMvcApiReader2.canReadApi(false, api27);
        io.swagger.models.Swagger swagger29 = null;
        springMvcApiReader2.swagger = swagger29;
        java.util.Set<java.lang.reflect.Type> typeSet31 = springMvcApiReader2.typesToSkip;
        java.util.Map<java.lang.String, java.lang.String> strMap33 = null;
        java.lang.String str34 = springMvcApiReader2.parseOperationPath("hi!", strMap33);
        io.swagger.annotations.Api api35 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.lang.String> strSet36 = springMvcApiReader2.extractTags(api35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeSet5);
        org.junit.Assert.assertNotNull(typeSet6);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(typeSet31);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "/hi!" + "'", str34, "/hi!");
    }

    @Test
    public void test02518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02518");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        java.util.Map<java.lang.String, java.lang.String> strMap16 = null;
        java.lang.String str17 = springMvcApiReader2.parseOperationPath("/hi!", strMap16);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = springMvcApiReader2.LOG;
        java.util.Set<java.lang.reflect.Type> typeSet19 = springMvcApiReader2.getTypesToSkip();
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger21 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader23 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger21, logAdapter22);
        java.lang.reflect.Type type24 = null;
        springMvcApiReader23.addTypeToSkippedTypes(type24);
        java.util.Set<java.lang.reflect.Type> typeSet26 = springMvcApiReader23.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet27 = springMvcApiReader23.getTypesToSkip();
        java.util.Map<java.lang.String, java.lang.String> strMap29 = null;
        java.lang.String str30 = springMvcApiReader23.parseOperationPath("", strMap29);
        io.swagger.models.Swagger swagger31 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter32 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader33 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger31, logAdapter32);
        java.lang.reflect.Type[] typeArray34 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet35 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet35, typeArray34);
        springMvcApiReader33.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet35);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter38 = springMvcApiReader33.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap40 = null;
        java.lang.String str41 = springMvcApiReader33.parseOperationPath("", strMap40);
        io.swagger.annotations.Api api43 = null;
        boolean boolean44 = springMvcApiReader33.canReadApi(false, api43);
        java.util.Map<java.lang.String, java.lang.String> strMap46 = null;
        java.lang.String str47 = springMvcApiReader33.parseOperationPath("hi!", strMap46);
        io.swagger.models.Swagger swagger48 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter49 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader50 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger48, logAdapter49);
        java.lang.Class<?> wildcardClass51 = springMvcApiReader50.getClass();
        springMvcApiReader33.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass51);
        io.swagger.models.Swagger swagger53 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter54 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader55 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger53, logAdapter54);
        java.lang.reflect.Type[] typeArray56 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet57 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet57, typeArray56);
        springMvcApiReader55.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet57);
        java.lang.annotation.Annotation[] annotationArray60 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList61 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList61, annotationArray60);
        boolean boolean63 = springMvcApiReader55.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList61);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList64 = springMvcApiReader23.getParameters((java.lang.reflect.Type) wildcardClass51, (java.util.List<java.lang.annotation.Annotation>) annotationList61);
        springMvcApiReader23.updateExtensionChain();
        io.swagger.annotations.Api api67 = null;
        boolean boolean68 = springMvcApiReader23.canReadApi(false, api67);
        java.util.Set<java.lang.reflect.Type> typeSet69 = springMvcApiReader23.typesToSkip;
        io.swagger.models.Swagger swagger70 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter71 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader72 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger70, logAdapter71);
        io.swagger.models.Swagger swagger73 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter74 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader75 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger73, logAdapter74);
        java.lang.reflect.Type[] typeArray76 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet77 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet77, typeArray76);
        springMvcApiReader75.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet77);
        java.lang.annotation.Annotation[] annotationArray80 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList81 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList81, annotationArray80);
        boolean boolean83 = springMvcApiReader75.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList81);
        boolean boolean84 = springMvcApiReader72.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList81);
        boolean boolean85 = springMvcApiReader23.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList81);
        boolean boolean86 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList81);
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "/hi!" + "'", str17, "/hi!");
        org.junit.Assert.assertNull(logAdapter18);
        org.junit.Assert.assertNotNull(typeSet19);
        org.junit.Assert.assertNotNull(typeSet26);
        org.junit.Assert.assertNotNull(typeSet27);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNotNull(typeArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(logAdapter38);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "/hi!" + "'", str47, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(typeArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(annotationArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(parameterList64);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(typeSet69);
        org.junit.Assert.assertNotNull(typeArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(annotationArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
    }

    @Test
    public void test02519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02519");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.util.Set<java.lang.reflect.Type> typeSet7 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger8 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader10 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger8, logAdapter9);
        java.lang.reflect.Type[] typeArray11 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet12 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet12, typeArray11);
        springMvcApiReader10.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet12);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter15 = springMvcApiReader10.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap17 = null;
        java.lang.String str18 = springMvcApiReader10.parseOperationPath("", strMap17);
        io.swagger.annotations.Api api20 = null;
        boolean boolean21 = springMvcApiReader10.canReadApi(false, api20);
        java.util.Map<java.lang.String, java.lang.String> strMap23 = null;
        java.lang.String str24 = springMvcApiReader10.parseOperationPath("hi!", strMap23);
        io.swagger.models.Swagger swagger25 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter26 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader27 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger25, logAdapter26);
        java.lang.reflect.Type[] typeArray28 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet29 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet29, typeArray28);
        springMvcApiReader27.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet29);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.reflect.Type[] typeArray35 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet36 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet36, typeArray35);
        springMvcApiReader34.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet36);
        springMvcApiReader27.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet36);
        io.swagger.models.Swagger swagger40 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter41 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader42 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger40, logAdapter41);
        java.lang.reflect.Type[] typeArray43 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet44 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet44, typeArray43);
        springMvcApiReader42.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet44);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter47 = springMvcApiReader42.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap49 = null;
        java.lang.String str50 = springMvcApiReader42.parseOperationPath("", strMap49);
        io.swagger.annotations.Api api52 = null;
        boolean boolean53 = springMvcApiReader42.canReadApi(false, api52);
        java.util.Map<java.lang.String, java.lang.String> strMap55 = null;
        java.lang.String str56 = springMvcApiReader42.parseOperationPath("hi!", strMap55);
        io.swagger.models.Swagger swagger57 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter58 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader59 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger57, logAdapter58);
        java.lang.Class<?> wildcardClass60 = springMvcApiReader59.getClass();
        springMvcApiReader42.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass60);
        springMvcApiReader27.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass60);
        springMvcApiReader10.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass60);
        io.swagger.models.Swagger swagger64 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter65 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader66 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger64, logAdapter65);
        java.lang.reflect.Type[] typeArray67 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet68 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet68, typeArray67);
        springMvcApiReader66.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet68);
        java.lang.annotation.Annotation[] annotationArray71 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList72 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList72, annotationArray71);
        boolean boolean74 = springMvcApiReader66.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList72);
        io.swagger.models.Swagger swagger75 = null;
        springMvcApiReader66.swagger = swagger75;
        java.lang.annotation.Annotation[] annotationArray77 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList78 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList78, annotationArray77);
        boolean boolean80 = springMvcApiReader66.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList78);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList81 = springMvcApiReader2.getParameters((java.lang.reflect.Type) wildcardClass60, (java.util.List<java.lang.annotation.Annotation>) annotationList78);
        java.util.Set<java.lang.reflect.Type> typeSet82 = springMvcApiReader2.getTypesToSkip();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter83 = springMvcApiReader2.LOG;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter84 = springMvcApiReader2.LOG;
        springMvcApiReader2.updateExtensionChain();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter86 = springMvcApiReader2.LOG;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Operation operation88 = null;
        io.swagger.annotations.ApiResponses apiResponses89 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateApiResponse(operation88, apiResponses89);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeSet7);
        org.junit.Assert.assertNotNull(typeArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(logAdapter15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "/hi!" + "'", str24, "/hi!");
        org.junit.Assert.assertNotNull(typeArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(typeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(typeArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(logAdapter47);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "/hi!" + "'", str56, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(typeArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(annotationArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(annotationArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(parameterList81);
        org.junit.Assert.assertNotNull(typeSet82);
        org.junit.Assert.assertNull(logAdapter83);
        org.junit.Assert.assertNull(logAdapter84);
        org.junit.Assert.assertNull(logAdapter86);
    }

    @Test
    public void test02520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02520");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.lang.annotation.Annotation[] annotationArray7 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList8 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList8, annotationArray7);
        boolean boolean10 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList8);
        java.util.Set<java.lang.reflect.Type> typeSet11 = springMvcApiReader2.typesToSkip;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Operation operation13 = null;
        io.swagger.annotations.ApiOperation apiOperation14 = null;
        springMvcApiReader2.updateTagsForOperation(operation13, apiOperation14);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.reflect.Type[] typeArray20 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet21 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet21, typeArray20);
        springMvcApiReader19.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet21);
        java.lang.annotation.Annotation[] annotationArray24 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList25 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList25, annotationArray24);
        boolean boolean27 = springMvcApiReader19.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList25);
        io.swagger.models.Swagger swagger28 = null;
        springMvcApiReader19.swagger = swagger28;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter30 = null;
        springMvcApiReader19.LOG = logAdapter30;
        java.util.Set<java.lang.reflect.Type> typeSet32 = springMvcApiReader19.getTypesToSkip();
        java.lang.Class<?> wildcardClass33 = typeSet32.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass33);
        io.swagger.models.Swagger swagger35 = null;
        springMvcApiReader2.swagger = swagger35;
        io.swagger.models.Swagger swagger37 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter38 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader39 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger37, logAdapter38);
        java.lang.reflect.Type[] typeArray40 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet41 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet41, typeArray40);
        springMvcApiReader39.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet41);
        io.swagger.annotations.Api api45 = null;
        boolean boolean46 = springMvcApiReader39.canReadApi(false, api45);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter47 = springMvcApiReader39.LOG;
        io.swagger.models.Swagger swagger48 = springMvcApiReader39.swagger;
        io.swagger.models.Swagger swagger49 = null;
        springMvcApiReader39.swagger = swagger49;
        io.swagger.annotations.ResponseHeader[] responseHeaderArray51 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap52 = springMvcApiReader39.parseResponseHeaders(responseHeaderArray51);
        java.util.Set<java.lang.reflect.Type> typeSet53 = springMvcApiReader39.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet53);
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(annotationArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(typeSet11);
        org.junit.Assert.assertNotNull(typeArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(annotationArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(typeSet32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(typeArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(logAdapter47);
        org.junit.Assert.assertNull(swagger48);
        org.junit.Assert.assertNull(strMap52);
        org.junit.Assert.assertNotNull(typeSet53);
    }

    @Test
    public void test02521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02521");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.models.Swagger swagger3 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter4 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader5 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger3, logAdapter4);
        java.lang.reflect.Type[] typeArray6 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet7 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet7, typeArray6);
        springMvcApiReader5.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet7);
        java.lang.annotation.Annotation[] annotationArray10 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList11 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList11, annotationArray10);
        boolean boolean13 = springMvcApiReader5.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList11);
        boolean boolean14 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList11);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type[] typeArray18 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet19 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet19, typeArray18);
        springMvcApiReader17.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet19);
        java.lang.annotation.Annotation[] annotationArray22 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList23 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList23, annotationArray22);
        boolean boolean25 = springMvcApiReader17.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList23);
        boolean boolean26 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList23);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter27 = springMvcApiReader2.LOG;
        io.swagger.models.Operation operation28 = null;
        io.swagger.annotations.ApiOperation apiOperation29 = null;
        springMvcApiReader2.updateTagsForOperation(operation28, apiOperation29);
        java.util.Set<java.lang.reflect.Type> typeSet31 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Operation operation34 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updatePath("", "hi!", operation34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(annotationArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(typeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(annotationArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(logAdapter27);
        org.junit.Assert.assertNotNull(typeSet31);
    }

    @Test
    public void test02522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02522");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.models.Swagger swagger11 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter12 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader13 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger11, logAdapter12);
        java.lang.Class<?> wildcardClass14 = springMvcApiReader13.getClass();
        java.lang.reflect.Type[] typeArray15 = new java.lang.reflect.Type[] { wildcardClass14 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet16 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet16, typeArray15);
        springMvcApiReader2.typesToSkip = typeSet16;
        io.swagger.models.Swagger swagger19 = null;
        springMvcApiReader2.swagger = swagger19;
        java.util.Set<java.lang.reflect.Type> typeSet21 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger22 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader24 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger22, logAdapter23);
        java.lang.reflect.Type[] typeArray25 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet26 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet26, typeArray25);
        springMvcApiReader24.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet26);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter29 = springMvcApiReader24.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap31 = null;
        java.lang.String str32 = springMvcApiReader24.parseOperationPath("", strMap31);
        java.lang.reflect.Type[] typeArray33 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList34 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList34, typeArray33);
        springMvcApiReader24.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList34);
        java.lang.String[] strArray37 = new java.lang.String[] {};
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!", "", "hi!" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap42 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray43 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList44 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList44, securityRequirementArray43);
        io.swagger.models.Operation operation46 = null;
        springMvcApiReader24.updateOperation(strArray37, strArray41, strMap42, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList44, operation46);
        java.lang.String[] strArray50 = new java.lang.String[] { "/hi!", "hi!" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap51 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray52 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList53 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList53, securityRequirementArray52);
        io.swagger.models.Operation operation55 = null;
        springMvcApiReader2.updateOperation(strArray41, strArray50, strMap51, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList53, operation55);
        io.swagger.models.Swagger swagger57 = springMvcApiReader2.swagger;
        io.swagger.annotations.ApiOperation apiOperation58 = null;
        io.swagger.models.Operation operation59 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateOperationProtocols(apiOperation58, operation59);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(typeArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(typeSet21);
        org.junit.Assert.assertNotNull(typeArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(logAdapter29);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertNotNull(typeArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(securityRequirementArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertNotNull(securityRequirementArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(swagger57);
    }

    @Test
    public void test02523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02523");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger15 = null;
        springMvcApiReader2.swagger = swagger15;
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.reflect.Type[] typeArray20 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet21 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet21, typeArray20);
        springMvcApiReader19.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet21);
        java.lang.annotation.Annotation[] annotationArray24 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList25 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList25, annotationArray24);
        boolean boolean27 = springMvcApiReader19.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList25);
        io.swagger.models.Swagger swagger28 = null;
        springMvcApiReader19.swagger = swagger28;
        java.lang.annotation.Annotation[] annotationArray30 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList31 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList31, annotationArray30);
        boolean boolean33 = springMvcApiReader19.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList31);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter34 = null;
        springMvcApiReader19.LOG = logAdapter34;
        io.swagger.models.Swagger swagger36 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter37 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader38 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger36, logAdapter37);
        java.lang.reflect.Type type39 = null;
        springMvcApiReader38.addTypeToSkippedTypes(type39);
        java.util.Set<java.lang.reflect.Type> typeSet41 = springMvcApiReader38.typesToSkip;
        springMvcApiReader19.setTypesToSkip(typeSet41);
        io.swagger.models.Swagger swagger43 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter44 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader45 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger43, logAdapter44);
        java.lang.reflect.Type[] typeArray46 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet47 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet47, typeArray46);
        springMvcApiReader45.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet47);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter50 = springMvcApiReader45.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap52 = null;
        java.lang.String str53 = springMvcApiReader45.parseOperationPath("", strMap52);
        java.lang.reflect.Type[] typeArray54 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList55 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList55, typeArray54);
        springMvcApiReader45.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList55);
        io.swagger.models.Swagger swagger58 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter59 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader60 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger58, logAdapter59);
        java.lang.reflect.Type[] typeArray61 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet62 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet62, typeArray61);
        springMvcApiReader60.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet62);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter65 = springMvcApiReader60.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap67 = null;
        java.lang.String str68 = springMvcApiReader60.parseOperationPath("", strMap67);
        io.swagger.models.Swagger swagger69 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter70 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader71 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger69, logAdapter70);
        java.lang.Class<?> wildcardClass72 = springMvcApiReader71.getClass();
        java.lang.reflect.Type[] typeArray73 = new java.lang.reflect.Type[] { wildcardClass72 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet74 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet74, typeArray73);
        springMvcApiReader60.typesToSkip = typeSet74;
        java.util.Set<java.lang.reflect.Type> typeSet77 = springMvcApiReader60.getTypesToSkip();
        springMvcApiReader45.setTypesToSkip(typeSet77);
        springMvcApiReader19.setTypesToSkip(typeSet77);
        springMvcApiReader2.setTypesToSkip(typeSet77);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter81 = null;
        springMvcApiReader2.LOG = logAdapter81;
        io.swagger.annotations.ApiOperation apiOperation83 = null;
        io.swagger.models.Operation operation84 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateOperationProtocols(apiOperation83, operation84);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(annotationArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(annotationArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(typeSet41);
        org.junit.Assert.assertNotNull(typeArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(logAdapter50);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertNotNull(typeArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(typeArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNull(logAdapter65);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "" + "'", str68, "");
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(typeArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(typeSet77);
    }

    @Test
    public void test02524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02524");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        java.util.Set<java.lang.reflect.Type> typeSet5 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet6 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger14 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter15 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader16 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger14, logAdapter15);
        java.lang.reflect.Type[] typeArray17 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet18 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet18, typeArray17);
        springMvcApiReader16.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet18);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet18);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet18);
        springMvcApiReader2.updateExtensionChain();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter24 = springMvcApiReader2.LOG;
        io.swagger.annotations.Api api26 = null;
        boolean boolean27 = springMvcApiReader2.canReadApi(false, api26);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter28 = null;
        springMvcApiReader2.LOG = logAdapter28;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.annotations.Api api31 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<io.swagger.models.SecurityRequirement> securityRequirementList32 = springMvcApiReader2.getSecurityRequirements(api31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeSet5);
        org.junit.Assert.assertNotNull(typeSet6);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(logAdapter24);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test02525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02525");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type type18 = null;
        springMvcApiReader17.addTypeToSkippedTypes(type18);
        java.util.Set<java.lang.reflect.Type> typeSet20 = springMvcApiReader17.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet20);
        java.util.Set<java.lang.reflect.Type> typeSet22 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger23 = null;
        springMvcApiReader2.swagger = swagger23;
        java.util.Set<java.lang.reflect.Type> typeSet25 = springMvcApiReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet26 = springMvcApiReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet27 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger28 = null;
        springMvcApiReader2.swagger = swagger28;
        io.swagger.models.Operation operation30 = null;
        io.swagger.annotations.ApiResponses apiResponses31 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateApiResponse(operation30, apiResponses31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeSet20);
        org.junit.Assert.assertNotNull(typeSet22);
        org.junit.Assert.assertNotNull(typeSet25);
        org.junit.Assert.assertNotNull(typeSet26);
        org.junit.Assert.assertNotNull(typeSet27);
    }

    @Test
    public void test02526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02526");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.lang.annotation.Annotation[] annotationArray7 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList8 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList8, annotationArray7);
        boolean boolean10 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList8);
        io.swagger.models.Swagger swagger11 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter12 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader13 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger11, logAdapter12);
        java.lang.reflect.Type[] typeArray14 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet15 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet15, typeArray14);
        springMvcApiReader13.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet15);
        java.util.Set<java.lang.reflect.Type> typeSet18 = springMvcApiReader13.typesToSkip;
        springMvcApiReader13.updateExtensionChain();
        io.swagger.models.Swagger swagger20 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter21 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader22 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger20, logAdapter21);
        java.lang.Class<?> wildcardClass23 = springMvcApiReader22.getClass();
        springMvcApiReader13.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass23);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass23);
        io.swagger.models.Swagger swagger26 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter27 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader28 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger26, logAdapter27);
        java.lang.reflect.Type[] typeArray29 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet30 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet30, typeArray29);
        springMvcApiReader28.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet30);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = springMvcApiReader28.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap35 = null;
        java.lang.String str36 = springMvcApiReader28.parseOperationPath("", strMap35);
        io.swagger.annotations.Api api38 = null;
        boolean boolean39 = springMvcApiReader28.canReadApi(false, api38);
        java.util.Map<java.lang.String, java.lang.String> strMap41 = null;
        java.lang.String str42 = springMvcApiReader28.parseOperationPath("hi!", strMap41);
        io.swagger.models.Swagger swagger43 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter44 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader45 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger43, logAdapter44);
        java.lang.Class<?> wildcardClass46 = springMvcApiReader45.getClass();
        springMvcApiReader28.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass46);
        io.swagger.models.Swagger swagger48 = null;
        springMvcApiReader28.swagger = swagger48;
        io.swagger.models.Swagger swagger50 = springMvcApiReader28.swagger;
        java.util.Set<java.lang.reflect.Type> typeSet51 = springMvcApiReader28.typesToSkip;
        springMvcApiReader28.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet53 = springMvcApiReader28.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet53);
        io.swagger.annotations.Api api55 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.lang.String> strSet56 = springMvcApiReader2.extractTags(api55);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(annotationArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(typeArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(typeSet18);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(typeArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(logAdapter33);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "/hi!" + "'", str42, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNull(swagger50);
        org.junit.Assert.assertNotNull(typeSet51);
        org.junit.Assert.assertNotNull(typeSet53);
    }

    @Test
    public void test02527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02527");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        java.util.Set<java.lang.reflect.Type> typeSet5 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet6 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger14 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter15 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader16 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger14, logAdapter15);
        java.lang.reflect.Type[] typeArray17 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet18 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet18, typeArray17);
        springMvcApiReader16.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet18);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet18);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet18);
        springMvcApiReader2.updateExtensionChain();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter24 = springMvcApiReader2.LOG;
        io.swagger.annotations.Api api26 = null;
        boolean boolean27 = springMvcApiReader2.canReadApi(false, api26);
        java.util.Map<java.lang.String, java.lang.String> strMap29 = null;
        java.lang.String str30 = springMvcApiReader2.parseOperationPath("", strMap29);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter31 = springMvcApiReader2.LOG;
        io.swagger.annotations.ApiOperation apiOperation32 = null;
        io.swagger.models.Operation operation33 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateOperationProtocols(apiOperation32, operation33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeSet5);
        org.junit.Assert.assertNotNull(typeSet6);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(logAdapter24);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNull(logAdapter31);
    }

    @Test
    public void test02528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02528");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type type18 = null;
        springMvcApiReader17.addTypeToSkippedTypes(type18);
        java.util.Set<java.lang.reflect.Type> typeSet20 = springMvcApiReader17.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet20);
        java.util.Set<java.lang.reflect.Type> typeSet22 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger23 = null;
        springMvcApiReader2.swagger = swagger23;
        java.util.Set<java.lang.reflect.Type> typeSet25 = springMvcApiReader2.getTypesToSkip();
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger27 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter28 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader29 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger27, logAdapter28);
        java.lang.reflect.Type type30 = null;
        springMvcApiReader29.addTypeToSkippedTypes(type30);
        java.util.Set<java.lang.reflect.Type> typeSet32 = springMvcApiReader29.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet33 = springMvcApiReader29.getTypesToSkip();
        java.util.Map<java.lang.String, java.lang.String> strMap35 = null;
        java.lang.String str36 = springMvcApiReader29.parseOperationPath("", strMap35);
        io.swagger.models.Operation operation37 = null;
        io.swagger.annotations.ApiOperation apiOperation38 = null;
        springMvcApiReader29.updateTagsForOperation(operation37, apiOperation38);
        io.swagger.annotations.Api api41 = null;
        boolean boolean42 = springMvcApiReader29.canReadApi(false, api41);
        java.util.Set<java.lang.reflect.Type> typeSet43 = springMvcApiReader29.getTypesToSkip();
        springMvcApiReader2.typesToSkip = typeSet43;
        io.swagger.models.Operation operation47 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updatePath("hi!", "/hi!", operation47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeSet20);
        org.junit.Assert.assertNotNull(typeSet22);
        org.junit.Assert.assertNotNull(typeSet25);
        org.junit.Assert.assertNotNull(typeSet32);
        org.junit.Assert.assertNotNull(typeSet33);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(typeSet43);
    }

    @Test
    public void test02529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02529");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger15 = null;
        springMvcApiReader2.swagger = swagger15;
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.reflect.Type[] typeArray20 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet21 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet21, typeArray20);
        springMvcApiReader19.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet21);
        java.lang.annotation.Annotation[] annotationArray24 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList25 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList25, annotationArray24);
        boolean boolean27 = springMvcApiReader19.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList25);
        io.swagger.models.Swagger swagger28 = null;
        springMvcApiReader19.swagger = swagger28;
        java.lang.annotation.Annotation[] annotationArray30 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList31 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList31, annotationArray30);
        boolean boolean33 = springMvcApiReader19.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList31);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter34 = null;
        springMvcApiReader19.LOG = logAdapter34;
        io.swagger.models.Swagger swagger36 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter37 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader38 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger36, logAdapter37);
        java.lang.reflect.Type type39 = null;
        springMvcApiReader38.addTypeToSkippedTypes(type39);
        java.util.Set<java.lang.reflect.Type> typeSet41 = springMvcApiReader38.typesToSkip;
        springMvcApiReader19.setTypesToSkip(typeSet41);
        io.swagger.models.Swagger swagger43 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter44 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader45 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger43, logAdapter44);
        java.lang.reflect.Type[] typeArray46 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet47 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet47, typeArray46);
        springMvcApiReader45.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet47);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter50 = springMvcApiReader45.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap52 = null;
        java.lang.String str53 = springMvcApiReader45.parseOperationPath("", strMap52);
        java.lang.reflect.Type[] typeArray54 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList55 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList55, typeArray54);
        springMvcApiReader45.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList55);
        io.swagger.models.Swagger swagger58 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter59 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader60 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger58, logAdapter59);
        java.lang.reflect.Type[] typeArray61 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet62 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet62, typeArray61);
        springMvcApiReader60.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet62);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter65 = springMvcApiReader60.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap67 = null;
        java.lang.String str68 = springMvcApiReader60.parseOperationPath("", strMap67);
        io.swagger.models.Swagger swagger69 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter70 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader71 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger69, logAdapter70);
        java.lang.Class<?> wildcardClass72 = springMvcApiReader71.getClass();
        java.lang.reflect.Type[] typeArray73 = new java.lang.reflect.Type[] { wildcardClass72 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet74 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet74, typeArray73);
        springMvcApiReader60.typesToSkip = typeSet74;
        java.util.Set<java.lang.reflect.Type> typeSet77 = springMvcApiReader60.getTypesToSkip();
        springMvcApiReader45.setTypesToSkip(typeSet77);
        springMvcApiReader19.setTypesToSkip(typeSet77);
        springMvcApiReader2.setTypesToSkip(typeSet77);
        java.util.Map<java.lang.String, java.lang.String> strMap82 = null;
        java.lang.String str83 = springMvcApiReader2.parseOperationPath("hi!", strMap82);
        java.util.Set<java.lang.reflect.Type> typeSet84 = springMvcApiReader2.typesToSkip;
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(annotationArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(annotationArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(typeSet41);
        org.junit.Assert.assertNotNull(typeArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(logAdapter50);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertNotNull(typeArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(typeArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNull(logAdapter65);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "" + "'", str68, "");
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(typeArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(typeSet77);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "/hi!" + "'", str83, "/hi!");
        org.junit.Assert.assertNotNull(typeSet84);
    }

    @Test
    public void test02530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02530");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.lang.annotation.Annotation[] annotationArray7 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList8 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList8, annotationArray7);
        boolean boolean10 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList8);
        io.swagger.models.Swagger swagger11 = null;
        springMvcApiReader2.swagger = swagger11;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter13 = null;
        springMvcApiReader2.LOG = logAdapter13;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Operation operation16 = null;
        io.swagger.annotations.ApiOperation apiOperation17 = null;
        springMvcApiReader2.updateTagsForOperation(operation16, apiOperation17);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger20 = null;
        springMvcApiReader2.swagger = swagger20;
        io.swagger.annotations.Api api23 = null;
        boolean boolean24 = springMvcApiReader2.canReadApi(false, api23);
        java.util.Set<java.lang.reflect.Type> typeSet25 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Operation operation26 = null;
        io.swagger.annotations.ApiResponses apiResponses27 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateApiResponse(operation26, apiResponses27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(annotationArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(typeSet25);
    }

    @Test
    public void test02531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02531");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader2.parseOperationPath("hi!", strMap15);
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.Class<?> wildcardClass20 = springMvcApiReader19.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass20);
        io.swagger.models.Swagger swagger22 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader24 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger22, logAdapter23);
        java.lang.reflect.Type[] typeArray25 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet26 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet26, typeArray25);
        springMvcApiReader24.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet26);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter29 = springMvcApiReader24.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap31 = null;
        java.lang.String str32 = springMvcApiReader24.parseOperationPath("", strMap31);
        java.lang.reflect.Type[] typeArray33 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList34 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList34, typeArray33);
        springMvcApiReader24.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList34);
        java.lang.String[] strArray37 = new java.lang.String[] {};
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!", "", "hi!" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap42 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray43 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList44 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList44, securityRequirementArray43);
        io.swagger.models.Operation operation46 = null;
        springMvcApiReader24.updateOperation(strArray37, strArray41, strMap42, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList44, operation46);
        java.lang.String[] strArray54 = new java.lang.String[] { "/hi!", "", "/hi!", "hi!", "hi!", "hi!" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap55 = null;
        io.swagger.models.Swagger swagger56 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter57 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader58 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger56, logAdapter57);
        java.lang.reflect.Type[] typeArray59 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet60 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet60, typeArray59);
        springMvcApiReader58.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet60);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter63 = springMvcApiReader58.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap65 = null;
        java.lang.String str66 = springMvcApiReader58.parseOperationPath("", strMap65);
        java.lang.reflect.Type[] typeArray67 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList68 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList68, typeArray67);
        springMvcApiReader58.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList68);
        java.lang.String[] strArray71 = new java.lang.String[] {};
        java.lang.String[] strArray75 = new java.lang.String[] { "hi!", "", "hi!" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap76 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray77 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList78 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList78, securityRequirementArray77);
        io.swagger.models.Operation operation80 = null;
        springMvcApiReader58.updateOperation(strArray71, strArray75, strMap76, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList78, operation80);
        io.swagger.models.Operation operation82 = null;
        springMvcApiReader2.updateOperation(strArray37, strArray54, strMap55, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList78, operation82);
        io.swagger.models.Swagger swagger84 = null;
        springMvcApiReader2.swagger = swagger84;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter86 = springMvcApiReader2.LOG;
        io.swagger.models.Operation operation87 = null;
        io.swagger.annotations.ApiOperation apiOperation88 = null;
        springMvcApiReader2.updateTagsForOperation(operation87, apiOperation88);
        io.swagger.models.Swagger swagger90 = springMvcApiReader2.swagger;
        java.util.Set<java.lang.reflect.Type> typeSet91 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Operation operation92 = null;
        io.swagger.annotations.ApiResponses apiResponses93 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateApiResponse(operation92, apiResponses93);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/hi!" + "'", str16, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(typeArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(logAdapter29);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertNotNull(typeArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(securityRequirementArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(typeArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNull(logAdapter63);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "" + "'", str66, "");
        org.junit.Assert.assertNotNull(typeArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertNotNull(securityRequirementArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNull(logAdapter86);
        org.junit.Assert.assertNull(swagger90);
        org.junit.Assert.assertNotNull(typeSet91);
    }

    @Test
    public void test02532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02532");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.util.Set<java.lang.reflect.Type> typeSet7 = springMvcApiReader2.typesToSkip;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Operation operation9 = null;
        io.swagger.annotations.ApiOperation apiOperation10 = null;
        springMvcApiReader2.updateTagsForOperation(operation9, apiOperation10);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter12 = null;
        springMvcApiReader2.LOG = logAdapter12;
        io.swagger.annotations.ApiOperation apiOperation14 = null;
        io.swagger.models.Operation operation15 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateOperationProtocols(apiOperation14, operation15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeSet7);
    }

    @Test
    public void test02533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02533");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader2.parseOperationPath("hi!", strMap15);
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.Class<?> wildcardClass20 = springMvcApiReader19.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass20);
        io.swagger.models.Swagger swagger22 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader24 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger22, logAdapter23);
        java.lang.reflect.Type[] typeArray25 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet26 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet26, typeArray25);
        springMvcApiReader24.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet26);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter29 = springMvcApiReader24.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap31 = null;
        java.lang.String str32 = springMvcApiReader24.parseOperationPath("", strMap31);
        java.lang.reflect.Type[] typeArray33 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList34 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList34, typeArray33);
        springMvcApiReader24.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList34);
        java.lang.String[] strArray37 = new java.lang.String[] {};
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!", "", "hi!" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap42 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray43 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList44 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList44, securityRequirementArray43);
        io.swagger.models.Operation operation46 = null;
        springMvcApiReader24.updateOperation(strArray37, strArray41, strMap42, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList44, operation46);
        java.lang.String[] strArray54 = new java.lang.String[] { "/hi!", "", "/hi!", "hi!", "hi!", "hi!" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap55 = null;
        io.swagger.models.Swagger swagger56 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter57 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader58 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger56, logAdapter57);
        java.lang.reflect.Type[] typeArray59 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet60 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet60, typeArray59);
        springMvcApiReader58.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet60);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter63 = springMvcApiReader58.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap65 = null;
        java.lang.String str66 = springMvcApiReader58.parseOperationPath("", strMap65);
        java.lang.reflect.Type[] typeArray67 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList68 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList68, typeArray67);
        springMvcApiReader58.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList68);
        java.lang.String[] strArray71 = new java.lang.String[] {};
        java.lang.String[] strArray75 = new java.lang.String[] { "hi!", "", "hi!" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap76 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray77 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList78 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList78, securityRequirementArray77);
        io.swagger.models.Operation operation80 = null;
        springMvcApiReader58.updateOperation(strArray71, strArray75, strMap76, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList78, operation80);
        io.swagger.models.Operation operation82 = null;
        springMvcApiReader2.updateOperation(strArray37, strArray54, strMap55, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList78, operation82);
        io.swagger.models.Swagger swagger84 = springMvcApiReader2.swagger;
        java.util.Set<java.lang.reflect.Type> typeSet85 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Operation operation88 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updatePath("", "/hi!", operation88);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/hi!" + "'", str16, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(typeArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(logAdapter29);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertNotNull(typeArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(securityRequirementArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(typeArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNull(logAdapter63);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "" + "'", str66, "");
        org.junit.Assert.assertNotNull(typeArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertNotNull(securityRequirementArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNull(swagger84);
        org.junit.Assert.assertNotNull(typeSet85);
    }

    @Test
    public void test02534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02534");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader2.parseOperationPath("hi!", strMap15);
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.Class<?> wildcardClass20 = springMvcApiReader19.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass20);
        java.util.Map<java.lang.String, java.lang.String> strMap23 = null;
        java.lang.String str24 = springMvcApiReader2.parseOperationPath("/hi!", strMap23);
        io.swagger.models.Swagger swagger25 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter26 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader27 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger25, logAdapter26);
        java.lang.reflect.Type[] typeArray28 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet29 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet29, typeArray28);
        springMvcApiReader27.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet29);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet29);
        io.swagger.models.Operation operation33 = null;
        io.swagger.annotations.ApiOperation apiOperation34 = null;
        springMvcApiReader2.updateTagsForOperation(operation33, apiOperation34);
        io.swagger.models.Swagger swagger36 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter37 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader38 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger36, logAdapter37);
        java.lang.reflect.Type[] typeArray39 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet40 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet40, typeArray39);
        springMvcApiReader38.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet40);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter43 = springMvcApiReader38.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap45 = null;
        java.lang.String str46 = springMvcApiReader38.parseOperationPath("", strMap45);
        io.swagger.annotations.Api api48 = null;
        boolean boolean49 = springMvcApiReader38.canReadApi(false, api48);
        java.util.Map<java.lang.String, java.lang.String> strMap51 = null;
        java.lang.String str52 = springMvcApiReader38.parseOperationPath("hi!", strMap51);
        io.swagger.models.Swagger swagger53 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter54 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader55 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger53, logAdapter54);
        java.lang.Class<?> wildcardClass56 = springMvcApiReader55.getClass();
        springMvcApiReader38.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass56);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass56);
        java.lang.reflect.Type type59 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type59);
        io.swagger.models.Operation operation61 = null;
        io.swagger.annotations.ApiOperation apiOperation62 = null;
        springMvcApiReader2.updateTagsForOperation(operation61, apiOperation62);
        java.util.Set<java.lang.reflect.Type> typeSet64 = springMvcApiReader2.getTypesToSkip();
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/hi!" + "'", str16, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "/hi!" + "'", str24, "/hi!");
        org.junit.Assert.assertNotNull(typeArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(typeArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(logAdapter43);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "/hi!" + "'", str52, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(typeSet64);
    }

    @Test
    public void test02535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02535");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type[] typeArray18 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet19 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet19, typeArray18);
        springMvcApiReader17.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet19);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = springMvcApiReader17.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap24 = null;
        java.lang.String str25 = springMvcApiReader17.parseOperationPath("", strMap24);
        io.swagger.annotations.Api api27 = null;
        boolean boolean28 = springMvcApiReader17.canReadApi(false, api27);
        java.util.Map<java.lang.String, java.lang.String> strMap30 = null;
        java.lang.String str31 = springMvcApiReader17.parseOperationPath("hi!", strMap30);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.Class<?> wildcardClass35 = springMvcApiReader34.getClass();
        springMvcApiReader17.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter38 = springMvcApiReader2.LOG;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger40 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter41 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader42 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger40, logAdapter41);
        java.lang.reflect.Type[] typeArray43 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet44 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet44, typeArray43);
        springMvcApiReader42.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet44);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter47 = springMvcApiReader42.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap49 = null;
        java.lang.String str50 = springMvcApiReader42.parseOperationPath("", strMap49);
        java.lang.reflect.Type[] typeArray51 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList52 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList52, typeArray51);
        springMvcApiReader42.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList52);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList52);
        java.util.Map<java.lang.String, java.lang.String> strMap57 = null;
        java.lang.String str58 = springMvcApiReader2.parseOperationPath("hi!", strMap57);
        java.util.Map<java.lang.String, java.lang.String> strMap60 = null;
        java.lang.String str61 = springMvcApiReader2.parseOperationPath("/hi!", strMap60);
        io.swagger.models.Swagger swagger62 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter63 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader64 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger62, logAdapter63);
        java.lang.reflect.Type type65 = null;
        springMvcApiReader64.addTypeToSkippedTypes(type65);
        java.util.Set<java.lang.reflect.Type> typeSet67 = springMvcApiReader64.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet67);
        java.util.Set<java.lang.reflect.Type> typeSet69 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Operation operation72 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updatePath("/hi!", "", operation72);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(logAdapter22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "/hi!" + "'", str31, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNull(logAdapter38);
        org.junit.Assert.assertNotNull(typeArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(logAdapter47);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertNotNull(typeArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "/hi!" + "'", str58, "/hi!");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "/hi!" + "'", str61, "/hi!");
        org.junit.Assert.assertNotNull(typeSet67);
        org.junit.Assert.assertNotNull(typeSet69);
    }

    @Test
    public void test02536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02536");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader2.parseOperationPath("hi!", strMap15);
        io.swagger.models.Operation operation17 = null;
        io.swagger.annotations.ApiOperation apiOperation18 = null;
        springMvcApiReader2.updateTagsForOperation(operation17, apiOperation18);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.annotations.Api api22 = null;
        boolean boolean23 = springMvcApiReader2.canReadApi(false, api22);
        io.swagger.models.Swagger swagger24 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter25 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader26 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger24, logAdapter25);
        java.lang.reflect.Type[] typeArray27 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet28 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet28, typeArray27);
        springMvcApiReader26.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet28);
        java.lang.annotation.Annotation[] annotationArray31 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList32 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList32, annotationArray31);
        boolean boolean34 = springMvcApiReader26.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList32);
        java.util.Set<java.lang.reflect.Type> typeSet35 = springMvcApiReader26.typesToSkip;
        springMvcApiReader26.updateExtensionChain();
        io.swagger.models.Operation operation37 = null;
        io.swagger.annotations.ApiOperation apiOperation38 = null;
        springMvcApiReader26.updateTagsForOperation(operation37, apiOperation38);
        springMvcApiReader26.updateExtensionChain();
        io.swagger.models.Swagger swagger41 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter42 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader43 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger41, logAdapter42);
        java.lang.reflect.Type[] typeArray44 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet45 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet45, typeArray44);
        springMvcApiReader43.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet45);
        java.lang.annotation.Annotation[] annotationArray48 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList49 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList49, annotationArray48);
        boolean boolean51 = springMvcApiReader43.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList49);
        io.swagger.models.Swagger swagger52 = null;
        springMvcApiReader43.swagger = swagger52;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter54 = null;
        springMvcApiReader43.LOG = logAdapter54;
        java.util.Set<java.lang.reflect.Type> typeSet56 = springMvcApiReader43.getTypesToSkip();
        java.lang.Class<?> wildcardClass57 = typeSet56.getClass();
        springMvcApiReader26.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass57);
        io.swagger.models.Swagger swagger59 = springMvcApiReader26.swagger;
        java.util.Set<java.lang.reflect.Type> typeSet60 = springMvcApiReader26.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet60);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter62 = springMvcApiReader2.LOG;
        io.swagger.annotations.ApiOperation apiOperation63 = null;
        io.swagger.models.Operation operation64 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateOperationProtocols(apiOperation63, operation64);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/hi!" + "'", str16, "/hi!");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(typeArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(annotationArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(typeSet35);
        org.junit.Assert.assertNotNull(typeArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(annotationArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(typeSet56);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNull(swagger59);
        org.junit.Assert.assertNotNull(typeSet60);
        org.junit.Assert.assertNull(logAdapter62);
    }

    @Test
    public void test02537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02537");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        java.util.Map<java.lang.String, java.lang.String> strMap16 = null;
        java.lang.String str17 = springMvcApiReader2.parseOperationPath("/hi!", strMap16);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = springMvcApiReader2.LOG;
        java.util.Set<java.lang.reflect.Type> typeSet19 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger20 = springMvcApiReader2.swagger;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter21 = springMvcApiReader2.LOG;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass22 = logAdapter21.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "/hi!" + "'", str17, "/hi!");
        org.junit.Assert.assertNull(logAdapter18);
        org.junit.Assert.assertNotNull(typeSet19);
        org.junit.Assert.assertNull(swagger20);
        org.junit.Assert.assertNull(logAdapter21);
    }

    @Test
    public void test02538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02538");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader2.parseOperationPath("hi!", strMap15);
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.Class<?> wildcardClass20 = springMvcApiReader19.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass20);
        java.util.Map<java.lang.String, java.lang.String> strMap23 = null;
        java.lang.String str24 = springMvcApiReader2.parseOperationPath("/hi!", strMap23);
        io.swagger.models.Swagger swagger25 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter26 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader27 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger25, logAdapter26);
        java.lang.reflect.Type[] typeArray28 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet29 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet29, typeArray28);
        springMvcApiReader27.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet29);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet29);
        io.swagger.models.Swagger swagger33 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter34 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader35 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger33, logAdapter34);
        java.lang.reflect.Type[] typeArray36 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet37 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet37, typeArray36);
        springMvcApiReader35.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet37);
        java.lang.annotation.Annotation[] annotationArray40 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList41 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList41, annotationArray40);
        boolean boolean43 = springMvcApiReader35.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList41);
        io.swagger.models.Swagger swagger44 = null;
        springMvcApiReader35.swagger = swagger44;
        io.swagger.models.Swagger swagger46 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter47 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader48 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger46, logAdapter47);
        java.lang.reflect.Type[] typeArray49 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet50 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet50, typeArray49);
        springMvcApiReader48.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet50);
        java.lang.annotation.Annotation[] annotationArray53 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList54 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList54, annotationArray53);
        boolean boolean56 = springMvcApiReader48.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList54);
        io.swagger.models.Swagger swagger57 = null;
        springMvcApiReader48.swagger = swagger57;
        java.lang.annotation.Annotation[] annotationArray59 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList60 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList60, annotationArray59);
        boolean boolean62 = springMvcApiReader48.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList60);
        boolean boolean63 = springMvcApiReader35.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList60);
        boolean boolean64 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList60);
        io.swagger.annotations.Api api66 = null;
        boolean boolean67 = springMvcApiReader2.canReadApi(false, api66);
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/hi!" + "'", str16, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "/hi!" + "'", str24, "/hi!");
        org.junit.Assert.assertNotNull(typeArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(annotationArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(typeArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(annotationArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(annotationArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
    }

    @Test
    public void test02539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02539");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        io.swagger.models.Swagger swagger5 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter6 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader7 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger5, logAdapter6);
        java.lang.reflect.Type[] typeArray8 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet9 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet9, typeArray8);
        springMvcApiReader7.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet9);
        io.swagger.models.Swagger swagger12 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter13 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader14 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger12, logAdapter13);
        java.lang.reflect.Type[] typeArray15 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet16 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet16, typeArray15);
        springMvcApiReader14.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet16);
        springMvcApiReader7.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet16);
        io.swagger.models.Swagger swagger20 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter21 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader22 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger20, logAdapter21);
        java.lang.reflect.Type[] typeArray23 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet24 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet24, typeArray23);
        springMvcApiReader22.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet24);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter27 = springMvcApiReader22.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap29 = null;
        java.lang.String str30 = springMvcApiReader22.parseOperationPath("", strMap29);
        io.swagger.annotations.Api api32 = null;
        boolean boolean33 = springMvcApiReader22.canReadApi(false, api32);
        java.util.Map<java.lang.String, java.lang.String> strMap35 = null;
        java.lang.String str36 = springMvcApiReader22.parseOperationPath("hi!", strMap35);
        io.swagger.models.Swagger swagger37 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter38 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader39 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger37, logAdapter38);
        java.lang.Class<?> wildcardClass40 = springMvcApiReader39.getClass();
        springMvcApiReader22.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass40);
        springMvcApiReader7.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass40);
        java.util.Set<java.lang.reflect.Type> typeSet43 = springMvcApiReader7.getTypesToSkip();
        springMvcApiReader2.typesToSkip = typeSet43;
        java.util.Set<java.lang.reflect.Type> typeSet45 = springMvcApiReader2.getTypesToSkip();
        io.swagger.annotations.Api api47 = null;
        boolean boolean48 = springMvcApiReader2.canReadApi(false, api47);
        io.swagger.models.Swagger swagger49 = springMvcApiReader2.swagger;
        io.swagger.models.Operation operation50 = null;
        io.swagger.annotations.ApiOperation apiOperation51 = null;
        springMvcApiReader2.updateTagsForOperation(operation50, apiOperation51);
        springMvcApiReader2.updateExtensionChain();
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap54 = null;
        io.swagger.annotations.Api api55 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, io.swagger.models.Tag> strMap56 = springMvcApiReader2.updateTagsForApi(strMap54, api55);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(typeArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(typeArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(logAdapter27);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "/hi!" + "'", str36, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(typeSet43);
        org.junit.Assert.assertNotNull(typeSet45);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(swagger49);
    }

    @Test
    public void test02540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02540");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        java.util.Map<java.lang.String, java.lang.String> strMap16 = null;
        java.lang.String str17 = springMvcApiReader2.parseOperationPath("/hi!", strMap16);
        io.swagger.models.Operation operation20 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updatePath("", "/hi!", operation20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "/hi!" + "'", str17, "/hi!");
    }

    @Test
    public void test02541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02541");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger15 = null;
        springMvcApiReader2.swagger = swagger15;
        io.swagger.annotations.ApiOperation apiOperation17 = null;
        io.swagger.models.Operation operation18 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateOperationProtocols(apiOperation17, operation18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test02542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02542");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader2.parseOperationPath("hi!", strMap15);
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.Class<?> wildcardClass20 = springMvcApiReader19.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass20);
        java.util.Map<java.lang.String, java.lang.String> strMap23 = null;
        java.lang.String str24 = springMvcApiReader2.parseOperationPath("/hi!", strMap23);
        io.swagger.models.Swagger swagger25 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter26 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader27 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger25, logAdapter26);
        java.lang.reflect.Type[] typeArray28 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet29 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet29, typeArray28);
        springMvcApiReader27.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet29);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet29);
        io.swagger.models.Swagger swagger33 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter34 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader35 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger33, logAdapter34);
        java.lang.reflect.Type[] typeArray36 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet37 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet37, typeArray36);
        springMvcApiReader35.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet37);
        java.lang.annotation.Annotation[] annotationArray40 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList41 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList41, annotationArray40);
        boolean boolean43 = springMvcApiReader35.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList41);
        io.swagger.models.Swagger swagger44 = null;
        springMvcApiReader35.swagger = swagger44;
        io.swagger.models.Swagger swagger46 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter47 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader48 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger46, logAdapter47);
        java.lang.reflect.Type[] typeArray49 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet50 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet50, typeArray49);
        springMvcApiReader48.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet50);
        java.lang.annotation.Annotation[] annotationArray53 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList54 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList54, annotationArray53);
        boolean boolean56 = springMvcApiReader48.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList54);
        io.swagger.models.Swagger swagger57 = null;
        springMvcApiReader48.swagger = swagger57;
        java.lang.annotation.Annotation[] annotationArray59 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList60 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList60, annotationArray59);
        boolean boolean62 = springMvcApiReader48.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList60);
        boolean boolean63 = springMvcApiReader35.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList60);
        boolean boolean64 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList60);
        io.swagger.annotations.Api api66 = null;
        boolean boolean67 = springMvcApiReader2.canReadApi(true, api66);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter68 = null;
        springMvcApiReader2.LOG = logAdapter68;
        java.util.Set<java.lang.reflect.Type> typeSet70 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Operation operation71 = null;
        io.swagger.annotations.ApiResponses apiResponses72 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateApiResponse(operation71, apiResponses72);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/hi!" + "'", str16, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "/hi!" + "'", str24, "/hi!");
        org.junit.Assert.assertNotNull(typeArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(annotationArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(typeArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(annotationArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(annotationArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(typeSet70);
    }

    @Test
    public void test02543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02543");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type[] typeArray18 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet19 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet19, typeArray18);
        springMvcApiReader17.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet19);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = springMvcApiReader17.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap24 = null;
        java.lang.String str25 = springMvcApiReader17.parseOperationPath("", strMap24);
        io.swagger.annotations.Api api27 = null;
        boolean boolean28 = springMvcApiReader17.canReadApi(false, api27);
        java.util.Map<java.lang.String, java.lang.String> strMap30 = null;
        java.lang.String str31 = springMvcApiReader17.parseOperationPath("hi!", strMap30);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.Class<?> wildcardClass35 = springMvcApiReader34.getClass();
        springMvcApiReader17.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger39 = null;
        springMvcApiReader2.swagger = swagger39;
        java.util.Set<java.lang.reflect.Type> typeSet41 = springMvcApiReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet42 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger43 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter44 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader45 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger43, logAdapter44);
        io.swagger.models.Swagger swagger46 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter47 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader48 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger46, logAdapter47);
        java.lang.reflect.Type[] typeArray49 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet50 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet50, typeArray49);
        springMvcApiReader48.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet50);
        java.lang.annotation.Annotation[] annotationArray53 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList54 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList54, annotationArray53);
        boolean boolean56 = springMvcApiReader48.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList54);
        boolean boolean57 = springMvcApiReader45.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList54);
        boolean boolean58 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList54);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter59 = springMvcApiReader2.LOG;
        io.swagger.annotations.Api api61 = null;
        boolean boolean62 = springMvcApiReader2.canReadApi(false, api61);
        io.swagger.annotations.Api api63 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.lang.String> strSet64 = springMvcApiReader2.extractTags(api63);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(logAdapter22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "/hi!" + "'", str31, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(typeSet41);
        org.junit.Assert.assertNotNull(typeSet42);
        org.junit.Assert.assertNotNull(typeArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(annotationArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNull(logAdapter59);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
    }

    @Test
    public void test02544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02544");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.models.Swagger swagger11 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter12 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader13 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger11, logAdapter12);
        java.lang.Class<?> wildcardClass14 = springMvcApiReader13.getClass();
        java.lang.reflect.Type[] typeArray15 = new java.lang.reflect.Type[] { wildcardClass14 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet16 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet16, typeArray15);
        springMvcApiReader2.typesToSkip = typeSet16;
        java.util.Set<java.lang.reflect.Type> typeSet19 = springMvcApiReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet20 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger21 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader23 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger21, logAdapter22);
        java.lang.reflect.Type[] typeArray24 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet25 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet25, typeArray24);
        springMvcApiReader23.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet25);
        java.lang.annotation.Annotation[] annotationArray28 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList29 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList29, annotationArray28);
        boolean boolean31 = springMvcApiReader23.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList29);
        java.util.Set<java.lang.reflect.Type> typeSet32 = springMvcApiReader23.typesToSkip;
        springMvcApiReader23.updateExtensionChain();
        io.swagger.models.Operation operation34 = null;
        io.swagger.annotations.ApiOperation apiOperation35 = null;
        springMvcApiReader23.updateTagsForOperation(operation34, apiOperation35);
        io.swagger.models.Swagger swagger37 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter38 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader39 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger37, logAdapter38);
        java.lang.reflect.Type[] typeArray40 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet41 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet41, typeArray40);
        springMvcApiReader39.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet41);
        java.lang.annotation.Annotation[] annotationArray44 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList45 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList45, annotationArray44);
        boolean boolean47 = springMvcApiReader39.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList45);
        io.swagger.models.Swagger swagger48 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter49 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader50 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger48, logAdapter49);
        java.lang.reflect.Type[] typeArray51 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet52 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet52, typeArray51);
        springMvcApiReader50.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet52);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter55 = springMvcApiReader50.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap57 = null;
        java.lang.String str58 = springMvcApiReader50.parseOperationPath("", strMap57);
        io.swagger.annotations.Api api60 = null;
        boolean boolean61 = springMvcApiReader50.canReadApi(false, api60);
        java.util.Map<java.lang.String, java.lang.String> strMap63 = null;
        java.lang.String str64 = springMvcApiReader50.parseOperationPath("hi!", strMap63);
        io.swagger.models.Swagger swagger65 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter66 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader67 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger65, logAdapter66);
        java.lang.Class<?> wildcardClass68 = springMvcApiReader67.getClass();
        springMvcApiReader50.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass68);
        java.util.Map<java.lang.String, java.lang.String> strMap71 = null;
        java.lang.String str72 = springMvcApiReader50.parseOperationPath("/hi!", strMap71);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray73 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap74 = springMvcApiReader50.parseResponseHeaders(responseHeaderArray73);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap75 = springMvcApiReader39.parseResponseHeaders(responseHeaderArray73);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap76 = springMvcApiReader23.parseResponseHeaders(responseHeaderArray73);
        io.swagger.models.Swagger swagger77 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter78 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader79 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger77, logAdapter78);
        java.lang.reflect.Type[] typeArray80 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet81 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet81, typeArray80);
        springMvcApiReader79.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet81);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter84 = springMvcApiReader79.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap86 = null;
        java.lang.String str87 = springMvcApiReader79.parseOperationPath("", strMap86);
        io.swagger.models.Swagger swagger88 = springMvcApiReader79.swagger;
        io.swagger.annotations.Api api90 = null;
        boolean boolean91 = springMvcApiReader79.canReadApi(false, api90);
        java.util.Set<java.lang.reflect.Type> typeSet92 = springMvcApiReader79.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet93 = springMvcApiReader79.getTypesToSkip();
        springMvcApiReader23.setTypesToSkip(typeSet93);
        springMvcApiReader2.typesToSkip = typeSet93;
        java.util.Set<java.lang.reflect.Type> typeSet96 = springMvcApiReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass97 = springMvcApiReader2.getClass();
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(typeArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(typeSet19);
        org.junit.Assert.assertNotNull(typeSet20);
        org.junit.Assert.assertNotNull(typeArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(annotationArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(typeSet32);
        org.junit.Assert.assertNotNull(typeArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(annotationArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(typeArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNull(logAdapter55);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "" + "'", str58, "");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "/hi!" + "'", str64, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "/hi!" + "'", str72, "/hi!");
        org.junit.Assert.assertNotNull(responseHeaderArray73);
        org.junit.Assert.assertNull(strMap74);
        org.junit.Assert.assertNull(strMap75);
        org.junit.Assert.assertNull(strMap76);
        org.junit.Assert.assertNotNull(typeArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNull(logAdapter84);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "" + "'", str87, "");
        org.junit.Assert.assertNull(swagger88);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(typeSet92);
        org.junit.Assert.assertNotNull(typeSet93);
        org.junit.Assert.assertNotNull(typeSet96);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test02545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02545");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type[] typeArray18 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet19 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet19, typeArray18);
        springMvcApiReader17.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet19);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = springMvcApiReader17.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap24 = null;
        java.lang.String str25 = springMvcApiReader17.parseOperationPath("", strMap24);
        io.swagger.annotations.Api api27 = null;
        boolean boolean28 = springMvcApiReader17.canReadApi(false, api27);
        java.util.Map<java.lang.String, java.lang.String> strMap30 = null;
        java.lang.String str31 = springMvcApiReader17.parseOperationPath("hi!", strMap30);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.Class<?> wildcardClass35 = springMvcApiReader34.getClass();
        springMvcApiReader17.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        java.util.Map<java.lang.String, java.lang.String> strMap39 = null;
        java.lang.String str40 = springMvcApiReader2.parseOperationPath("hi!", strMap39);
        java.lang.annotation.Annotation[] annotationArray41 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList42 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList42, annotationArray41);
        boolean boolean44 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList42);
        java.util.Map<java.lang.String, java.lang.String> strMap46 = null;
        java.lang.String str47 = springMvcApiReader2.parseOperationPath("hi!", strMap46);
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(logAdapter22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "/hi!" + "'", str31, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "/hi!" + "'", str40, "/hi!");
        org.junit.Assert.assertNotNull(annotationArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "/hi!" + "'", str47, "/hi!");
    }

    @Test
    public void test02546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02546");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        java.util.Set<java.lang.reflect.Type> typeSet5 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet6 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger14 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter15 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader16 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger14, logAdapter15);
        java.lang.reflect.Type[] typeArray17 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet18 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet18, typeArray17);
        springMvcApiReader16.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet18);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet18);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet18);
        springMvcApiReader2.updateExtensionChain();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter24 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger25 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger26 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter27 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader28 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger26, logAdapter27);
        java.lang.reflect.Type type29 = null;
        springMvcApiReader28.addTypeToSkippedTypes(type29);
        java.util.Set<java.lang.reflect.Type> typeSet31 = springMvcApiReader28.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet32 = springMvcApiReader28.getTypesToSkip();
        springMvcApiReader2.typesToSkip = typeSet32;
        io.swagger.models.Swagger swagger34 = null;
        springMvcApiReader2.swagger = swagger34;
        io.swagger.annotations.ApiOperation apiOperation36 = null;
        io.swagger.models.Operation operation37 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateOperationProtocols(apiOperation36, operation37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeSet5);
        org.junit.Assert.assertNotNull(typeSet6);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(logAdapter24);
        org.junit.Assert.assertNull(swagger25);
        org.junit.Assert.assertNotNull(typeSet31);
        org.junit.Assert.assertNotNull(typeSet32);
    }

    @Test
    public void test02547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02547");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type type18 = null;
        springMvcApiReader17.addTypeToSkippedTypes(type18);
        java.util.Set<java.lang.reflect.Type> typeSet20 = springMvcApiReader17.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet20);
        java.util.Set<java.lang.reflect.Type> typeSet22 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger23 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter24 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader25 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger23, logAdapter24);
        java.lang.reflect.Type[] typeArray26 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet27 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet27, typeArray26);
        springMvcApiReader25.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet27);
        java.lang.annotation.Annotation[] annotationArray30 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList31 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList31, annotationArray30);
        boolean boolean33 = springMvcApiReader25.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList31);
        io.swagger.models.Swagger swagger34 = null;
        springMvcApiReader25.swagger = swagger34;
        io.swagger.models.Swagger swagger36 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter37 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader38 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger36, logAdapter37);
        java.lang.reflect.Type[] typeArray39 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet40 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet40, typeArray39);
        springMvcApiReader38.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet40);
        java.lang.annotation.Annotation[] annotationArray43 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList44 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList44, annotationArray43);
        boolean boolean46 = springMvcApiReader38.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList44);
        io.swagger.models.Swagger swagger47 = null;
        springMvcApiReader38.swagger = swagger47;
        java.lang.annotation.Annotation[] annotationArray49 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList50 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList50, annotationArray49);
        boolean boolean52 = springMvcApiReader38.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList50);
        boolean boolean53 = springMvcApiReader25.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList50);
        springMvcApiReader25.updateExtensionChain();
        io.swagger.models.Swagger swagger55 = springMvcApiReader25.swagger;
        io.swagger.models.Swagger swagger56 = null;
        springMvcApiReader25.swagger = swagger56;
        java.util.Set<java.lang.reflect.Type> typeSet58 = springMvcApiReader25.typesToSkip;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter59 = springMvcApiReader25.LOG;
        io.swagger.models.Swagger swagger60 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter61 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader62 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger60, logAdapter61);
        java.lang.reflect.Type[] typeArray63 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet64 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet64, typeArray63);
        springMvcApiReader62.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet64);
        java.lang.annotation.Annotation[] annotationArray67 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList68 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList68, annotationArray67);
        boolean boolean70 = springMvcApiReader62.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList68);
        io.swagger.models.Swagger swagger71 = null;
        springMvcApiReader62.swagger = swagger71;
        io.swagger.annotations.ResponseHeader[] responseHeaderArray73 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap74 = springMvcApiReader62.parseResponseHeaders(responseHeaderArray73);
        springMvcApiReader62.updateExtensionChain();
        io.swagger.models.Swagger swagger76 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter77 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader78 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger76, logAdapter77);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter79 = springMvcApiReader78.LOG;
        java.util.Set<java.lang.reflect.Type> typeSet80 = springMvcApiReader78.typesToSkip;
        io.swagger.models.Swagger swagger81 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter82 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader83 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger81, logAdapter82);
        java.lang.reflect.Type[] typeArray84 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet85 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet85, typeArray84);
        springMvcApiReader83.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet85);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter88 = springMvcApiReader83.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap90 = null;
        java.lang.String str91 = springMvcApiReader83.parseOperationPath("", strMap90);
        java.lang.reflect.Type[] typeArray92 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList93 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean94 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList93, typeArray92);
        springMvcApiReader83.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList93);
        springMvcApiReader78.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList93);
        springMvcApiReader62.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList93);
        springMvcApiReader25.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList93);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList93);
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeSet20);
        org.junit.Assert.assertNotNull(typeSet22);
        org.junit.Assert.assertNotNull(typeArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(annotationArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(typeArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(annotationArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(annotationArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNull(swagger55);
        org.junit.Assert.assertNotNull(typeSet58);
        org.junit.Assert.assertNull(logAdapter59);
        org.junit.Assert.assertNotNull(typeArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(annotationArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(responseHeaderArray73);
        org.junit.Assert.assertNull(strMap74);
        org.junit.Assert.assertNull(logAdapter79);
        org.junit.Assert.assertNotNull(typeSet80);
        org.junit.Assert.assertNotNull(typeArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNull(logAdapter88);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "" + "'", str91, "");
        org.junit.Assert.assertNotNull(typeArray92);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
    }

    @Test
    public void test02548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02548");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader2.parseOperationPath("hi!", strMap15);
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.Class<?> wildcardClass20 = springMvcApiReader19.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass20);
        java.util.Map<java.lang.String, java.lang.String> strMap23 = null;
        java.lang.String str24 = springMvcApiReader2.parseOperationPath("/hi!", strMap23);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray25 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap26 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray25);
        io.swagger.models.Swagger swagger27 = springMvcApiReader2.swagger;
        io.swagger.annotations.ApiOperation apiOperation28 = null;
        io.swagger.models.Operation operation29 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateOperationProtocols(apiOperation28, operation29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/hi!" + "'", str16, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "/hi!" + "'", str24, "/hi!");
        org.junit.Assert.assertNotNull(responseHeaderArray25);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertNull(swagger27);
    }

    @Test
    public void test02549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02549");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger15 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger16 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter17 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader18 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger16, logAdapter17);
        java.lang.reflect.Type[] typeArray19 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet20 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet20, typeArray19);
        springMvcApiReader18.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet20);
        java.lang.annotation.Annotation[] annotationArray23 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList24 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList24, annotationArray23);
        boolean boolean26 = springMvcApiReader18.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList24);
        io.swagger.models.Swagger swagger27 = null;
        springMvcApiReader18.swagger = swagger27;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter29 = null;
        springMvcApiReader18.LOG = logAdapter29;
        io.swagger.models.Swagger swagger31 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter32 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader33 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger31, logAdapter32);
        java.lang.reflect.Type[] typeArray34 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet35 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet35, typeArray34);
        springMvcApiReader33.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet35);
        io.swagger.models.Swagger swagger38 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter39 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader40 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger38, logAdapter39);
        java.lang.reflect.Type[] typeArray41 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet42 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet42, typeArray41);
        springMvcApiReader40.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet42);
        springMvcApiReader33.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet42);
        io.swagger.models.Swagger swagger46 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter47 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader48 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger46, logAdapter47);
        java.lang.reflect.Type type49 = null;
        springMvcApiReader48.addTypeToSkippedTypes(type49);
        java.util.Set<java.lang.reflect.Type> typeSet51 = springMvcApiReader48.typesToSkip;
        springMvcApiReader33.setTypesToSkip(typeSet51);
        java.util.Set<java.lang.reflect.Type> typeSet53 = springMvcApiReader33.getTypesToSkip();
        io.swagger.annotations.Api api55 = null;
        boolean boolean56 = springMvcApiReader33.canReadApi(true, api55);
        io.swagger.models.Swagger swagger57 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter58 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader59 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger57, logAdapter58);
        java.lang.reflect.Type type60 = null;
        springMvcApiReader59.addTypeToSkippedTypes(type60);
        java.util.Set<java.lang.reflect.Type> typeSet62 = springMvcApiReader59.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet63 = springMvcApiReader59.getTypesToSkip();
        springMvcApiReader33.typesToSkip = typeSet63;
        springMvcApiReader18.setTypesToSkip(typeSet63);
        springMvcApiReader2.typesToSkip = typeSet63;
        io.swagger.annotations.ResponseHeader[] responseHeaderArray67 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap68 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray67);
        java.lang.reflect.Method method69 = null;
        io.swagger.models.Operation operation70 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.readImplicitParameters(method69, operation70);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(swagger15);
        org.junit.Assert.assertNotNull(typeArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(annotationArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(typeArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(typeArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(typeSet51);
        org.junit.Assert.assertNotNull(typeSet53);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(typeSet62);
        org.junit.Assert.assertNotNull(typeSet63);
        org.junit.Assert.assertNull(strMap68);
    }

    @Test
    public void test02550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02550");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.util.Set<java.lang.reflect.Type> typeSet7 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger8 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader10 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger8, logAdapter9);
        java.lang.reflect.Type[] typeArray11 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet12 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet12, typeArray11);
        springMvcApiReader10.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet12);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter15 = springMvcApiReader10.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap17 = null;
        java.lang.String str18 = springMvcApiReader10.parseOperationPath("", strMap17);
        io.swagger.annotations.Api api20 = null;
        boolean boolean21 = springMvcApiReader10.canReadApi(false, api20);
        java.util.Map<java.lang.String, java.lang.String> strMap23 = null;
        java.lang.String str24 = springMvcApiReader10.parseOperationPath("hi!", strMap23);
        io.swagger.models.Swagger swagger25 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter26 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader27 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger25, logAdapter26);
        java.lang.reflect.Type[] typeArray28 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet29 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet29, typeArray28);
        springMvcApiReader27.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet29);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.reflect.Type[] typeArray35 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet36 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet36, typeArray35);
        springMvcApiReader34.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet36);
        springMvcApiReader27.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet36);
        io.swagger.models.Swagger swagger40 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter41 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader42 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger40, logAdapter41);
        java.lang.reflect.Type[] typeArray43 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet44 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet44, typeArray43);
        springMvcApiReader42.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet44);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter47 = springMvcApiReader42.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap49 = null;
        java.lang.String str50 = springMvcApiReader42.parseOperationPath("", strMap49);
        io.swagger.annotations.Api api52 = null;
        boolean boolean53 = springMvcApiReader42.canReadApi(false, api52);
        java.util.Map<java.lang.String, java.lang.String> strMap55 = null;
        java.lang.String str56 = springMvcApiReader42.parseOperationPath("hi!", strMap55);
        io.swagger.models.Swagger swagger57 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter58 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader59 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger57, logAdapter58);
        java.lang.Class<?> wildcardClass60 = springMvcApiReader59.getClass();
        springMvcApiReader42.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass60);
        springMvcApiReader27.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass60);
        springMvcApiReader10.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass60);
        io.swagger.models.Swagger swagger64 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter65 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader66 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger64, logAdapter65);
        java.lang.reflect.Type[] typeArray67 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet68 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet68, typeArray67);
        springMvcApiReader66.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet68);
        java.lang.annotation.Annotation[] annotationArray71 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList72 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList72, annotationArray71);
        boolean boolean74 = springMvcApiReader66.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList72);
        io.swagger.models.Swagger swagger75 = null;
        springMvcApiReader66.swagger = swagger75;
        java.lang.annotation.Annotation[] annotationArray77 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList78 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList78, annotationArray77);
        boolean boolean80 = springMvcApiReader66.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList78);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList81 = springMvcApiReader2.getParameters((java.lang.reflect.Type) wildcardClass60, (java.util.List<java.lang.annotation.Annotation>) annotationList78);
        java.util.Set<java.lang.reflect.Type> typeSet82 = springMvcApiReader2.getTypesToSkip();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter83 = springMvcApiReader2.LOG;
        java.util.Set<java.lang.reflect.Type> typeSet84 = null;
        springMvcApiReader2.setTypesToSkip(typeSet84);
        io.swagger.models.Swagger swagger86 = springMvcApiReader2.swagger;
        java.util.Set<java.lang.reflect.Type> typeSet87 = springMvcApiReader2.getTypesToSkip();
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeSet7);
        org.junit.Assert.assertNotNull(typeArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(logAdapter15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "/hi!" + "'", str24, "/hi!");
        org.junit.Assert.assertNotNull(typeArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(typeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(typeArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(logAdapter47);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "/hi!" + "'", str56, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(typeArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(annotationArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(annotationArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(parameterList81);
        org.junit.Assert.assertNotNull(typeSet82);
        org.junit.Assert.assertNull(logAdapter83);
        org.junit.Assert.assertNull(swagger86);
        org.junit.Assert.assertNull(typeSet87);
    }

    @Test
    public void test02551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02551");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader2.parseOperationPath("hi!", strMap15);
        java.util.Set<java.lang.reflect.Type> typeSet17 = null;
        springMvcApiReader2.setTypesToSkip(typeSet17);
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/hi!" + "'", str16, "/hi!");
    }

    @Test
    public void test02552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02552");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type[] typeArray18 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet19 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet19, typeArray18);
        springMvcApiReader17.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet19);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = springMvcApiReader17.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap24 = null;
        java.lang.String str25 = springMvcApiReader17.parseOperationPath("", strMap24);
        io.swagger.annotations.Api api27 = null;
        boolean boolean28 = springMvcApiReader17.canReadApi(false, api27);
        java.util.Map<java.lang.String, java.lang.String> strMap30 = null;
        java.lang.String str31 = springMvcApiReader17.parseOperationPath("hi!", strMap30);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.Class<?> wildcardClass35 = springMvcApiReader34.getClass();
        springMvcApiReader17.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        java.util.Set<java.lang.reflect.Type> typeSet38 = springMvcApiReader2.getTypesToSkip();
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger40 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter41 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader42 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger40, logAdapter41);
        java.lang.reflect.Type type43 = null;
        springMvcApiReader42.addTypeToSkippedTypes(type43);
        java.util.Set<java.lang.reflect.Type> typeSet45 = springMvcApiReader42.typesToSkip;
        io.swagger.models.Swagger swagger46 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter47 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader48 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger46, logAdapter47);
        java.lang.reflect.Type[] typeArray49 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet50 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet50, typeArray49);
        springMvcApiReader48.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet50);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter53 = springMvcApiReader48.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap55 = null;
        java.lang.String str56 = springMvcApiReader48.parseOperationPath("", strMap55);
        io.swagger.annotations.Api api58 = null;
        boolean boolean59 = springMvcApiReader48.canReadApi(false, api58);
        java.util.Map<java.lang.String, java.lang.String> strMap61 = null;
        java.lang.String str62 = springMvcApiReader48.parseOperationPath("hi!", strMap61);
        io.swagger.models.Swagger swagger63 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter64 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader65 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger63, logAdapter64);
        java.lang.Class<?> wildcardClass66 = springMvcApiReader65.getClass();
        springMvcApiReader48.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass66);
        java.util.Map<java.lang.String, java.lang.String> strMap69 = null;
        java.lang.String str70 = springMvcApiReader48.parseOperationPath("/hi!", strMap69);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray71 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap72 = springMvcApiReader48.parseResponseHeaders(responseHeaderArray71);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap73 = springMvcApiReader42.parseResponseHeaders(responseHeaderArray71);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap74 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray71);
        io.swagger.models.Operation operation75 = null;
        io.swagger.annotations.ApiOperation apiOperation76 = null;
        springMvcApiReader2.updateTagsForOperation(operation75, apiOperation76);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter78 = null;
        springMvcApiReader2.LOG = logAdapter78;
        io.swagger.models.Operation operation80 = null;
        io.swagger.annotations.ApiResponses apiResponses81 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateApiResponse(operation80, apiResponses81);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(logAdapter22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "/hi!" + "'", str31, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(typeSet38);
        org.junit.Assert.assertNotNull(typeSet45);
        org.junit.Assert.assertNotNull(typeArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNull(logAdapter53);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "/hi!" + "'", str62, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "/hi!" + "'", str70, "/hi!");
        org.junit.Assert.assertNotNull(responseHeaderArray71);
        org.junit.Assert.assertNull(strMap72);
        org.junit.Assert.assertNull(strMap73);
        org.junit.Assert.assertNull(strMap74);
    }

    @Test
    public void test02553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02553");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        java.lang.reflect.Type[] typeArray11 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList12 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList12, typeArray11);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList12);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!", "", "hi!" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap20 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray21 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList22 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList22, securityRequirementArray21);
        io.swagger.models.Operation operation24 = null;
        springMvcApiReader2.updateOperation(strArray15, strArray19, strMap20, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList22, operation24);
        java.util.Map<java.lang.String, java.lang.String> strMap27 = null;
        java.lang.String str28 = springMvcApiReader2.parseOperationPath("", strMap27);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger30 = null;
        springMvcApiReader2.swagger = swagger30;
        io.swagger.models.Operation operation32 = null;
        io.swagger.annotations.ApiOperation apiOperation33 = null;
        springMvcApiReader2.updateTagsForOperation(operation32, apiOperation33);
        io.swagger.models.Swagger swagger35 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter36 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader37 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger35, logAdapter36);
        java.lang.reflect.Type[] typeArray38 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet39 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet39, typeArray38);
        springMvcApiReader37.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet39);
        io.swagger.models.Swagger swagger42 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter43 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader44 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger42, logAdapter43);
        java.lang.reflect.Type[] typeArray45 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet46 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet46, typeArray45);
        springMvcApiReader44.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet46);
        springMvcApiReader37.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet46);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet46);
        java.util.Set<java.lang.reflect.Type> typeSet51 = springMvcApiReader2.getTypesToSkip();
        com.github.kongchen.swagger.docgen.spring.SpringResource springResource52 = null;
        // The following exception was thrown during execution in test generation
        try {
            io.swagger.models.Swagger swagger53 = springMvcApiReader2.read(springResource52);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(typeArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(securityRequirementArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNotNull(typeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(typeArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(typeSet51);
    }

    @Test
    public void test02554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02554");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type[] typeArray18 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet19 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet19, typeArray18);
        springMvcApiReader17.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet19);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = springMvcApiReader17.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap24 = null;
        java.lang.String str25 = springMvcApiReader17.parseOperationPath("", strMap24);
        io.swagger.annotations.Api api27 = null;
        boolean boolean28 = springMvcApiReader17.canReadApi(false, api27);
        java.util.Map<java.lang.String, java.lang.String> strMap30 = null;
        java.lang.String str31 = springMvcApiReader17.parseOperationPath("hi!", strMap30);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.Class<?> wildcardClass35 = springMvcApiReader34.getClass();
        springMvcApiReader17.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter38 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger39 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter40 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader41 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger39, logAdapter40);
        java.lang.reflect.Type[] typeArray42 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet43 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet43, typeArray42);
        springMvcApiReader41.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet43);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter46 = springMvcApiReader41.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap48 = null;
        java.lang.String str49 = springMvcApiReader41.parseOperationPath("", strMap48);
        java.lang.reflect.Type[] typeArray50 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList51 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList51, typeArray50);
        springMvcApiReader41.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList51);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList51);
        io.swagger.models.Swagger swagger55 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter56 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader57 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger55, logAdapter56);
        java.lang.reflect.Type[] typeArray58 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet59 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet59, typeArray58);
        springMvcApiReader57.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet59);
        java.util.Set<java.lang.reflect.Type> typeSet62 = springMvcApiReader57.typesToSkip;
        springMvcApiReader57.updateExtensionChain();
        io.swagger.models.Swagger swagger64 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter65 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader66 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger64, logAdapter65);
        java.lang.Class<?> wildcardClass67 = springMvcApiReader66.getClass();
        springMvcApiReader57.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass67);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass67);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter70 = springMvcApiReader2.LOG;
        java.util.Set<java.lang.reflect.Type> typeSet71 = springMvcApiReader2.typesToSkip;
        java.util.Map<java.lang.String, java.lang.String> strMap73 = null;
        java.lang.String str74 = springMvcApiReader2.parseOperationPath("/hi!", strMap73);
        io.swagger.annotations.Api api76 = null;
        boolean boolean77 = springMvcApiReader2.canReadApi(true, api76);
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(logAdapter22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "/hi!" + "'", str31, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNull(logAdapter38);
        org.junit.Assert.assertNotNull(typeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNull(logAdapter46);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertNotNull(typeArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(typeArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(typeSet62);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNull(logAdapter70);
        org.junit.Assert.assertNotNull(typeSet71);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "/hi!" + "'", str74, "/hi!");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
    }

    @Test
    public void test02555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02555");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader2.parseOperationPath("hi!", strMap15);
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.reflect.Type[] typeArray20 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet21 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet21, typeArray20);
        springMvcApiReader19.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet21);
        io.swagger.models.Swagger swagger24 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter25 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader26 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger24, logAdapter25);
        java.lang.reflect.Type[] typeArray27 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet28 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet28, typeArray27);
        springMvcApiReader26.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet28);
        springMvcApiReader19.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet28);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.reflect.Type[] typeArray35 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet36 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet36, typeArray35);
        springMvcApiReader34.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet36);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter39 = springMvcApiReader34.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap41 = null;
        java.lang.String str42 = springMvcApiReader34.parseOperationPath("", strMap41);
        io.swagger.annotations.Api api44 = null;
        boolean boolean45 = springMvcApiReader34.canReadApi(false, api44);
        java.util.Map<java.lang.String, java.lang.String> strMap47 = null;
        java.lang.String str48 = springMvcApiReader34.parseOperationPath("hi!", strMap47);
        io.swagger.models.Swagger swagger49 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter50 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader51 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger49, logAdapter50);
        java.lang.Class<?> wildcardClass52 = springMvcApiReader51.getClass();
        springMvcApiReader34.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        springMvcApiReader19.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter56 = null;
        springMvcApiReader2.LOG = logAdapter56;
        io.swagger.annotations.ApiOperation apiOperation58 = null;
        io.swagger.models.Operation operation59 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateOperationProtocols(apiOperation58, operation59);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/hi!" + "'", str16, "/hi!");
        org.junit.Assert.assertNotNull(typeArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(typeArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(typeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(logAdapter39);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "/hi!" + "'", str48, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test02556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02556");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.util.Set<java.lang.reflect.Type> typeSet7 = springMvcApiReader2.typesToSkip;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger9 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter10 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader11 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger9, logAdapter10);
        java.lang.reflect.Type[] typeArray12 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet13 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet13, typeArray12);
        springMvcApiReader11.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet13);
        java.lang.annotation.Annotation[] annotationArray16 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList17 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList17, annotationArray16);
        boolean boolean19 = springMvcApiReader11.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList17);
        io.swagger.models.Swagger swagger20 = null;
        springMvcApiReader11.swagger = swagger20;
        io.swagger.models.Swagger swagger22 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader24 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger22, logAdapter23);
        java.lang.reflect.Type[] typeArray25 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet26 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet26, typeArray25);
        springMvcApiReader24.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet26);
        java.lang.annotation.Annotation[] annotationArray29 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList30 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList30, annotationArray29);
        boolean boolean32 = springMvcApiReader24.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList30);
        io.swagger.models.Swagger swagger33 = null;
        springMvcApiReader24.swagger = swagger33;
        java.lang.annotation.Annotation[] annotationArray35 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList36 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList36, annotationArray35);
        boolean boolean38 = springMvcApiReader24.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList36);
        boolean boolean39 = springMvcApiReader11.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList36);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter40 = springMvcApiReader11.LOG;
        io.swagger.models.Swagger swagger41 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter42 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader43 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger41, logAdapter42);
        java.util.Map<java.lang.String, java.lang.String> strMap45 = null;
        java.lang.String str46 = springMvcApiReader43.parseOperationPath("/hi!", strMap45);
        java.util.Set<java.lang.reflect.Type> typeSet47 = springMvcApiReader43.getTypesToSkip();
        springMvcApiReader11.setTypesToSkip(typeSet47);
        springMvcApiReader2.typesToSkip = typeSet47;
        io.swagger.models.Operation operation50 = null;
        io.swagger.annotations.ApiOperation apiOperation51 = null;
        springMvcApiReader2.updateTagsForOperation(operation50, apiOperation51);
        java.util.Set<java.lang.reflect.Type> typeSet53 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger54 = springMvcApiReader2.swagger;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter55 = null;
        springMvcApiReader2.LOG = logAdapter55;
        io.swagger.models.Swagger swagger57 = springMvcApiReader2.swagger;
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeSet7);
        org.junit.Assert.assertNotNull(typeArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(annotationArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(typeArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(annotationArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(annotationArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(logAdapter40);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "/hi!" + "'", str46, "/hi!");
        org.junit.Assert.assertNotNull(typeSet47);
        org.junit.Assert.assertNotNull(typeSet53);
        org.junit.Assert.assertNull(swagger54);
        org.junit.Assert.assertNull(swagger57);
    }

    @Test
    public void test02557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02557");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        java.util.Set<java.lang.reflect.Type> typeSet5 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet6 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger14 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter15 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader16 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger14, logAdapter15);
        java.lang.reflect.Type[] typeArray17 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet18 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet18, typeArray17);
        springMvcApiReader16.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet18);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet18);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet18);
        springMvcApiReader2.updateExtensionChain();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter24 = springMvcApiReader2.LOG;
        io.swagger.annotations.Api api26 = null;
        boolean boolean27 = springMvcApiReader2.canReadApi(false, api26);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter28 = null;
        springMvcApiReader2.LOG = logAdapter28;
        io.swagger.models.Swagger swagger30 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter31 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader32 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger30, logAdapter31);
        java.lang.reflect.Type type33 = null;
        springMvcApiReader32.addTypeToSkippedTypes(type33);
        java.util.Set<java.lang.reflect.Type> typeSet35 = springMvcApiReader32.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet36 = springMvcApiReader32.getTypesToSkip();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter37 = springMvcApiReader32.LOG;
        io.swagger.models.Swagger swagger38 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter39 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader40 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger38, logAdapter39);
        java.lang.reflect.Type[] typeArray41 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet42 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet42, typeArray41);
        springMvcApiReader40.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet42);
        io.swagger.models.Swagger swagger45 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter46 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader47 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger45, logAdapter46);
        java.lang.reflect.Type[] typeArray48 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet49 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet49, typeArray48);
        springMvcApiReader47.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet49);
        springMvcApiReader40.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet49);
        io.swagger.models.Swagger swagger53 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter54 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader55 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger53, logAdapter54);
        java.lang.reflect.Type[] typeArray56 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet57 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet57, typeArray56);
        springMvcApiReader55.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet57);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter60 = springMvcApiReader55.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap62 = null;
        java.lang.String str63 = springMvcApiReader55.parseOperationPath("", strMap62);
        io.swagger.annotations.Api api65 = null;
        boolean boolean66 = springMvcApiReader55.canReadApi(false, api65);
        java.util.Map<java.lang.String, java.lang.String> strMap68 = null;
        java.lang.String str69 = springMvcApiReader55.parseOperationPath("hi!", strMap68);
        io.swagger.models.Swagger swagger70 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter71 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader72 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger70, logAdapter71);
        java.lang.Class<?> wildcardClass73 = springMvcApiReader72.getClass();
        springMvcApiReader55.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass73);
        springMvcApiReader40.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass73);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter76 = springMvcApiReader40.LOG;
        io.swagger.models.Swagger swagger77 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter78 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader79 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger77, logAdapter78);
        java.lang.reflect.Type[] typeArray80 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet81 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet81, typeArray80);
        springMvcApiReader79.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet81);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter84 = springMvcApiReader79.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap86 = null;
        java.lang.String str87 = springMvcApiReader79.parseOperationPath("", strMap86);
        java.lang.reflect.Type[] typeArray88 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList89 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList89, typeArray88);
        springMvcApiReader79.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList89);
        springMvcApiReader40.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList89);
        springMvcApiReader32.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList89);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList89);
        java.util.Map<java.lang.String, java.lang.String> strMap96 = null;
        java.lang.String str97 = springMvcApiReader2.parseOperationPath("hi!", strMap96);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter98 = springMvcApiReader2.LOG;
        org.junit.Assert.assertNotNull(typeSet5);
        org.junit.Assert.assertNotNull(typeSet6);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(logAdapter24);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(typeSet35);
        org.junit.Assert.assertNotNull(typeSet36);
        org.junit.Assert.assertNull(logAdapter37);
        org.junit.Assert.assertNotNull(typeArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(typeArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(typeArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNull(logAdapter60);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "" + "'", str63, "");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "/hi!" + "'", str69, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNull(logAdapter76);
        org.junit.Assert.assertNotNull(typeArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNull(logAdapter84);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "" + "'", str87, "");
        org.junit.Assert.assertNotNull(typeArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertEquals("'" + str97 + "' != '" + "/hi!" + "'", str97, "/hi!");
        org.junit.Assert.assertNull(logAdapter98);
    }

    @Test
    public void test02558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02558");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        java.lang.reflect.Type[] typeArray11 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList12 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList12, typeArray11);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList12);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!", "", "hi!" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap20 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray21 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList22 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList22, securityRequirementArray21);
        io.swagger.models.Operation operation24 = null;
        springMvcApiReader2.updateOperation(strArray15, strArray19, strMap20, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList22, operation24);
        java.util.Map<java.lang.String, java.lang.String> strMap27 = null;
        java.lang.String str28 = springMvcApiReader2.parseOperationPath("", strMap27);
        io.swagger.models.Operation operation29 = null;
        io.swagger.annotations.ApiOperation apiOperation30 = null;
        springMvcApiReader2.updateTagsForOperation(operation29, apiOperation30);
        io.swagger.models.Operation operation32 = null;
        io.swagger.annotations.ApiOperation apiOperation33 = null;
        springMvcApiReader2.updateTagsForOperation(operation32, apiOperation33);
        io.swagger.models.Swagger swagger35 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter36 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader37 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger35, logAdapter36);
        java.lang.reflect.Type type38 = null;
        springMvcApiReader37.addTypeToSkippedTypes(type38);
        java.util.Set<java.lang.reflect.Type> typeSet40 = springMvcApiReader37.typesToSkip;
        springMvcApiReader2.typesToSkip = typeSet40;
        springMvcApiReader2.updateExtensionChain();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter43 = springMvcApiReader2.LOG;
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(typeArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(securityRequirementArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNotNull(typeSet40);
        org.junit.Assert.assertNull(logAdapter43);
    }

    @Test
    public void test02559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02559");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        java.util.Set<java.lang.reflect.Type> typeSet5 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet6 = springMvcApiReader2.getTypesToSkip();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = null;
        java.lang.String str9 = springMvcApiReader2.parseOperationPath("", strMap8);
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader12 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger10, logAdapter11);
        java.lang.reflect.Type[] typeArray13 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet14 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet14, typeArray13);
        springMvcApiReader12.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet14);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter17 = springMvcApiReader12.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap19 = null;
        java.lang.String str20 = springMvcApiReader12.parseOperationPath("", strMap19);
        io.swagger.annotations.Api api22 = null;
        boolean boolean23 = springMvcApiReader12.canReadApi(false, api22);
        java.util.Map<java.lang.String, java.lang.String> strMap25 = null;
        java.lang.String str26 = springMvcApiReader12.parseOperationPath("hi!", strMap25);
        io.swagger.models.Swagger swagger27 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter28 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader29 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger27, logAdapter28);
        java.lang.Class<?> wildcardClass30 = springMvcApiReader29.getClass();
        springMvcApiReader12.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass30);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.reflect.Type[] typeArray35 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet36 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet36, typeArray35);
        springMvcApiReader34.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet36);
        java.lang.annotation.Annotation[] annotationArray39 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList40 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList40, annotationArray39);
        boolean boolean42 = springMvcApiReader34.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList40);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList43 = springMvcApiReader2.getParameters((java.lang.reflect.Type) wildcardClass30, (java.util.List<java.lang.annotation.Annotation>) annotationList40);
        springMvcApiReader2.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet45 = springMvcApiReader2.typesToSkip;
        java.util.Map<java.lang.String, java.lang.String> strMap47 = null;
        java.lang.String str48 = springMvcApiReader2.parseOperationPath("", strMap47);
        io.swagger.annotations.Api api49 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.lang.String> strSet50 = springMvcApiReader2.extractTags(api49);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeSet5);
        org.junit.Assert.assertNotNull(typeSet6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(typeArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(logAdapter17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "/hi!" + "'", str26, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(typeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(annotationArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(parameterList43);
        org.junit.Assert.assertNotNull(typeSet45);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
    }

    @Test
    public void test02560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02560");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type[] typeArray18 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet19 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet19, typeArray18);
        springMvcApiReader17.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet19);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = springMvcApiReader17.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap24 = null;
        java.lang.String str25 = springMvcApiReader17.parseOperationPath("", strMap24);
        io.swagger.annotations.Api api27 = null;
        boolean boolean28 = springMvcApiReader17.canReadApi(false, api27);
        java.util.Map<java.lang.String, java.lang.String> strMap30 = null;
        java.lang.String str31 = springMvcApiReader17.parseOperationPath("hi!", strMap30);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.Class<?> wildcardClass35 = springMvcApiReader34.getClass();
        springMvcApiReader17.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        java.util.Map<java.lang.String, java.lang.String> strMap39 = null;
        java.lang.String str40 = springMvcApiReader2.parseOperationPath("hi!", strMap39);
        io.swagger.models.Swagger swagger41 = springMvcApiReader2.swagger;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter42 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger43 = springMvcApiReader2.swagger;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter44 = springMvcApiReader2.LOG;
        java.util.Set<java.lang.reflect.Type> typeSet45 = springMvcApiReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet46 = springMvcApiReader2.getTypesToSkip();
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger48 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter49 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader50 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger48, logAdapter49);
        java.lang.reflect.Type[] typeArray51 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet52 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet52, typeArray51);
        springMvcApiReader50.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet52);
        java.lang.annotation.Annotation[] annotationArray55 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList56 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList56, annotationArray55);
        boolean boolean58 = springMvcApiReader50.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList56);
        java.util.Set<java.lang.reflect.Type> typeSet59 = springMvcApiReader50.typesToSkip;
        springMvcApiReader50.updateExtensionChain();
        io.swagger.models.Operation operation61 = null;
        io.swagger.annotations.ApiOperation apiOperation62 = null;
        springMvcApiReader50.updateTagsForOperation(operation61, apiOperation62);
        io.swagger.annotations.Api api65 = null;
        boolean boolean66 = springMvcApiReader50.canReadApi(true, api65);
        io.swagger.models.Swagger swagger67 = springMvcApiReader50.swagger;
        io.swagger.models.Swagger swagger68 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter69 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader70 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger68, logAdapter69);
        java.lang.reflect.Type[] typeArray71 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet72 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet72, typeArray71);
        springMvcApiReader70.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet72);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter75 = springMvcApiReader70.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap77 = null;
        java.lang.String str78 = springMvcApiReader70.parseOperationPath("", strMap77);
        io.swagger.annotations.Api api80 = null;
        boolean boolean81 = springMvcApiReader70.canReadApi(false, api80);
        java.util.Map<java.lang.String, java.lang.String> strMap83 = null;
        java.lang.String str84 = springMvcApiReader70.parseOperationPath("hi!", strMap83);
        io.swagger.models.Swagger swagger85 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter86 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader87 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger85, logAdapter86);
        java.lang.Class<?> wildcardClass88 = springMvcApiReader87.getClass();
        springMvcApiReader70.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass88);
        java.util.Map<java.lang.String, java.lang.String> strMap91 = null;
        java.lang.String str92 = springMvcApiReader70.parseOperationPath("/hi!", strMap91);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray93 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap94 = springMvcApiReader70.parseResponseHeaders(responseHeaderArray93);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap95 = springMvcApiReader50.parseResponseHeaders(responseHeaderArray93);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap96 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray93);
        io.swagger.models.Operation operation97 = null;
        io.swagger.annotations.ApiOperation apiOperation98 = null;
        springMvcApiReader2.updateTagsForOperation(operation97, apiOperation98);
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(logAdapter22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "/hi!" + "'", str31, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "/hi!" + "'", str40, "/hi!");
        org.junit.Assert.assertNull(swagger41);
        org.junit.Assert.assertNull(logAdapter42);
        org.junit.Assert.assertNull(swagger43);
        org.junit.Assert.assertNull(logAdapter44);
        org.junit.Assert.assertNotNull(typeSet45);
        org.junit.Assert.assertNotNull(typeSet46);
        org.junit.Assert.assertNotNull(typeArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(annotationArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(typeSet59);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNull(swagger67);
        org.junit.Assert.assertNotNull(typeArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNull(logAdapter75);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "" + "'", str78, "");
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "/hi!" + "'", str84, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "/hi!" + "'", str92, "/hi!");
        org.junit.Assert.assertNotNull(responseHeaderArray93);
        org.junit.Assert.assertNull(strMap94);
        org.junit.Assert.assertNull(strMap95);
        org.junit.Assert.assertNull(strMap96);
    }

    @Test
    public void test02561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02561");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.lang.annotation.Annotation[] annotationArray7 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList8 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList8, annotationArray7);
        boolean boolean10 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList8);
        io.swagger.models.Swagger swagger11 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter12 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader13 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger11, logAdapter12);
        java.lang.reflect.Type[] typeArray14 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet15 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet15, typeArray14);
        springMvcApiReader13.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet15);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = springMvcApiReader13.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap20 = null;
        java.lang.String str21 = springMvcApiReader13.parseOperationPath("", strMap20);
        io.swagger.annotations.Api api23 = null;
        boolean boolean24 = springMvcApiReader13.canReadApi(false, api23);
        java.util.Map<java.lang.String, java.lang.String> strMap26 = null;
        java.lang.String str27 = springMvcApiReader13.parseOperationPath("hi!", strMap26);
        io.swagger.models.Swagger swagger28 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter29 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader30 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger28, logAdapter29);
        java.lang.Class<?> wildcardClass31 = springMvcApiReader30.getClass();
        springMvcApiReader13.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass31);
        java.util.Map<java.lang.String, java.lang.String> strMap34 = null;
        java.lang.String str35 = springMvcApiReader13.parseOperationPath("/hi!", strMap34);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray36 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap37 = springMvcApiReader13.parseResponseHeaders(responseHeaderArray36);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap38 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray36);
        io.swagger.models.Swagger swagger39 = null;
        springMvcApiReader2.swagger = swagger39;
        java.util.Set<java.lang.reflect.Type> typeSet41 = springMvcApiReader2.getTypesToSkip();
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap42 = null;
        io.swagger.annotations.Api api43 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, io.swagger.models.Tag> strMap44 = springMvcApiReader2.updateTagsForApi(strMap42, api43);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(annotationArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(typeArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(logAdapter18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "/hi!" + "'", str27, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "/hi!" + "'", str35, "/hi!");
        org.junit.Assert.assertNotNull(responseHeaderArray36);
        org.junit.Assert.assertNull(strMap37);
        org.junit.Assert.assertNull(strMap38);
        org.junit.Assert.assertNotNull(typeSet41);
    }

    @Test
    public void test02562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02562");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader2.parseOperationPath("hi!", strMap15);
        io.swagger.models.Operation operation17 = null;
        io.swagger.annotations.ApiOperation apiOperation18 = null;
        springMvcApiReader2.updateTagsForOperation(operation17, apiOperation18);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.annotations.Api api22 = null;
        boolean boolean23 = springMvcApiReader2.canReadApi(false, api22);
        io.swagger.models.Swagger swagger24 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter25 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader26 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger24, logAdapter25);
        java.lang.reflect.Type[] typeArray27 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet28 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet28, typeArray27);
        springMvcApiReader26.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet28);
        java.lang.annotation.Annotation[] annotationArray31 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList32 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList32, annotationArray31);
        boolean boolean34 = springMvcApiReader26.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList32);
        java.util.Set<java.lang.reflect.Type> typeSet35 = springMvcApiReader26.typesToSkip;
        springMvcApiReader26.updateExtensionChain();
        io.swagger.models.Operation operation37 = null;
        io.swagger.annotations.ApiOperation apiOperation38 = null;
        springMvcApiReader26.updateTagsForOperation(operation37, apiOperation38);
        springMvcApiReader26.updateExtensionChain();
        io.swagger.models.Swagger swagger41 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter42 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader43 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger41, logAdapter42);
        java.lang.reflect.Type[] typeArray44 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet45 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet45, typeArray44);
        springMvcApiReader43.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet45);
        java.lang.annotation.Annotation[] annotationArray48 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList49 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList49, annotationArray48);
        boolean boolean51 = springMvcApiReader43.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList49);
        io.swagger.models.Swagger swagger52 = null;
        springMvcApiReader43.swagger = swagger52;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter54 = null;
        springMvcApiReader43.LOG = logAdapter54;
        java.util.Set<java.lang.reflect.Type> typeSet56 = springMvcApiReader43.getTypesToSkip();
        java.lang.Class<?> wildcardClass57 = typeSet56.getClass();
        springMvcApiReader26.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass57);
        io.swagger.models.Swagger swagger59 = springMvcApiReader26.swagger;
        java.util.Set<java.lang.reflect.Type> typeSet60 = springMvcApiReader26.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet60);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter62 = springMvcApiReader2.LOG;
        io.swagger.annotations.Api api63 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<io.swagger.models.SecurityRequirement> securityRequirementList64 = springMvcApiReader2.getSecurityRequirements(api63);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/hi!" + "'", str16, "/hi!");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(typeArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(annotationArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(typeSet35);
        org.junit.Assert.assertNotNull(typeArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(annotationArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(typeSet56);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNull(swagger59);
        org.junit.Assert.assertNotNull(typeSet60);
        org.junit.Assert.assertNull(logAdapter62);
    }

    @Test
    public void test02563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02563");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader2.parseOperationPath("hi!", strMap15);
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.Class<?> wildcardClass20 = springMvcApiReader19.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass20);
        io.swagger.models.Swagger swagger22 = null;
        springMvcApiReader2.swagger = swagger22;
        io.swagger.models.Swagger swagger24 = springMvcApiReader2.swagger;
        java.util.Set<java.lang.reflect.Type> typeSet25 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger26 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter27 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader28 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger26, logAdapter27);
        java.lang.reflect.Type[] typeArray29 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet30 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet30, typeArray29);
        springMvcApiReader28.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet30);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = springMvcApiReader28.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap35 = null;
        java.lang.String str36 = springMvcApiReader28.parseOperationPath("", strMap35);
        io.swagger.models.Swagger swagger37 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter38 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader39 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger37, logAdapter38);
        java.lang.Class<?> wildcardClass40 = springMvcApiReader39.getClass();
        java.lang.reflect.Type[] typeArray41 = new java.lang.reflect.Type[] { wildcardClass40 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet42 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet42, typeArray41);
        springMvcApiReader28.typesToSkip = typeSet42;
        io.swagger.models.Swagger swagger45 = springMvcApiReader28.swagger;
        java.lang.Class<?> wildcardClass46 = springMvcApiReader28.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass46);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter48 = springMvcApiReader2.LOG;
        io.swagger.annotations.Api api49 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<io.swagger.models.SecurityRequirement> securityRequirementList50 = springMvcApiReader2.getSecurityRequirements(api49);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/hi!" + "'", str16, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNull(swagger24);
        org.junit.Assert.assertNotNull(typeSet25);
        org.junit.Assert.assertNotNull(typeArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(logAdapter33);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(typeArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(swagger45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNull(logAdapter48);
    }

    @Test
    public void test02564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02564");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader2.parseOperationPath("hi!", strMap15);
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.Class<?> wildcardClass20 = springMvcApiReader19.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass20);
        io.swagger.models.Swagger swagger22 = null;
        springMvcApiReader2.swagger = swagger22;
        io.swagger.models.Swagger swagger24 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter25 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader26 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger24, logAdapter25);
        java.lang.reflect.Type type27 = null;
        springMvcApiReader26.addTypeToSkippedTypes(type27);
        java.util.Set<java.lang.reflect.Type> typeSet29 = springMvcApiReader26.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet30 = springMvcApiReader26.getTypesToSkip();
        io.swagger.models.Swagger swagger31 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter32 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader33 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger31, logAdapter32);
        java.lang.reflect.Type[] typeArray34 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet35 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet35, typeArray34);
        springMvcApiReader33.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet35);
        io.swagger.models.Swagger swagger38 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter39 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader40 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger38, logAdapter39);
        java.lang.reflect.Type[] typeArray41 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet42 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet42, typeArray41);
        springMvcApiReader40.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet42);
        springMvcApiReader33.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet42);
        springMvcApiReader26.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet42);
        java.lang.Class<?> wildcardClass47 = typeSet42.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass47);
        io.swagger.models.Swagger swagger49 = springMvcApiReader2.swagger;
        com.github.kongchen.swagger.docgen.spring.SpringResource springResource50 = null;
        // The following exception was thrown during execution in test generation
        try {
            io.swagger.models.Swagger swagger51 = springMvcApiReader2.read(springResource50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/hi!" + "'", str16, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(typeSet29);
        org.junit.Assert.assertNotNull(typeSet30);
        org.junit.Assert.assertNotNull(typeArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(typeArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNull(swagger49);
    }

    @Test
    public void test02565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02565");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type type18 = null;
        springMvcApiReader17.addTypeToSkippedTypes(type18);
        java.util.Set<java.lang.reflect.Type> typeSet20 = springMvcApiReader17.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet20);
        java.util.Set<java.lang.reflect.Type> typeSet22 = springMvcApiReader2.typesToSkip;
        io.swagger.annotations.Api api24 = null;
        boolean boolean25 = springMvcApiReader2.canReadApi(true, api24);
        io.swagger.annotations.Api api26 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.lang.String> strSet27 = springMvcApiReader2.extractTags(api26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeSet20);
        org.junit.Assert.assertNotNull(typeSet22);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test02566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02566");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        java.util.Set<java.lang.reflect.Type> typeSet5 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet6 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger14 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter15 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader16 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger14, logAdapter15);
        java.lang.reflect.Type[] typeArray17 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet18 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet18, typeArray17);
        springMvcApiReader16.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet18);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet18);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet18);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = null;
        springMvcApiReader2.LOG = logAdapter23;
        io.swagger.models.Operation operation25 = null;
        io.swagger.annotations.ApiOperation apiOperation26 = null;
        springMvcApiReader2.updateTagsForOperation(operation25, apiOperation26);
        java.util.Set<java.lang.reflect.Type> typeSet28 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet29 = springMvcApiReader2.typesToSkip;
        java.lang.Class<?> wildcardClass30 = springMvcApiReader2.getClass();
        org.junit.Assert.assertNotNull(typeSet5);
        org.junit.Assert.assertNotNull(typeSet6);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(typeSet28);
        org.junit.Assert.assertNotNull(typeSet29);
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test02567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02567");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.models.Swagger swagger11 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger12 = springMvcApiReader2.swagger;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter13 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger14 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter15 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader16 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger14, logAdapter15);
        java.lang.reflect.Type[] typeArray17 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet18 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet18, typeArray17);
        springMvcApiReader16.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet18);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter21 = springMvcApiReader16.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap23 = null;
        java.lang.String str24 = springMvcApiReader16.parseOperationPath("", strMap23);
        io.swagger.annotations.Api api26 = null;
        boolean boolean27 = springMvcApiReader16.canReadApi(false, api26);
        java.util.Map<java.lang.String, java.lang.String> strMap29 = null;
        java.lang.String str30 = springMvcApiReader16.parseOperationPath("hi!", strMap29);
        io.swagger.models.Swagger swagger31 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter32 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader33 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger31, logAdapter32);
        java.lang.Class<?> wildcardClass34 = springMvcApiReader33.getClass();
        springMvcApiReader16.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass34);
        io.swagger.models.Swagger swagger36 = null;
        springMvcApiReader16.swagger = swagger36;
        io.swagger.models.Swagger swagger38 = springMvcApiReader16.swagger;
        io.swagger.models.Swagger swagger39 = springMvcApiReader16.swagger;
        io.swagger.models.Swagger swagger40 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter41 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader42 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger40, logAdapter41);
        java.lang.reflect.Type[] typeArray43 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet44 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet44, typeArray43);
        springMvcApiReader42.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet44);
        java.util.Set<java.lang.reflect.Type> typeSet47 = springMvcApiReader42.typesToSkip;
        springMvcApiReader42.updateExtensionChain();
        io.swagger.models.Swagger swagger49 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter50 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader51 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger49, logAdapter50);
        java.lang.Class<?> wildcardClass52 = springMvcApiReader51.getClass();
        springMvcApiReader42.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        springMvcApiReader16.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        io.swagger.models.Swagger swagger55 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter56 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader57 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger55, logAdapter56);
        java.lang.reflect.Type[] typeArray58 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet59 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet59, typeArray58);
        springMvcApiReader57.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet59);
        java.lang.annotation.Annotation[] annotationArray62 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList63 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList63, annotationArray62);
        boolean boolean65 = springMvcApiReader57.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList63);
        java.util.Set<java.lang.reflect.Type> typeSet66 = springMvcApiReader57.typesToSkip;
        springMvcApiReader57.updateExtensionChain();
        io.swagger.models.Operation operation68 = null;
        io.swagger.annotations.ApiOperation apiOperation69 = null;
        springMvcApiReader57.updateTagsForOperation(operation68, apiOperation69);
        io.swagger.annotations.Api api72 = null;
        boolean boolean73 = springMvcApiReader57.canReadApi(true, api72);
        io.swagger.models.Swagger swagger74 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter75 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader76 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger74, logAdapter75);
        java.lang.reflect.Type[] typeArray77 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet78 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet78, typeArray77);
        springMvcApiReader76.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet78);
        java.lang.annotation.Annotation[] annotationArray81 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList82 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList82, annotationArray81);
        boolean boolean84 = springMvcApiReader76.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList82);
        io.swagger.models.Swagger swagger85 = null;
        springMvcApiReader76.swagger = swagger85;
        java.util.Set<java.lang.reflect.Type> typeSet87 = springMvcApiReader76.getTypesToSkip();
        java.lang.Class<?> wildcardClass88 = springMvcApiReader76.getClass();
        java.lang.annotation.Annotation[] annotationArray89 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList90 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean91 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList90, annotationArray89);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList92 = springMvcApiReader57.getParameters((java.lang.reflect.Type) wildcardClass88, (java.util.List<java.lang.annotation.Annotation>) annotationList90);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList93 = springMvcApiReader2.getParameters((java.lang.reflect.Type) wildcardClass52, (java.util.List<java.lang.annotation.Annotation>) annotationList90);
        java.util.Set<java.lang.reflect.Type> typeSet94 = springMvcApiReader2.getTypesToSkip();
        java.lang.reflect.Method method95 = null;
        io.swagger.models.Operation operation96 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.readImplicitParameters(method95, operation96);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(swagger11);
        org.junit.Assert.assertNull(swagger12);
        org.junit.Assert.assertNull(logAdapter13);
        org.junit.Assert.assertNotNull(typeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(logAdapter21);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "/hi!" + "'", str30, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNull(swagger38);
        org.junit.Assert.assertNull(swagger39);
        org.junit.Assert.assertNotNull(typeArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(typeSet47);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(typeArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(annotationArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(typeSet66);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(typeArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(annotationArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(typeSet87);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertNotNull(annotationArray89);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(parameterList92);
        org.junit.Assert.assertNotNull(parameterList93);
        org.junit.Assert.assertNotNull(typeSet94);
    }

    @Test
    public void test02568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02568");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.util.Map<java.lang.String, java.lang.String> strMap4 = null;
        java.lang.String str5 = springMvcApiReader2.parseOperationPath("/hi!", strMap4);
        java.util.Set<java.lang.reflect.Type> typeSet6 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type type10 = null;
        springMvcApiReader9.addTypeToSkippedTypes(type10);
        java.util.Set<java.lang.reflect.Type> typeSet12 = springMvcApiReader9.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet13 = springMvcApiReader9.getTypesToSkip();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter14 = springMvcApiReader9.LOG;
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type[] typeArray18 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet19 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet19, typeArray18);
        springMvcApiReader17.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet19);
        io.swagger.models.Swagger swagger22 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader24 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger22, logAdapter23);
        java.lang.reflect.Type[] typeArray25 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet26 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet26, typeArray25);
        springMvcApiReader24.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet26);
        springMvcApiReader17.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet26);
        io.swagger.models.Swagger swagger30 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter31 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader32 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger30, logAdapter31);
        java.lang.reflect.Type[] typeArray33 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet34 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet34, typeArray33);
        springMvcApiReader32.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet34);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter37 = springMvcApiReader32.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap39 = null;
        java.lang.String str40 = springMvcApiReader32.parseOperationPath("", strMap39);
        io.swagger.annotations.Api api42 = null;
        boolean boolean43 = springMvcApiReader32.canReadApi(false, api42);
        java.util.Map<java.lang.String, java.lang.String> strMap45 = null;
        java.lang.String str46 = springMvcApiReader32.parseOperationPath("hi!", strMap45);
        io.swagger.models.Swagger swagger47 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter48 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader49 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger47, logAdapter48);
        java.lang.Class<?> wildcardClass50 = springMvcApiReader49.getClass();
        springMvcApiReader32.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass50);
        springMvcApiReader17.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass50);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter53 = springMvcApiReader17.LOG;
        io.swagger.models.Swagger swagger54 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter55 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader56 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger54, logAdapter55);
        java.lang.reflect.Type[] typeArray57 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet58 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet58, typeArray57);
        springMvcApiReader56.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet58);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter61 = springMvcApiReader56.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap63 = null;
        java.lang.String str64 = springMvcApiReader56.parseOperationPath("", strMap63);
        java.lang.reflect.Type[] typeArray65 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList66 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList66, typeArray65);
        springMvcApiReader56.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList66);
        springMvcApiReader17.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList66);
        springMvcApiReader9.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList66);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList66);
        com.github.kongchen.swagger.docgen.spring.SpringResource springResource72 = null;
        // The following exception was thrown during execution in test generation
        try {
            io.swagger.models.Swagger swagger73 = springMvcApiReader2.read(springResource72);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "/hi!" + "'", str5, "/hi!");
        org.junit.Assert.assertNotNull(typeSet6);
        org.junit.Assert.assertNotNull(typeSet12);
        org.junit.Assert.assertNotNull(typeSet13);
        org.junit.Assert.assertNull(logAdapter14);
        org.junit.Assert.assertNotNull(typeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(typeArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(typeArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(logAdapter37);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "/hi!" + "'", str46, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNull(logAdapter53);
        org.junit.Assert.assertNotNull(typeArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(logAdapter61);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "" + "'", str64, "");
        org.junit.Assert.assertNotNull(typeArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
    }

    @Test
    public void test02569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02569");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        java.util.Set<java.lang.reflect.Type> typeSet5 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet6 = springMvcApiReader2.getTypesToSkip();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = null;
        java.lang.String str9 = springMvcApiReader2.parseOperationPath("", strMap8);
        io.swagger.models.Operation operation10 = null;
        io.swagger.annotations.ApiOperation apiOperation11 = null;
        springMvcApiReader2.updateTagsForOperation(operation10, apiOperation11);
        io.swagger.annotations.Api api14 = null;
        boolean boolean15 = springMvcApiReader2.canReadApi(false, api14);
        io.swagger.models.Swagger swagger16 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter17 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader18 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger16, logAdapter17);
        java.lang.reflect.Type[] typeArray19 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet20 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet20, typeArray19);
        springMvcApiReader18.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet20);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = springMvcApiReader18.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap25 = null;
        java.lang.String str26 = springMvcApiReader18.parseOperationPath("", strMap25);
        io.swagger.annotations.Api api28 = null;
        boolean boolean29 = springMvcApiReader18.canReadApi(false, api28);
        java.util.Map<java.lang.String, java.lang.String> strMap31 = null;
        java.lang.String str32 = springMvcApiReader18.parseOperationPath("hi!", strMap31);
        java.util.Map<java.lang.String, java.lang.String> strMap34 = null;
        java.lang.String str35 = springMvcApiReader18.parseOperationPath("hi!", strMap34);
        io.swagger.models.Operation operation36 = null;
        io.swagger.annotations.ApiOperation apiOperation37 = null;
        springMvcApiReader18.updateTagsForOperation(operation36, apiOperation37);
        java.lang.Class<?> wildcardClass39 = springMvcApiReader18.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass39);
        java.util.Set<java.lang.reflect.Type> typeSet41 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Operation operation42 = null;
        io.swagger.annotations.ApiOperation apiOperation43 = null;
        springMvcApiReader2.updateTagsForOperation(operation42, apiOperation43);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger46 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter47 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader48 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger46, logAdapter47);
        java.lang.reflect.Type[] typeArray49 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet50 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet50, typeArray49);
        springMvcApiReader48.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet50);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter53 = springMvcApiReader48.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap55 = null;
        java.lang.String str56 = springMvcApiReader48.parseOperationPath("", strMap55);
        io.swagger.annotations.Api api58 = null;
        boolean boolean59 = springMvcApiReader48.canReadApi(false, api58);
        java.util.Map<java.lang.String, java.lang.String> strMap61 = null;
        java.lang.String str62 = springMvcApiReader48.parseOperationPath("hi!", strMap61);
        io.swagger.models.Swagger swagger63 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter64 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader65 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger63, logAdapter64);
        java.lang.Class<?> wildcardClass66 = springMvcApiReader65.getClass();
        springMvcApiReader48.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass66);
        io.swagger.models.Swagger swagger68 = null;
        springMvcApiReader48.swagger = swagger68;
        io.swagger.models.Swagger swagger70 = springMvcApiReader48.swagger;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter71 = null;
        springMvcApiReader48.LOG = logAdapter71;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter73 = null;
        springMvcApiReader48.LOG = logAdapter73;
        java.util.Set<java.lang.reflect.Type> typeSet75 = springMvcApiReader48.getTypesToSkip();
        springMvcApiReader2.typesToSkip = typeSet75;
        io.swagger.models.Swagger swagger77 = springMvcApiReader2.swagger;
        io.swagger.annotations.ApiOperation apiOperation78 = null;
        io.swagger.models.Operation operation79 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateOperationProtocols(apiOperation78, operation79);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeSet5);
        org.junit.Assert.assertNotNull(typeSet6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(typeArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(logAdapter23);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "/hi!" + "'", str32, "/hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "/hi!" + "'", str35, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(typeSet41);
        org.junit.Assert.assertNotNull(typeArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNull(logAdapter53);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "/hi!" + "'", str62, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNull(swagger70);
        org.junit.Assert.assertNotNull(typeSet75);
        org.junit.Assert.assertNull(swagger77);
    }

    @Test
    public void test02570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02570");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        java.lang.reflect.Type[] typeArray11 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList12 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList12, typeArray11);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList12);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type[] typeArray18 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet19 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet19, typeArray18);
        springMvcApiReader17.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet19);
        java.lang.annotation.Annotation[] annotationArray22 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList23 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList23, annotationArray22);
        boolean boolean25 = springMvcApiReader17.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList23);
        boolean boolean26 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList23);
        io.swagger.models.Swagger swagger27 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter28 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader29 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger27, logAdapter28);
        java.lang.reflect.Type[] typeArray30 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet31 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet31, typeArray30);
        springMvcApiReader29.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet31);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter34 = springMvcApiReader29.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap36 = null;
        java.lang.String str37 = springMvcApiReader29.parseOperationPath("", strMap36);
        java.lang.reflect.Type[] typeArray38 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList39 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList39, typeArray38);
        springMvcApiReader29.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList39);
        java.lang.String[] strArray42 = new java.lang.String[] {};
        java.lang.String[] strArray46 = new java.lang.String[] { "hi!", "", "hi!" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap47 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray48 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList49 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList49, securityRequirementArray48);
        io.swagger.models.Operation operation51 = null;
        springMvcApiReader29.updateOperation(strArray42, strArray46, strMap47, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList49, operation51);
        java.util.Set<java.lang.reflect.Type> typeSet53 = springMvcApiReader29.typesToSkip;
        springMvcApiReader2.typesToSkip = typeSet53;
        io.swagger.annotations.Api api55 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.lang.String> strSet56 = springMvcApiReader2.extractTags(api55);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(typeArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(typeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(annotationArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(typeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(logAdapter34);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertNotNull(typeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(securityRequirementArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(typeSet53);
    }

    @Test
    public void test02571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02571");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.util.Set<java.lang.reflect.Type> typeSet7 = springMvcApiReader2.typesToSkip;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger9 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter10 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader11 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger9, logAdapter10);
        java.lang.reflect.Type[] typeArray12 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet13 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet13, typeArray12);
        springMvcApiReader11.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet13);
        java.lang.annotation.Annotation[] annotationArray16 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList17 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList17, annotationArray16);
        boolean boolean19 = springMvcApiReader11.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList17);
        io.swagger.models.Swagger swagger20 = null;
        springMvcApiReader11.swagger = swagger20;
        io.swagger.models.Swagger swagger22 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader24 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger22, logAdapter23);
        java.lang.reflect.Type[] typeArray25 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet26 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet26, typeArray25);
        springMvcApiReader24.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet26);
        java.lang.annotation.Annotation[] annotationArray29 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList30 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList30, annotationArray29);
        boolean boolean32 = springMvcApiReader24.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList30);
        io.swagger.models.Swagger swagger33 = null;
        springMvcApiReader24.swagger = swagger33;
        java.lang.annotation.Annotation[] annotationArray35 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList36 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList36, annotationArray35);
        boolean boolean38 = springMvcApiReader24.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList36);
        boolean boolean39 = springMvcApiReader11.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList36);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter40 = springMvcApiReader11.LOG;
        io.swagger.models.Swagger swagger41 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter42 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader43 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger41, logAdapter42);
        java.util.Map<java.lang.String, java.lang.String> strMap45 = null;
        java.lang.String str46 = springMvcApiReader43.parseOperationPath("/hi!", strMap45);
        java.util.Set<java.lang.reflect.Type> typeSet47 = springMvcApiReader43.getTypesToSkip();
        springMvcApiReader11.setTypesToSkip(typeSet47);
        springMvcApiReader2.typesToSkip = typeSet47;
        io.swagger.models.Operation operation50 = null;
        io.swagger.annotations.ApiOperation apiOperation51 = null;
        springMvcApiReader2.updateTagsForOperation(operation50, apiOperation51);
        java.util.Set<java.lang.reflect.Type> typeSet53 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger54 = springMvcApiReader2.swagger;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter55 = null;
        springMvcApiReader2.LOG = logAdapter55;
        io.swagger.annotations.ApiOperation apiOperation57 = null;
        io.swagger.models.Operation operation58 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateOperationProtocols(apiOperation57, operation58);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeSet7);
        org.junit.Assert.assertNotNull(typeArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(annotationArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(typeArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(annotationArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(annotationArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(logAdapter40);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "/hi!" + "'", str46, "/hi!");
        org.junit.Assert.assertNotNull(typeSet47);
        org.junit.Assert.assertNotNull(typeSet53);
        org.junit.Assert.assertNull(swagger54);
    }

    @Test
    public void test02572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02572");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type[] typeArray18 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet19 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet19, typeArray18);
        springMvcApiReader17.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet19);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = springMvcApiReader17.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap24 = null;
        java.lang.String str25 = springMvcApiReader17.parseOperationPath("", strMap24);
        io.swagger.annotations.Api api27 = null;
        boolean boolean28 = springMvcApiReader17.canReadApi(false, api27);
        java.util.Map<java.lang.String, java.lang.String> strMap30 = null;
        java.lang.String str31 = springMvcApiReader17.parseOperationPath("hi!", strMap30);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.Class<?> wildcardClass35 = springMvcApiReader34.getClass();
        springMvcApiReader17.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger39 = null;
        springMvcApiReader2.swagger = swagger39;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger42 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter43 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader44 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger42, logAdapter43);
        java.lang.reflect.Type type45 = null;
        springMvcApiReader44.addTypeToSkippedTypes(type45);
        java.util.Set<java.lang.reflect.Type> typeSet47 = springMvcApiReader44.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet48 = springMvcApiReader44.getTypesToSkip();
        java.util.Map<java.lang.String, java.lang.String> strMap50 = null;
        java.lang.String str51 = springMvcApiReader44.parseOperationPath("", strMap50);
        io.swagger.models.Operation operation52 = null;
        io.swagger.annotations.ApiOperation apiOperation53 = null;
        springMvcApiReader44.updateTagsForOperation(operation52, apiOperation53);
        io.swagger.annotations.Api api56 = null;
        boolean boolean57 = springMvcApiReader44.canReadApi(false, api56);
        io.swagger.models.Swagger swagger58 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter59 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader60 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger58, logAdapter59);
        java.lang.reflect.Type[] typeArray61 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet62 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet62, typeArray61);
        springMvcApiReader60.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet62);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter65 = springMvcApiReader60.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap67 = null;
        java.lang.String str68 = springMvcApiReader60.parseOperationPath("", strMap67);
        io.swagger.annotations.Api api70 = null;
        boolean boolean71 = springMvcApiReader60.canReadApi(false, api70);
        java.util.Map<java.lang.String, java.lang.String> strMap73 = null;
        java.lang.String str74 = springMvcApiReader60.parseOperationPath("hi!", strMap73);
        java.util.Map<java.lang.String, java.lang.String> strMap76 = null;
        java.lang.String str77 = springMvcApiReader60.parseOperationPath("hi!", strMap76);
        io.swagger.models.Operation operation78 = null;
        io.swagger.annotations.ApiOperation apiOperation79 = null;
        springMvcApiReader60.updateTagsForOperation(operation78, apiOperation79);
        java.lang.Class<?> wildcardClass81 = springMvcApiReader60.getClass();
        springMvcApiReader44.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass81);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass81);
        java.util.Set<java.lang.reflect.Type> typeSet84 = springMvcApiReader2.getTypesToSkip();
        io.swagger.annotations.Api api85 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<io.swagger.models.SecurityRequirement> securityRequirementList86 = springMvcApiReader2.getSecurityRequirements(api85);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(logAdapter22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "/hi!" + "'", str31, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(typeSet47);
        org.junit.Assert.assertNotNull(typeSet48);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(typeArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNull(logAdapter65);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "" + "'", str68, "");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "/hi!" + "'", str74, "/hi!");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "/hi!" + "'", str77, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertNotNull(typeSet84);
    }

    @Test
    public void test02573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02573");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type type18 = null;
        springMvcApiReader17.addTypeToSkippedTypes(type18);
        java.util.Set<java.lang.reflect.Type> typeSet20 = springMvcApiReader17.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet20);
        io.swagger.models.Swagger swagger22 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader24 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger22, logAdapter23);
        java.lang.reflect.Type[] typeArray25 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet26 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet26, typeArray25);
        springMvcApiReader24.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet26);
        java.lang.annotation.Annotation[] annotationArray29 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList30 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList30, annotationArray29);
        boolean boolean32 = springMvcApiReader24.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList30);
        io.swagger.models.Swagger swagger33 = null;
        springMvcApiReader24.swagger = swagger33;
        java.util.Set<java.lang.reflect.Type> typeSet35 = springMvcApiReader24.getTypesToSkip();
        springMvcApiReader2.setTypesToSkip(typeSet35);
        io.swagger.models.Swagger swagger37 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger38 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter39 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader40 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger38, logAdapter39);
        java.lang.reflect.Type type41 = null;
        springMvcApiReader40.addTypeToSkippedTypes(type41);
        java.util.Set<java.lang.reflect.Type> typeSet43 = springMvcApiReader40.typesToSkip;
        io.swagger.models.Swagger swagger44 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter45 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader46 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger44, logAdapter45);
        java.lang.reflect.Type[] typeArray47 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet48 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet48, typeArray47);
        springMvcApiReader46.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet48);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter51 = springMvcApiReader46.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap53 = null;
        java.lang.String str54 = springMvcApiReader46.parseOperationPath("", strMap53);
        io.swagger.annotations.Api api56 = null;
        boolean boolean57 = springMvcApiReader46.canReadApi(false, api56);
        java.util.Map<java.lang.String, java.lang.String> strMap59 = null;
        java.lang.String str60 = springMvcApiReader46.parseOperationPath("hi!", strMap59);
        io.swagger.models.Swagger swagger61 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter62 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader63 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger61, logAdapter62);
        java.lang.Class<?> wildcardClass64 = springMvcApiReader63.getClass();
        springMvcApiReader46.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass64);
        java.util.Map<java.lang.String, java.lang.String> strMap67 = null;
        java.lang.String str68 = springMvcApiReader46.parseOperationPath("/hi!", strMap67);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray69 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap70 = springMvcApiReader46.parseResponseHeaders(responseHeaderArray69);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap71 = springMvcApiReader40.parseResponseHeaders(responseHeaderArray69);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap72 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray69);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.annotations.Api api75 = null;
        boolean boolean76 = springMvcApiReader2.canReadApi(false, api75);
        com.github.kongchen.swagger.docgen.spring.SpringResource springResource77 = null;
        // The following exception was thrown during execution in test generation
        try {
            io.swagger.models.Swagger swagger78 = springMvcApiReader2.read(springResource77);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeSet20);
        org.junit.Assert.assertNotNull(typeArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(annotationArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(typeSet35);
        org.junit.Assert.assertNull(swagger37);
        org.junit.Assert.assertNotNull(typeSet43);
        org.junit.Assert.assertNotNull(typeArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(logAdapter51);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "/hi!" + "'", str60, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "/hi!" + "'", str68, "/hi!");
        org.junit.Assert.assertNotNull(responseHeaderArray69);
        org.junit.Assert.assertNull(strMap70);
        org.junit.Assert.assertNull(strMap71);
        org.junit.Assert.assertNull(strMap72);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
    }

    @Test
    public void test02574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02574");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader2.parseOperationPath("hi!", strMap15);
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.Class<?> wildcardClass20 = springMvcApiReader19.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass20);
        java.util.Map<java.lang.String, java.lang.String> strMap23 = null;
        java.lang.String str24 = springMvcApiReader2.parseOperationPath("/hi!", strMap23);
        io.swagger.models.Swagger swagger25 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter26 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader27 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger25, logAdapter26);
        java.lang.reflect.Type[] typeArray28 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet29 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet29, typeArray28);
        springMvcApiReader27.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet29);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet29);
        io.swagger.models.Operation operation33 = null;
        io.swagger.annotations.ApiOperation apiOperation34 = null;
        springMvcApiReader2.updateTagsForOperation(operation33, apiOperation34);
        io.swagger.annotations.Api api37 = null;
        boolean boolean38 = springMvcApiReader2.canReadApi(false, api37);
        com.github.kongchen.swagger.docgen.spring.SpringResource springResource39 = null;
        // The following exception was thrown during execution in test generation
        try {
            io.swagger.models.Swagger swagger40 = springMvcApiReader2.read(springResource39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/hi!" + "'", str16, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "/hi!" + "'", str24, "/hi!");
        org.junit.Assert.assertNotNull(typeArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test02575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02575");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.models.Swagger swagger11 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter12 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader13 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger11, logAdapter12);
        java.lang.Class<?> wildcardClass14 = springMvcApiReader13.getClass();
        java.lang.reflect.Type[] typeArray15 = new java.lang.reflect.Type[] { wildcardClass14 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet16 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet16, typeArray15);
        springMvcApiReader2.typesToSkip = typeSet16;
        java.util.Set<java.lang.reflect.Type> typeSet19 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger20 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter21 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader22 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger20, logAdapter21);
        java.lang.reflect.Type[] typeArray23 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet24 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet24, typeArray23);
        springMvcApiReader22.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet24);
        io.swagger.models.Swagger swagger27 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter28 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader29 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger27, logAdapter28);
        java.lang.reflect.Type[] typeArray30 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet31 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet31, typeArray30);
        springMvcApiReader29.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet31);
        springMvcApiReader22.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet31);
        io.swagger.models.Swagger swagger35 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter36 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader37 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger35, logAdapter36);
        java.lang.reflect.Type[] typeArray38 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet39 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet39, typeArray38);
        springMvcApiReader37.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet39);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter42 = springMvcApiReader37.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap44 = null;
        java.lang.String str45 = springMvcApiReader37.parseOperationPath("", strMap44);
        io.swagger.annotations.Api api47 = null;
        boolean boolean48 = springMvcApiReader37.canReadApi(false, api47);
        java.util.Map<java.lang.String, java.lang.String> strMap50 = null;
        java.lang.String str51 = springMvcApiReader37.parseOperationPath("hi!", strMap50);
        io.swagger.models.Swagger swagger52 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter53 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader54 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger52, logAdapter53);
        java.lang.Class<?> wildcardClass55 = springMvcApiReader54.getClass();
        springMvcApiReader37.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass55);
        springMvcApiReader22.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass55);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter58 = springMvcApiReader22.LOG;
        io.swagger.models.Swagger swagger59 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter60 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader61 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger59, logAdapter60);
        java.lang.reflect.Type[] typeArray62 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet63 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet63, typeArray62);
        springMvcApiReader61.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet63);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter66 = springMvcApiReader61.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap68 = null;
        java.lang.String str69 = springMvcApiReader61.parseOperationPath("", strMap68);
        java.lang.reflect.Type[] typeArray70 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList71 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList71, typeArray70);
        springMvcApiReader61.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList71);
        springMvcApiReader22.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList71);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList71);
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap76 = null;
        io.swagger.annotations.Api api77 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, io.swagger.models.Tag> strMap78 = springMvcApiReader2.updateTagsForApi(strMap76, api77);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(typeArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(typeSet19);
        org.junit.Assert.assertNotNull(typeArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(typeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(typeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(logAdapter42);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "/hi!" + "'", str51, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNull(logAdapter58);
        org.junit.Assert.assertNotNull(typeArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNull(logAdapter66);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "" + "'", str69, "");
        org.junit.Assert.assertNotNull(typeArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
    }

    @Test
    public void test02576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02576");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.lang.annotation.Annotation[] annotationArray7 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList8 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList8, annotationArray7);
        boolean boolean10 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList8);
        io.swagger.models.Swagger swagger11 = null;
        springMvcApiReader2.swagger = swagger11;
        io.swagger.annotations.ResponseHeader[] responseHeaderArray13 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap14 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray13);
        io.swagger.annotations.Api api16 = null;
        boolean boolean17 = springMvcApiReader2.canReadApi(false, api16);
        io.swagger.models.Operation operation18 = null;
        io.swagger.annotations.ApiOperation apiOperation19 = null;
        springMvcApiReader2.updateTagsForOperation(operation18, apiOperation19);
        io.swagger.annotations.Api api22 = null;
        boolean boolean23 = springMvcApiReader2.canReadApi(true, api22);
        io.swagger.models.Swagger swagger24 = null;
        springMvcApiReader2.swagger = swagger24;
        io.swagger.models.Operation operation26 = null;
        io.swagger.annotations.ApiResponses apiResponses27 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateApiResponse(operation26, apiResponses27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(annotationArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(responseHeaderArray13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test02577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02577");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader2.parseOperationPath("hi!", strMap15);
        io.swagger.models.Operation operation17 = null;
        io.swagger.annotations.ApiOperation apiOperation18 = null;
        springMvcApiReader2.updateTagsForOperation(operation17, apiOperation18);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.annotations.Api api22 = null;
        boolean boolean23 = springMvcApiReader2.canReadApi(true, api22);
        io.swagger.models.Swagger swagger24 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger25 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter26 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader27 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger25, logAdapter26);
        java.lang.reflect.Type[] typeArray28 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet29 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet29, typeArray28);
        springMvcApiReader27.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet29);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter32 = springMvcApiReader27.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap34 = null;
        java.lang.String str35 = springMvcApiReader27.parseOperationPath("", strMap34);
        io.swagger.models.Swagger swagger36 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter37 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader38 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger36, logAdapter37);
        java.lang.Class<?> wildcardClass39 = springMvcApiReader38.getClass();
        java.lang.reflect.Type[] typeArray40 = new java.lang.reflect.Type[] { wildcardClass39 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet41 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet41, typeArray40);
        springMvcApiReader27.typesToSkip = typeSet41;
        java.util.Set<java.lang.reflect.Type> typeSet44 = springMvcApiReader27.getTypesToSkip();
        io.swagger.models.Swagger swagger45 = null;
        springMvcApiReader27.swagger = swagger45;
        io.swagger.models.Swagger swagger47 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter48 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader49 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger47, logAdapter48);
        java.lang.reflect.Type[] typeArray50 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet51 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet51, typeArray50);
        springMvcApiReader49.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet51);
        java.util.Set<java.lang.reflect.Type> typeSet54 = springMvcApiReader49.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet55 = springMvcApiReader49.getTypesToSkip();
        springMvcApiReader27.setTypesToSkip(typeSet55);
        java.lang.Class<?> wildcardClass57 = typeSet55.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass57);
        io.swagger.models.Swagger swagger59 = null;
        springMvcApiReader2.swagger = swagger59;
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap61 = null;
        io.swagger.annotations.Api api62 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, io.swagger.models.Tag> strMap63 = springMvcApiReader2.updateTagsForApi(strMap61, api62);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/hi!" + "'", str16, "/hi!");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(swagger24);
        org.junit.Assert.assertNotNull(typeArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(logAdapter32);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(typeArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(typeSet44);
        org.junit.Assert.assertNotNull(typeArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(typeSet54);
        org.junit.Assert.assertNotNull(typeSet55);
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test02578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02578");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        java.lang.reflect.Type[] typeArray11 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList12 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList12, typeArray11);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList12);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!", "", "hi!" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap20 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray21 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList22 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList22, securityRequirementArray21);
        io.swagger.models.Operation operation24 = null;
        springMvcApiReader2.updateOperation(strArray15, strArray19, strMap20, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList22, operation24);
        springMvcApiReader2.updateExtensionChain();
        springMvcApiReader2.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet28 = springMvcApiReader2.typesToSkip;
        com.github.kongchen.swagger.docgen.spring.SpringResource springResource29 = null;
        // The following exception was thrown during execution in test generation
        try {
            io.swagger.models.Swagger swagger30 = springMvcApiReader2.read(springResource29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(typeArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(securityRequirementArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(typeSet28);
    }

    @Test
    public void test02579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02579");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader2.parseOperationPath("hi!", strMap15);
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.Class<?> wildcardClass20 = springMvcApiReader19.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass20);
        io.swagger.models.Swagger swagger22 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader24 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger22, logAdapter23);
        java.lang.reflect.Type[] typeArray25 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet26 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet26, typeArray25);
        springMvcApiReader24.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet26);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter29 = springMvcApiReader24.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap31 = null;
        java.lang.String str32 = springMvcApiReader24.parseOperationPath("", strMap31);
        java.lang.reflect.Type[] typeArray33 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList34 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList34, typeArray33);
        springMvcApiReader24.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList34);
        java.lang.String[] strArray37 = new java.lang.String[] {};
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!", "", "hi!" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap42 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray43 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList44 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList44, securityRequirementArray43);
        io.swagger.models.Operation operation46 = null;
        springMvcApiReader24.updateOperation(strArray37, strArray41, strMap42, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList44, operation46);
        java.lang.String[] strArray54 = new java.lang.String[] { "/hi!", "", "/hi!", "hi!", "hi!", "hi!" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap55 = null;
        io.swagger.models.Swagger swagger56 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter57 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader58 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger56, logAdapter57);
        java.lang.reflect.Type[] typeArray59 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet60 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet60, typeArray59);
        springMvcApiReader58.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet60);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter63 = springMvcApiReader58.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap65 = null;
        java.lang.String str66 = springMvcApiReader58.parseOperationPath("", strMap65);
        java.lang.reflect.Type[] typeArray67 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList68 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList68, typeArray67);
        springMvcApiReader58.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList68);
        java.lang.String[] strArray71 = new java.lang.String[] {};
        java.lang.String[] strArray75 = new java.lang.String[] { "hi!", "", "hi!" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap76 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray77 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList78 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList78, securityRequirementArray77);
        io.swagger.models.Operation operation80 = null;
        springMvcApiReader58.updateOperation(strArray71, strArray75, strMap76, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList78, operation80);
        io.swagger.models.Operation operation82 = null;
        springMvcApiReader2.updateOperation(strArray37, strArray54, strMap55, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList78, operation82);
        io.swagger.models.Swagger swagger84 = null;
        springMvcApiReader2.swagger = swagger84;
        java.util.Map<java.lang.String, java.lang.String> strMap87 = null;
        java.lang.String str88 = springMvcApiReader2.parseOperationPath("hi!", strMap87);
        io.swagger.models.Swagger swagger89 = springMvcApiReader2.swagger;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter90 = null;
        springMvcApiReader2.LOG = logAdapter90;
        java.util.Set<java.lang.reflect.Type> typeSet92 = springMvcApiReader2.typesToSkip;
        io.swagger.models.parameters.Parameter[] parameterArray93 = new io.swagger.models.parameters.Parameter[] {};
        java.util.ArrayList<io.swagger.models.parameters.Parameter> parameterList94 = new java.util.ArrayList<io.swagger.models.parameters.Parameter>();
        boolean boolean95 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.parameters.Parameter>) parameterList94, parameterArray93);
        java.util.Map<java.lang.String, java.lang.String> strMap96 = null;
        io.swagger.models.Operation operation97 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateOperationParameters((java.util.List<io.swagger.models.parameters.Parameter>) parameterList94, strMap96, operation97);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/hi!" + "'", str16, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(typeArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(logAdapter29);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertNotNull(typeArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(securityRequirementArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(typeArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNull(logAdapter63);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "" + "'", str66, "");
        org.junit.Assert.assertNotNull(typeArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertNotNull(securityRequirementArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "/hi!" + "'", str88, "/hi!");
        org.junit.Assert.assertNull(swagger89);
        org.junit.Assert.assertNotNull(typeSet92);
        org.junit.Assert.assertNotNull(parameterArray93);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
    }

    @Test
    public void test02580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02580");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.util.Set<java.lang.reflect.Type> typeSet7 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger8 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader10 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger8, logAdapter9);
        java.lang.reflect.Type[] typeArray11 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet12 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet12, typeArray11);
        springMvcApiReader10.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet12);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter15 = springMvcApiReader10.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap17 = null;
        java.lang.String str18 = springMvcApiReader10.parseOperationPath("", strMap17);
        io.swagger.annotations.Api api20 = null;
        boolean boolean21 = springMvcApiReader10.canReadApi(false, api20);
        java.util.Map<java.lang.String, java.lang.String> strMap23 = null;
        java.lang.String str24 = springMvcApiReader10.parseOperationPath("hi!", strMap23);
        io.swagger.models.Swagger swagger25 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter26 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader27 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger25, logAdapter26);
        java.lang.reflect.Type[] typeArray28 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet29 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet29, typeArray28);
        springMvcApiReader27.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet29);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.reflect.Type[] typeArray35 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet36 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet36, typeArray35);
        springMvcApiReader34.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet36);
        springMvcApiReader27.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet36);
        io.swagger.models.Swagger swagger40 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter41 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader42 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger40, logAdapter41);
        java.lang.reflect.Type[] typeArray43 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet44 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet44, typeArray43);
        springMvcApiReader42.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet44);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter47 = springMvcApiReader42.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap49 = null;
        java.lang.String str50 = springMvcApiReader42.parseOperationPath("", strMap49);
        io.swagger.annotations.Api api52 = null;
        boolean boolean53 = springMvcApiReader42.canReadApi(false, api52);
        java.util.Map<java.lang.String, java.lang.String> strMap55 = null;
        java.lang.String str56 = springMvcApiReader42.parseOperationPath("hi!", strMap55);
        io.swagger.models.Swagger swagger57 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter58 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader59 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger57, logAdapter58);
        java.lang.Class<?> wildcardClass60 = springMvcApiReader59.getClass();
        springMvcApiReader42.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass60);
        springMvcApiReader27.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass60);
        springMvcApiReader10.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass60);
        io.swagger.models.Swagger swagger64 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter65 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader66 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger64, logAdapter65);
        java.lang.reflect.Type[] typeArray67 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet68 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet68, typeArray67);
        springMvcApiReader66.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet68);
        java.lang.annotation.Annotation[] annotationArray71 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList72 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList72, annotationArray71);
        boolean boolean74 = springMvcApiReader66.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList72);
        io.swagger.models.Swagger swagger75 = null;
        springMvcApiReader66.swagger = swagger75;
        java.lang.annotation.Annotation[] annotationArray77 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList78 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList78, annotationArray77);
        boolean boolean80 = springMvcApiReader66.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList78);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList81 = springMvcApiReader2.getParameters((java.lang.reflect.Type) wildcardClass60, (java.util.List<java.lang.annotation.Annotation>) annotationList78);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Operation operation83 = null;
        io.swagger.annotations.ApiResponses apiResponses84 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateApiResponse(operation83, apiResponses84);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeSet7);
        org.junit.Assert.assertNotNull(typeArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(logAdapter15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "/hi!" + "'", str24, "/hi!");
        org.junit.Assert.assertNotNull(typeArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(typeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(typeArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(logAdapter47);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "/hi!" + "'", str56, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(typeArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(annotationArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(annotationArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(parameterList81);
    }

    @Test
    public void test02581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02581");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.models.Swagger swagger11 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter12 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader13 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger11, logAdapter12);
        java.lang.Class<?> wildcardClass14 = springMvcApiReader13.getClass();
        java.lang.reflect.Type[] typeArray15 = new java.lang.reflect.Type[] { wildcardClass14 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet16 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet16, typeArray15);
        springMvcApiReader2.typesToSkip = typeSet16;
        java.util.Set<java.lang.reflect.Type> typeSet19 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger20 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter21 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader22 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger20, logAdapter21);
        java.lang.reflect.Type[] typeArray23 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet24 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet24, typeArray23);
        springMvcApiReader22.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet24);
        java.lang.annotation.Annotation[] annotationArray27 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList28 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList28, annotationArray27);
        boolean boolean30 = springMvcApiReader22.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList28);
        boolean boolean31 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList28);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.reflect.Type[] typeArray35 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet36 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet36, typeArray35);
        springMvcApiReader34.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet36);
        java.util.Set<java.lang.reflect.Type> typeSet39 = springMvcApiReader34.typesToSkip;
        io.swagger.models.Swagger swagger40 = springMvcApiReader34.swagger;
        io.swagger.models.Operation operation41 = null;
        io.swagger.annotations.ApiOperation apiOperation42 = null;
        springMvcApiReader34.updateTagsForOperation(operation41, apiOperation42);
        java.util.Set<java.lang.reflect.Type> typeSet44 = springMvcApiReader34.getTypesToSkip();
        io.swagger.models.Swagger swagger45 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter46 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader47 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger45, logAdapter46);
        java.lang.reflect.Type[] typeArray48 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet49 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet49, typeArray48);
        springMvcApiReader47.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet49);
        java.lang.annotation.Annotation[] annotationArray52 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList53 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList53, annotationArray52);
        boolean boolean55 = springMvcApiReader47.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList53);
        io.swagger.models.Swagger swagger56 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter57 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader58 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger56, logAdapter57);
        java.lang.reflect.Type[] typeArray59 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet60 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet60, typeArray59);
        springMvcApiReader58.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet60);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter63 = springMvcApiReader58.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap65 = null;
        java.lang.String str66 = springMvcApiReader58.parseOperationPath("", strMap65);
        io.swagger.annotations.Api api68 = null;
        boolean boolean69 = springMvcApiReader58.canReadApi(false, api68);
        java.util.Map<java.lang.String, java.lang.String> strMap71 = null;
        java.lang.String str72 = springMvcApiReader58.parseOperationPath("hi!", strMap71);
        io.swagger.models.Swagger swagger73 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter74 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader75 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger73, logAdapter74);
        java.lang.Class<?> wildcardClass76 = springMvcApiReader75.getClass();
        springMvcApiReader58.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass76);
        java.util.Map<java.lang.String, java.lang.String> strMap79 = null;
        java.lang.String str80 = springMvcApiReader58.parseOperationPath("/hi!", strMap79);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray81 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap82 = springMvcApiReader58.parseResponseHeaders(responseHeaderArray81);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap83 = springMvcApiReader47.parseResponseHeaders(responseHeaderArray81);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap84 = springMvcApiReader34.parseResponseHeaders(responseHeaderArray81);
        java.lang.Class<?> wildcardClass85 = responseHeaderArray81.getClass();
        io.swagger.models.Swagger swagger86 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter87 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader88 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger86, logAdapter87);
        java.lang.reflect.Type[] typeArray89 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet90 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean91 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet90, typeArray89);
        springMvcApiReader88.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet90);
        java.lang.annotation.Annotation[] annotationArray93 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList94 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean95 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList94, annotationArray93);
        boolean boolean96 = springMvcApiReader88.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList94);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList97 = springMvcApiReader2.getParameters((java.lang.reflect.Type) wildcardClass85, (java.util.List<java.lang.annotation.Annotation>) annotationList94);
        java.lang.Class<?> wildcardClass98 = springMvcApiReader2.getClass();
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(typeArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(typeSet19);
        org.junit.Assert.assertNotNull(typeArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(annotationArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(typeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(typeSet39);
        org.junit.Assert.assertNull(swagger40);
        org.junit.Assert.assertNotNull(typeSet44);
        org.junit.Assert.assertNotNull(typeArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(annotationArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(typeArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNull(logAdapter63);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "" + "'", str66, "");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "/hi!" + "'", str72, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "/hi!" + "'", str80, "/hi!");
        org.junit.Assert.assertNotNull(responseHeaderArray81);
        org.junit.Assert.assertNull(strMap82);
        org.junit.Assert.assertNull(strMap83);
        org.junit.Assert.assertNull(strMap84);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertNotNull(typeArray89);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(annotationArray93);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertNotNull(parameterList97);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test02582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02582");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        io.swagger.annotations.Api api9 = null;
        boolean boolean10 = springMvcApiReader2.canReadApi(true, api9);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        springMvcApiReader2.LOG = logAdapter11;
        java.util.Set<java.lang.reflect.Type> typeSet13 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger14 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter15 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader16 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger14, logAdapter15);
        java.lang.reflect.Type type17 = null;
        springMvcApiReader16.addTypeToSkippedTypes(type17);
        java.util.Set<java.lang.reflect.Type> typeSet19 = springMvcApiReader16.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet20 = springMvcApiReader16.getTypesToSkip();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter21 = springMvcApiReader16.LOG;
        java.lang.String[] strArray22 = null;
        java.lang.String[] strArray26 = new java.lang.String[] { "/hi!", "hi!", "/hi!" };
        io.swagger.models.Operation operation27 = null;
        java.lang.String[] strArray28 = springMvcApiReader16.updateOperationProduces(strArray22, strArray26, operation27);
        io.swagger.models.Swagger swagger29 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter30 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader31 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger29, logAdapter30);
        java.lang.reflect.Type[] typeArray32 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet33 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet33, typeArray32);
        springMvcApiReader31.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet33);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter36 = springMvcApiReader31.LOG;
        io.swagger.annotations.Api api38 = null;
        boolean boolean39 = springMvcApiReader31.canReadApi(true, api38);
        io.swagger.models.Swagger swagger40 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter41 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader42 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger40, logAdapter41);
        java.lang.reflect.Type[] typeArray43 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet44 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet44, typeArray43);
        springMvcApiReader42.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet44);
        io.swagger.models.Swagger swagger47 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter48 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader49 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger47, logAdapter48);
        java.lang.reflect.Type[] typeArray50 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet51 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet51, typeArray50);
        springMvcApiReader49.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet51);
        springMvcApiReader42.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet51);
        io.swagger.models.Swagger swagger55 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter56 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader57 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger55, logAdapter56);
        java.lang.reflect.Type type58 = null;
        springMvcApiReader57.addTypeToSkippedTypes(type58);
        java.util.Set<java.lang.reflect.Type> typeSet60 = springMvcApiReader57.typesToSkip;
        springMvcApiReader42.setTypesToSkip(typeSet60);
        springMvcApiReader31.typesToSkip = typeSet60;
        java.lang.String[] strArray63 = null;
        java.lang.String[] strArray67 = new java.lang.String[] { "", "", "hi!" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap68 = null;
        io.swagger.models.Swagger swagger69 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter70 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader71 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger69, logAdapter70);
        java.lang.reflect.Type[] typeArray72 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet73 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet73, typeArray72);
        springMvcApiReader71.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet73);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter76 = springMvcApiReader71.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap78 = null;
        java.lang.String str79 = springMvcApiReader71.parseOperationPath("", strMap78);
        io.swagger.annotations.Api api81 = null;
        boolean boolean82 = springMvcApiReader71.canReadApi(false, api81);
        java.util.Map<java.lang.String, java.lang.String> strMap84 = null;
        java.lang.String str85 = springMvcApiReader71.parseOperationPath("hi!", strMap84);
        springMvcApiReader71.updateExtensionChain();
        java.lang.String[] strArray88 = new java.lang.String[] { "/hi!" };
        java.lang.String[] strArray89 = new java.lang.String[] {};
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap90 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray91 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList92 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean93 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList92, securityRequirementArray91);
        io.swagger.models.Operation operation94 = null;
        springMvcApiReader71.updateOperation(strArray88, strArray89, strMap90, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList92, operation94);
        io.swagger.models.Operation operation96 = null;
        springMvcApiReader31.updateOperation(strArray63, strArray67, strMap68, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList92, operation96);
        io.swagger.models.Operation operation98 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String[] strArray99 = springMvcApiReader2.updateOperationProduces(strArray28, strArray63, operation98);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(typeSet13);
        org.junit.Assert.assertNotNull(typeSet19);
        org.junit.Assert.assertNotNull(typeSet20);
        org.junit.Assert.assertNull(logAdapter21);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(typeArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(logAdapter36);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(typeArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(typeArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(typeSet60);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertNotNull(typeArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNull(logAdapter76);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "" + "'", str79, "");
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "/hi!" + "'", str85, "/hi!");
        org.junit.Assert.assertNotNull(strArray88);
        org.junit.Assert.assertNotNull(strArray89);
        org.junit.Assert.assertNotNull(securityRequirementArray91);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
    }

    @Test
    public void test02583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02583");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        java.lang.reflect.Type[] typeArray11 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList12 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList12, typeArray11);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList12);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!", "", "hi!" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap20 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray21 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList22 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList22, securityRequirementArray21);
        io.swagger.models.Operation operation24 = null;
        springMvcApiReader2.updateOperation(strArray15, strArray19, strMap20, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList22, operation24);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger27 = null;
        springMvcApiReader2.swagger = swagger27;
        io.swagger.models.Swagger swagger29 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter30 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader31 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger29, logAdapter30);
        java.lang.reflect.Type[] typeArray32 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet33 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet33, typeArray32);
        springMvcApiReader31.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet33);
        java.util.Set<java.lang.reflect.Type> typeSet36 = springMvcApiReader31.typesToSkip;
        io.swagger.models.Swagger swagger37 = springMvcApiReader31.swagger;
        io.swagger.models.Operation operation38 = null;
        io.swagger.annotations.ApiOperation apiOperation39 = null;
        springMvcApiReader31.updateTagsForOperation(operation38, apiOperation39);
        java.util.Set<java.lang.reflect.Type> typeSet41 = springMvcApiReader31.getTypesToSkip();
        io.swagger.models.Swagger swagger42 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter43 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader44 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger42, logAdapter43);
        java.lang.reflect.Type[] typeArray45 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet46 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet46, typeArray45);
        springMvcApiReader44.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet46);
        java.lang.annotation.Annotation[] annotationArray49 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList50 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList50, annotationArray49);
        boolean boolean52 = springMvcApiReader44.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList50);
        io.swagger.models.Swagger swagger53 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter54 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader55 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger53, logAdapter54);
        java.lang.reflect.Type[] typeArray56 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet57 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet57, typeArray56);
        springMvcApiReader55.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet57);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter60 = springMvcApiReader55.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap62 = null;
        java.lang.String str63 = springMvcApiReader55.parseOperationPath("", strMap62);
        io.swagger.annotations.Api api65 = null;
        boolean boolean66 = springMvcApiReader55.canReadApi(false, api65);
        java.util.Map<java.lang.String, java.lang.String> strMap68 = null;
        java.lang.String str69 = springMvcApiReader55.parseOperationPath("hi!", strMap68);
        io.swagger.models.Swagger swagger70 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter71 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader72 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger70, logAdapter71);
        java.lang.Class<?> wildcardClass73 = springMvcApiReader72.getClass();
        springMvcApiReader55.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass73);
        java.util.Map<java.lang.String, java.lang.String> strMap76 = null;
        java.lang.String str77 = springMvcApiReader55.parseOperationPath("/hi!", strMap76);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray78 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap79 = springMvcApiReader55.parseResponseHeaders(responseHeaderArray78);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap80 = springMvcApiReader44.parseResponseHeaders(responseHeaderArray78);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap81 = springMvcApiReader31.parseResponseHeaders(responseHeaderArray78);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap82 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray78);
        io.swagger.annotations.Api api83 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.lang.String> strSet84 = springMvcApiReader2.extractTags(api83);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(typeArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(securityRequirementArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(typeArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(typeSet36);
        org.junit.Assert.assertNull(swagger37);
        org.junit.Assert.assertNotNull(typeSet41);
        org.junit.Assert.assertNotNull(typeArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(annotationArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(typeArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNull(logAdapter60);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "" + "'", str63, "");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "/hi!" + "'", str69, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "/hi!" + "'", str77, "/hi!");
        org.junit.Assert.assertNotNull(responseHeaderArray78);
        org.junit.Assert.assertNull(strMap79);
        org.junit.Assert.assertNull(strMap80);
        org.junit.Assert.assertNull(strMap81);
        org.junit.Assert.assertNull(strMap82);
    }

    @Test
    public void test02584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02584");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        java.util.Set<java.lang.reflect.Type> typeSet5 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet6 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger14 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter15 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader16 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger14, logAdapter15);
        java.lang.reflect.Type[] typeArray17 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet18 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet18, typeArray17);
        springMvcApiReader16.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet18);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet18);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet18);
        springMvcApiReader2.updateExtensionChain();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter24 = springMvcApiReader2.LOG;
        io.swagger.annotations.Api api26 = null;
        boolean boolean27 = springMvcApiReader2.canReadApi(false, api26);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter28 = null;
        springMvcApiReader2.LOG = logAdapter28;
        java.util.Set<java.lang.reflect.Type> typeSet30 = springMvcApiReader2.getTypesToSkip();
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap31 = null;
        io.swagger.annotations.Api api32 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, io.swagger.models.Tag> strMap33 = springMvcApiReader2.updateTagsForApi(strMap31, api32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeSet5);
        org.junit.Assert.assertNotNull(typeSet6);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(logAdapter24);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(typeSet30);
    }

    @Test
    public void test02585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02585");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.annotations.Api api8 = null;
        boolean boolean9 = springMvcApiReader2.canReadApi(false, api8);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter10 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger11 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger12 = null;
        springMvcApiReader2.swagger = swagger12;
        io.swagger.annotations.ResponseHeader[] responseHeaderArray14 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap15 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray14);
        io.swagger.models.Swagger swagger16 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter17 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader18 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger16, logAdapter17);
        java.lang.reflect.Type type19 = null;
        springMvcApiReader18.addTypeToSkippedTypes(type19);
        java.util.Set<java.lang.reflect.Type> typeSet21 = springMvcApiReader18.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet22 = springMvcApiReader18.getTypesToSkip();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = springMvcApiReader18.LOG;
        java.lang.String[] strArray24 = null;
        java.lang.String[] strArray28 = new java.lang.String[] { "/hi!", "hi!", "/hi!" };
        io.swagger.models.Operation operation29 = null;
        java.lang.String[] strArray30 = springMvcApiReader18.updateOperationProduces(strArray24, strArray28, operation29);
        io.swagger.models.Swagger swagger31 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter32 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader33 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger31, logAdapter32);
        java.lang.reflect.Type[] typeArray34 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet35 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet35, typeArray34);
        springMvcApiReader33.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet35);
        io.swagger.models.Swagger swagger38 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter39 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader40 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger38, logAdapter39);
        java.lang.reflect.Type[] typeArray41 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet42 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet42, typeArray41);
        springMvcApiReader40.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet42);
        springMvcApiReader33.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet42);
        io.swagger.models.Swagger swagger46 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter47 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader48 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger46, logAdapter47);
        java.lang.reflect.Type type49 = null;
        springMvcApiReader48.addTypeToSkippedTypes(type49);
        java.util.Set<java.lang.reflect.Type> typeSet51 = springMvcApiReader48.typesToSkip;
        springMvcApiReader33.setTypesToSkip(typeSet51);
        java.util.Set<java.lang.reflect.Type> typeSet53 = springMvcApiReader33.getTypesToSkip();
        io.swagger.annotations.Api api55 = null;
        boolean boolean56 = springMvcApiReader33.canReadApi(true, api55);
        java.util.Set<java.lang.reflect.Type> typeSet57 = springMvcApiReader33.typesToSkip;
        springMvcApiReader18.setTypesToSkip(typeSet57);
        springMvcApiReader2.typesToSkip = typeSet57;
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap60 = null;
        io.swagger.annotations.Api api61 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, io.swagger.models.Tag> strMap62 = springMvcApiReader2.updateTagsForApi(strMap60, api61);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(logAdapter10);
        org.junit.Assert.assertNull(swagger11);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(typeSet21);
        org.junit.Assert.assertNotNull(typeSet22);
        org.junit.Assert.assertNull(logAdapter23);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(typeArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(typeArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(typeSet51);
        org.junit.Assert.assertNotNull(typeSet53);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(typeSet57);
    }

    @Test
    public void test02586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02586");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        io.swagger.annotations.Api api9 = null;
        boolean boolean10 = springMvcApiReader2.canReadApi(true, api9);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        springMvcApiReader2.LOG = logAdapter11;
        java.util.Set<java.lang.reflect.Type> typeSet13 = springMvcApiReader2.typesToSkip;
        java.lang.reflect.Method method14 = null;
        io.swagger.models.Operation operation15 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.readImplicitParameters(method14, operation15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(typeSet13);
    }

    @Test
    public void test02587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02587");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader2.parseOperationPath("hi!", strMap15);
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.Class<?> wildcardClass20 = springMvcApiReader19.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass20);
        io.swagger.models.Swagger swagger22 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader24 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger22, logAdapter23);
        java.lang.reflect.Type[] typeArray25 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet26 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet26, typeArray25);
        springMvcApiReader24.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet26);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter29 = springMvcApiReader24.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap31 = null;
        java.lang.String str32 = springMvcApiReader24.parseOperationPath("", strMap31);
        java.lang.reflect.Type[] typeArray33 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList34 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList34, typeArray33);
        springMvcApiReader24.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList34);
        java.lang.String[] strArray37 = new java.lang.String[] {};
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!", "", "hi!" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap42 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray43 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList44 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList44, securityRequirementArray43);
        io.swagger.models.Operation operation46 = null;
        springMvcApiReader24.updateOperation(strArray37, strArray41, strMap42, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList44, operation46);
        java.lang.String[] strArray54 = new java.lang.String[] { "/hi!", "", "/hi!", "hi!", "hi!", "hi!" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap55 = null;
        io.swagger.models.Swagger swagger56 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter57 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader58 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger56, logAdapter57);
        java.lang.reflect.Type[] typeArray59 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet60 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet60, typeArray59);
        springMvcApiReader58.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet60);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter63 = springMvcApiReader58.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap65 = null;
        java.lang.String str66 = springMvcApiReader58.parseOperationPath("", strMap65);
        java.lang.reflect.Type[] typeArray67 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList68 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList68, typeArray67);
        springMvcApiReader58.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList68);
        java.lang.String[] strArray71 = new java.lang.String[] {};
        java.lang.String[] strArray75 = new java.lang.String[] { "hi!", "", "hi!" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap76 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray77 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList78 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList78, securityRequirementArray77);
        io.swagger.models.Operation operation80 = null;
        springMvcApiReader58.updateOperation(strArray71, strArray75, strMap76, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList78, operation80);
        io.swagger.models.Operation operation82 = null;
        springMvcApiReader2.updateOperation(strArray37, strArray54, strMap55, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList78, operation82);
        io.swagger.models.Swagger swagger84 = null;
        springMvcApiReader2.swagger = swagger84;
        io.swagger.models.Operation operation86 = null;
        io.swagger.annotations.ApiOperation apiOperation87 = null;
        springMvcApiReader2.updateTagsForOperation(operation86, apiOperation87);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter89 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger90 = springMvcApiReader2.swagger;
        java.util.Set<java.lang.reflect.Type> typeSet91 = springMvcApiReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass92 = typeSet91.getClass();
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/hi!" + "'", str16, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(typeArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(logAdapter29);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertNotNull(typeArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(securityRequirementArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(typeArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNull(logAdapter63);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "" + "'", str66, "");
        org.junit.Assert.assertNotNull(typeArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertNotNull(securityRequirementArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNull(logAdapter89);
        org.junit.Assert.assertNull(swagger90);
        org.junit.Assert.assertNotNull(typeSet91);
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test02588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02588");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.util.Set<java.lang.reflect.Type> typeSet7 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger8 = springMvcApiReader2.swagger;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        springMvcApiReader2.LOG = logAdapter9;
        io.swagger.models.Swagger swagger11 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter12 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader13 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger11, logAdapter12);
        io.swagger.models.Swagger swagger14 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter15 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader16 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger14, logAdapter15);
        java.lang.reflect.Type[] typeArray17 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet18 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet18, typeArray17);
        springMvcApiReader16.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet18);
        java.lang.annotation.Annotation[] annotationArray21 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList22 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList22, annotationArray21);
        boolean boolean24 = springMvcApiReader16.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList22);
        boolean boolean25 = springMvcApiReader13.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList22);
        io.swagger.models.Swagger swagger26 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter27 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader28 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger26, logAdapter27);
        java.lang.reflect.Type[] typeArray29 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet30 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet30, typeArray29);
        springMvcApiReader28.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet30);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = springMvcApiReader28.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap35 = null;
        java.lang.String str36 = springMvcApiReader28.parseOperationPath("", strMap35);
        io.swagger.annotations.Api api38 = null;
        boolean boolean39 = springMvcApiReader28.canReadApi(false, api38);
        io.swagger.models.Swagger swagger40 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter41 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader42 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger40, logAdapter41);
        java.lang.reflect.Type type43 = null;
        springMvcApiReader42.addTypeToSkippedTypes(type43);
        java.util.Set<java.lang.reflect.Type> typeSet45 = springMvcApiReader42.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet46 = springMvcApiReader42.typesToSkip;
        springMvcApiReader28.setTypesToSkip(typeSet46);
        springMvcApiReader13.typesToSkip = typeSet46;
        springMvcApiReader2.typesToSkip = typeSet46;
        io.swagger.annotations.Api api50 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<io.swagger.models.SecurityRequirement> securityRequirementList51 = springMvcApiReader2.getSecurityRequirements(api50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeSet7);
        org.junit.Assert.assertNull(swagger8);
        org.junit.Assert.assertNotNull(typeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(annotationArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(typeArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(logAdapter33);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(typeSet45);
        org.junit.Assert.assertNotNull(typeSet46);
    }

    @Test
    public void test02589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02589");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.util.Map<java.lang.String, java.lang.String> strMap4 = null;
        java.lang.String str5 = springMvcApiReader2.parseOperationPath("/hi!", strMap4);
        java.util.Set<java.lang.reflect.Type> typeSet6 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Operation operation7 = null;
        io.swagger.annotations.ApiOperation apiOperation8 = null;
        springMvcApiReader2.updateTagsForOperation(operation7, apiOperation8);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.annotations.Api api11 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<io.swagger.models.SecurityRequirement> securityRequirementList12 = springMvcApiReader2.getSecurityRequirements(api11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "/hi!" + "'", str5, "/hi!");
        org.junit.Assert.assertNotNull(typeSet6);
    }

    @Test
    public void test02590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02590");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        io.swagger.models.Swagger swagger5 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger6 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader8 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger6, logAdapter7);
        java.lang.reflect.Type[] typeArray9 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet10 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet10, typeArray9);
        springMvcApiReader8.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet10);
        io.swagger.models.Swagger swagger13 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter14 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader15 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger13, logAdapter14);
        java.lang.reflect.Type[] typeArray16 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet17 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet17, typeArray16);
        springMvcApiReader15.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet17);
        springMvcApiReader8.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet17);
        io.swagger.models.Swagger swagger21 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader23 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger21, logAdapter22);
        java.lang.reflect.Type[] typeArray24 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet25 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet25, typeArray24);
        springMvcApiReader23.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet25);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter28 = springMvcApiReader23.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap30 = null;
        java.lang.String str31 = springMvcApiReader23.parseOperationPath("", strMap30);
        io.swagger.annotations.Api api33 = null;
        boolean boolean34 = springMvcApiReader23.canReadApi(false, api33);
        java.util.Map<java.lang.String, java.lang.String> strMap36 = null;
        java.lang.String str37 = springMvcApiReader23.parseOperationPath("hi!", strMap36);
        io.swagger.models.Swagger swagger38 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter39 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader40 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger38, logAdapter39);
        java.lang.Class<?> wildcardClass41 = springMvcApiReader40.getClass();
        springMvcApiReader23.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass41);
        springMvcApiReader8.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass41);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter44 = springMvcApiReader8.LOG;
        io.swagger.models.Swagger swagger45 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter46 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader47 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger45, logAdapter46);
        java.lang.reflect.Type[] typeArray48 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet49 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet49, typeArray48);
        springMvcApiReader47.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet49);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter52 = springMvcApiReader47.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap54 = null;
        java.lang.String str55 = springMvcApiReader47.parseOperationPath("", strMap54);
        java.lang.reflect.Type[] typeArray56 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList57 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList57, typeArray56);
        springMvcApiReader47.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList57);
        springMvcApiReader8.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList57);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList57);
        io.swagger.models.Swagger swagger62 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter63 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader64 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger62, logAdapter63);
        java.lang.reflect.Type[] typeArray65 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet66 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet66, typeArray65);
        springMvcApiReader64.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet66);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter69 = springMvcApiReader64.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap71 = null;
        java.lang.String str72 = springMvcApiReader64.parseOperationPath("", strMap71);
        io.swagger.annotations.Api api74 = null;
        boolean boolean75 = springMvcApiReader64.canReadApi(false, api74);
        java.util.Map<java.lang.String, java.lang.String> strMap77 = null;
        java.lang.String str78 = springMvcApiReader64.parseOperationPath("hi!", strMap77);
        io.swagger.models.Swagger swagger79 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter80 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader81 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger79, logAdapter80);
        java.lang.Class<?> wildcardClass82 = springMvcApiReader81.getClass();
        springMvcApiReader64.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass82);
        java.util.Map<java.lang.String, java.lang.String> strMap85 = null;
        java.lang.String str86 = springMvcApiReader64.parseOperationPath("/hi!", strMap85);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray87 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap88 = springMvcApiReader64.parseResponseHeaders(responseHeaderArray87);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap89 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray87);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter90 = springMvcApiReader2.LOG;
        java.util.Set<java.lang.reflect.Type> typeSet91 = springMvcApiReader2.getTypesToSkip();
        io.swagger.annotations.Api api93 = null;
        boolean boolean94 = springMvcApiReader2.canReadApi(false, api93);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter95 = null;
        springMvcApiReader2.LOG = logAdapter95;
        com.github.kongchen.swagger.docgen.spring.SpringResource springResource97 = null;
        // The following exception was thrown during execution in test generation
        try {
            io.swagger.models.Swagger swagger98 = springMvcApiReader2.read(springResource97);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(swagger5);
        org.junit.Assert.assertNotNull(typeArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(typeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(typeArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(logAdapter28);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "/hi!" + "'", str37, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNull(logAdapter44);
        org.junit.Assert.assertNotNull(typeArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNull(logAdapter52);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertNotNull(typeArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(typeArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNull(logAdapter69);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "" + "'", str72, "");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "/hi!" + "'", str78, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "/hi!" + "'", str86, "/hi!");
        org.junit.Assert.assertNotNull(responseHeaderArray87);
        org.junit.Assert.assertNull(strMap88);
        org.junit.Assert.assertNull(strMap89);
        org.junit.Assert.assertNull(logAdapter90);
        org.junit.Assert.assertNotNull(typeSet91);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
    }

    @Test
    public void test02591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02591");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.lang.annotation.Annotation[] annotationArray7 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList8 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList8, annotationArray7);
        boolean boolean10 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList8);
        java.util.Set<java.lang.reflect.Type> typeSet11 = springMvcApiReader2.typesToSkip;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Operation operation13 = null;
        io.swagger.annotations.ApiOperation apiOperation14 = null;
        springMvcApiReader2.updateTagsForOperation(operation13, apiOperation14);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.reflect.Type[] typeArray20 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet21 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet21, typeArray20);
        springMvcApiReader19.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet21);
        java.lang.annotation.Annotation[] annotationArray24 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList25 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList25, annotationArray24);
        boolean boolean27 = springMvcApiReader19.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList25);
        io.swagger.models.Swagger swagger28 = null;
        springMvcApiReader19.swagger = swagger28;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter30 = null;
        springMvcApiReader19.LOG = logAdapter30;
        java.util.Set<java.lang.reflect.Type> typeSet32 = springMvcApiReader19.getTypesToSkip();
        java.lang.Class<?> wildcardClass33 = typeSet32.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass33);
        io.swagger.models.Swagger swagger35 = springMvcApiReader2.swagger;
        java.util.Set<java.lang.reflect.Type> typeSet36 = springMvcApiReader2.typesToSkip;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.annotations.ApiOperation apiOperation38 = null;
        io.swagger.models.Operation operation39 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateOperationProtocols(apiOperation38, operation39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(annotationArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(typeSet11);
        org.junit.Assert.assertNotNull(typeArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(annotationArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(typeSet32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNull(swagger35);
        org.junit.Assert.assertNotNull(typeSet36);
    }

    @Test
    public void test02592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02592");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader2.parseOperationPath("hi!", strMap15);
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.reflect.Type[] typeArray20 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet21 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet21, typeArray20);
        springMvcApiReader19.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet21);
        io.swagger.models.Swagger swagger24 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter25 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader26 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger24, logAdapter25);
        java.lang.reflect.Type[] typeArray27 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet28 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet28, typeArray27);
        springMvcApiReader26.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet28);
        springMvcApiReader19.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet28);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.reflect.Type[] typeArray35 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet36 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet36, typeArray35);
        springMvcApiReader34.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet36);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter39 = springMvcApiReader34.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap41 = null;
        java.lang.String str42 = springMvcApiReader34.parseOperationPath("", strMap41);
        io.swagger.annotations.Api api44 = null;
        boolean boolean45 = springMvcApiReader34.canReadApi(false, api44);
        java.util.Map<java.lang.String, java.lang.String> strMap47 = null;
        java.lang.String str48 = springMvcApiReader34.parseOperationPath("hi!", strMap47);
        io.swagger.models.Swagger swagger49 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter50 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader51 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger49, logAdapter50);
        java.lang.Class<?> wildcardClass52 = springMvcApiReader51.getClass();
        springMvcApiReader34.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        springMvcApiReader19.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        io.swagger.models.Operation operation56 = null;
        io.swagger.annotations.ApiOperation apiOperation57 = null;
        springMvcApiReader2.updateTagsForOperation(operation56, apiOperation57);
        io.swagger.models.Operation operation59 = null;
        io.swagger.annotations.ApiOperation apiOperation60 = null;
        springMvcApiReader2.updateTagsForOperation(operation59, apiOperation60);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter62 = null;
        springMvcApiReader2.LOG = logAdapter62;
        io.swagger.models.Swagger swagger64 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter65 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader66 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger64, logAdapter65);
        io.swagger.models.Swagger swagger67 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter68 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader69 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger67, logAdapter68);
        java.lang.reflect.Type[] typeArray70 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet71 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet71, typeArray70);
        springMvcApiReader69.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet71);
        java.lang.annotation.Annotation[] annotationArray74 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList75 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList75, annotationArray74);
        boolean boolean77 = springMvcApiReader69.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList75);
        boolean boolean78 = springMvcApiReader66.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList75);
        io.swagger.models.Swagger swagger79 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter80 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader81 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger79, logAdapter80);
        java.lang.reflect.Type[] typeArray82 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet83 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet83, typeArray82);
        springMvcApiReader81.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet83);
        java.lang.annotation.Annotation[] annotationArray86 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList87 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList87, annotationArray86);
        boolean boolean89 = springMvcApiReader81.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList87);
        boolean boolean90 = springMvcApiReader66.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList87);
        boolean boolean91 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList87);
        java.util.Map<java.lang.String, java.lang.String> strMap93 = null;
        java.lang.String str94 = springMvcApiReader2.parseOperationPath("hi!", strMap93);
        java.util.Set<java.lang.reflect.Type> typeSet95 = springMvcApiReader2.typesToSkip;
        java.util.Map<java.lang.String, java.lang.String> strMap97 = null;
        java.lang.String str98 = springMvcApiReader2.parseOperationPath("", strMap97);
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/hi!" + "'", str16, "/hi!");
        org.junit.Assert.assertNotNull(typeArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(typeArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(typeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(logAdapter39);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "/hi!" + "'", str48, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(typeArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(annotationArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(typeArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(annotationArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "/hi!" + "'", str94, "/hi!");
        org.junit.Assert.assertNotNull(typeSet95);
        org.junit.Assert.assertEquals("'" + str98 + "' != '" + "" + "'", str98, "");
    }

    @Test
    public void test02593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02593");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.models.Swagger swagger3 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter4 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader5 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger3, logAdapter4);
        java.lang.reflect.Type[] typeArray6 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet7 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet7, typeArray6);
        springMvcApiReader5.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet7);
        java.lang.annotation.Annotation[] annotationArray10 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList11 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList11, annotationArray10);
        boolean boolean13 = springMvcApiReader5.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList11);
        io.swagger.models.Swagger swagger14 = null;
        springMvcApiReader5.swagger = swagger14;
        io.swagger.models.Swagger swagger16 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter17 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader18 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger16, logAdapter17);
        java.lang.reflect.Type[] typeArray19 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet20 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet20, typeArray19);
        springMvcApiReader18.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet20);
        java.lang.annotation.Annotation[] annotationArray23 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList24 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList24, annotationArray23);
        boolean boolean26 = springMvcApiReader18.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList24);
        io.swagger.models.Swagger swagger27 = null;
        springMvcApiReader18.swagger = swagger27;
        java.lang.annotation.Annotation[] annotationArray29 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList30 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList30, annotationArray29);
        boolean boolean32 = springMvcApiReader18.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList30);
        boolean boolean33 = springMvcApiReader5.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList30);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter34 = springMvcApiReader5.LOG;
        io.swagger.models.Swagger swagger35 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter36 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader37 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger35, logAdapter36);
        java.lang.reflect.Type[] typeArray38 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet39 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet39, typeArray38);
        springMvcApiReader37.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet39);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter42 = springMvcApiReader37.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap44 = null;
        java.lang.String str45 = springMvcApiReader37.parseOperationPath("", strMap44);
        io.swagger.annotations.Api api47 = null;
        boolean boolean48 = springMvcApiReader37.canReadApi(false, api47);
        java.util.Map<java.lang.String, java.lang.String> strMap50 = null;
        java.lang.String str51 = springMvcApiReader37.parseOperationPath("hi!", strMap50);
        io.swagger.models.Swagger swagger52 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter53 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader54 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger52, logAdapter53);
        java.lang.Class<?> wildcardClass55 = springMvcApiReader54.getClass();
        springMvcApiReader37.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass55);
        io.swagger.models.Swagger swagger57 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter58 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader59 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger57, logAdapter58);
        java.lang.reflect.Type[] typeArray60 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet61 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet61, typeArray60);
        springMvcApiReader59.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet61);
        java.lang.annotation.Annotation[] annotationArray64 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList65 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList65, annotationArray64);
        boolean boolean67 = springMvcApiReader59.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList65);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList68 = springMvcApiReader5.getParameters((java.lang.reflect.Type) wildcardClass55, (java.util.List<java.lang.annotation.Annotation>) annotationList65);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass55);
        io.swagger.annotations.Api api70 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<io.swagger.models.SecurityRequirement> securityRequirementList71 = springMvcApiReader2.getSecurityRequirements(api70);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(annotationArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(typeArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(annotationArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(annotationArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(logAdapter34);
        org.junit.Assert.assertNotNull(typeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(logAdapter42);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "/hi!" + "'", str51, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(typeArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(annotationArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(parameterList68);
    }

    @Test
    public void test02594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02594");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.lang.annotation.Annotation[] annotationArray7 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList8 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList8, annotationArray7);
        boolean boolean10 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList8);
        java.util.Set<java.lang.reflect.Type> typeSet11 = springMvcApiReader2.typesToSkip;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Operation operation13 = null;
        io.swagger.annotations.ApiOperation apiOperation14 = null;
        springMvcApiReader2.updateTagsForOperation(operation13, apiOperation14);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.reflect.Type[] typeArray20 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet21 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet21, typeArray20);
        springMvcApiReader19.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet21);
        java.lang.annotation.Annotation[] annotationArray24 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList25 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList25, annotationArray24);
        boolean boolean27 = springMvcApiReader19.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList25);
        io.swagger.models.Swagger swagger28 = null;
        springMvcApiReader19.swagger = swagger28;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter30 = null;
        springMvcApiReader19.LOG = logAdapter30;
        java.util.Set<java.lang.reflect.Type> typeSet32 = springMvcApiReader19.getTypesToSkip();
        java.lang.Class<?> wildcardClass33 = typeSet32.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass33);
        io.swagger.models.Swagger swagger35 = springMvcApiReader2.swagger;
        java.util.Set<java.lang.reflect.Type> typeSet36 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger37 = springMvcApiReader2.swagger;
        io.swagger.annotations.ApiOperation apiOperation38 = null;
        io.swagger.models.Operation operation39 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateOperationProtocols(apiOperation38, operation39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(annotationArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(typeSet11);
        org.junit.Assert.assertNotNull(typeArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(annotationArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(typeSet32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNull(swagger35);
        org.junit.Assert.assertNotNull(typeSet36);
        org.junit.Assert.assertNull(swagger37);
    }

    @Test
    public void test02595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02595");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        java.lang.reflect.Type[] typeArray11 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList12 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList12, typeArray11);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList12);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!", "", "hi!" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap20 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray21 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList22 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList22, securityRequirementArray21);
        io.swagger.models.Operation operation24 = null;
        springMvcApiReader2.updateOperation(strArray15, strArray19, strMap20, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList22, operation24);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger27 = null;
        springMvcApiReader2.swagger = swagger27;
        io.swagger.models.Swagger swagger29 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter30 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader31 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger29, logAdapter30);
        java.lang.reflect.Type[] typeArray32 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet33 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet33, typeArray32);
        springMvcApiReader31.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet33);
        java.util.Set<java.lang.reflect.Type> typeSet36 = springMvcApiReader31.typesToSkip;
        io.swagger.models.Swagger swagger37 = springMvcApiReader31.swagger;
        io.swagger.models.Operation operation38 = null;
        io.swagger.annotations.ApiOperation apiOperation39 = null;
        springMvcApiReader31.updateTagsForOperation(operation38, apiOperation39);
        java.util.Set<java.lang.reflect.Type> typeSet41 = springMvcApiReader31.getTypesToSkip();
        io.swagger.models.Swagger swagger42 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter43 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader44 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger42, logAdapter43);
        java.lang.reflect.Type[] typeArray45 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet46 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet46, typeArray45);
        springMvcApiReader44.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet46);
        java.lang.annotation.Annotation[] annotationArray49 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList50 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList50, annotationArray49);
        boolean boolean52 = springMvcApiReader44.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList50);
        io.swagger.models.Swagger swagger53 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter54 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader55 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger53, logAdapter54);
        java.lang.reflect.Type[] typeArray56 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet57 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet57, typeArray56);
        springMvcApiReader55.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet57);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter60 = springMvcApiReader55.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap62 = null;
        java.lang.String str63 = springMvcApiReader55.parseOperationPath("", strMap62);
        io.swagger.annotations.Api api65 = null;
        boolean boolean66 = springMvcApiReader55.canReadApi(false, api65);
        java.util.Map<java.lang.String, java.lang.String> strMap68 = null;
        java.lang.String str69 = springMvcApiReader55.parseOperationPath("hi!", strMap68);
        io.swagger.models.Swagger swagger70 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter71 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader72 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger70, logAdapter71);
        java.lang.Class<?> wildcardClass73 = springMvcApiReader72.getClass();
        springMvcApiReader55.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass73);
        java.util.Map<java.lang.String, java.lang.String> strMap76 = null;
        java.lang.String str77 = springMvcApiReader55.parseOperationPath("/hi!", strMap76);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray78 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap79 = springMvcApiReader55.parseResponseHeaders(responseHeaderArray78);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap80 = springMvcApiReader44.parseResponseHeaders(responseHeaderArray78);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap81 = springMvcApiReader31.parseResponseHeaders(responseHeaderArray78);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap82 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray78);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter83 = null;
        springMvcApiReader2.LOG = logAdapter83;
        io.swagger.annotations.Api api85 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<io.swagger.models.SecurityRequirement> securityRequirementList86 = springMvcApiReader2.getSecurityRequirements(api85);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(typeArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(securityRequirementArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(typeArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(typeSet36);
        org.junit.Assert.assertNull(swagger37);
        org.junit.Assert.assertNotNull(typeSet41);
        org.junit.Assert.assertNotNull(typeArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(annotationArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(typeArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNull(logAdapter60);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "" + "'", str63, "");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "/hi!" + "'", str69, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "/hi!" + "'", str77, "/hi!");
        org.junit.Assert.assertNotNull(responseHeaderArray78);
        org.junit.Assert.assertNull(strMap79);
        org.junit.Assert.assertNull(strMap80);
        org.junit.Assert.assertNull(strMap81);
        org.junit.Assert.assertNull(strMap82);
    }

    @Test
    public void test02596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02596");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        springMvcApiReader2.LOG = logAdapter8;
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader12 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger10, logAdapter11);
        java.lang.reflect.Type type13 = null;
        springMvcApiReader12.addTypeToSkippedTypes(type13);
        java.util.Set<java.lang.reflect.Type> typeSet15 = springMvcApiReader12.typesToSkip;
        io.swagger.models.Swagger swagger16 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter17 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader18 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger16, logAdapter17);
        java.lang.reflect.Type[] typeArray19 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet20 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet20, typeArray19);
        springMvcApiReader18.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet20);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = springMvcApiReader18.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap25 = null;
        java.lang.String str26 = springMvcApiReader18.parseOperationPath("", strMap25);
        io.swagger.annotations.Api api28 = null;
        boolean boolean29 = springMvcApiReader18.canReadApi(false, api28);
        java.util.Map<java.lang.String, java.lang.String> strMap31 = null;
        java.lang.String str32 = springMvcApiReader18.parseOperationPath("hi!", strMap31);
        io.swagger.models.Swagger swagger33 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter34 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader35 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger33, logAdapter34);
        java.lang.Class<?> wildcardClass36 = springMvcApiReader35.getClass();
        springMvcApiReader18.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass36);
        java.util.Map<java.lang.String, java.lang.String> strMap39 = null;
        java.lang.String str40 = springMvcApiReader18.parseOperationPath("/hi!", strMap39);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray41 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap42 = springMvcApiReader18.parseResponseHeaders(responseHeaderArray41);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap43 = springMvcApiReader12.parseResponseHeaders(responseHeaderArray41);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap44 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray41);
        java.util.Map<java.lang.String, java.lang.String> strMap46 = null;
        java.lang.String str47 = springMvcApiReader2.parseOperationPath("/hi!", strMap46);
        io.swagger.models.Operation operation48 = null;
        io.swagger.annotations.ApiOperation apiOperation49 = null;
        springMvcApiReader2.updateTagsForOperation(operation48, apiOperation49);
        io.swagger.annotations.ApiOperation apiOperation51 = null;
        io.swagger.models.Operation operation52 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateOperationProtocols(apiOperation51, operation52);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertNotNull(typeSet15);
        org.junit.Assert.assertNotNull(typeArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(logAdapter23);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "/hi!" + "'", str32, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "/hi!" + "'", str40, "/hi!");
        org.junit.Assert.assertNotNull(responseHeaderArray41);
        org.junit.Assert.assertNull(strMap42);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNull(strMap44);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "/hi!" + "'", str47, "/hi!");
    }

    @Test
    public void test02597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02597");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.models.Swagger swagger3 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter4 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader5 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger3, logAdapter4);
        java.lang.reflect.Type[] typeArray6 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet7 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet7, typeArray6);
        springMvcApiReader5.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet7);
        java.lang.annotation.Annotation[] annotationArray10 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList11 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList11, annotationArray10);
        boolean boolean13 = springMvcApiReader5.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList11);
        boolean boolean14 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList11);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type[] typeArray18 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet19 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet19, typeArray18);
        springMvcApiReader17.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet19);
        java.lang.annotation.Annotation[] annotationArray22 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList23 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList23, annotationArray22);
        boolean boolean25 = springMvcApiReader17.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList23);
        boolean boolean26 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList23);
        java.util.Set<java.lang.reflect.Type> typeSet27 = springMvcApiReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet28 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger29 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter30 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader31 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger29, logAdapter30);
        java.lang.reflect.Type[] typeArray32 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet33 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet33, typeArray32);
        springMvcApiReader31.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet33);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter36 = springMvcApiReader31.LOG;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter37 = null;
        springMvcApiReader31.LOG = logAdapter37;
        springMvcApiReader31.updateExtensionChain();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter40 = null;
        springMvcApiReader31.LOG = logAdapter40;
        io.swagger.models.Swagger swagger42 = springMvcApiReader31.swagger;
        io.swagger.models.Swagger swagger43 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter44 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader45 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger43, logAdapter44);
        java.lang.reflect.Type[] typeArray46 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet47 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet47, typeArray46);
        springMvcApiReader45.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet47);
        java.lang.annotation.Annotation[] annotationArray50 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList51 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList51, annotationArray50);
        boolean boolean53 = springMvcApiReader45.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList51);
        io.swagger.models.Swagger swagger54 = null;
        springMvcApiReader45.swagger = swagger54;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter56 = null;
        springMvcApiReader45.LOG = logAdapter56;
        java.util.Set<java.lang.reflect.Type> typeSet58 = springMvcApiReader45.getTypesToSkip();
        springMvcApiReader31.typesToSkip = typeSet58;
        springMvcApiReader2.setTypesToSkip(typeSet58);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter61 = null;
        springMvcApiReader2.LOG = logAdapter61;
        io.swagger.models.Operation operation63 = null;
        io.swagger.annotations.ApiResponses apiResponses64 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateApiResponse(operation63, apiResponses64);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(annotationArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(typeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(annotationArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(typeSet27);
        org.junit.Assert.assertNotNull(typeSet28);
        org.junit.Assert.assertNotNull(typeArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(logAdapter36);
        org.junit.Assert.assertNull(swagger42);
        org.junit.Assert.assertNotNull(typeArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(annotationArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(typeSet58);
    }

    @Test
    public void test02598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02598");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        io.swagger.models.Swagger swagger5 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter6 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader7 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger5, logAdapter6);
        java.lang.reflect.Type[] typeArray8 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet9 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet9, typeArray8);
        springMvcApiReader7.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet9);
        io.swagger.models.Swagger swagger12 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter13 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader14 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger12, logAdapter13);
        java.lang.reflect.Type[] typeArray15 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet16 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet16, typeArray15);
        springMvcApiReader14.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet16);
        springMvcApiReader7.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet16);
        io.swagger.models.Swagger swagger20 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter21 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader22 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger20, logAdapter21);
        java.lang.reflect.Type[] typeArray23 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet24 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet24, typeArray23);
        springMvcApiReader22.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet24);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter27 = springMvcApiReader22.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap29 = null;
        java.lang.String str30 = springMvcApiReader22.parseOperationPath("", strMap29);
        io.swagger.annotations.Api api32 = null;
        boolean boolean33 = springMvcApiReader22.canReadApi(false, api32);
        java.util.Map<java.lang.String, java.lang.String> strMap35 = null;
        java.lang.String str36 = springMvcApiReader22.parseOperationPath("hi!", strMap35);
        io.swagger.models.Swagger swagger37 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter38 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader39 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger37, logAdapter38);
        java.lang.Class<?> wildcardClass40 = springMvcApiReader39.getClass();
        springMvcApiReader22.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass40);
        springMvcApiReader7.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass40);
        java.util.Set<java.lang.reflect.Type> typeSet43 = springMvcApiReader7.getTypesToSkip();
        springMvcApiReader2.typesToSkip = typeSet43;
        java.util.Set<java.lang.reflect.Type> typeSet45 = springMvcApiReader2.getTypesToSkip();
        io.swagger.annotations.Api api47 = null;
        boolean boolean48 = springMvcApiReader2.canReadApi(false, api47);
        io.swagger.models.Swagger swagger49 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger50 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter51 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader52 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger50, logAdapter51);
        io.swagger.models.Swagger swagger53 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter54 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader55 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger53, logAdapter54);
        java.lang.reflect.Type[] typeArray56 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet57 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet57, typeArray56);
        springMvcApiReader55.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet57);
        java.lang.annotation.Annotation[] annotationArray60 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList61 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList61, annotationArray60);
        boolean boolean63 = springMvcApiReader55.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList61);
        boolean boolean64 = springMvcApiReader52.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList61);
        io.swagger.models.Swagger swagger65 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter66 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader67 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger65, logAdapter66);
        java.lang.reflect.Type[] typeArray68 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet69 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet69, typeArray68);
        springMvcApiReader67.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet69);
        java.lang.annotation.Annotation[] annotationArray72 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList73 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList73, annotationArray72);
        boolean boolean75 = springMvcApiReader67.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList73);
        boolean boolean76 = springMvcApiReader52.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList73);
        boolean boolean77 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList73);
        io.swagger.annotations.ApiOperation apiOperation78 = null;
        io.swagger.models.Operation operation79 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateOperationProtocols(apiOperation78, operation79);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(typeArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(typeArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(logAdapter27);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "/hi!" + "'", str36, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(typeSet43);
        org.junit.Assert.assertNotNull(typeSet45);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(swagger49);
        org.junit.Assert.assertNotNull(typeArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(annotationArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(typeArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(annotationArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
    }

    @Test
    public void test02599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02599");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.util.Set<java.lang.reflect.Type> typeSet7 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger8 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader10 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger8, logAdapter9);
        java.lang.reflect.Type[] typeArray11 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet12 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet12, typeArray11);
        springMvcApiReader10.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet12);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter15 = springMvcApiReader10.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap17 = null;
        java.lang.String str18 = springMvcApiReader10.parseOperationPath("", strMap17);
        io.swagger.annotations.Api api20 = null;
        boolean boolean21 = springMvcApiReader10.canReadApi(false, api20);
        java.util.Map<java.lang.String, java.lang.String> strMap23 = null;
        java.lang.String str24 = springMvcApiReader10.parseOperationPath("hi!", strMap23);
        io.swagger.models.Swagger swagger25 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter26 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader27 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger25, logAdapter26);
        java.lang.reflect.Type[] typeArray28 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet29 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet29, typeArray28);
        springMvcApiReader27.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet29);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.reflect.Type[] typeArray35 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet36 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet36, typeArray35);
        springMvcApiReader34.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet36);
        springMvcApiReader27.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet36);
        io.swagger.models.Swagger swagger40 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter41 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader42 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger40, logAdapter41);
        java.lang.reflect.Type[] typeArray43 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet44 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet44, typeArray43);
        springMvcApiReader42.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet44);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter47 = springMvcApiReader42.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap49 = null;
        java.lang.String str50 = springMvcApiReader42.parseOperationPath("", strMap49);
        io.swagger.annotations.Api api52 = null;
        boolean boolean53 = springMvcApiReader42.canReadApi(false, api52);
        java.util.Map<java.lang.String, java.lang.String> strMap55 = null;
        java.lang.String str56 = springMvcApiReader42.parseOperationPath("hi!", strMap55);
        io.swagger.models.Swagger swagger57 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter58 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader59 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger57, logAdapter58);
        java.lang.Class<?> wildcardClass60 = springMvcApiReader59.getClass();
        springMvcApiReader42.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass60);
        springMvcApiReader27.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass60);
        springMvcApiReader10.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass60);
        io.swagger.models.Swagger swagger64 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter65 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader66 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger64, logAdapter65);
        java.lang.reflect.Type[] typeArray67 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet68 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet68, typeArray67);
        springMvcApiReader66.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet68);
        java.lang.annotation.Annotation[] annotationArray71 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList72 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList72, annotationArray71);
        boolean boolean74 = springMvcApiReader66.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList72);
        io.swagger.models.Swagger swagger75 = null;
        springMvcApiReader66.swagger = swagger75;
        java.lang.annotation.Annotation[] annotationArray77 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList78 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList78, annotationArray77);
        boolean boolean80 = springMvcApiReader66.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList78);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList81 = springMvcApiReader2.getParameters((java.lang.reflect.Type) wildcardClass60, (java.util.List<java.lang.annotation.Annotation>) annotationList78);
        java.util.Map<java.lang.String, java.lang.String> strMap83 = null;
        java.lang.String str84 = springMvcApiReader2.parseOperationPath("hi!", strMap83);
        io.swagger.models.Swagger swagger85 = null;
        springMvcApiReader2.swagger = swagger85;
        java.util.Set<java.lang.reflect.Type> typeSet87 = springMvcApiReader2.typesToSkip;
        io.swagger.annotations.Api api88 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<io.swagger.models.SecurityRequirement> securityRequirementList89 = springMvcApiReader2.getSecurityRequirements(api88);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeSet7);
        org.junit.Assert.assertNotNull(typeArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(logAdapter15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "/hi!" + "'", str24, "/hi!");
        org.junit.Assert.assertNotNull(typeArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(typeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(typeArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(logAdapter47);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "/hi!" + "'", str56, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(typeArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(annotationArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(annotationArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(parameterList81);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "/hi!" + "'", str84, "/hi!");
        org.junit.Assert.assertNotNull(typeSet87);
    }

    @Test
    public void test02600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02600");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("hi!", strMap9);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        springMvcApiReader2.LOG = logAdapter11;
        java.lang.annotation.Annotation[] annotationArray13 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList14 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList14, annotationArray13);
        boolean boolean16 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList14);
        io.swagger.annotations.ApiOperation apiOperation17 = null;
        io.swagger.models.Operation operation18 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateOperationProtocols(apiOperation17, operation18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "/hi!" + "'", str10, "/hi!");
        org.junit.Assert.assertNotNull(annotationArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test02601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02601");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        io.swagger.models.Operation operation8 = null;
        io.swagger.annotations.ApiOperation apiOperation9 = null;
        springMvcApiReader2.updateTagsForOperation(operation8, apiOperation9);
        com.github.kongchen.swagger.docgen.spring.SpringResource springResource11 = null;
        // The following exception was thrown during execution in test generation
        try {
            io.swagger.models.Swagger swagger12 = springMvcApiReader2.read(springResource11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
    }

    @Test
    public void test02602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02602");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type[] typeArray18 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet19 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet19, typeArray18);
        springMvcApiReader17.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet19);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = springMvcApiReader17.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap24 = null;
        java.lang.String str25 = springMvcApiReader17.parseOperationPath("", strMap24);
        io.swagger.annotations.Api api27 = null;
        boolean boolean28 = springMvcApiReader17.canReadApi(false, api27);
        java.util.Map<java.lang.String, java.lang.String> strMap30 = null;
        java.lang.String str31 = springMvcApiReader17.parseOperationPath("hi!", strMap30);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.Class<?> wildcardClass35 = springMvcApiReader34.getClass();
        springMvcApiReader17.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter38 = springMvcApiReader2.LOG;
        java.util.Set<java.lang.reflect.Type> typeSet39 = springMvcApiReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet40 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Operation operation41 = null;
        io.swagger.annotations.ApiOperation apiOperation42 = null;
        springMvcApiReader2.updateTagsForOperation(operation41, apiOperation42);
        io.swagger.models.Operation operation44 = null;
        io.swagger.annotations.ApiResponses apiResponses45 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateApiResponse(operation44, apiResponses45);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(logAdapter22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "/hi!" + "'", str31, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNull(logAdapter38);
        org.junit.Assert.assertNotNull(typeSet39);
        org.junit.Assert.assertNotNull(typeSet40);
    }

    @Test
    public void test02603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02603");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        java.util.Set<java.lang.reflect.Type> typeSet5 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet6 = springMvcApiReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet7 = null;
        springMvcApiReader2.typesToSkip = typeSet7;
        java.util.Set<java.lang.reflect.Type> typeSet9 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader12 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger10, logAdapter11);
        java.lang.reflect.Type[] typeArray13 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet14 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet14, typeArray13);
        springMvcApiReader12.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet14);
        java.lang.annotation.Annotation[] annotationArray17 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList18 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList18, annotationArray17);
        boolean boolean20 = springMvcApiReader12.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList18);
        io.swagger.models.Swagger swagger21 = null;
        springMvcApiReader12.swagger = swagger21;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = null;
        springMvcApiReader12.LOG = logAdapter23;
        springMvcApiReader12.updateExtensionChain();
        io.swagger.models.Operation operation26 = null;
        io.swagger.annotations.ApiOperation apiOperation27 = null;
        springMvcApiReader12.updateTagsForOperation(operation26, apiOperation27);
        io.swagger.models.Swagger swagger29 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter30 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader31 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger29, logAdapter30);
        java.lang.reflect.Type[] typeArray32 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet33 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet33, typeArray32);
        springMvcApiReader31.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet33);
        java.lang.annotation.Annotation[] annotationArray36 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList37 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList37, annotationArray36);
        boolean boolean39 = springMvcApiReader31.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList37);
        io.swagger.models.Swagger swagger40 = null;
        springMvcApiReader31.swagger = swagger40;
        io.swagger.models.Swagger swagger42 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter43 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader44 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger42, logAdapter43);
        java.lang.reflect.Type[] typeArray45 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet46 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet46, typeArray45);
        springMvcApiReader44.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet46);
        java.lang.annotation.Annotation[] annotationArray49 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList50 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList50, annotationArray49);
        boolean boolean52 = springMvcApiReader44.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList50);
        io.swagger.models.Swagger swagger53 = null;
        springMvcApiReader44.swagger = swagger53;
        java.lang.annotation.Annotation[] annotationArray55 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList56 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList56, annotationArray55);
        boolean boolean58 = springMvcApiReader44.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList56);
        boolean boolean59 = springMvcApiReader31.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList56);
        boolean boolean60 = springMvcApiReader12.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList56);
        boolean boolean61 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList56);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter62 = null;
        springMvcApiReader2.LOG = logAdapter62;
        io.swagger.models.Swagger swagger64 = springMvcApiReader2.swagger;
        io.swagger.annotations.Api api66 = null;
        boolean boolean67 = springMvcApiReader2.canReadApi(false, api66);
        java.lang.annotation.Annotation[] annotationArray68 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList69 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList69, annotationArray68);
        boolean boolean71 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList69);
        java.lang.Class<?> wildcardClass72 = annotationList69.getClass();
        org.junit.Assert.assertNotNull(typeSet5);
        org.junit.Assert.assertNotNull(typeSet6);
        org.junit.Assert.assertNull(typeSet9);
        org.junit.Assert.assertNotNull(typeArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(annotationArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(typeArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(annotationArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(typeArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(annotationArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(annotationArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNull(swagger64);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(annotationArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test02604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02604");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.models.Swagger swagger11 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter12 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader13 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger11, logAdapter12);
        java.lang.Class<?> wildcardClass14 = springMvcApiReader13.getClass();
        java.lang.reflect.Type[] typeArray15 = new java.lang.reflect.Type[] { wildcardClass14 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet16 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet16, typeArray15);
        springMvcApiReader2.typesToSkip = typeSet16;
        java.util.Set<java.lang.reflect.Type> typeSet19 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger20 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter21 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader22 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger20, logAdapter21);
        java.lang.reflect.Type type23 = null;
        springMvcApiReader22.addTypeToSkippedTypes(type23);
        java.util.Set<java.lang.reflect.Type> typeSet25 = springMvcApiReader22.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet26 = springMvcApiReader22.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet26);
        java.util.Map<java.lang.String, java.lang.String> strMap29 = null;
        java.lang.String str30 = springMvcApiReader2.parseOperationPath("hi!", strMap29);
        springMvcApiReader2.updateExtensionChain();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter32 = null;
        springMvcApiReader2.LOG = logAdapter32;
        io.swagger.models.Swagger swagger34 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter35 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader36 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger34, logAdapter35);
        java.lang.reflect.Type[] typeArray37 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet38 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet38, typeArray37);
        springMvcApiReader36.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet38);
        java.lang.annotation.Annotation[] annotationArray41 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList42 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList42, annotationArray41);
        boolean boolean44 = springMvcApiReader36.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList42);
        java.util.Set<java.lang.reflect.Type> typeSet45 = springMvcApiReader36.typesToSkip;
        io.swagger.models.Swagger swagger46 = null;
        springMvcApiReader36.swagger = swagger46;
        io.swagger.models.Operation operation48 = null;
        io.swagger.annotations.ApiOperation apiOperation49 = null;
        springMvcApiReader36.updateTagsForOperation(operation48, apiOperation49);
        io.swagger.models.Swagger swagger51 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter52 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader53 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger51, logAdapter52);
        io.swagger.models.Swagger swagger54 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter55 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader56 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger54, logAdapter55);
        java.lang.reflect.Type[] typeArray57 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet58 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet58, typeArray57);
        springMvcApiReader56.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet58);
        java.lang.annotation.Annotation[] annotationArray61 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList62 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList62, annotationArray61);
        boolean boolean64 = springMvcApiReader56.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList62);
        boolean boolean65 = springMvcApiReader53.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList62);
        boolean boolean66 = springMvcApiReader36.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList62);
        boolean boolean67 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList62);
        java.lang.Class<?> wildcardClass68 = annotationList62.getClass();
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(typeArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(typeSet19);
        org.junit.Assert.assertNotNull(typeSet25);
        org.junit.Assert.assertNotNull(typeSet26);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "/hi!" + "'", str30, "/hi!");
        org.junit.Assert.assertNotNull(typeArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(annotationArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(typeSet45);
        org.junit.Assert.assertNotNull(typeArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(annotationArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test02605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02605");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.lang.annotation.Annotation[] annotationArray7 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList8 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList8, annotationArray7);
        boolean boolean10 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList8);
        io.swagger.models.Swagger swagger11 = null;
        springMvcApiReader2.swagger = swagger11;
        io.swagger.models.Swagger swagger13 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter14 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader15 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger13, logAdapter14);
        java.lang.reflect.Type[] typeArray16 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet17 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet17, typeArray16);
        springMvcApiReader15.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet17);
        java.lang.annotation.Annotation[] annotationArray20 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList21 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList21, annotationArray20);
        boolean boolean23 = springMvcApiReader15.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList21);
        io.swagger.models.Swagger swagger24 = null;
        springMvcApiReader15.swagger = swagger24;
        java.lang.annotation.Annotation[] annotationArray26 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList27 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList27, annotationArray26);
        boolean boolean29 = springMvcApiReader15.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList27);
        boolean boolean30 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList27);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger32 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger33 = null;
        springMvcApiReader2.swagger = swagger33;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Operation operation36 = null;
        io.swagger.annotations.ApiOperation apiOperation37 = null;
        springMvcApiReader2.updateTagsForOperation(operation36, apiOperation37);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter39 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap40 = null;
        io.swagger.annotations.Api api41 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, io.swagger.models.Tag> strMap42 = springMvcApiReader2.updateTagsForApi(strMap40, api41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(annotationArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(typeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(annotationArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(annotationArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(swagger32);
        org.junit.Assert.assertNull(logAdapter39);
    }

    @Test
    public void test02606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02606");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("/hi!", strMap9);
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "/hi!" + "'", str10, "/hi!");
    }

    @Test
    public void test02607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02607");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.models.Swagger swagger11 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter12 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader13 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger11, logAdapter12);
        java.lang.Class<?> wildcardClass14 = springMvcApiReader13.getClass();
        java.lang.reflect.Type[] typeArray15 = new java.lang.reflect.Type[] { wildcardClass14 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet16 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet16, typeArray15);
        springMvcApiReader2.typesToSkip = typeSet16;
        java.util.Set<java.lang.reflect.Type> typeSet19 = springMvcApiReader2.getTypesToSkip();
        io.swagger.annotations.Api api21 = null;
        boolean boolean22 = springMvcApiReader2.canReadApi(false, api21);
        io.swagger.models.Swagger swagger23 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter24 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader25 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger23, logAdapter24);
        java.lang.reflect.Type type26 = null;
        springMvcApiReader25.addTypeToSkippedTypes(type26);
        java.util.Set<java.lang.reflect.Type> typeSet28 = springMvcApiReader25.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet29 = springMvcApiReader25.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet30 = null;
        springMvcApiReader25.typesToSkip = typeSet30;
        java.lang.Class<?> wildcardClass32 = springMvcApiReader25.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass32);
        io.swagger.models.Operation operation34 = null;
        io.swagger.annotations.ApiResponses apiResponses35 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateApiResponse(operation34, apiResponses35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(typeArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(typeSet19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(typeSet28);
        org.junit.Assert.assertNotNull(typeSet29);
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test02608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02608");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type type18 = null;
        springMvcApiReader17.addTypeToSkippedTypes(type18);
        java.util.Set<java.lang.reflect.Type> typeSet20 = springMvcApiReader17.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet20);
        java.util.Set<java.lang.reflect.Type> typeSet22 = springMvcApiReader2.getTypesToSkip();
        io.swagger.annotations.Api api24 = null;
        boolean boolean25 = springMvcApiReader2.canReadApi(true, api24);
        java.lang.String[] strArray26 = null;
        io.swagger.models.Swagger swagger27 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter28 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader29 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger27, logAdapter28);
        java.lang.reflect.Type[] typeArray30 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet31 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet31, typeArray30);
        springMvcApiReader29.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet31);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter34 = springMvcApiReader29.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap36 = null;
        java.lang.String str37 = springMvcApiReader29.parseOperationPath("", strMap36);
        io.swagger.annotations.Api api39 = null;
        boolean boolean40 = springMvcApiReader29.canReadApi(false, api39);
        java.util.Map<java.lang.String, java.lang.String> strMap42 = null;
        java.lang.String str43 = springMvcApiReader29.parseOperationPath("hi!", strMap42);
        springMvcApiReader29.updateExtensionChain();
        java.lang.String[] strArray46 = new java.lang.String[] { "/hi!" };
        java.lang.String[] strArray47 = new java.lang.String[] {};
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap48 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray49 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList50 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList50, securityRequirementArray49);
        io.swagger.models.Operation operation52 = null;
        springMvcApiReader29.updateOperation(strArray46, strArray47, strMap48, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList50, operation52);
        io.swagger.models.Operation operation54 = null;
        java.lang.String[] strArray55 = springMvcApiReader2.updateOperationProduces(strArray26, strArray47, operation54);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter56 = null;
        springMvcApiReader2.LOG = logAdapter56;
        java.lang.Class<?> wildcardClass58 = springMvcApiReader2.getClass();
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeSet20);
        org.junit.Assert.assertNotNull(typeSet22);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(typeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(logAdapter34);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "/hi!" + "'", str43, "/hi!");
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNotNull(securityRequirementArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test02609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02609");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        springMvcApiReader2.LOG = logAdapter8;
        springMvcApiReader2.updateExtensionChain();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = null;
        java.lang.String str13 = springMvcApiReader2.parseOperationPath("", strMap12);
        io.swagger.annotations.Api api15 = null;
        boolean boolean16 = springMvcApiReader2.canReadApi(false, api15);
        java.util.Set<java.lang.reflect.Type> typeSet17 = springMvcApiReader2.getTypesToSkip();
        io.swagger.annotations.Api api18 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.lang.String> strSet19 = springMvcApiReader2.extractTags(api18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(typeSet17);
    }

    @Test
    public void test02610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02610");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.models.Swagger swagger3 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter4 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader5 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger3, logAdapter4);
        java.lang.reflect.Type[] typeArray6 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet7 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet7, typeArray6);
        springMvcApiReader5.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet7);
        java.lang.annotation.Annotation[] annotationArray10 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList11 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList11, annotationArray10);
        boolean boolean13 = springMvcApiReader5.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList11);
        boolean boolean14 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList11);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type[] typeArray18 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet19 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet19, typeArray18);
        springMvcApiReader17.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet19);
        java.lang.annotation.Annotation[] annotationArray22 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList23 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList23, annotationArray22);
        boolean boolean25 = springMvcApiReader17.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList23);
        boolean boolean26 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList23);
        io.swagger.models.Operation operation27 = null;
        io.swagger.annotations.ApiOperation apiOperation28 = null;
        springMvcApiReader2.updateTagsForOperation(operation27, apiOperation28);
        io.swagger.models.Swagger swagger30 = null;
        springMvcApiReader2.swagger = swagger30;
        io.swagger.models.Operation operation34 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updatePath("/hi!", "", operation34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(annotationArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(typeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(annotationArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test02611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02611");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader2.parseOperationPath("hi!", strMap15);
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.Class<?> wildcardClass20 = springMvcApiReader19.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass20);
        io.swagger.models.Swagger swagger22 = null;
        springMvcApiReader2.swagger = swagger22;
        io.swagger.models.Swagger swagger24 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger25 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter26 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader27 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger25, logAdapter26);
        java.lang.reflect.Type type28 = null;
        springMvcApiReader27.addTypeToSkippedTypes(type28);
        io.swagger.models.Swagger swagger30 = springMvcApiReader27.swagger;
        io.swagger.models.Swagger swagger31 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter32 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader33 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger31, logAdapter32);
        java.lang.reflect.Type[] typeArray34 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet35 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet35, typeArray34);
        springMvcApiReader33.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet35);
        io.swagger.models.Swagger swagger38 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter39 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader40 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger38, logAdapter39);
        java.lang.reflect.Type[] typeArray41 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet42 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet42, typeArray41);
        springMvcApiReader40.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet42);
        springMvcApiReader33.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet42);
        io.swagger.models.Swagger swagger46 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter47 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader48 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger46, logAdapter47);
        java.lang.reflect.Type[] typeArray49 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet50 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet50, typeArray49);
        springMvcApiReader48.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet50);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter53 = springMvcApiReader48.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap55 = null;
        java.lang.String str56 = springMvcApiReader48.parseOperationPath("", strMap55);
        io.swagger.annotations.Api api58 = null;
        boolean boolean59 = springMvcApiReader48.canReadApi(false, api58);
        java.util.Map<java.lang.String, java.lang.String> strMap61 = null;
        java.lang.String str62 = springMvcApiReader48.parseOperationPath("hi!", strMap61);
        io.swagger.models.Swagger swagger63 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter64 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader65 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger63, logAdapter64);
        java.lang.Class<?> wildcardClass66 = springMvcApiReader65.getClass();
        springMvcApiReader48.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass66);
        springMvcApiReader33.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass66);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter69 = springMvcApiReader33.LOG;
        io.swagger.models.Swagger swagger70 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter71 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader72 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger70, logAdapter71);
        java.lang.reflect.Type[] typeArray73 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet74 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet74, typeArray73);
        springMvcApiReader72.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet74);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter77 = springMvcApiReader72.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap79 = null;
        java.lang.String str80 = springMvcApiReader72.parseOperationPath("", strMap79);
        java.lang.reflect.Type[] typeArray81 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList82 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList82, typeArray81);
        springMvcApiReader72.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList82);
        springMvcApiReader33.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList82);
        springMvcApiReader27.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList82);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList82);
        io.swagger.annotations.Api api89 = null;
        boolean boolean90 = springMvcApiReader2.canReadApi(false, api89);
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap91 = null;
        io.swagger.annotations.Api api92 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, io.swagger.models.Tag> strMap93 = springMvcApiReader2.updateTagsForApi(strMap91, api92);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/hi!" + "'", str16, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNull(swagger24);
        org.junit.Assert.assertNull(swagger30);
        org.junit.Assert.assertNotNull(typeArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(typeArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(typeArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNull(logAdapter53);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "/hi!" + "'", str62, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNull(logAdapter69);
        org.junit.Assert.assertNotNull(typeArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNull(logAdapter77);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "" + "'", str80, "");
        org.junit.Assert.assertNotNull(typeArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
    }

    @Test
    public void test02612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02612");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.util.Set<java.lang.reflect.Type> typeSet7 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger8 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader10 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger8, logAdapter9);
        java.lang.reflect.Type[] typeArray11 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet12 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet12, typeArray11);
        springMvcApiReader10.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet12);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter15 = springMvcApiReader10.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap17 = null;
        java.lang.String str18 = springMvcApiReader10.parseOperationPath("", strMap17);
        io.swagger.annotations.Api api20 = null;
        boolean boolean21 = springMvcApiReader10.canReadApi(false, api20);
        java.util.Map<java.lang.String, java.lang.String> strMap23 = null;
        java.lang.String str24 = springMvcApiReader10.parseOperationPath("hi!", strMap23);
        io.swagger.models.Swagger swagger25 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter26 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader27 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger25, logAdapter26);
        java.lang.reflect.Type[] typeArray28 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet29 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet29, typeArray28);
        springMvcApiReader27.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet29);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.reflect.Type[] typeArray35 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet36 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet36, typeArray35);
        springMvcApiReader34.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet36);
        springMvcApiReader27.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet36);
        io.swagger.models.Swagger swagger40 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter41 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader42 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger40, logAdapter41);
        java.lang.reflect.Type[] typeArray43 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet44 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet44, typeArray43);
        springMvcApiReader42.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet44);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter47 = springMvcApiReader42.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap49 = null;
        java.lang.String str50 = springMvcApiReader42.parseOperationPath("", strMap49);
        io.swagger.annotations.Api api52 = null;
        boolean boolean53 = springMvcApiReader42.canReadApi(false, api52);
        java.util.Map<java.lang.String, java.lang.String> strMap55 = null;
        java.lang.String str56 = springMvcApiReader42.parseOperationPath("hi!", strMap55);
        io.swagger.models.Swagger swagger57 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter58 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader59 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger57, logAdapter58);
        java.lang.Class<?> wildcardClass60 = springMvcApiReader59.getClass();
        springMvcApiReader42.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass60);
        springMvcApiReader27.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass60);
        springMvcApiReader10.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass60);
        io.swagger.models.Swagger swagger64 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter65 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader66 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger64, logAdapter65);
        java.lang.reflect.Type[] typeArray67 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet68 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet68, typeArray67);
        springMvcApiReader66.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet68);
        java.lang.annotation.Annotation[] annotationArray71 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList72 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList72, annotationArray71);
        boolean boolean74 = springMvcApiReader66.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList72);
        io.swagger.models.Swagger swagger75 = null;
        springMvcApiReader66.swagger = swagger75;
        java.lang.annotation.Annotation[] annotationArray77 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList78 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList78, annotationArray77);
        boolean boolean80 = springMvcApiReader66.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList78);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList81 = springMvcApiReader2.getParameters((java.lang.reflect.Type) wildcardClass60, (java.util.List<java.lang.annotation.Annotation>) annotationList78);
        java.util.Set<java.lang.reflect.Type> typeSet82 = springMvcApiReader2.getTypesToSkip();
        springMvcApiReader2.updateExtensionChain();
        io.swagger.annotations.ApiOperation apiOperation84 = null;
        io.swagger.models.Operation operation85 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateOperationProtocols(apiOperation84, operation85);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeSet7);
        org.junit.Assert.assertNotNull(typeArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(logAdapter15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "/hi!" + "'", str24, "/hi!");
        org.junit.Assert.assertNotNull(typeArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(typeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(typeArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(logAdapter47);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "/hi!" + "'", str56, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(typeArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(annotationArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(annotationArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(parameterList81);
        org.junit.Assert.assertNotNull(typeSet82);
    }

    @Test
    public void test02613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02613");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.models.Swagger swagger3 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter4 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader5 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger3, logAdapter4);
        java.lang.reflect.Type[] typeArray6 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet7 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet7, typeArray6);
        springMvcApiReader5.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet7);
        java.lang.annotation.Annotation[] annotationArray10 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList11 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList11, annotationArray10);
        boolean boolean13 = springMvcApiReader5.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList11);
        boolean boolean14 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList11);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type[] typeArray18 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet19 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet19, typeArray18);
        springMvcApiReader17.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet19);
        java.lang.annotation.Annotation[] annotationArray22 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList23 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList23, annotationArray22);
        boolean boolean25 = springMvcApiReader17.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList23);
        boolean boolean26 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList23);
        java.util.Set<java.lang.reflect.Type> typeSet27 = null;
        springMvcApiReader2.typesToSkip = typeSet27;
        io.swagger.models.Swagger swagger29 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter30 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader31 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger29, logAdapter30);
        java.lang.reflect.Type[] typeArray32 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet33 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet33, typeArray32);
        springMvcApiReader31.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet33);
        java.lang.annotation.Annotation[] annotationArray36 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList37 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList37, annotationArray36);
        boolean boolean39 = springMvcApiReader31.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList37);
        io.swagger.models.Swagger swagger40 = null;
        springMvcApiReader31.swagger = swagger40;
        io.swagger.annotations.ResponseHeader[] responseHeaderArray42 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap43 = springMvcApiReader31.parseResponseHeaders(responseHeaderArray42);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap44 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray42);
        io.swagger.models.Swagger swagger45 = null;
        springMvcApiReader2.swagger = swagger45;
        io.swagger.models.Operation operation49 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updatePath("", "hi!", operation49);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(annotationArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(typeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(annotationArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(typeArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(annotationArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(responseHeaderArray42);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNull(strMap44);
    }

    @Test
    public void test02614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02614");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.models.Swagger swagger11 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter12 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader13 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger11, logAdapter12);
        java.lang.Class<?> wildcardClass14 = springMvcApiReader13.getClass();
        java.lang.reflect.Type[] typeArray15 = new java.lang.reflect.Type[] { wildcardClass14 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet16 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet16, typeArray15);
        springMvcApiReader2.typesToSkip = typeSet16;
        java.util.Set<java.lang.reflect.Type> typeSet19 = springMvcApiReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet20 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Operation operation21 = null;
        io.swagger.annotations.ApiOperation apiOperation22 = null;
        springMvcApiReader2.updateTagsForOperation(operation21, apiOperation22);
        io.swagger.models.Operation operation24 = null;
        io.swagger.annotations.ApiOperation apiOperation25 = null;
        springMvcApiReader2.updateTagsForOperation(operation24, apiOperation25);
        io.swagger.models.Swagger swagger27 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter28 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader29 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger27, logAdapter28);
        java.lang.reflect.Type[] typeArray30 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet31 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet31, typeArray30);
        springMvcApiReader29.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet31);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter34 = springMvcApiReader29.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap36 = null;
        java.lang.String str37 = springMvcApiReader29.parseOperationPath("", strMap36);
        io.swagger.models.Swagger swagger38 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter39 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader40 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger38, logAdapter39);
        java.lang.Class<?> wildcardClass41 = springMvcApiReader40.getClass();
        java.lang.reflect.Type[] typeArray42 = new java.lang.reflect.Type[] { wildcardClass41 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet43 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet43, typeArray42);
        springMvcApiReader29.typesToSkip = typeSet43;
        io.swagger.models.Operation operation46 = null;
        io.swagger.annotations.ApiOperation apiOperation47 = null;
        springMvcApiReader29.updateTagsForOperation(operation46, apiOperation47);
        io.swagger.models.Operation operation49 = null;
        io.swagger.annotations.ApiOperation apiOperation50 = null;
        springMvcApiReader29.updateTagsForOperation(operation49, apiOperation50);
        io.swagger.models.Swagger swagger52 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter53 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader54 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger52, logAdapter53);
        java.lang.reflect.Type[] typeArray55 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet56 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet56, typeArray55);
        springMvcApiReader54.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet56);
        java.util.Set<java.lang.reflect.Type> typeSet59 = springMvcApiReader54.typesToSkip;
        springMvcApiReader54.updateExtensionChain();
        io.swagger.models.Swagger swagger61 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter62 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader63 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger61, logAdapter62);
        java.lang.Class<?> wildcardClass64 = springMvcApiReader63.getClass();
        springMvcApiReader54.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass64);
        io.swagger.models.Swagger swagger66 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter67 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader68 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger66, logAdapter67);
        java.lang.Class<?> wildcardClass69 = springMvcApiReader68.getClass();
        java.lang.annotation.Annotation[] annotationArray70 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList71 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList71, annotationArray70);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList73 = springMvcApiReader54.getParameters((java.lang.reflect.Type) wildcardClass69, (java.util.List<java.lang.annotation.Annotation>) annotationList71);
        springMvcApiReader29.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass69);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass69);
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(typeArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(typeSet19);
        org.junit.Assert.assertNotNull(typeSet20);
        org.junit.Assert.assertNotNull(typeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(logAdapter34);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(typeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(typeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(typeSet59);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(annotationArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(parameterList73);
    }

    @Test
    public void test02615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02615");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        java.lang.reflect.Type[] typeArray11 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList12 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList12, typeArray11);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList12);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!", "", "hi!" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap20 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray21 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList22 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList22, securityRequirementArray21);
        io.swagger.models.Operation operation24 = null;
        springMvcApiReader2.updateOperation(strArray15, strArray19, strMap20, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList22, operation24);
        java.util.Map<java.lang.String, java.lang.String> strMap27 = null;
        java.lang.String str28 = springMvcApiReader2.parseOperationPath("", strMap27);
        io.swagger.models.Operation operation29 = null;
        io.swagger.annotations.ApiOperation apiOperation30 = null;
        springMvcApiReader2.updateTagsForOperation(operation29, apiOperation30);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray32 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap33 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray32);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter34 = springMvcApiReader2.LOG;
        io.swagger.annotations.ApiOperation apiOperation35 = null;
        io.swagger.models.Operation operation36 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateOperationProtocols(apiOperation35, operation36);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(typeArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(securityRequirementArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNull(strMap33);
        org.junit.Assert.assertNull(logAdapter34);
    }

    @Test
    public void test02616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02616");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader2.parseOperationPath("hi!", strMap15);
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.reflect.Type[] typeArray20 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet21 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet21, typeArray20);
        springMvcApiReader19.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet21);
        io.swagger.models.Swagger swagger24 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter25 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader26 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger24, logAdapter25);
        java.lang.reflect.Type[] typeArray27 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet28 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet28, typeArray27);
        springMvcApiReader26.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet28);
        springMvcApiReader19.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet28);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.reflect.Type[] typeArray35 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet36 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet36, typeArray35);
        springMvcApiReader34.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet36);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter39 = springMvcApiReader34.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap41 = null;
        java.lang.String str42 = springMvcApiReader34.parseOperationPath("", strMap41);
        io.swagger.annotations.Api api44 = null;
        boolean boolean45 = springMvcApiReader34.canReadApi(false, api44);
        java.util.Map<java.lang.String, java.lang.String> strMap47 = null;
        java.lang.String str48 = springMvcApiReader34.parseOperationPath("hi!", strMap47);
        io.swagger.models.Swagger swagger49 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter50 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader51 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger49, logAdapter50);
        java.lang.Class<?> wildcardClass52 = springMvcApiReader51.getClass();
        springMvcApiReader34.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        springMvcApiReader19.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        io.swagger.models.Swagger swagger56 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter57 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader58 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger56, logAdapter57);
        java.lang.reflect.Type[] typeArray59 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet60 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet60, typeArray59);
        springMvcApiReader58.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet60);
        java.util.Set<java.lang.reflect.Type> typeSet63 = springMvcApiReader58.typesToSkip;
        springMvcApiReader2.typesToSkip = typeSet63;
        io.swagger.annotations.Api api66 = null;
        boolean boolean67 = springMvcApiReader2.canReadApi(true, api66);
        java.util.Set<java.lang.reflect.Type> typeSet68 = springMvcApiReader2.typesToSkip;
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap69 = null;
        io.swagger.annotations.Api api70 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, io.swagger.models.Tag> strMap71 = springMvcApiReader2.updateTagsForApi(strMap69, api70);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/hi!" + "'", str16, "/hi!");
        org.junit.Assert.assertNotNull(typeArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(typeArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(typeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(logAdapter39);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "/hi!" + "'", str48, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(typeArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(typeSet63);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(typeSet68);
    }

    @Test
    public void test02617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02617");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type type18 = null;
        springMvcApiReader17.addTypeToSkippedTypes(type18);
        java.util.Set<java.lang.reflect.Type> typeSet20 = springMvcApiReader17.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet20);
        io.swagger.models.Swagger swagger22 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader24 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger22, logAdapter23);
        java.lang.reflect.Type[] typeArray25 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet26 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet26, typeArray25);
        springMvcApiReader24.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet26);
        io.swagger.models.Swagger swagger29 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter30 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader31 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger29, logAdapter30);
        java.lang.reflect.Type[] typeArray32 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet33 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet33, typeArray32);
        springMvcApiReader31.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet33);
        springMvcApiReader24.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet33);
        io.swagger.models.Swagger swagger37 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter38 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader39 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger37, logAdapter38);
        java.lang.reflect.Type[] typeArray40 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet41 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet41, typeArray40);
        springMvcApiReader39.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet41);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter44 = springMvcApiReader39.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap46 = null;
        java.lang.String str47 = springMvcApiReader39.parseOperationPath("", strMap46);
        io.swagger.annotations.Api api49 = null;
        boolean boolean50 = springMvcApiReader39.canReadApi(false, api49);
        java.util.Map<java.lang.String, java.lang.String> strMap52 = null;
        java.lang.String str53 = springMvcApiReader39.parseOperationPath("hi!", strMap52);
        io.swagger.models.Swagger swagger54 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter55 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader56 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger54, logAdapter55);
        java.lang.Class<?> wildcardClass57 = springMvcApiReader56.getClass();
        springMvcApiReader39.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass57);
        springMvcApiReader24.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass57);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter60 = springMvcApiReader24.LOG;
        io.swagger.models.Swagger swagger61 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter62 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader63 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger61, logAdapter62);
        java.lang.reflect.Type[] typeArray64 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet65 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet65, typeArray64);
        springMvcApiReader63.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet65);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter68 = springMvcApiReader63.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap70 = null;
        java.lang.String str71 = springMvcApiReader63.parseOperationPath("", strMap70);
        java.lang.reflect.Type[] typeArray72 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList73 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList73, typeArray72);
        springMvcApiReader63.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList73);
        springMvcApiReader24.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList73);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList73);
        io.swagger.models.Swagger swagger78 = springMvcApiReader2.swagger;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter79 = null;
        springMvcApiReader2.LOG = logAdapter79;
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap81 = null;
        io.swagger.annotations.Api api82 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, io.swagger.models.Tag> strMap83 = springMvcApiReader2.updateTagsForApi(strMap81, api82);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeSet20);
        org.junit.Assert.assertNotNull(typeArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(typeArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(typeArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(logAdapter44);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "/hi!" + "'", str53, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNull(logAdapter60);
        org.junit.Assert.assertNotNull(typeArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNull(logAdapter68);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "" + "'", str71, "");
        org.junit.Assert.assertNotNull(typeArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNull(swagger78);
    }

    @Test
    public void test02618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02618");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        java.lang.reflect.Type[] typeArray11 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList12 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList12, typeArray11);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList12);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!", "", "hi!" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap20 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray21 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList22 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList22, securityRequirementArray21);
        io.swagger.models.Operation operation24 = null;
        springMvcApiReader2.updateOperation(strArray15, strArray19, strMap20, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList22, operation24);
        java.util.Map<java.lang.String, java.lang.String> strMap27 = null;
        java.lang.String str28 = springMvcApiReader2.parseOperationPath("", strMap27);
        io.swagger.models.Operation operation29 = null;
        io.swagger.annotations.ApiOperation apiOperation30 = null;
        springMvcApiReader2.updateTagsForOperation(operation29, apiOperation30);
        io.swagger.models.Operation operation32 = null;
        io.swagger.annotations.ApiOperation apiOperation33 = null;
        springMvcApiReader2.updateTagsForOperation(operation32, apiOperation33);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Operation operation36 = null;
        io.swagger.annotations.ApiOperation apiOperation37 = null;
        springMvcApiReader2.updateTagsForOperation(operation36, apiOperation37);
        java.util.Map<java.lang.String, java.lang.String> strMap40 = null;
        java.lang.String str41 = springMvcApiReader2.parseOperationPath("/hi!", strMap40);
        io.swagger.models.Operation operation44 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updatePath("/hi!", "", operation44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(typeArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(securityRequirementArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "/hi!" + "'", str41, "/hi!");
    }

    @Test
    public void test02619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02619");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger8 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader10 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger8, logAdapter9);
        java.lang.reflect.Type[] typeArray11 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet12 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet12, typeArray11);
        springMvcApiReader10.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet12);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter15 = springMvcApiReader10.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap17 = null;
        java.lang.String str18 = springMvcApiReader10.parseOperationPath("", strMap17);
        io.swagger.models.Swagger swagger19 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter20 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader21 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger19, logAdapter20);
        java.lang.Class<?> wildcardClass22 = springMvcApiReader21.getClass();
        java.lang.reflect.Type[] typeArray23 = new java.lang.reflect.Type[] { wildcardClass22 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet24 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet24, typeArray23);
        springMvcApiReader10.typesToSkip = typeSet24;
        io.swagger.models.Operation operation27 = null;
        io.swagger.annotations.ApiOperation apiOperation28 = null;
        springMvcApiReader10.updateTagsForOperation(operation27, apiOperation28);
        io.swagger.models.Swagger swagger30 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter31 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader32 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger30, logAdapter31);
        java.lang.reflect.Type[] typeArray33 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet34 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet34, typeArray33);
        springMvcApiReader32.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet34);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter37 = springMvcApiReader32.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap39 = null;
        java.lang.String str40 = springMvcApiReader32.parseOperationPath("", strMap39);
        io.swagger.annotations.Api api42 = null;
        boolean boolean43 = springMvcApiReader32.canReadApi(false, api42);
        java.util.Map<java.lang.String, java.lang.String> strMap45 = null;
        java.lang.String str46 = springMvcApiReader32.parseOperationPath("hi!", strMap45);
        io.swagger.models.Swagger swagger47 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter48 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader49 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger47, logAdapter48);
        java.lang.reflect.Type[] typeArray50 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet51 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet51, typeArray50);
        springMvcApiReader49.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet51);
        io.swagger.models.Swagger swagger54 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter55 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader56 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger54, logAdapter55);
        java.lang.reflect.Type[] typeArray57 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet58 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet58, typeArray57);
        springMvcApiReader56.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet58);
        springMvcApiReader49.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet58);
        io.swagger.models.Swagger swagger62 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter63 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader64 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger62, logAdapter63);
        java.lang.reflect.Type[] typeArray65 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet66 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet66, typeArray65);
        springMvcApiReader64.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet66);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter69 = springMvcApiReader64.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap71 = null;
        java.lang.String str72 = springMvcApiReader64.parseOperationPath("", strMap71);
        io.swagger.annotations.Api api74 = null;
        boolean boolean75 = springMvcApiReader64.canReadApi(false, api74);
        java.util.Map<java.lang.String, java.lang.String> strMap77 = null;
        java.lang.String str78 = springMvcApiReader64.parseOperationPath("hi!", strMap77);
        io.swagger.models.Swagger swagger79 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter80 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader81 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger79, logAdapter80);
        java.lang.Class<?> wildcardClass82 = springMvcApiReader81.getClass();
        springMvcApiReader64.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass82);
        springMvcApiReader49.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass82);
        springMvcApiReader32.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass82);
        java.lang.annotation.Annotation[] annotationArray86 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList87 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList87, annotationArray86);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList89 = springMvcApiReader10.getParameters((java.lang.reflect.Type) wildcardClass82, (java.util.List<java.lang.annotation.Annotation>) annotationList87);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass82);
        io.swagger.models.Operation operation91 = null;
        io.swagger.annotations.ApiOperation apiOperation92 = null;
        springMvcApiReader2.updateTagsForOperation(operation91, apiOperation92);
        io.swagger.models.Operation operation94 = null;
        io.swagger.annotations.ApiResponses apiResponses95 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateApiResponse(operation94, apiResponses95);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(swagger7);
        org.junit.Assert.assertNotNull(typeArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(logAdapter15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(typeArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(typeArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(logAdapter37);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "/hi!" + "'", str46, "/hi!");
        org.junit.Assert.assertNotNull(typeArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(typeArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(typeArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNull(logAdapter69);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "" + "'", str72, "");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "/hi!" + "'", str78, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(annotationArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(parameterList89);
    }

    @Test
    public void test02620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02620");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader2.parseOperationPath("hi!", strMap15);
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.Class<?> wildcardClass20 = springMvcApiReader19.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass20);
        io.swagger.models.Swagger swagger22 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader24 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger22, logAdapter23);
        java.lang.reflect.Type[] typeArray25 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet26 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet26, typeArray25);
        springMvcApiReader24.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet26);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter29 = springMvcApiReader24.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap31 = null;
        java.lang.String str32 = springMvcApiReader24.parseOperationPath("", strMap31);
        io.swagger.annotations.Api api34 = null;
        boolean boolean35 = springMvcApiReader24.canReadApi(false, api34);
        java.util.Map<java.lang.String, java.lang.String> strMap37 = null;
        java.lang.String str38 = springMvcApiReader24.parseOperationPath("hi!", strMap37);
        io.swagger.models.Swagger swagger39 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter40 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader41 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger39, logAdapter40);
        java.lang.Class<?> wildcardClass42 = springMvcApiReader41.getClass();
        springMvcApiReader24.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass42);
        java.util.Map<java.lang.String, java.lang.String> strMap45 = null;
        java.lang.String str46 = springMvcApiReader24.parseOperationPath("/hi!", strMap45);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray47 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap48 = springMvcApiReader24.parseResponseHeaders(responseHeaderArray47);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap49 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray47);
        java.util.Map<java.lang.String, java.lang.String> strMap51 = null;
        java.lang.String str52 = springMvcApiReader2.parseOperationPath("", strMap51);
        io.swagger.models.Operation operation53 = null;
        io.swagger.annotations.ApiOperation apiOperation54 = null;
        springMvcApiReader2.updateTagsForOperation(operation53, apiOperation54);
        io.swagger.annotations.Api api56 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.lang.String> strSet57 = springMvcApiReader2.extractTags(api56);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/hi!" + "'", str16, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(typeArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(logAdapter29);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "/hi!" + "'", str38, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "/hi!" + "'", str46, "/hi!");
        org.junit.Assert.assertNotNull(responseHeaderArray47);
        org.junit.Assert.assertNull(strMap48);
        org.junit.Assert.assertNull(strMap49);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
    }

    @Test
    public void test02621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02621");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter3 = springMvcApiReader2.LOG;
        java.util.Set<java.lang.reflect.Type> typeSet4 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger5 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter6 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader7 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger5, logAdapter6);
        java.lang.reflect.Type[] typeArray8 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet9 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet9, typeArray8);
        springMvcApiReader7.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet9);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter12 = springMvcApiReader7.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap14 = null;
        java.lang.String str15 = springMvcApiReader7.parseOperationPath("", strMap14);
        java.lang.reflect.Type[] typeArray16 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList17 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList17, typeArray16);
        springMvcApiReader7.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList17);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList17);
        io.swagger.models.Swagger swagger21 = springMvcApiReader2.swagger;
        java.util.List<io.swagger.models.parameters.Parameter> parameterList22 = null;
        java.util.Map<java.lang.String, java.lang.String> strMap23 = null;
        io.swagger.models.Operation operation24 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateOperationParameters(parameterList22, strMap23, operation24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(logAdapter3);
        org.junit.Assert.assertNotNull(typeSet4);
        org.junit.Assert.assertNotNull(typeArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(logAdapter12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNotNull(typeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(swagger21);
    }

    @Test
    public void test02622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02622");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        java.lang.reflect.Type[] typeArray11 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList12 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList12, typeArray11);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList12);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!", "", "hi!" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap20 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray21 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList22 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList22, securityRequirementArray21);
        io.swagger.models.Operation operation24 = null;
        springMvcApiReader2.updateOperation(strArray15, strArray19, strMap20, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList22, operation24);
        java.util.Map<java.lang.String, java.lang.String> strMap27 = null;
        java.lang.String str28 = springMvcApiReader2.parseOperationPath("", strMap27);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger30 = null;
        springMvcApiReader2.swagger = swagger30;
        io.swagger.models.Operation operation32 = null;
        io.swagger.annotations.ApiOperation apiOperation33 = null;
        springMvcApiReader2.updateTagsForOperation(operation32, apiOperation33);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter35 = springMvcApiReader2.LOG;
        java.util.Set<java.lang.reflect.Type> typeSet36 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Operation operation39 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updatePath("/hi!", "", operation39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(typeArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(securityRequirementArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNull(logAdapter35);
        org.junit.Assert.assertNotNull(typeSet36);
    }

    @Test
    public void test02623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02623");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        java.lang.reflect.Type[] typeArray11 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList12 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList12, typeArray11);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList12);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!", "", "hi!" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap20 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray21 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList22 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList22, securityRequirementArray21);
        io.swagger.models.Operation operation24 = null;
        springMvcApiReader2.updateOperation(strArray15, strArray19, strMap20, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList22, operation24);
        java.util.Map<java.lang.String, java.lang.String> strMap27 = null;
        java.lang.String str28 = springMvcApiReader2.parseOperationPath("", strMap27);
        io.swagger.models.Operation operation29 = null;
        io.swagger.annotations.ApiOperation apiOperation30 = null;
        springMvcApiReader2.updateTagsForOperation(operation29, apiOperation30);
        io.swagger.models.Swagger swagger32 = springMvcApiReader2.swagger;
        java.util.Map<java.lang.String, java.lang.String> strMap34 = null;
        java.lang.String str35 = springMvcApiReader2.parseOperationPath("/hi!", strMap34);
        java.util.Map<java.lang.String, java.lang.String> strMap37 = null;
        java.lang.String str38 = springMvcApiReader2.parseOperationPath("", strMap37);
        io.swagger.models.Swagger swagger39 = null;
        springMvcApiReader2.swagger = swagger39;
        io.swagger.models.Operation operation41 = null;
        io.swagger.annotations.ApiOperation apiOperation42 = null;
        springMvcApiReader2.updateTagsForOperation(operation41, apiOperation42);
        java.lang.reflect.Method method44 = null;
        io.swagger.models.Operation operation45 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.readImplicitParameters(method44, operation45);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(typeArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(securityRequirementArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNull(swagger32);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "/hi!" + "'", str35, "/hi!");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
    }

    @Test
    public void test02624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02624");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.util.Set<java.lang.reflect.Type> typeSet7 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger8 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger9 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter10 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader11 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger9, logAdapter10);
        java.lang.reflect.Type[] typeArray12 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet13 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet13, typeArray12);
        springMvcApiReader11.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet13);
        java.lang.annotation.Annotation[] annotationArray16 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList17 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList17, annotationArray16);
        boolean boolean19 = springMvcApiReader11.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList17);
        io.swagger.models.Swagger swagger20 = null;
        springMvcApiReader11.swagger = swagger20;
        java.lang.annotation.Annotation[] annotationArray22 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList23 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList23, annotationArray22);
        boolean boolean25 = springMvcApiReader11.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList23);
        boolean boolean26 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList23);
        io.swagger.models.Swagger swagger27 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter28 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader29 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger27, logAdapter28);
        java.lang.reflect.Type[] typeArray30 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet31 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet31, typeArray30);
        springMvcApiReader29.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet31);
        java.lang.annotation.Annotation[] annotationArray34 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList35 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList35, annotationArray34);
        boolean boolean37 = springMvcApiReader29.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList35);
        io.swagger.models.Swagger swagger38 = null;
        springMvcApiReader29.swagger = swagger38;
        java.lang.annotation.Annotation[] annotationArray40 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList41 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList41, annotationArray40);
        boolean boolean43 = springMvcApiReader29.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList41);
        java.lang.Class<?> wildcardClass44 = annotationList41.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass44);
        java.lang.reflect.Method method46 = null;
        io.swagger.models.Operation operation47 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.readImplicitParameters(method46, operation47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeSet7);
        org.junit.Assert.assertNull(swagger8);
        org.junit.Assert.assertNotNull(typeArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(annotationArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(annotationArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(typeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(annotationArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(annotationArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test02625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02625");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        java.lang.reflect.Type[] typeArray11 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList12 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList12, typeArray11);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList12);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!", "", "hi!" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap20 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray21 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList22 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList22, securityRequirementArray21);
        io.swagger.models.Operation operation24 = null;
        springMvcApiReader2.updateOperation(strArray15, strArray19, strMap20, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList22, operation24);
        java.util.Map<java.lang.String, java.lang.String> strMap27 = null;
        java.lang.String str28 = springMvcApiReader2.parseOperationPath("", strMap27);
        io.swagger.models.Operation operation29 = null;
        io.swagger.annotations.ApiOperation apiOperation30 = null;
        springMvcApiReader2.updateTagsForOperation(operation29, apiOperation30);
        io.swagger.models.Swagger swagger32 = springMvcApiReader2.swagger;
        java.util.Map<java.lang.String, java.lang.String> strMap34 = null;
        java.lang.String str35 = springMvcApiReader2.parseOperationPath("/hi!", strMap34);
        java.util.Map<java.lang.String, java.lang.String> strMap37 = null;
        java.lang.String str38 = springMvcApiReader2.parseOperationPath("", strMap37);
        io.swagger.annotations.Api api40 = null;
        boolean boolean41 = springMvcApiReader2.canReadApi(true, api40);
        java.util.Set<java.lang.reflect.Type> typeSet42 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger43 = null;
        springMvcApiReader2.swagger = swagger43;
        java.lang.Class<?> wildcardClass45 = springMvcApiReader2.getClass();
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(typeArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(securityRequirementArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNull(swagger32);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "/hi!" + "'", str35, "/hi!");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(typeSet42);
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test02626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02626");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.models.Swagger swagger3 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter4 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader5 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger3, logAdapter4);
        java.lang.reflect.Type[] typeArray6 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet7 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet7, typeArray6);
        springMvcApiReader5.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet7);
        java.lang.annotation.Annotation[] annotationArray10 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList11 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList11, annotationArray10);
        boolean boolean13 = springMvcApiReader5.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList11);
        boolean boolean14 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList11);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type[] typeArray18 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet19 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet19, typeArray18);
        springMvcApiReader17.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet19);
        java.lang.annotation.Annotation[] annotationArray22 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList23 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList23, annotationArray22);
        boolean boolean25 = springMvcApiReader17.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList23);
        boolean boolean26 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList23);
        java.util.Set<java.lang.reflect.Type> typeSet27 = springMvcApiReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet28 = springMvcApiReader2.getTypesToSkip();
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger30 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter31 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader32 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger30, logAdapter31);
        java.lang.reflect.Type type33 = null;
        springMvcApiReader32.addTypeToSkippedTypes(type33);
        io.swagger.models.Swagger swagger35 = springMvcApiReader32.swagger;
        io.swagger.models.Swagger swagger36 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter37 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader38 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger36, logAdapter37);
        java.lang.reflect.Type type39 = null;
        springMvcApiReader38.addTypeToSkippedTypes(type39);
        java.util.Set<java.lang.reflect.Type> typeSet41 = springMvcApiReader38.typesToSkip;
        springMvcApiReader32.setTypesToSkip(typeSet41);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter43 = springMvcApiReader32.LOG;
        io.swagger.models.Swagger swagger44 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter45 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader46 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger44, logAdapter45);
        java.lang.reflect.Type[] typeArray47 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet48 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet48, typeArray47);
        springMvcApiReader46.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet48);
        io.swagger.models.Swagger swagger51 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter52 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader53 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger51, logAdapter52);
        java.lang.reflect.Type[] typeArray54 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet55 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet55, typeArray54);
        springMvcApiReader53.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet55);
        springMvcApiReader46.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet55);
        io.swagger.models.Swagger swagger59 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter60 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader61 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger59, logAdapter60);
        java.lang.reflect.Type type62 = null;
        springMvcApiReader61.addTypeToSkippedTypes(type62);
        java.util.Set<java.lang.reflect.Type> typeSet64 = springMvcApiReader61.typesToSkip;
        springMvcApiReader46.setTypesToSkip(typeSet64);
        java.util.Set<java.lang.reflect.Type> typeSet66 = springMvcApiReader46.typesToSkip;
        io.swagger.models.Swagger swagger67 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter68 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader69 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger67, logAdapter68);
        java.lang.reflect.Type[] typeArray70 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet71 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet71, typeArray70);
        springMvcApiReader69.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet71);
        java.util.Set<java.lang.reflect.Type> typeSet74 = springMvcApiReader69.typesToSkip;
        io.swagger.models.Swagger swagger75 = springMvcApiReader69.swagger;
        io.swagger.models.Swagger swagger76 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter77 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader78 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger76, logAdapter77);
        java.lang.reflect.Type[] typeArray79 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet80 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet80, typeArray79);
        springMvcApiReader78.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet80);
        java.lang.annotation.Annotation[] annotationArray83 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList84 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList84, annotationArray83);
        boolean boolean86 = springMvcApiReader78.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList84);
        io.swagger.models.Swagger swagger87 = null;
        springMvcApiReader78.swagger = swagger87;
        java.lang.annotation.Annotation[] annotationArray89 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList90 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean91 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList90, annotationArray89);
        boolean boolean92 = springMvcApiReader78.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList90);
        boolean boolean93 = springMvcApiReader69.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList90);
        boolean boolean94 = springMvcApiReader46.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList90);
        boolean boolean95 = springMvcApiReader32.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList90);
        boolean boolean96 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList90);
        io.swagger.annotations.ApiOperation apiOperation97 = null;
        io.swagger.models.Operation operation98 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateOperationProtocols(apiOperation97, operation98);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(annotationArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(typeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(annotationArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(typeSet27);
        org.junit.Assert.assertNotNull(typeSet28);
        org.junit.Assert.assertNull(swagger35);
        org.junit.Assert.assertNotNull(typeSet41);
        org.junit.Assert.assertNull(logAdapter43);
        org.junit.Assert.assertNotNull(typeArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(typeArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(typeSet64);
        org.junit.Assert.assertNotNull(typeSet66);
        org.junit.Assert.assertNotNull(typeArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(typeSet74);
        org.junit.Assert.assertNull(swagger75);
        org.junit.Assert.assertNotNull(typeArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(annotationArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(annotationArray89);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
    }

    @Test
    public void test02627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02627");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader2.parseOperationPath("hi!", strMap15);
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.reflect.Type[] typeArray20 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet21 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet21, typeArray20);
        springMvcApiReader19.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet21);
        io.swagger.models.Swagger swagger24 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter25 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader26 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger24, logAdapter25);
        java.lang.reflect.Type[] typeArray27 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet28 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet28, typeArray27);
        springMvcApiReader26.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet28);
        springMvcApiReader19.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet28);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.reflect.Type[] typeArray35 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet36 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet36, typeArray35);
        springMvcApiReader34.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet36);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter39 = springMvcApiReader34.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap41 = null;
        java.lang.String str42 = springMvcApiReader34.parseOperationPath("", strMap41);
        io.swagger.annotations.Api api44 = null;
        boolean boolean45 = springMvcApiReader34.canReadApi(false, api44);
        java.util.Map<java.lang.String, java.lang.String> strMap47 = null;
        java.lang.String str48 = springMvcApiReader34.parseOperationPath("hi!", strMap47);
        io.swagger.models.Swagger swagger49 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter50 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader51 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger49, logAdapter50);
        java.lang.Class<?> wildcardClass52 = springMvcApiReader51.getClass();
        springMvcApiReader34.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        springMvcApiReader19.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        io.swagger.models.Operation operation56 = null;
        io.swagger.annotations.ApiOperation apiOperation57 = null;
        springMvcApiReader2.updateTagsForOperation(operation56, apiOperation57);
        io.swagger.models.Operation operation59 = null;
        io.swagger.annotations.ApiOperation apiOperation60 = null;
        springMvcApiReader2.updateTagsForOperation(operation59, apiOperation60);
        java.util.Set<java.lang.reflect.Type> typeSet62 = springMvcApiReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet63 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Operation operation64 = null;
        io.swagger.annotations.ApiResponses apiResponses65 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateApiResponse(operation64, apiResponses65);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/hi!" + "'", str16, "/hi!");
        org.junit.Assert.assertNotNull(typeArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(typeArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(typeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(logAdapter39);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "/hi!" + "'", str48, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(typeSet62);
        org.junit.Assert.assertNotNull(typeSet63);
    }

    @Test
    public void test02628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02628");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        java.lang.reflect.Type[] typeArray11 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList12 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList12, typeArray11);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList12);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!", "", "hi!" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap20 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray21 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList22 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList22, securityRequirementArray21);
        io.swagger.models.Operation operation24 = null;
        springMvcApiReader2.updateOperation(strArray15, strArray19, strMap20, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList22, operation24);
        java.util.Map<java.lang.String, java.lang.String> strMap27 = null;
        java.lang.String str28 = springMvcApiReader2.parseOperationPath("", strMap27);
        springMvcApiReader2.updateExtensionChain();
        java.util.Map<java.lang.String, java.lang.String> strMap31 = null;
        java.lang.String str32 = springMvcApiReader2.parseOperationPath("/hi!", strMap31);
        java.util.Map<java.lang.String, java.lang.String> strMap34 = null;
        java.lang.String str35 = springMvcApiReader2.parseOperationPath("/hi!", strMap34);
        io.swagger.models.Swagger swagger36 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter37 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader38 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger36, logAdapter37);
        java.lang.reflect.Type[] typeArray39 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet40 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet40, typeArray39);
        springMvcApiReader38.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet40);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter43 = springMvcApiReader38.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap45 = null;
        java.lang.String str46 = springMvcApiReader38.parseOperationPath("", strMap45);
        io.swagger.models.Swagger swagger47 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter48 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader49 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger47, logAdapter48);
        java.lang.Class<?> wildcardClass50 = springMvcApiReader49.getClass();
        java.lang.reflect.Type[] typeArray51 = new java.lang.reflect.Type[] { wildcardClass50 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet52 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet52, typeArray51);
        springMvcApiReader38.typesToSkip = typeSet52;
        java.util.Set<java.lang.reflect.Type> typeSet55 = springMvcApiReader38.getTypesToSkip();
        java.util.Map<java.lang.String, java.lang.String> strMap57 = null;
        java.lang.String str58 = springMvcApiReader38.parseOperationPath("/hi!", strMap57);
        java.util.Set<java.lang.reflect.Type> typeSet59 = springMvcApiReader38.getTypesToSkip();
        io.swagger.models.Swagger swagger60 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter61 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader62 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger60, logAdapter61);
        java.lang.reflect.Type[] typeArray63 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet64 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet64, typeArray63);
        springMvcApiReader62.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet64);
        java.lang.annotation.Annotation[] annotationArray67 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList68 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList68, annotationArray67);
        boolean boolean70 = springMvcApiReader62.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList68);
        io.swagger.models.Swagger swagger71 = null;
        springMvcApiReader62.swagger = swagger71;
        io.swagger.annotations.ResponseHeader[] responseHeaderArray73 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap74 = springMvcApiReader62.parseResponseHeaders(responseHeaderArray73);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap75 = springMvcApiReader38.parseResponseHeaders(responseHeaderArray73);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap76 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray73);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter77 = null;
        springMvcApiReader2.LOG = logAdapter77;
        io.swagger.annotations.Api api79 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.lang.String> strSet80 = springMvcApiReader2.extractTags(api79);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(typeArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(securityRequirementArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "/hi!" + "'", str32, "/hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "/hi!" + "'", str35, "/hi!");
        org.junit.Assert.assertNotNull(typeArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(logAdapter43);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(typeArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(typeSet55);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "/hi!" + "'", str58, "/hi!");
        org.junit.Assert.assertNotNull(typeSet59);
        org.junit.Assert.assertNotNull(typeArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(annotationArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(responseHeaderArray73);
        org.junit.Assert.assertNull(strMap74);
        org.junit.Assert.assertNull(strMap75);
        org.junit.Assert.assertNull(strMap76);
    }

    @Test
    public void test02629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02629");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type[] typeArray18 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet19 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet19, typeArray18);
        springMvcApiReader17.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet19);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = springMvcApiReader17.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap24 = null;
        java.lang.String str25 = springMvcApiReader17.parseOperationPath("", strMap24);
        io.swagger.annotations.Api api27 = null;
        boolean boolean28 = springMvcApiReader17.canReadApi(false, api27);
        java.util.Map<java.lang.String, java.lang.String> strMap30 = null;
        java.lang.String str31 = springMvcApiReader17.parseOperationPath("hi!", strMap30);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.Class<?> wildcardClass35 = springMvcApiReader34.getClass();
        springMvcApiReader17.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        java.util.Set<java.lang.reflect.Type> typeSet38 = springMvcApiReader2.getTypesToSkip();
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger40 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter41 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader42 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger40, logAdapter41);
        java.lang.reflect.Type type43 = null;
        springMvcApiReader42.addTypeToSkippedTypes(type43);
        java.util.Set<java.lang.reflect.Type> typeSet45 = springMvcApiReader42.typesToSkip;
        io.swagger.models.Swagger swagger46 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter47 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader48 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger46, logAdapter47);
        java.lang.reflect.Type[] typeArray49 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet50 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet50, typeArray49);
        springMvcApiReader48.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet50);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter53 = springMvcApiReader48.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap55 = null;
        java.lang.String str56 = springMvcApiReader48.parseOperationPath("", strMap55);
        io.swagger.annotations.Api api58 = null;
        boolean boolean59 = springMvcApiReader48.canReadApi(false, api58);
        java.util.Map<java.lang.String, java.lang.String> strMap61 = null;
        java.lang.String str62 = springMvcApiReader48.parseOperationPath("hi!", strMap61);
        io.swagger.models.Swagger swagger63 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter64 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader65 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger63, logAdapter64);
        java.lang.Class<?> wildcardClass66 = springMvcApiReader65.getClass();
        springMvcApiReader48.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass66);
        java.util.Map<java.lang.String, java.lang.String> strMap69 = null;
        java.lang.String str70 = springMvcApiReader48.parseOperationPath("/hi!", strMap69);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray71 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap72 = springMvcApiReader48.parseResponseHeaders(responseHeaderArray71);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap73 = springMvcApiReader42.parseResponseHeaders(responseHeaderArray71);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap74 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray71);
        springMvcApiReader2.updateExtensionChain();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter76 = null;
        springMvcApiReader2.LOG = logAdapter76;
        io.swagger.models.Swagger swagger78 = springMvcApiReader2.swagger;
        java.util.Set<java.lang.reflect.Type> typeSet79 = springMvcApiReader2.typesToSkip;
        java.util.Map<java.lang.String, java.lang.String> strMap81 = null;
        java.lang.String str82 = springMvcApiReader2.parseOperationPath("hi!", strMap81);
        io.swagger.annotations.ApiOperation apiOperation83 = null;
        io.swagger.models.Operation operation84 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateOperationProtocols(apiOperation83, operation84);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(logAdapter22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "/hi!" + "'", str31, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(typeSet38);
        org.junit.Assert.assertNotNull(typeSet45);
        org.junit.Assert.assertNotNull(typeArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNull(logAdapter53);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "/hi!" + "'", str62, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "/hi!" + "'", str70, "/hi!");
        org.junit.Assert.assertNotNull(responseHeaderArray71);
        org.junit.Assert.assertNull(strMap72);
        org.junit.Assert.assertNull(strMap73);
        org.junit.Assert.assertNull(strMap74);
        org.junit.Assert.assertNull(swagger78);
        org.junit.Assert.assertNotNull(typeSet79);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "/hi!" + "'", str82, "/hi!");
    }

    @Test
    public void test02630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02630");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader2.parseOperationPath("hi!", strMap15);
        io.swagger.models.Operation operation17 = null;
        io.swagger.annotations.ApiOperation apiOperation18 = null;
        springMvcApiReader2.updateTagsForOperation(operation17, apiOperation18);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.annotations.Api api22 = null;
        boolean boolean23 = springMvcApiReader2.canReadApi(false, api22);
        io.swagger.models.Swagger swagger24 = springMvcApiReader2.swagger;
        io.swagger.annotations.Api api25 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.lang.String> strSet26 = springMvcApiReader2.extractTags(api25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/hi!" + "'", str16, "/hi!");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(swagger24);
    }

    @Test
    public void test02631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02631");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        java.util.Set<java.lang.reflect.Type> typeSet5 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet6 = springMvcApiReader2.getTypesToSkip();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = null;
        java.lang.String str9 = springMvcApiReader2.parseOperationPath("", strMap8);
        io.swagger.models.Operation operation10 = null;
        io.swagger.annotations.ApiOperation apiOperation11 = null;
        springMvcApiReader2.updateTagsForOperation(operation10, apiOperation11);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter13 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger14 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter15 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader16 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger14, logAdapter15);
        java.lang.reflect.Type[] typeArray17 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet18 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet18, typeArray17);
        springMvcApiReader16.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet18);
        java.lang.annotation.Annotation[] annotationArray21 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList22 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList22, annotationArray21);
        boolean boolean24 = springMvcApiReader16.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList22);
        io.swagger.models.Swagger swagger25 = null;
        springMvcApiReader16.swagger = swagger25;
        java.lang.annotation.Annotation[] annotationArray27 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList28 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList28, annotationArray27);
        boolean boolean30 = springMvcApiReader16.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList28);
        java.lang.Class<?> wildcardClass31 = annotationList28.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass31);
        java.util.Map<java.lang.String, java.lang.String> strMap34 = null;
        java.lang.String str35 = springMvcApiReader2.parseOperationPath("hi!", strMap34);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter36 = springMvcApiReader2.LOG;
        io.swagger.models.Operation operation37 = null;
        io.swagger.annotations.ApiResponses apiResponses38 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateApiResponse(operation37, apiResponses38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeSet5);
        org.junit.Assert.assertNotNull(typeSet6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNull(logAdapter13);
        org.junit.Assert.assertNotNull(typeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(annotationArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(annotationArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "/hi!" + "'", str35, "/hi!");
        org.junit.Assert.assertNull(logAdapter36);
    }

    @Test
    public void test02632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02632");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.lang.annotation.Annotation[] annotationArray7 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList8 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList8, annotationArray7);
        boolean boolean10 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList8);
        io.swagger.models.Swagger swagger11 = null;
        springMvcApiReader2.swagger = swagger11;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter13 = null;
        springMvcApiReader2.LOG = logAdapter13;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger16 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter17 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader18 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger16, logAdapter17);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter19 = springMvcApiReader18.LOG;
        io.swagger.models.Swagger swagger20 = null;
        springMvcApiReader18.swagger = swagger20;
        java.util.Set<java.lang.reflect.Type> typeSet22 = springMvcApiReader18.getTypesToSkip();
        springMvcApiReader2.typesToSkip = typeSet22;
        io.swagger.models.Swagger swagger24 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter25 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader26 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger24, logAdapter25);
        java.lang.reflect.Type[] typeArray27 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet28 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet28, typeArray27);
        springMvcApiReader26.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet28);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter31 = springMvcApiReader26.LOG;
        io.swagger.annotations.Api api33 = null;
        boolean boolean34 = springMvcApiReader26.canReadApi(true, api33);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter35 = null;
        springMvcApiReader26.LOG = logAdapter35;
        java.util.Set<java.lang.reflect.Type> typeSet37 = springMvcApiReader26.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet38 = springMvcApiReader26.typesToSkip;
        io.swagger.models.Swagger swagger39 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter40 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader41 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger39, logAdapter40);
        java.lang.reflect.Type[] typeArray42 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet43 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet43, typeArray42);
        springMvcApiReader41.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet43);
        java.lang.annotation.Annotation[] annotationArray46 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList47 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList47, annotationArray46);
        boolean boolean49 = springMvcApiReader41.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList47);
        java.util.Set<java.lang.reflect.Type> typeSet50 = springMvcApiReader41.typesToSkip;
        springMvcApiReader41.updateExtensionChain();
        io.swagger.models.Operation operation52 = null;
        io.swagger.annotations.ApiOperation apiOperation53 = null;
        springMvcApiReader41.updateTagsForOperation(operation52, apiOperation53);
        io.swagger.annotations.Api api56 = null;
        boolean boolean57 = springMvcApiReader41.canReadApi(true, api56);
        io.swagger.models.Swagger swagger58 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter59 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader60 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger58, logAdapter59);
        java.lang.reflect.Type[] typeArray61 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet62 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet62, typeArray61);
        springMvcApiReader60.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet62);
        java.lang.annotation.Annotation[] annotationArray65 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList66 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList66, annotationArray65);
        boolean boolean68 = springMvcApiReader60.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList66);
        boolean boolean69 = springMvcApiReader41.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList66);
        boolean boolean70 = springMvcApiReader26.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList66);
        boolean boolean71 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList66);
        springMvcApiReader2.updateExtensionChain();
        java.util.List<java.lang.annotation.Annotation> annotationList73 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean74 = springMvcApiReader2.hasValidAnnotations(annotationList73);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(annotationArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(logAdapter19);
        org.junit.Assert.assertNotNull(typeSet22);
        org.junit.Assert.assertNotNull(typeArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(logAdapter31);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(typeSet37);
        org.junit.Assert.assertNotNull(typeSet38);
        org.junit.Assert.assertNotNull(typeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(annotationArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(typeSet50);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(typeArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(annotationArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
    }

    @Test
    public void test02633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02633");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.models.Swagger swagger3 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter4 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader5 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger3, logAdapter4);
        java.lang.reflect.Type[] typeArray6 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet7 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet7, typeArray6);
        springMvcApiReader5.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet7);
        java.lang.annotation.Annotation[] annotationArray10 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList11 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList11, annotationArray10);
        boolean boolean13 = springMvcApiReader5.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList11);
        boolean boolean14 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList11);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type[] typeArray18 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet19 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet19, typeArray18);
        springMvcApiReader17.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet19);
        java.lang.annotation.Annotation[] annotationArray22 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList23 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList23, annotationArray22);
        boolean boolean25 = springMvcApiReader17.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList23);
        boolean boolean26 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList23);
        java.util.Set<java.lang.reflect.Type> typeSet27 = null;
        springMvcApiReader2.typesToSkip = typeSet27;
        io.swagger.models.Swagger swagger29 = null;
        springMvcApiReader2.swagger = swagger29;
        java.util.Set<java.lang.reflect.Type> typeSet31 = springMvcApiReader2.typesToSkip;
        springMvcApiReader2.updateExtensionChain();
        org.junit.Assert.assertNotNull(typeArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(annotationArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(typeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(annotationArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(typeSet31);
    }

    @Test
    public void test02634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02634");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader2.parseOperationPath("hi!", strMap15);
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.reflect.Type[] typeArray20 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet21 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet21, typeArray20);
        springMvcApiReader19.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet21);
        io.swagger.models.Swagger swagger24 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter25 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader26 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger24, logAdapter25);
        java.lang.reflect.Type[] typeArray27 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet28 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet28, typeArray27);
        springMvcApiReader26.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet28);
        springMvcApiReader19.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet28);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.reflect.Type[] typeArray35 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet36 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet36, typeArray35);
        springMvcApiReader34.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet36);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter39 = springMvcApiReader34.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap41 = null;
        java.lang.String str42 = springMvcApiReader34.parseOperationPath("", strMap41);
        io.swagger.annotations.Api api44 = null;
        boolean boolean45 = springMvcApiReader34.canReadApi(false, api44);
        java.util.Map<java.lang.String, java.lang.String> strMap47 = null;
        java.lang.String str48 = springMvcApiReader34.parseOperationPath("hi!", strMap47);
        io.swagger.models.Swagger swagger49 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter50 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader51 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger49, logAdapter50);
        java.lang.Class<?> wildcardClass52 = springMvcApiReader51.getClass();
        springMvcApiReader34.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        springMvcApiReader19.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        io.swagger.models.Swagger swagger56 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter57 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader58 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger56, logAdapter57);
        java.lang.reflect.Type[] typeArray59 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet60 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet60, typeArray59);
        springMvcApiReader58.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet60);
        java.util.Set<java.lang.reflect.Type> typeSet63 = springMvcApiReader58.typesToSkip;
        springMvcApiReader2.typesToSkip = typeSet63;
        io.swagger.models.Swagger swagger65 = null;
        springMvcApiReader2.swagger = swagger65;
        java.util.Map<java.lang.String, java.lang.String> strMap68 = null;
        java.lang.String str69 = springMvcApiReader2.parseOperationPath("hi!", strMap68);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Operation operation71 = null;
        io.swagger.annotations.ApiOperation apiOperation72 = null;
        springMvcApiReader2.updateTagsForOperation(operation71, apiOperation72);
        io.swagger.annotations.Api api74 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<io.swagger.models.SecurityRequirement> securityRequirementList75 = springMvcApiReader2.getSecurityRequirements(api74);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/hi!" + "'", str16, "/hi!");
        org.junit.Assert.assertNotNull(typeArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(typeArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(typeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(logAdapter39);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "/hi!" + "'", str48, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(typeArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(typeSet63);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "/hi!" + "'", str69, "/hi!");
    }

    @Test
    public void test02635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02635");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader2.parseOperationPath("hi!", strMap15);
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.Class<?> wildcardClass20 = springMvcApiReader19.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass20);
        io.swagger.models.Swagger swagger22 = null;
        springMvcApiReader2.swagger = swagger22;
        io.swagger.models.Swagger swagger24 = springMvcApiReader2.swagger;
        java.util.Set<java.lang.reflect.Type> typeSet25 = springMvcApiReader2.typesToSkip;
        springMvcApiReader2.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet27 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet28 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger29 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger30 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter31 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader32 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger30, logAdapter31);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = springMvcApiReader32.LOG;
        java.util.Set<java.lang.reflect.Type> typeSet34 = springMvcApiReader32.typesToSkip;
        io.swagger.models.Swagger swagger35 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter36 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader37 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger35, logAdapter36);
        java.lang.reflect.Type[] typeArray38 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet39 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet39, typeArray38);
        springMvcApiReader37.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet39);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter42 = springMvcApiReader37.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap44 = null;
        java.lang.String str45 = springMvcApiReader37.parseOperationPath("", strMap44);
        java.lang.reflect.Type[] typeArray46 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList47 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList47, typeArray46);
        springMvcApiReader37.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList47);
        springMvcApiReader32.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList47);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList47);
        io.swagger.models.Operation operation52 = null;
        io.swagger.annotations.ApiOperation apiOperation53 = null;
        springMvcApiReader2.updateTagsForOperation(operation52, apiOperation53);
        com.github.kongchen.swagger.docgen.spring.SpringResource springResource55 = null;
        // The following exception was thrown during execution in test generation
        try {
            io.swagger.models.Swagger swagger56 = springMvcApiReader2.read(springResource55);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/hi!" + "'", str16, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNull(swagger24);
        org.junit.Assert.assertNotNull(typeSet25);
        org.junit.Assert.assertNotNull(typeSet27);
        org.junit.Assert.assertNotNull(typeSet28);
        org.junit.Assert.assertNull(swagger29);
        org.junit.Assert.assertNull(logAdapter33);
        org.junit.Assert.assertNotNull(typeSet34);
        org.junit.Assert.assertNotNull(typeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(logAdapter42);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertNotNull(typeArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
    }

    @Test
    public void test02636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02636");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.lang.annotation.Annotation[] annotationArray7 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList8 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList8, annotationArray7);
        boolean boolean10 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList8);
        io.swagger.models.Swagger swagger11 = null;
        springMvcApiReader2.swagger = swagger11;
        java.util.Set<java.lang.reflect.Type> typeSet13 = springMvcApiReader2.getTypesToSkip();
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader2.parseOperationPath("/hi!", strMap15);
        io.swagger.annotations.Api api17 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<io.swagger.models.SecurityRequirement> securityRequirementList18 = springMvcApiReader2.getSecurityRequirements(api17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(annotationArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(typeSet13);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/hi!" + "'", str16, "/hi!");
    }

    @Test
    public void test02637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02637");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        java.util.Set<java.lang.reflect.Type> typeSet5 = springMvcApiReader2.typesToSkip;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter6 = null;
        springMvcApiReader2.LOG = logAdapter6;
        io.swagger.models.Swagger swagger8 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader10 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger8, logAdapter9);
        java.lang.reflect.Type[] typeArray11 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet12 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet12, typeArray11);
        springMvcApiReader10.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet12);
        java.lang.annotation.Annotation[] annotationArray15 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList16 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList16, annotationArray15);
        boolean boolean18 = springMvcApiReader10.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList16);
        io.swagger.models.Swagger swagger19 = null;
        springMvcApiReader10.swagger = swagger19;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter21 = null;
        springMvcApiReader10.LOG = logAdapter21;
        springMvcApiReader10.updateExtensionChain();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter24 = springMvcApiReader10.LOG;
        io.swagger.models.Swagger swagger25 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter26 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader27 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger25, logAdapter26);
        java.lang.reflect.Type[] typeArray28 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet29 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet29, typeArray28);
        springMvcApiReader27.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet29);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.reflect.Type[] typeArray35 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet36 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet36, typeArray35);
        springMvcApiReader34.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet36);
        springMvcApiReader27.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet36);
        java.util.Map<java.lang.String, java.lang.String> strMap41 = null;
        java.lang.String str42 = springMvcApiReader27.parseOperationPath("/hi!", strMap41);
        io.swagger.models.Swagger swagger43 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter44 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader45 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger43, logAdapter44);
        java.lang.reflect.Type[] typeArray46 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet47 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet47, typeArray46);
        springMvcApiReader45.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet47);
        java.lang.annotation.Annotation[] annotationArray50 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList51 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList51, annotationArray50);
        boolean boolean53 = springMvcApiReader45.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList51);
        io.swagger.models.Swagger swagger54 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter55 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader56 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger54, logAdapter55);
        java.lang.Class<?> wildcardClass57 = springMvcApiReader56.getClass();
        springMvcApiReader45.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass57);
        springMvcApiReader27.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass57);
        io.swagger.models.Swagger swagger60 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter61 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader62 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger60, logAdapter61);
        java.lang.reflect.Type[] typeArray63 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet64 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet64, typeArray63);
        springMvcApiReader62.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet64);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter67 = springMvcApiReader62.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap69 = null;
        java.lang.String str70 = springMvcApiReader62.parseOperationPath("", strMap69);
        io.swagger.annotations.Api api72 = null;
        boolean boolean73 = springMvcApiReader62.canReadApi(false, api72);
        java.util.Map<java.lang.String, java.lang.String> strMap75 = null;
        java.lang.String str76 = springMvcApiReader62.parseOperationPath("hi!", strMap75);
        io.swagger.models.Swagger swagger77 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter78 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader79 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger77, logAdapter78);
        java.lang.Class<?> wildcardClass80 = springMvcApiReader79.getClass();
        springMvcApiReader62.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass80);
        java.util.Map<java.lang.String, java.lang.String> strMap83 = null;
        java.lang.String str84 = springMvcApiReader62.parseOperationPath("/hi!", strMap83);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray85 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap86 = springMvcApiReader62.parseResponseHeaders(responseHeaderArray85);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap87 = springMvcApiReader27.parseResponseHeaders(responseHeaderArray85);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap88 = springMvcApiReader10.parseResponseHeaders(responseHeaderArray85);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap89 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray85);
        io.swagger.annotations.Api api90 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.lang.String> strSet91 = springMvcApiReader2.extractTags(api90);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeSet5);
        org.junit.Assert.assertNotNull(typeArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(annotationArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(logAdapter24);
        org.junit.Assert.assertNotNull(typeArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(typeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "/hi!" + "'", str42, "/hi!");
        org.junit.Assert.assertNotNull(typeArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(annotationArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(typeArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNull(logAdapter67);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "" + "'", str70, "");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "/hi!" + "'", str76, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "/hi!" + "'", str84, "/hi!");
        org.junit.Assert.assertNotNull(responseHeaderArray85);
        org.junit.Assert.assertNull(strMap86);
        org.junit.Assert.assertNull(strMap87);
        org.junit.Assert.assertNull(strMap88);
        org.junit.Assert.assertNull(strMap89);
    }

    @Test
    public void test02638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02638");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.models.Swagger swagger3 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter4 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader5 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger3, logAdapter4);
        java.lang.reflect.Type[] typeArray6 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet7 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet7, typeArray6);
        springMvcApiReader5.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet7);
        java.lang.annotation.Annotation[] annotationArray10 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList11 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList11, annotationArray10);
        boolean boolean13 = springMvcApiReader5.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList11);
        boolean boolean14 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList11);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type[] typeArray18 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet19 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet19, typeArray18);
        springMvcApiReader17.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet19);
        java.lang.annotation.Annotation[] annotationArray22 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList23 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList23, annotationArray22);
        boolean boolean25 = springMvcApiReader17.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList23);
        boolean boolean26 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList23);
        java.util.Set<java.lang.reflect.Type> typeSet27 = null;
        springMvcApiReader2.typesToSkip = typeSet27;
        io.swagger.models.Swagger swagger29 = null;
        springMvcApiReader2.swagger = swagger29;
        java.util.Set<java.lang.reflect.Type> typeSet31 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.reflect.Type[] typeArray35 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet36 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet36, typeArray35);
        springMvcApiReader34.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet36);
        java.util.Set<java.lang.reflect.Type> typeSet39 = springMvcApiReader34.typesToSkip;
        springMvcApiReader34.updateExtensionChain();
        io.swagger.models.Swagger swagger41 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter42 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader43 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger41, logAdapter42);
        java.lang.Class<?> wildcardClass44 = springMvcApiReader43.getClass();
        springMvcApiReader34.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass44);
        io.swagger.models.Swagger swagger46 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter47 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader48 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger46, logAdapter47);
        java.lang.reflect.Type[] typeArray49 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet50 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet50, typeArray49);
        springMvcApiReader48.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet50);
        io.swagger.models.Swagger swagger53 = springMvcApiReader48.swagger;
        io.swagger.models.Swagger swagger54 = springMvcApiReader48.swagger;
        io.swagger.models.Swagger swagger55 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter56 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader57 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger55, logAdapter56);
        java.lang.reflect.Type[] typeArray58 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet59 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet59, typeArray58);
        springMvcApiReader57.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet59);
        java.lang.annotation.Annotation[] annotationArray62 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList63 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList63, annotationArray62);
        boolean boolean65 = springMvcApiReader57.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList63);
        boolean boolean66 = springMvcApiReader48.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList63);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList67 = springMvcApiReader2.getParameters((java.lang.reflect.Type) wildcardClass44, (java.util.List<java.lang.annotation.Annotation>) annotationList63);
        io.swagger.annotations.Api api69 = null;
        boolean boolean70 = springMvcApiReader2.canReadApi(true, api69);
        java.util.Set<java.lang.reflect.Type> typeSet71 = springMvcApiReader2.typesToSkip;
        io.swagger.annotations.Api api72 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<io.swagger.models.SecurityRequirement> securityRequirementList73 = springMvcApiReader2.getSecurityRequirements(api72);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(annotationArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(typeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(annotationArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(typeSet31);
        org.junit.Assert.assertNotNull(typeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(typeSet39);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(typeArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNull(swagger53);
        org.junit.Assert.assertNull(swagger54);
        org.junit.Assert.assertNotNull(typeArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(annotationArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(parameterList67);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNull(typeSet71);
    }

    @Test
    public void test02639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02639");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader2.parseOperationPath("hi!", strMap15);
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.Class<?> wildcardClass20 = springMvcApiReader19.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass20);
        io.swagger.models.Swagger swagger22 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader24 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger22, logAdapter23);
        java.lang.reflect.Type[] typeArray25 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet26 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet26, typeArray25);
        springMvcApiReader24.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet26);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter29 = springMvcApiReader24.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap31 = null;
        java.lang.String str32 = springMvcApiReader24.parseOperationPath("", strMap31);
        io.swagger.annotations.Api api34 = null;
        boolean boolean35 = springMvcApiReader24.canReadApi(false, api34);
        java.util.Map<java.lang.String, java.lang.String> strMap37 = null;
        java.lang.String str38 = springMvcApiReader24.parseOperationPath("hi!", strMap37);
        io.swagger.models.Swagger swagger39 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter40 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader41 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger39, logAdapter40);
        java.lang.Class<?> wildcardClass42 = springMvcApiReader41.getClass();
        springMvcApiReader24.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass42);
        java.util.Map<java.lang.String, java.lang.String> strMap45 = null;
        java.lang.String str46 = springMvcApiReader24.parseOperationPath("/hi!", strMap45);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray47 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap48 = springMvcApiReader24.parseResponseHeaders(responseHeaderArray47);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap49 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray47);
        java.util.Set<java.lang.reflect.Type> typeSet50 = springMvcApiReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet51 = springMvcApiReader2.typesToSkip;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter52 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger53 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter54 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader55 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger53, logAdapter54);
        java.lang.reflect.Type[] typeArray56 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet57 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet57, typeArray56);
        springMvcApiReader55.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet57);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter60 = springMvcApiReader55.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap62 = null;
        java.lang.String str63 = springMvcApiReader55.parseOperationPath("", strMap62);
        io.swagger.annotations.Api api65 = null;
        boolean boolean66 = springMvcApiReader55.canReadApi(false, api65);
        io.swagger.models.Swagger swagger67 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter68 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader69 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger67, logAdapter68);
        java.lang.reflect.Type[] typeArray70 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet71 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet71, typeArray70);
        springMvcApiReader69.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet71);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter74 = springMvcApiReader69.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap76 = null;
        java.lang.String str77 = springMvcApiReader69.parseOperationPath("", strMap76);
        io.swagger.annotations.Api api79 = null;
        boolean boolean80 = springMvcApiReader69.canReadApi(false, api79);
        java.util.Map<java.lang.String, java.lang.String> strMap82 = null;
        java.lang.String str83 = springMvcApiReader69.parseOperationPath("hi!", strMap82);
        io.swagger.models.Swagger swagger84 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter85 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader86 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger84, logAdapter85);
        java.lang.Class<?> wildcardClass87 = springMvcApiReader86.getClass();
        springMvcApiReader69.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass87);
        java.util.Map<java.lang.String, java.lang.String> strMap90 = null;
        java.lang.String str91 = springMvcApiReader69.parseOperationPath("/hi!", strMap90);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray92 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap93 = springMvcApiReader69.parseResponseHeaders(responseHeaderArray92);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap94 = springMvcApiReader55.parseResponseHeaders(responseHeaderArray92);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap95 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray92);
        io.swagger.models.Operation operation96 = null;
        io.swagger.annotations.ApiResponses apiResponses97 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateApiResponse(operation96, apiResponses97);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/hi!" + "'", str16, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(typeArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(logAdapter29);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "/hi!" + "'", str38, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "/hi!" + "'", str46, "/hi!");
        org.junit.Assert.assertNotNull(responseHeaderArray47);
        org.junit.Assert.assertNull(strMap48);
        org.junit.Assert.assertNull(strMap49);
        org.junit.Assert.assertNotNull(typeSet50);
        org.junit.Assert.assertNotNull(typeSet51);
        org.junit.Assert.assertNull(logAdapter52);
        org.junit.Assert.assertNotNull(typeArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNull(logAdapter60);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "" + "'", str63, "");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(typeArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNull(logAdapter74);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "" + "'", str77, "");
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "/hi!" + "'", str83, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "/hi!" + "'", str91, "/hi!");
        org.junit.Assert.assertNotNull(responseHeaderArray92);
        org.junit.Assert.assertNull(strMap93);
        org.junit.Assert.assertNull(strMap94);
        org.junit.Assert.assertNull(strMap95);
    }

    @Test
    public void test02640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02640");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        java.lang.reflect.Type[] typeArray11 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList12 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList12, typeArray11);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList12);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!", "", "hi!" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap20 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray21 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList22 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList22, securityRequirementArray21);
        io.swagger.models.Operation operation24 = null;
        springMvcApiReader2.updateOperation(strArray15, strArray19, strMap20, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList22, operation24);
        java.util.Map<java.lang.String, java.lang.String> strMap27 = null;
        java.lang.String str28 = springMvcApiReader2.parseOperationPath("", strMap27);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger30 = null;
        springMvcApiReader2.swagger = swagger30;
        io.swagger.models.Operation operation32 = null;
        io.swagger.annotations.ApiOperation apiOperation33 = null;
        springMvcApiReader2.updateTagsForOperation(operation32, apiOperation33);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter35 = springMvcApiReader2.LOG;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter36 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger37 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter38 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader39 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger37, logAdapter38);
        java.lang.reflect.Type[] typeArray40 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet41 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet41, typeArray40);
        springMvcApiReader39.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet41);
        java.lang.annotation.Annotation[] annotationArray44 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList45 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList45, annotationArray44);
        boolean boolean47 = springMvcApiReader39.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList45);
        java.util.Set<java.lang.reflect.Type> typeSet48 = springMvcApiReader39.typesToSkip;
        springMvcApiReader39.updateExtensionChain();
        io.swagger.models.Operation operation50 = null;
        io.swagger.annotations.ApiOperation apiOperation51 = null;
        springMvcApiReader39.updateTagsForOperation(operation50, apiOperation51);
        io.swagger.annotations.Api api54 = null;
        boolean boolean55 = springMvcApiReader39.canReadApi(true, api54);
        io.swagger.models.Operation operation56 = null;
        io.swagger.annotations.ApiOperation apiOperation57 = null;
        springMvcApiReader39.updateTagsForOperation(operation56, apiOperation57);
        java.util.Set<java.lang.reflect.Type> typeSet59 = null;
        springMvcApiReader39.typesToSkip = typeSet59;
        io.swagger.models.Swagger swagger61 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter62 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader63 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger61, logAdapter62);
        java.lang.reflect.Type[] typeArray64 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet65 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet65, typeArray64);
        springMvcApiReader63.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet65);
        java.lang.annotation.Annotation[] annotationArray68 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList69 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList69, annotationArray68);
        boolean boolean71 = springMvcApiReader63.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList69);
        io.swagger.models.Swagger swagger72 = null;
        springMvcApiReader63.swagger = swagger72;
        io.swagger.models.Swagger swagger74 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter75 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader76 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger74, logAdapter75);
        java.lang.reflect.Type[] typeArray77 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet78 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet78, typeArray77);
        springMvcApiReader76.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet78);
        java.lang.annotation.Annotation[] annotationArray81 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList82 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList82, annotationArray81);
        boolean boolean84 = springMvcApiReader76.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList82);
        io.swagger.models.Swagger swagger85 = null;
        springMvcApiReader76.swagger = swagger85;
        java.lang.annotation.Annotation[] annotationArray87 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList88 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean89 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList88, annotationArray87);
        boolean boolean90 = springMvcApiReader76.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList88);
        boolean boolean91 = springMvcApiReader63.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList88);
        boolean boolean92 = springMvcApiReader39.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList88);
        boolean boolean93 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList88);
        java.util.Set<java.lang.reflect.Type> typeSet94 = springMvcApiReader2.typesToSkip;
        io.swagger.annotations.Api api95 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.lang.String> strSet96 = springMvcApiReader2.extractTags(api95);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(typeArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(securityRequirementArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNull(logAdapter35);
        org.junit.Assert.assertNull(logAdapter36);
        org.junit.Assert.assertNotNull(typeArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(annotationArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(typeSet48);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(typeArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(annotationArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(typeArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(annotationArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(annotationArray87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNotNull(typeSet94);
    }

    @Test
    public void test02641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02641");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        springMvcApiReader2.LOG = logAdapter8;
        springMvcApiReader2.updateExtensionChain();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        springMvcApiReader2.LOG = logAdapter11;
        io.swagger.models.Swagger swagger13 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger14 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter15 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader16 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger14, logAdapter15);
        java.lang.reflect.Type[] typeArray17 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet18 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet18, typeArray17);
        springMvcApiReader16.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet18);
        java.lang.annotation.Annotation[] annotationArray21 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList22 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList22, annotationArray21);
        boolean boolean24 = springMvcApiReader16.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList22);
        io.swagger.models.Swagger swagger25 = null;
        springMvcApiReader16.swagger = swagger25;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter27 = null;
        springMvcApiReader16.LOG = logAdapter27;
        java.util.Set<java.lang.reflect.Type> typeSet29 = springMvcApiReader16.getTypesToSkip();
        springMvcApiReader2.typesToSkip = typeSet29;
        java.util.Set<java.lang.reflect.Type> typeSet31 = springMvcApiReader2.getTypesToSkip();
        java.lang.reflect.Method method32 = null;
        io.swagger.models.Operation operation33 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.readImplicitParameters(method32, operation33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertNull(swagger13);
        org.junit.Assert.assertNotNull(typeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(annotationArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(typeSet29);
        org.junit.Assert.assertNotNull(typeSet31);
    }

    @Test
    public void test02642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02642");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.util.Set<java.lang.reflect.Type> typeSet7 = springMvcApiReader2.typesToSkip;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Operation operation9 = null;
        io.swagger.annotations.ApiOperation apiOperation10 = null;
        springMvcApiReader2.updateTagsForOperation(operation9, apiOperation10);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger13 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter14 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader15 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger13, logAdapter14);
        java.lang.reflect.Type type16 = null;
        springMvcApiReader15.addTypeToSkippedTypes(type16);
        java.util.Set<java.lang.reflect.Type> typeSet18 = springMvcApiReader15.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet19 = springMvcApiReader15.getTypesToSkip();
        springMvcApiReader15.updateExtensionChain();
        io.swagger.models.Swagger swagger21 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader23 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger21, logAdapter22);
        java.lang.reflect.Type[] typeArray24 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet25 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet25, typeArray24);
        springMvcApiReader23.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet25);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter28 = springMvcApiReader23.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap30 = null;
        java.lang.String str31 = springMvcApiReader23.parseOperationPath("", strMap30);
        io.swagger.annotations.Api api33 = null;
        boolean boolean34 = springMvcApiReader23.canReadApi(false, api33);
        java.util.Map<java.lang.String, java.lang.String> strMap36 = null;
        java.lang.String str37 = springMvcApiReader23.parseOperationPath("", strMap36);
        java.util.Set<java.lang.reflect.Type> typeSet38 = springMvcApiReader23.getTypesToSkip();
        springMvcApiReader15.setTypesToSkip(typeSet38);
        io.swagger.models.Swagger swagger40 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter41 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader42 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger40, logAdapter41);
        java.lang.reflect.Type[] typeArray43 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet44 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet44, typeArray43);
        springMvcApiReader42.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet44);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter47 = springMvcApiReader42.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap49 = null;
        java.lang.String str50 = springMvcApiReader42.parseOperationPath("", strMap49);
        java.lang.reflect.Type[] typeArray51 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList52 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList52, typeArray51);
        springMvcApiReader42.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList52);
        io.swagger.models.Swagger swagger55 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter56 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader57 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger55, logAdapter56);
        java.lang.reflect.Type[] typeArray58 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet59 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet59, typeArray58);
        springMvcApiReader57.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet59);
        java.lang.annotation.Annotation[] annotationArray62 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList63 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList63, annotationArray62);
        boolean boolean65 = springMvcApiReader57.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList63);
        boolean boolean66 = springMvcApiReader42.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList63);
        io.swagger.models.Swagger swagger67 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter68 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader69 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger67, logAdapter68);
        java.lang.reflect.Type[] typeArray70 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet71 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet71, typeArray70);
        springMvcApiReader69.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet71);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter74 = springMvcApiReader69.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap76 = null;
        java.lang.String str77 = springMvcApiReader69.parseOperationPath("", strMap76);
        java.lang.reflect.Type[] typeArray78 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList79 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList79, typeArray78);
        springMvcApiReader69.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList79);
        java.lang.String[] strArray82 = new java.lang.String[] {};
        java.lang.String[] strArray86 = new java.lang.String[] { "hi!", "", "hi!" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap87 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray88 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList89 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList89, securityRequirementArray88);
        io.swagger.models.Operation operation91 = null;
        springMvcApiReader69.updateOperation(strArray82, strArray86, strMap87, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList89, operation91);
        java.util.Set<java.lang.reflect.Type> typeSet93 = springMvcApiReader69.typesToSkip;
        springMvcApiReader42.typesToSkip = typeSet93;
        springMvcApiReader15.typesToSkip = typeSet93;
        java.util.Set<java.lang.reflect.Type> typeSet96 = springMvcApiReader15.getTypesToSkip();
        springMvcApiReader2.typesToSkip = typeSet96;
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeSet7);
        org.junit.Assert.assertNotNull(typeSet18);
        org.junit.Assert.assertNotNull(typeSet19);
        org.junit.Assert.assertNotNull(typeArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(logAdapter28);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertNotNull(typeSet38);
        org.junit.Assert.assertNotNull(typeArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(logAdapter47);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertNotNull(typeArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(typeArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(annotationArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(typeArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNull(logAdapter74);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "" + "'", str77, "");
        org.junit.Assert.assertNotNull(typeArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertNotNull(strArray86);
        org.junit.Assert.assertNotNull(securityRequirementArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(typeSet93);
        org.junit.Assert.assertNotNull(typeSet96);
    }

    @Test
    public void test02643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02643");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.util.Set<java.lang.reflect.Type> typeSet7 = springMvcApiReader2.typesToSkip;
        io.swagger.annotations.Api api8 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<io.swagger.models.SecurityRequirement> securityRequirementList9 = springMvcApiReader2.getSecurityRequirements(api8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeSet7);
    }

    @Test
    public void test02644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02644");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader2.parseOperationPath("hi!", strMap15);
        io.swagger.models.Operation operation17 = null;
        io.swagger.annotations.ApiOperation apiOperation18 = null;
        springMvcApiReader2.updateTagsForOperation(operation17, apiOperation18);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.annotations.Api api22 = null;
        boolean boolean23 = springMvcApiReader2.canReadApi(true, api22);
        springMvcApiReader2.updateExtensionChain();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter25 = springMvcApiReader2.LOG;
        io.swagger.annotations.Api api26 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.lang.String> strSet27 = springMvcApiReader2.extractTags(api26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/hi!" + "'", str16, "/hi!");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(logAdapter25);
    }

    @Test
    public void test02645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02645");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        java.lang.reflect.Type[] typeArray11 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList12 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList12, typeArray11);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList12);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!", "", "hi!" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap20 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray21 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList22 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList22, securityRequirementArray21);
        io.swagger.models.Operation operation24 = null;
        springMvcApiReader2.updateOperation(strArray15, strArray19, strMap20, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList22, operation24);
        java.util.Map<java.lang.String, java.lang.String> strMap27 = null;
        java.lang.String str28 = springMvcApiReader2.parseOperationPath("", strMap27);
        springMvcApiReader2.updateExtensionChain();
        java.util.Map<java.lang.String, java.lang.String> strMap31 = null;
        java.lang.String str32 = springMvcApiReader2.parseOperationPath("/hi!", strMap31);
        java.util.Map<java.lang.String, java.lang.String> strMap34 = null;
        java.lang.String str35 = springMvcApiReader2.parseOperationPath("/hi!", strMap34);
        io.swagger.models.Swagger swagger36 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter37 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader38 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger36, logAdapter37);
        java.lang.reflect.Type[] typeArray39 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet40 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet40, typeArray39);
        springMvcApiReader38.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet40);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter43 = springMvcApiReader38.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap45 = null;
        java.lang.String str46 = springMvcApiReader38.parseOperationPath("", strMap45);
        io.swagger.models.Swagger swagger47 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter48 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader49 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger47, logAdapter48);
        java.lang.Class<?> wildcardClass50 = springMvcApiReader49.getClass();
        java.lang.reflect.Type[] typeArray51 = new java.lang.reflect.Type[] { wildcardClass50 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet52 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet52, typeArray51);
        springMvcApiReader38.typesToSkip = typeSet52;
        java.util.Set<java.lang.reflect.Type> typeSet55 = springMvcApiReader38.getTypesToSkip();
        java.util.Map<java.lang.String, java.lang.String> strMap57 = null;
        java.lang.String str58 = springMvcApiReader38.parseOperationPath("/hi!", strMap57);
        java.util.Set<java.lang.reflect.Type> typeSet59 = springMvcApiReader38.getTypesToSkip();
        io.swagger.models.Swagger swagger60 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter61 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader62 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger60, logAdapter61);
        java.lang.reflect.Type[] typeArray63 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet64 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet64, typeArray63);
        springMvcApiReader62.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet64);
        java.lang.annotation.Annotation[] annotationArray67 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList68 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList68, annotationArray67);
        boolean boolean70 = springMvcApiReader62.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList68);
        io.swagger.models.Swagger swagger71 = null;
        springMvcApiReader62.swagger = swagger71;
        io.swagger.annotations.ResponseHeader[] responseHeaderArray73 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap74 = springMvcApiReader62.parseResponseHeaders(responseHeaderArray73);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap75 = springMvcApiReader38.parseResponseHeaders(responseHeaderArray73);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap76 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray73);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter77 = null;
        springMvcApiReader2.LOG = logAdapter77;
        io.swagger.annotations.ResponseHeader[] responseHeaderArray79 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap80 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray79);
        io.swagger.annotations.Api api81 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.lang.String> strSet82 = springMvcApiReader2.extractTags(api81);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(typeArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(securityRequirementArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "/hi!" + "'", str32, "/hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "/hi!" + "'", str35, "/hi!");
        org.junit.Assert.assertNotNull(typeArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(logAdapter43);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(typeArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(typeSet55);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "/hi!" + "'", str58, "/hi!");
        org.junit.Assert.assertNotNull(typeSet59);
        org.junit.Assert.assertNotNull(typeArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(annotationArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(responseHeaderArray73);
        org.junit.Assert.assertNull(strMap74);
        org.junit.Assert.assertNull(strMap75);
        org.junit.Assert.assertNull(strMap76);
        org.junit.Assert.assertNull(strMap80);
    }

    @Test
    public void test02646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02646");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.lang.annotation.Annotation[] annotationArray7 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList8 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList8, annotationArray7);
        boolean boolean10 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList8);
        io.swagger.models.Swagger swagger11 = null;
        springMvcApiReader2.swagger = swagger11;
        io.swagger.models.Swagger swagger13 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter14 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader15 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger13, logAdapter14);
        java.lang.reflect.Type[] typeArray16 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet17 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet17, typeArray16);
        springMvcApiReader15.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet17);
        java.lang.annotation.Annotation[] annotationArray20 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList21 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList21, annotationArray20);
        boolean boolean23 = springMvcApiReader15.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList21);
        io.swagger.models.Swagger swagger24 = null;
        springMvcApiReader15.swagger = swagger24;
        java.lang.annotation.Annotation[] annotationArray26 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList27 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList27, annotationArray26);
        boolean boolean29 = springMvcApiReader15.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList27);
        boolean boolean30 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList27);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger32 = springMvcApiReader2.swagger;
        springMvcApiReader2.updateExtensionChain();
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap34 = null;
        io.swagger.annotations.Api api35 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, io.swagger.models.Tag> strMap36 = springMvcApiReader2.updateTagsForApi(strMap34, api35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(annotationArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(typeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(annotationArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(annotationArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(swagger32);
    }

    @Test
    public void test02647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02647");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader2.parseOperationPath("hi!", strMap15);
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.Class<?> wildcardClass20 = springMvcApiReader19.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass20);
        io.swagger.models.Swagger swagger22 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader24 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger22, logAdapter23);
        java.lang.reflect.Type[] typeArray25 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet26 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet26, typeArray25);
        springMvcApiReader24.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet26);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter29 = springMvcApiReader24.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap31 = null;
        java.lang.String str32 = springMvcApiReader24.parseOperationPath("", strMap31);
        io.swagger.annotations.Api api34 = null;
        boolean boolean35 = springMvcApiReader24.canReadApi(false, api34);
        java.util.Map<java.lang.String, java.lang.String> strMap37 = null;
        java.lang.String str38 = springMvcApiReader24.parseOperationPath("hi!", strMap37);
        io.swagger.models.Swagger swagger39 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter40 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader41 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger39, logAdapter40);
        java.lang.Class<?> wildcardClass42 = springMvcApiReader41.getClass();
        springMvcApiReader24.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass42);
        java.util.Map<java.lang.String, java.lang.String> strMap45 = null;
        java.lang.String str46 = springMvcApiReader24.parseOperationPath("/hi!", strMap45);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray47 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap48 = springMvcApiReader24.parseResponseHeaders(responseHeaderArray47);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap49 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray47);
        java.util.Set<java.lang.reflect.Type> typeSet50 = springMvcApiReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet51 = springMvcApiReader2.typesToSkip;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter52 = springMvcApiReader2.LOG;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter53 = springMvcApiReader2.LOG;
        java.util.Set<java.lang.reflect.Type> typeSet54 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger55 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter56 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader57 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger55, logAdapter56);
        java.lang.reflect.Type type58 = null;
        springMvcApiReader57.addTypeToSkippedTypes(type58);
        io.swagger.models.Swagger swagger60 = springMvcApiReader57.swagger;
        io.swagger.models.Swagger swagger61 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter62 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader63 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger61, logAdapter62);
        java.lang.reflect.Type type64 = null;
        springMvcApiReader63.addTypeToSkippedTypes(type64);
        java.util.Set<java.lang.reflect.Type> typeSet66 = springMvcApiReader63.typesToSkip;
        springMvcApiReader57.setTypesToSkip(typeSet66);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter68 = null;
        springMvcApiReader57.LOG = logAdapter68;
        io.swagger.models.Operation operation70 = null;
        io.swagger.annotations.ApiOperation apiOperation71 = null;
        springMvcApiReader57.updateTagsForOperation(operation70, apiOperation71);
        java.util.Map<java.lang.String, java.lang.String> strMap74 = null;
        java.lang.String str75 = springMvcApiReader57.parseOperationPath("", strMap74);
        io.swagger.annotations.Api api77 = null;
        boolean boolean78 = springMvcApiReader57.canReadApi(true, api77);
        java.util.Set<java.lang.reflect.Type> typeSet79 = springMvcApiReader57.getTypesToSkip();
        springMvcApiReader2.typesToSkip = typeSet79;
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/hi!" + "'", str16, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(typeArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(logAdapter29);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "/hi!" + "'", str38, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "/hi!" + "'", str46, "/hi!");
        org.junit.Assert.assertNotNull(responseHeaderArray47);
        org.junit.Assert.assertNull(strMap48);
        org.junit.Assert.assertNull(strMap49);
        org.junit.Assert.assertNotNull(typeSet50);
        org.junit.Assert.assertNotNull(typeSet51);
        org.junit.Assert.assertNull(logAdapter52);
        org.junit.Assert.assertNull(logAdapter53);
        org.junit.Assert.assertNotNull(typeSet54);
        org.junit.Assert.assertNull(swagger60);
        org.junit.Assert.assertNotNull(typeSet66);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "" + "'", str75, "");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(typeSet79);
    }

    @Test
    public void test02648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02648");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.models.Swagger swagger11 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter12 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader13 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger11, logAdapter12);
        java.lang.Class<?> wildcardClass14 = springMvcApiReader13.getClass();
        java.lang.reflect.Type[] typeArray15 = new java.lang.reflect.Type[] { wildcardClass14 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet16 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet16, typeArray15);
        springMvcApiReader2.typesToSkip = typeSet16;
        io.swagger.models.Swagger swagger19 = null;
        springMvcApiReader2.swagger = swagger19;
        java.util.Set<java.lang.reflect.Type> typeSet21 = springMvcApiReader2.getTypesToSkip();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = null;
        springMvcApiReader2.LOG = logAdapter22;
        io.swagger.models.Swagger swagger24 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter25 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader26 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger24, logAdapter25);
        java.lang.Class<?> wildcardClass27 = springMvcApiReader26.getClass();
        io.swagger.models.Swagger swagger28 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter29 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader30 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger28, logAdapter29);
        java.lang.reflect.Type[] typeArray31 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet32 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet32, typeArray31);
        springMvcApiReader30.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet32);
        java.lang.annotation.Annotation[] annotationArray35 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList36 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList36, annotationArray35);
        boolean boolean38 = springMvcApiReader30.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList36);
        io.swagger.models.Swagger swagger39 = null;
        springMvcApiReader30.swagger = swagger39;
        io.swagger.models.Swagger swagger41 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter42 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader43 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger41, logAdapter42);
        java.lang.reflect.Type[] typeArray44 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet45 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet45, typeArray44);
        springMvcApiReader43.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet45);
        java.lang.annotation.Annotation[] annotationArray48 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList49 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList49, annotationArray48);
        boolean boolean51 = springMvcApiReader43.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList49);
        io.swagger.models.Swagger swagger52 = null;
        springMvcApiReader43.swagger = swagger52;
        java.lang.annotation.Annotation[] annotationArray54 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList55 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList55, annotationArray54);
        boolean boolean57 = springMvcApiReader43.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList55);
        boolean boolean58 = springMvcApiReader30.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList55);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter59 = springMvcApiReader30.LOG;
        io.swagger.models.Swagger swagger60 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter61 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader62 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger60, logAdapter61);
        java.lang.reflect.Type[] typeArray63 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet64 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet64, typeArray63);
        springMvcApiReader62.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet64);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter67 = springMvcApiReader62.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap69 = null;
        java.lang.String str70 = springMvcApiReader62.parseOperationPath("", strMap69);
        io.swagger.annotations.Api api72 = null;
        boolean boolean73 = springMvcApiReader62.canReadApi(false, api72);
        java.util.Map<java.lang.String, java.lang.String> strMap75 = null;
        java.lang.String str76 = springMvcApiReader62.parseOperationPath("hi!", strMap75);
        io.swagger.models.Swagger swagger77 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter78 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader79 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger77, logAdapter78);
        java.lang.Class<?> wildcardClass80 = springMvcApiReader79.getClass();
        springMvcApiReader62.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass80);
        io.swagger.models.Swagger swagger82 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter83 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader84 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger82, logAdapter83);
        java.lang.reflect.Type[] typeArray85 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet86 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet86, typeArray85);
        springMvcApiReader84.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet86);
        java.lang.annotation.Annotation[] annotationArray89 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList90 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean91 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList90, annotationArray89);
        boolean boolean92 = springMvcApiReader84.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList90);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList93 = springMvcApiReader30.getParameters((java.lang.reflect.Type) wildcardClass80, (java.util.List<java.lang.annotation.Annotation>) annotationList90);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList94 = springMvcApiReader2.getParameters((java.lang.reflect.Type) wildcardClass27, (java.util.List<java.lang.annotation.Annotation>) annotationList90);
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(typeArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(typeSet21);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(typeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(annotationArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(typeArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(annotationArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(annotationArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNull(logAdapter59);
        org.junit.Assert.assertNotNull(typeArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNull(logAdapter67);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "" + "'", str70, "");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "/hi!" + "'", str76, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(typeArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(annotationArray89);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(parameterList93);
        org.junit.Assert.assertNotNull(parameterList94);
    }

    @Test
    public void test02649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02649");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        java.util.Map<java.lang.String, java.lang.String> strMap16 = null;
        java.lang.String str17 = springMvcApiReader2.parseOperationPath("/hi!", strMap16);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = springMvcApiReader2.LOG;
        java.util.Set<java.lang.reflect.Type> typeSet19 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger20 = springMvcApiReader2.swagger;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter21 = null;
        springMvcApiReader2.LOG = logAdapter21;
        io.swagger.annotations.Api api23 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.lang.String> strSet24 = springMvcApiReader2.extractTags(api23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "/hi!" + "'", str17, "/hi!");
        org.junit.Assert.assertNull(logAdapter18);
        org.junit.Assert.assertNotNull(typeSet19);
        org.junit.Assert.assertNull(swagger20);
    }

    @Test
    public void test02650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02650");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.models.Swagger swagger11 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter12 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader13 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger11, logAdapter12);
        java.lang.Class<?> wildcardClass14 = springMvcApiReader13.getClass();
        java.lang.reflect.Type[] typeArray15 = new java.lang.reflect.Type[] { wildcardClass14 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet16 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet16, typeArray15);
        springMvcApiReader2.typesToSkip = typeSet16;
        java.util.Set<java.lang.reflect.Type> typeSet19 = springMvcApiReader2.getTypesToSkip();
        io.swagger.annotations.Api api21 = null;
        boolean boolean22 = springMvcApiReader2.canReadApi(false, api21);
        io.swagger.models.Operation operation23 = null;
        io.swagger.annotations.ApiOperation apiOperation24 = null;
        springMvcApiReader2.updateTagsForOperation(operation23, apiOperation24);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter26 = springMvcApiReader2.LOG;
        springMvcApiReader2.updateExtensionChain();
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(typeArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(typeSet19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(logAdapter26);
    }

    @Test
    public void test02651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02651");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        java.util.Set<java.lang.reflect.Type> typeSet5 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet6 = springMvcApiReader2.getTypesToSkip();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = null;
        java.lang.String str9 = springMvcApiReader2.parseOperationPath("", strMap8);
        io.swagger.models.Operation operation10 = null;
        io.swagger.annotations.ApiOperation apiOperation11 = null;
        springMvcApiReader2.updateTagsForOperation(operation10, apiOperation11);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter13 = springMvcApiReader2.LOG;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter14 = null;
        springMvcApiReader2.LOG = logAdapter14;
        io.swagger.models.Swagger swagger16 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter17 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader18 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger16, logAdapter17);
        java.lang.reflect.Type[] typeArray19 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet20 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet20, typeArray19);
        springMvcApiReader18.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet20);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = springMvcApiReader18.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap25 = null;
        java.lang.String str26 = springMvcApiReader18.parseOperationPath("", strMap25);
        io.swagger.annotations.Api api28 = null;
        boolean boolean29 = springMvcApiReader18.canReadApi(false, api28);
        java.util.Map<java.lang.String, java.lang.String> strMap31 = null;
        java.lang.String str32 = springMvcApiReader18.parseOperationPath("hi!", strMap31);
        io.swagger.models.Swagger swagger33 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter34 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader35 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger33, logAdapter34);
        java.lang.Class<?> wildcardClass36 = springMvcApiReader35.getClass();
        springMvcApiReader18.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass36);
        java.util.Map<java.lang.String, java.lang.String> strMap39 = null;
        java.lang.String str40 = springMvcApiReader18.parseOperationPath("/hi!", strMap39);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray41 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap42 = springMvcApiReader18.parseResponseHeaders(responseHeaderArray41);
        io.swagger.models.Swagger swagger43 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter44 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader45 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger43, logAdapter44);
        java.lang.reflect.Type[] typeArray46 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet47 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet47, typeArray46);
        springMvcApiReader45.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet47);
        java.util.Set<java.lang.reflect.Type> typeSet50 = springMvcApiReader45.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet51 = springMvcApiReader45.getTypesToSkip();
        java.lang.Class<?> wildcardClass52 = springMvcApiReader45.getClass();
        io.swagger.models.Swagger swagger53 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter54 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader55 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger53, logAdapter54);
        java.lang.reflect.Type[] typeArray56 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet57 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet57, typeArray56);
        springMvcApiReader55.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet57);
        java.lang.annotation.Annotation[] annotationArray60 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList61 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList61, annotationArray60);
        boolean boolean63 = springMvcApiReader55.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList61);
        java.util.Set<java.lang.reflect.Type> typeSet64 = springMvcApiReader55.typesToSkip;
        springMvcApiReader55.updateExtensionChain();
        io.swagger.models.Operation operation66 = null;
        io.swagger.annotations.ApiOperation apiOperation67 = null;
        springMvcApiReader55.updateTagsForOperation(operation66, apiOperation67);
        io.swagger.annotations.Api api70 = null;
        boolean boolean71 = springMvcApiReader55.canReadApi(true, api70);
        io.swagger.models.Swagger swagger72 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter73 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader74 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger72, logAdapter73);
        java.lang.reflect.Type[] typeArray75 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet76 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet76, typeArray75);
        springMvcApiReader74.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet76);
        java.lang.annotation.Annotation[] annotationArray79 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList80 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList80, annotationArray79);
        boolean boolean82 = springMvcApiReader74.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList80);
        io.swagger.models.Swagger swagger83 = null;
        springMvcApiReader74.swagger = swagger83;
        java.util.Set<java.lang.reflect.Type> typeSet85 = springMvcApiReader74.getTypesToSkip();
        java.lang.Class<?> wildcardClass86 = springMvcApiReader74.getClass();
        java.lang.annotation.Annotation[] annotationArray87 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList88 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean89 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList88, annotationArray87);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList90 = springMvcApiReader55.getParameters((java.lang.reflect.Type) wildcardClass86, (java.util.List<java.lang.annotation.Annotation>) annotationList88);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList91 = springMvcApiReader18.getParameters((java.lang.reflect.Type) wildcardClass52, (java.util.List<java.lang.annotation.Annotation>) annotationList88);
        java.util.Map<java.lang.String, java.lang.String> strMap92 = null;
        io.swagger.models.Operation operation93 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateOperationParameters(parameterList91, strMap92, operation93);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeSet5);
        org.junit.Assert.assertNotNull(typeSet6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNull(logAdapter13);
        org.junit.Assert.assertNotNull(typeArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(logAdapter23);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "/hi!" + "'", str32, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "/hi!" + "'", str40, "/hi!");
        org.junit.Assert.assertNotNull(responseHeaderArray41);
        org.junit.Assert.assertNull(strMap42);
        org.junit.Assert.assertNotNull(typeArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(typeSet50);
        org.junit.Assert.assertNotNull(typeSet51);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(typeArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(annotationArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(typeSet64);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(typeArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(annotationArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(typeSet85);
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertNotNull(annotationArray87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(parameterList90);
        org.junit.Assert.assertNotNull(parameterList91);
    }

    @Test
    public void test02652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02652");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        springMvcApiReader2.LOG = logAdapter8;
        springMvcApiReader2.updateExtensionChain();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        springMvcApiReader2.LOG = logAdapter11;
        io.swagger.models.Swagger swagger13 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger14 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter15 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader16 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger14, logAdapter15);
        java.lang.reflect.Type[] typeArray17 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet18 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet18, typeArray17);
        springMvcApiReader16.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet18);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter21 = springMvcApiReader16.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap23 = null;
        java.lang.String str24 = springMvcApiReader16.parseOperationPath("", strMap23);
        io.swagger.annotations.Api api26 = null;
        boolean boolean27 = springMvcApiReader16.canReadApi(false, api26);
        java.util.Map<java.lang.String, java.lang.String> strMap29 = null;
        java.lang.String str30 = springMvcApiReader16.parseOperationPath("hi!", strMap29);
        io.swagger.models.Swagger swagger31 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter32 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader33 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger31, logAdapter32);
        java.lang.Class<?> wildcardClass34 = springMvcApiReader33.getClass();
        springMvcApiReader16.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass34);
        io.swagger.models.Swagger swagger36 = null;
        springMvcApiReader16.swagger = swagger36;
        io.swagger.models.Swagger swagger38 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter39 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader40 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger38, logAdapter39);
        java.lang.reflect.Type type41 = null;
        springMvcApiReader40.addTypeToSkippedTypes(type41);
        java.util.Set<java.lang.reflect.Type> typeSet43 = springMvcApiReader40.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet44 = springMvcApiReader40.getTypesToSkip();
        io.swagger.models.Swagger swagger45 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter46 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader47 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger45, logAdapter46);
        java.lang.reflect.Type[] typeArray48 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet49 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet49, typeArray48);
        springMvcApiReader47.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet49);
        io.swagger.models.Swagger swagger52 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter53 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader54 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger52, logAdapter53);
        java.lang.reflect.Type[] typeArray55 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet56 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet56, typeArray55);
        springMvcApiReader54.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet56);
        springMvcApiReader47.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet56);
        springMvcApiReader40.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet56);
        java.lang.Class<?> wildcardClass61 = typeSet56.getClass();
        springMvcApiReader16.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass61);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass61);
        io.swagger.models.Swagger swagger64 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter65 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader66 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger64, logAdapter65);
        java.lang.reflect.Type[] typeArray67 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet68 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet68, typeArray67);
        springMvcApiReader66.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet68);
        java.lang.annotation.Annotation[] annotationArray71 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList72 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList72, annotationArray71);
        boolean boolean74 = springMvcApiReader66.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList72);
        io.swagger.models.Swagger swagger75 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter76 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader77 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger75, logAdapter76);
        java.lang.reflect.Type[] typeArray78 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet79 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet79, typeArray78);
        springMvcApiReader77.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet79);
        java.util.Set<java.lang.reflect.Type> typeSet82 = springMvcApiReader77.typesToSkip;
        springMvcApiReader77.updateExtensionChain();
        io.swagger.models.Swagger swagger84 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter85 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader86 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger84, logAdapter85);
        java.lang.Class<?> wildcardClass87 = springMvcApiReader86.getClass();
        springMvcApiReader77.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass87);
        springMvcApiReader66.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass87);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass87);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter91 = null;
        springMvcApiReader2.LOG = logAdapter91;
        io.swagger.models.Operation operation93 = null;
        io.swagger.annotations.ApiOperation apiOperation94 = null;
        springMvcApiReader2.updateTagsForOperation(operation93, apiOperation94);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter96 = null;
        springMvcApiReader2.LOG = logAdapter96;
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertNull(swagger13);
        org.junit.Assert.assertNotNull(typeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(logAdapter21);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "/hi!" + "'", str30, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(typeSet43);
        org.junit.Assert.assertNotNull(typeSet44);
        org.junit.Assert.assertNotNull(typeArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(typeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(typeArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(annotationArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(typeArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(typeSet82);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test02653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02653");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader2.parseOperationPath("hi!", strMap15);
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.reflect.Type[] typeArray20 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet21 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet21, typeArray20);
        springMvcApiReader19.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet21);
        io.swagger.models.Swagger swagger24 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter25 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader26 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger24, logAdapter25);
        java.lang.reflect.Type[] typeArray27 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet28 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet28, typeArray27);
        springMvcApiReader26.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet28);
        springMvcApiReader19.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet28);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.reflect.Type[] typeArray35 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet36 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet36, typeArray35);
        springMvcApiReader34.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet36);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter39 = springMvcApiReader34.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap41 = null;
        java.lang.String str42 = springMvcApiReader34.parseOperationPath("", strMap41);
        io.swagger.annotations.Api api44 = null;
        boolean boolean45 = springMvcApiReader34.canReadApi(false, api44);
        java.util.Map<java.lang.String, java.lang.String> strMap47 = null;
        java.lang.String str48 = springMvcApiReader34.parseOperationPath("hi!", strMap47);
        io.swagger.models.Swagger swagger49 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter50 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader51 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger49, logAdapter50);
        java.lang.Class<?> wildcardClass52 = springMvcApiReader51.getClass();
        springMvcApiReader34.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        springMvcApiReader19.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        java.util.Set<java.lang.reflect.Type> typeSet56 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger57 = springMvcApiReader2.swagger;
        java.util.Set<java.lang.reflect.Type> typeSet58 = springMvcApiReader2.typesToSkip;
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap59 = null;
        io.swagger.annotations.Api api60 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, io.swagger.models.Tag> strMap61 = springMvcApiReader2.updateTagsForApi(strMap59, api60);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/hi!" + "'", str16, "/hi!");
        org.junit.Assert.assertNotNull(typeArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(typeArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(typeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(logAdapter39);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "/hi!" + "'", str48, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(typeSet56);
        org.junit.Assert.assertNull(swagger57);
        org.junit.Assert.assertNotNull(typeSet58);
    }

    @Test
    public void test02654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02654");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        java.util.Set<java.lang.reflect.Type> typeSet5 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet6 = springMvcApiReader2.getTypesToSkip();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = null;
        java.lang.String str9 = springMvcApiReader2.parseOperationPath("", strMap8);
        io.swagger.models.Operation operation10 = null;
        io.swagger.annotations.ApiOperation apiOperation11 = null;
        springMvcApiReader2.updateTagsForOperation(operation10, apiOperation11);
        io.swagger.annotations.Api api14 = null;
        boolean boolean15 = springMvcApiReader2.canReadApi(false, api14);
        io.swagger.models.Swagger swagger16 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter17 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader18 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger16, logAdapter17);
        java.lang.reflect.Type[] typeArray19 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet20 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet20, typeArray19);
        springMvcApiReader18.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet20);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = springMvcApiReader18.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap25 = null;
        java.lang.String str26 = springMvcApiReader18.parseOperationPath("", strMap25);
        io.swagger.annotations.Api api28 = null;
        boolean boolean29 = springMvcApiReader18.canReadApi(false, api28);
        java.util.Map<java.lang.String, java.lang.String> strMap31 = null;
        java.lang.String str32 = springMvcApiReader18.parseOperationPath("hi!", strMap31);
        java.util.Map<java.lang.String, java.lang.String> strMap34 = null;
        java.lang.String str35 = springMvcApiReader18.parseOperationPath("hi!", strMap34);
        io.swagger.models.Operation operation36 = null;
        io.swagger.annotations.ApiOperation apiOperation37 = null;
        springMvcApiReader18.updateTagsForOperation(operation36, apiOperation37);
        java.lang.Class<?> wildcardClass39 = springMvcApiReader18.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass39);
        java.util.Set<java.lang.reflect.Type> typeSet41 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Operation operation42 = null;
        io.swagger.annotations.ApiOperation apiOperation43 = null;
        springMvcApiReader2.updateTagsForOperation(operation42, apiOperation43);
        io.swagger.annotations.Api api45 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.lang.String> strSet46 = springMvcApiReader2.extractTags(api45);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeSet5);
        org.junit.Assert.assertNotNull(typeSet6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(typeArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(logAdapter23);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "/hi!" + "'", str32, "/hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "/hi!" + "'", str35, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(typeSet41);
    }

    @Test
    public void test02655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02655");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader2.parseOperationPath("hi!", strMap15);
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.Class<?> wildcardClass20 = springMvcApiReader19.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass20);
        java.util.Map<java.lang.String, java.lang.String> strMap23 = null;
        java.lang.String str24 = springMvcApiReader2.parseOperationPath("/hi!", strMap23);
        io.swagger.models.Swagger swagger25 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter26 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader27 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger25, logAdapter26);
        java.lang.reflect.Type[] typeArray28 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet29 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet29, typeArray28);
        springMvcApiReader27.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet29);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet29);
        io.swagger.models.Swagger swagger33 = springMvcApiReader2.swagger;
        io.swagger.models.Operation operation34 = null;
        io.swagger.annotations.ApiOperation apiOperation35 = null;
        springMvcApiReader2.updateTagsForOperation(operation34, apiOperation35);
        io.swagger.annotations.Api api37 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<io.swagger.models.SecurityRequirement> securityRequirementList38 = springMvcApiReader2.getSecurityRequirements(api37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/hi!" + "'", str16, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "/hi!" + "'", str24, "/hi!");
        org.junit.Assert.assertNotNull(typeArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(swagger33);
    }

    @Test
    public void test02656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02656");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        java.util.Map<java.lang.String, java.lang.String> strMap16 = null;
        java.lang.String str17 = springMvcApiReader2.parseOperationPath("/hi!", strMap16);
        io.swagger.models.Swagger swagger18 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter19 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader20 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger18, logAdapter19);
        java.lang.reflect.Type[] typeArray21 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet22 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet22, typeArray21);
        springMvcApiReader20.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet22);
        java.lang.annotation.Annotation[] annotationArray25 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList26 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList26, annotationArray25);
        boolean boolean28 = springMvcApiReader20.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList26);
        io.swagger.models.Swagger swagger29 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter30 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader31 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger29, logAdapter30);
        java.lang.Class<?> wildcardClass32 = springMvcApiReader31.getClass();
        springMvcApiReader20.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass32);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass32);
        io.swagger.models.Swagger swagger35 = springMvcApiReader2.swagger;
        io.swagger.annotations.Api api37 = null;
        boolean boolean38 = springMvcApiReader2.canReadApi(true, api37);
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "/hi!" + "'", str17, "/hi!");
        org.junit.Assert.assertNotNull(typeArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(annotationArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNull(swagger35);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test02657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02657");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type[] typeArray18 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet19 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet19, typeArray18);
        springMvcApiReader17.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet19);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = springMvcApiReader17.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap24 = null;
        java.lang.String str25 = springMvcApiReader17.parseOperationPath("", strMap24);
        io.swagger.annotations.Api api27 = null;
        boolean boolean28 = springMvcApiReader17.canReadApi(false, api27);
        java.util.Map<java.lang.String, java.lang.String> strMap30 = null;
        java.lang.String str31 = springMvcApiReader17.parseOperationPath("hi!", strMap30);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.Class<?> wildcardClass35 = springMvcApiReader34.getClass();
        springMvcApiReader17.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger39 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter40 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader41 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger39, logAdapter40);
        java.lang.reflect.Type[] typeArray42 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet43 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet43, typeArray42);
        springMvcApiReader41.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet43);
        io.swagger.models.Swagger swagger46 = springMvcApiReader41.swagger;
        io.swagger.models.Swagger swagger47 = springMvcApiReader41.swagger;
        io.swagger.models.Swagger swagger48 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter49 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader50 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger48, logAdapter49);
        java.lang.reflect.Type[] typeArray51 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet52 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet52, typeArray51);
        springMvcApiReader50.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet52);
        java.lang.annotation.Annotation[] annotationArray55 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList56 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList56, annotationArray55);
        boolean boolean58 = springMvcApiReader50.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList56);
        boolean boolean59 = springMvcApiReader41.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList56);
        java.lang.Class<?> wildcardClass60 = springMvcApiReader41.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass60);
        io.swagger.annotations.ApiOperation apiOperation62 = null;
        io.swagger.models.Operation operation63 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateOperationProtocols(apiOperation62, operation63);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(logAdapter22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "/hi!" + "'", str31, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(typeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNull(swagger46);
        org.junit.Assert.assertNull(swagger47);
        org.junit.Assert.assertNotNull(typeArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(annotationArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test02658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02658");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        java.util.Set<java.lang.reflect.Type> typeSet5 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet6 = springMvcApiReader2.getTypesToSkip();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = null;
        java.lang.String str9 = springMvcApiReader2.parseOperationPath("", strMap8);
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader12 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger10, logAdapter11);
        java.lang.reflect.Type[] typeArray13 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet14 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet14, typeArray13);
        springMvcApiReader12.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet14);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter17 = springMvcApiReader12.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap19 = null;
        java.lang.String str20 = springMvcApiReader12.parseOperationPath("", strMap19);
        io.swagger.annotations.Api api22 = null;
        boolean boolean23 = springMvcApiReader12.canReadApi(false, api22);
        java.util.Map<java.lang.String, java.lang.String> strMap25 = null;
        java.lang.String str26 = springMvcApiReader12.parseOperationPath("hi!", strMap25);
        io.swagger.models.Swagger swagger27 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter28 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader29 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger27, logAdapter28);
        java.lang.Class<?> wildcardClass30 = springMvcApiReader29.getClass();
        springMvcApiReader12.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass30);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.reflect.Type[] typeArray35 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet36 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet36, typeArray35);
        springMvcApiReader34.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet36);
        java.lang.annotation.Annotation[] annotationArray39 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList40 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList40, annotationArray39);
        boolean boolean42 = springMvcApiReader34.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList40);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList43 = springMvcApiReader2.getParameters((java.lang.reflect.Type) wildcardClass30, (java.util.List<java.lang.annotation.Annotation>) annotationList40);
        io.swagger.models.Swagger swagger44 = null;
        springMvcApiReader2.swagger = swagger44;
        java.util.List<io.swagger.models.parameters.Parameter> parameterList46 = null;
        java.util.Map<java.lang.String, java.lang.String> strMap47 = null;
        io.swagger.models.Operation operation48 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateOperationParameters(parameterList46, strMap47, operation48);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeSet5);
        org.junit.Assert.assertNotNull(typeSet6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(typeArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(logAdapter17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "/hi!" + "'", str26, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(typeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(annotationArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(parameterList43);
    }

    @Test
    public void test02659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02659");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        java.util.Set<java.lang.reflect.Type> typeSet5 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet6 = springMvcApiReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet7 = null;
        springMvcApiReader2.typesToSkip = typeSet7;
        java.util.Set<java.lang.reflect.Type> typeSet9 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader12 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger10, logAdapter11);
        java.lang.reflect.Type[] typeArray13 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet14 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet14, typeArray13);
        springMvcApiReader12.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet14);
        java.lang.annotation.Annotation[] annotationArray17 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList18 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList18, annotationArray17);
        boolean boolean20 = springMvcApiReader12.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList18);
        io.swagger.models.Swagger swagger21 = null;
        springMvcApiReader12.swagger = swagger21;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = null;
        springMvcApiReader12.LOG = logAdapter23;
        springMvcApiReader12.updateExtensionChain();
        io.swagger.models.Operation operation26 = null;
        io.swagger.annotations.ApiOperation apiOperation27 = null;
        springMvcApiReader12.updateTagsForOperation(operation26, apiOperation27);
        io.swagger.models.Swagger swagger29 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter30 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader31 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger29, logAdapter30);
        java.lang.reflect.Type[] typeArray32 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet33 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet33, typeArray32);
        springMvcApiReader31.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet33);
        java.lang.annotation.Annotation[] annotationArray36 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList37 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList37, annotationArray36);
        boolean boolean39 = springMvcApiReader31.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList37);
        io.swagger.models.Swagger swagger40 = null;
        springMvcApiReader31.swagger = swagger40;
        io.swagger.models.Swagger swagger42 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter43 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader44 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger42, logAdapter43);
        java.lang.reflect.Type[] typeArray45 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet46 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet46, typeArray45);
        springMvcApiReader44.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet46);
        java.lang.annotation.Annotation[] annotationArray49 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList50 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList50, annotationArray49);
        boolean boolean52 = springMvcApiReader44.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList50);
        io.swagger.models.Swagger swagger53 = null;
        springMvcApiReader44.swagger = swagger53;
        java.lang.annotation.Annotation[] annotationArray55 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList56 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList56, annotationArray55);
        boolean boolean58 = springMvcApiReader44.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList56);
        boolean boolean59 = springMvcApiReader31.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList56);
        boolean boolean60 = springMvcApiReader12.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList56);
        boolean boolean61 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList56);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter62 = null;
        springMvcApiReader2.LOG = logAdapter62;
        io.swagger.models.Swagger swagger64 = springMvcApiReader2.swagger;
        io.swagger.annotations.Api api66 = null;
        boolean boolean67 = springMvcApiReader2.canReadApi(false, api66);
        io.swagger.models.Swagger swagger68 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter69 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader70 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger68, logAdapter69);
        java.lang.reflect.Type[] typeArray71 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet72 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet72, typeArray71);
        springMvcApiReader70.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet72);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter75 = springMvcApiReader70.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap77 = null;
        java.lang.String str78 = springMvcApiReader70.parseOperationPath("hi!", strMap77);
        java.util.Set<java.lang.reflect.Type> typeSet79 = springMvcApiReader70.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet79);
        java.lang.reflect.Method method81 = null;
        io.swagger.models.Operation operation82 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.readImplicitParameters(method81, operation82);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeSet5);
        org.junit.Assert.assertNotNull(typeSet6);
        org.junit.Assert.assertNull(typeSet9);
        org.junit.Assert.assertNotNull(typeArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(annotationArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(typeArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(annotationArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(typeArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(annotationArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(annotationArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNull(swagger64);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(typeArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNull(logAdapter75);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "/hi!" + "'", str78, "/hi!");
        org.junit.Assert.assertNotNull(typeSet79);
    }

    @Test
    public void test02660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02660");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        java.util.Set<java.lang.reflect.Type> typeSet5 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet6 = springMvcApiReader2.getTypesToSkip();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = null;
        java.lang.String str9 = springMvcApiReader2.parseOperationPath("", strMap8);
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader12 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger10, logAdapter11);
        java.lang.reflect.Type[] typeArray13 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet14 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet14, typeArray13);
        springMvcApiReader12.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet14);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter17 = springMvcApiReader12.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap19 = null;
        java.lang.String str20 = springMvcApiReader12.parseOperationPath("", strMap19);
        io.swagger.annotations.Api api22 = null;
        boolean boolean23 = springMvcApiReader12.canReadApi(false, api22);
        java.util.Map<java.lang.String, java.lang.String> strMap25 = null;
        java.lang.String str26 = springMvcApiReader12.parseOperationPath("hi!", strMap25);
        io.swagger.models.Swagger swagger27 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter28 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader29 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger27, logAdapter28);
        java.lang.Class<?> wildcardClass30 = springMvcApiReader29.getClass();
        springMvcApiReader12.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass30);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.reflect.Type[] typeArray35 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet36 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet36, typeArray35);
        springMvcApiReader34.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet36);
        java.lang.annotation.Annotation[] annotationArray39 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList40 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList40, annotationArray39);
        boolean boolean42 = springMvcApiReader34.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList40);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList43 = springMvcApiReader2.getParameters((java.lang.reflect.Type) wildcardClass30, (java.util.List<java.lang.annotation.Annotation>) annotationList40);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.annotations.Api api46 = null;
        boolean boolean47 = springMvcApiReader2.canReadApi(false, api46);
        java.util.Set<java.lang.reflect.Type> typeSet48 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger49 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter50 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader51 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger49, logAdapter50);
        io.swagger.models.Swagger swagger52 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter53 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader54 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger52, logAdapter53);
        java.lang.reflect.Type[] typeArray55 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet56 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet56, typeArray55);
        springMvcApiReader54.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet56);
        java.lang.annotation.Annotation[] annotationArray59 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList60 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList60, annotationArray59);
        boolean boolean62 = springMvcApiReader54.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList60);
        boolean boolean63 = springMvcApiReader51.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList60);
        boolean boolean64 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList60);
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap65 = null;
        io.swagger.annotations.Api api66 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, io.swagger.models.Tag> strMap67 = springMvcApiReader2.updateTagsForApi(strMap65, api66);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeSet5);
        org.junit.Assert.assertNotNull(typeSet6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(typeArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(logAdapter17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "/hi!" + "'", str26, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(typeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(annotationArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(parameterList43);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(typeSet48);
        org.junit.Assert.assertNotNull(typeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(annotationArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
    }

    @Test
    public void test02661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02661");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        java.util.Set<java.lang.reflect.Type> typeSet5 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet6 = springMvcApiReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet7 = null;
        springMvcApiReader2.typesToSkip = typeSet7;
        java.util.Set<java.lang.reflect.Type> typeSet9 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader12 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger10, logAdapter11);
        java.lang.reflect.Type[] typeArray13 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet14 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet14, typeArray13);
        springMvcApiReader12.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet14);
        java.lang.annotation.Annotation[] annotationArray17 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList18 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList18, annotationArray17);
        boolean boolean20 = springMvcApiReader12.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList18);
        io.swagger.models.Swagger swagger21 = null;
        springMvcApiReader12.swagger = swagger21;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = null;
        springMvcApiReader12.LOG = logAdapter23;
        springMvcApiReader12.updateExtensionChain();
        io.swagger.models.Operation operation26 = null;
        io.swagger.annotations.ApiOperation apiOperation27 = null;
        springMvcApiReader12.updateTagsForOperation(operation26, apiOperation27);
        io.swagger.models.Swagger swagger29 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter30 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader31 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger29, logAdapter30);
        java.lang.reflect.Type[] typeArray32 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet33 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet33, typeArray32);
        springMvcApiReader31.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet33);
        java.lang.annotation.Annotation[] annotationArray36 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList37 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList37, annotationArray36);
        boolean boolean39 = springMvcApiReader31.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList37);
        io.swagger.models.Swagger swagger40 = null;
        springMvcApiReader31.swagger = swagger40;
        io.swagger.models.Swagger swagger42 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter43 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader44 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger42, logAdapter43);
        java.lang.reflect.Type[] typeArray45 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet46 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet46, typeArray45);
        springMvcApiReader44.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet46);
        java.lang.annotation.Annotation[] annotationArray49 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList50 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList50, annotationArray49);
        boolean boolean52 = springMvcApiReader44.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList50);
        io.swagger.models.Swagger swagger53 = null;
        springMvcApiReader44.swagger = swagger53;
        java.lang.annotation.Annotation[] annotationArray55 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList56 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList56, annotationArray55);
        boolean boolean58 = springMvcApiReader44.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList56);
        boolean boolean59 = springMvcApiReader31.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList56);
        boolean boolean60 = springMvcApiReader12.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList56);
        boolean boolean61 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList56);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter62 = null;
        springMvcApiReader2.LOG = logAdapter62;
        io.swagger.models.Swagger swagger64 = springMvcApiReader2.swagger;
        io.swagger.annotations.Api api66 = null;
        boolean boolean67 = springMvcApiReader2.canReadApi(false, api66);
        io.swagger.models.Swagger swagger68 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter69 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader70 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger68, logAdapter69);
        java.lang.reflect.Type[] typeArray71 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet72 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet72, typeArray71);
        springMvcApiReader70.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet72);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter75 = springMvcApiReader70.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap77 = null;
        java.lang.String str78 = springMvcApiReader70.parseOperationPath("hi!", strMap77);
        java.util.Set<java.lang.reflect.Type> typeSet79 = springMvcApiReader70.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet79);
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap81 = null;
        io.swagger.annotations.Api api82 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, io.swagger.models.Tag> strMap83 = springMvcApiReader2.updateTagsForApi(strMap81, api82);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeSet5);
        org.junit.Assert.assertNotNull(typeSet6);
        org.junit.Assert.assertNull(typeSet9);
        org.junit.Assert.assertNotNull(typeArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(annotationArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(typeArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(annotationArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(typeArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(annotationArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(annotationArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNull(swagger64);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(typeArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNull(logAdapter75);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "/hi!" + "'", str78, "/hi!");
        org.junit.Assert.assertNotNull(typeSet79);
    }

    @Test
    public void test02662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02662");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        io.swagger.models.Swagger swagger5 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger6 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader8 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger6, logAdapter7);
        java.lang.reflect.Type type9 = null;
        springMvcApiReader8.addTypeToSkippedTypes(type9);
        java.util.Set<java.lang.reflect.Type> typeSet11 = springMvcApiReader8.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet11);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter13 = null;
        springMvcApiReader2.LOG = logAdapter13;
        io.swagger.models.Operation operation15 = null;
        io.swagger.annotations.ApiOperation apiOperation16 = null;
        springMvcApiReader2.updateTagsForOperation(operation15, apiOperation16);
        java.util.Map<java.lang.String, java.lang.String> strMap19 = null;
        java.lang.String str20 = springMvcApiReader2.parseOperationPath("", strMap19);
        io.swagger.annotations.Api api22 = null;
        boolean boolean23 = springMvcApiReader2.canReadApi(true, api22);
        io.swagger.models.Swagger swagger24 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter25 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader26 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger24, logAdapter25);
        java.lang.reflect.Type[] typeArray27 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet28 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet28, typeArray27);
        springMvcApiReader26.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet28);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter31 = springMvcApiReader26.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap33 = null;
        java.lang.String str34 = springMvcApiReader26.parseOperationPath("", strMap33);
        io.swagger.annotations.Api api36 = null;
        boolean boolean37 = springMvcApiReader26.canReadApi(false, api36);
        java.util.Map<java.lang.String, java.lang.String> strMap39 = null;
        java.lang.String str40 = springMvcApiReader26.parseOperationPath("hi!", strMap39);
        io.swagger.models.Swagger swagger41 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter42 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader43 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger41, logAdapter42);
        java.lang.Class<?> wildcardClass44 = springMvcApiReader43.getClass();
        springMvcApiReader26.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass44);
        java.util.Map<java.lang.String, java.lang.String> strMap47 = null;
        java.lang.String str48 = springMvcApiReader26.parseOperationPath("/hi!", strMap47);
        io.swagger.models.Swagger swagger49 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter50 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader51 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger49, logAdapter50);
        java.lang.reflect.Type[] typeArray52 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet53 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet53, typeArray52);
        springMvcApiReader51.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet53);
        springMvcApiReader26.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet53);
        io.swagger.models.Swagger swagger57 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter58 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader59 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger57, logAdapter58);
        java.lang.reflect.Type[] typeArray60 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet61 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet61, typeArray60);
        springMvcApiReader59.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet61);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter64 = springMvcApiReader59.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap66 = null;
        java.lang.String str67 = springMvcApiReader59.parseOperationPath("", strMap66);
        java.lang.reflect.Type[] typeArray68 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList69 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList69, typeArray68);
        springMvcApiReader59.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList69);
        springMvcApiReader26.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList69);
        java.lang.annotation.Annotation[] annotationArray73 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList74 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList74, annotationArray73);
        boolean boolean76 = springMvcApiReader26.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList74);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter77 = null;
        springMvcApiReader26.LOG = logAdapter77;
        java.lang.Class<?> wildcardClass79 = springMvcApiReader26.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass79);
        io.swagger.annotations.Api api82 = null;
        boolean boolean83 = springMvcApiReader2.canReadApi(true, api82);
        io.swagger.models.Operation operation86 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updatePath("", "", operation86);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(swagger5);
        org.junit.Assert.assertNotNull(typeSet11);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(typeArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(logAdapter31);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "/hi!" + "'", str40, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "/hi!" + "'", str48, "/hi!");
        org.junit.Assert.assertNotNull(typeArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(typeArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNull(logAdapter64);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "" + "'", str67, "");
        org.junit.Assert.assertNotNull(typeArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(annotationArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
    }

    @Test
    public void test02663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02663");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.models.Swagger swagger3 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter4 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader5 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger3, logAdapter4);
        java.lang.reflect.Type[] typeArray6 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet7 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet7, typeArray6);
        springMvcApiReader5.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet7);
        java.lang.annotation.Annotation[] annotationArray10 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList11 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList11, annotationArray10);
        boolean boolean13 = springMvcApiReader5.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList11);
        boolean boolean14 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList11);
        java.util.Set<java.lang.reflect.Type> typeSet15 = springMvcApiReader2.getTypesToSkip();
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Operation operation17 = null;
        io.swagger.annotations.ApiResponses apiResponses18 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateApiResponse(operation17, apiResponses18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(annotationArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(typeSet15);
    }

    @Test
    public void test02664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02664");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.util.Set<java.lang.reflect.Type> typeSet7 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger8 = springMvcApiReader2.swagger;
        java.util.Map<java.lang.String, java.lang.String> strMap10 = null;
        java.lang.String str11 = springMvcApiReader2.parseOperationPath("", strMap10);
        io.swagger.models.Operation operation14 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updatePath("hi!", "", operation14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeSet7);
        org.junit.Assert.assertNull(swagger8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
    }

    @Test
    public void test02665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02665");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        io.swagger.models.Swagger swagger5 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter6 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader7 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger5, logAdapter6);
        java.lang.reflect.Type[] typeArray8 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet9 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet9, typeArray8);
        springMvcApiReader7.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet9);
        io.swagger.models.Swagger swagger12 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter13 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader14 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger12, logAdapter13);
        java.lang.reflect.Type[] typeArray15 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet16 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet16, typeArray15);
        springMvcApiReader14.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet16);
        springMvcApiReader7.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet16);
        io.swagger.models.Swagger swagger20 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter21 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader22 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger20, logAdapter21);
        java.lang.reflect.Type[] typeArray23 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet24 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet24, typeArray23);
        springMvcApiReader22.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet24);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter27 = springMvcApiReader22.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap29 = null;
        java.lang.String str30 = springMvcApiReader22.parseOperationPath("", strMap29);
        io.swagger.annotations.Api api32 = null;
        boolean boolean33 = springMvcApiReader22.canReadApi(false, api32);
        java.util.Map<java.lang.String, java.lang.String> strMap35 = null;
        java.lang.String str36 = springMvcApiReader22.parseOperationPath("hi!", strMap35);
        io.swagger.models.Swagger swagger37 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter38 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader39 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger37, logAdapter38);
        java.lang.Class<?> wildcardClass40 = springMvcApiReader39.getClass();
        springMvcApiReader22.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass40);
        springMvcApiReader7.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass40);
        java.util.Set<java.lang.reflect.Type> typeSet43 = springMvcApiReader7.getTypesToSkip();
        springMvcApiReader2.typesToSkip = typeSet43;
        java.util.Set<java.lang.reflect.Type> typeSet45 = springMvcApiReader2.getTypesToSkip();
        io.swagger.annotations.Api api47 = null;
        boolean boolean48 = springMvcApiReader2.canReadApi(false, api47);
        io.swagger.models.Swagger swagger49 = springMvcApiReader2.swagger;
        io.swagger.models.Operation operation50 = null;
        io.swagger.annotations.ApiOperation apiOperation51 = null;
        springMvcApiReader2.updateTagsForOperation(operation50, apiOperation51);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.annotations.Api api54 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.lang.String> strSet55 = springMvcApiReader2.extractTags(api54);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(typeArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(typeArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(logAdapter27);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "/hi!" + "'", str36, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(typeSet43);
        org.junit.Assert.assertNotNull(typeSet45);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(swagger49);
    }

    @Test
    public void test02666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02666");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.lang.annotation.Annotation[] annotationArray7 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList8 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList8, annotationArray7);
        boolean boolean10 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList8);
        java.util.Set<java.lang.reflect.Type> typeSet11 = springMvcApiReader2.typesToSkip;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Operation operation13 = null;
        io.swagger.annotations.ApiOperation apiOperation14 = null;
        springMvcApiReader2.updateTagsForOperation(operation13, apiOperation14);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        springMvcApiReader2.LOG = logAdapter16;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger19 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter20 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader21 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger19, logAdapter20);
        java.lang.reflect.Type[] typeArray22 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet23 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet23, typeArray22);
        springMvcApiReader21.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet23);
        io.swagger.models.Swagger swagger26 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter27 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader28 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger26, logAdapter27);
        java.lang.reflect.Type[] typeArray29 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet30 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet30, typeArray29);
        springMvcApiReader28.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet30);
        springMvcApiReader21.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet30);
        java.util.Map<java.lang.String, java.lang.String> strMap35 = null;
        java.lang.String str36 = springMvcApiReader21.parseOperationPath("/hi!", strMap35);
        io.swagger.models.Swagger swagger37 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter38 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader39 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger37, logAdapter38);
        java.lang.reflect.Type[] typeArray40 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet41 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet41, typeArray40);
        springMvcApiReader39.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet41);
        java.lang.annotation.Annotation[] annotationArray44 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList45 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList45, annotationArray44);
        boolean boolean47 = springMvcApiReader39.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList45);
        io.swagger.models.Swagger swagger48 = null;
        springMvcApiReader39.swagger = swagger48;
        io.swagger.models.Swagger swagger50 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter51 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader52 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger50, logAdapter51);
        java.lang.reflect.Type[] typeArray53 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet54 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet54, typeArray53);
        springMvcApiReader52.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet54);
        java.lang.annotation.Annotation[] annotationArray57 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList58 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList58, annotationArray57);
        boolean boolean60 = springMvcApiReader52.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList58);
        io.swagger.models.Swagger swagger61 = null;
        springMvcApiReader52.swagger = swagger61;
        java.lang.annotation.Annotation[] annotationArray63 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList64 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList64, annotationArray63);
        boolean boolean66 = springMvcApiReader52.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList64);
        boolean boolean67 = springMvcApiReader39.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList64);
        boolean boolean68 = springMvcApiReader21.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList64);
        boolean boolean69 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList64);
        io.swagger.annotations.Api api71 = null;
        boolean boolean72 = springMvcApiReader2.canReadApi(true, api71);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList73 = null;
        java.util.Map<java.lang.String, java.lang.String> strMap74 = null;
        io.swagger.models.Operation operation75 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateOperationParameters(parameterList73, strMap74, operation75);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(annotationArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(typeSet11);
        org.junit.Assert.assertNull(logAdapter18);
        org.junit.Assert.assertNotNull(typeArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(typeArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "/hi!" + "'", str36, "/hi!");
        org.junit.Assert.assertNotNull(typeArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(annotationArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(typeArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(annotationArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(annotationArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
    }

    @Test
    public void test02667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02667");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        io.swagger.models.Swagger swagger14 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter15 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader16 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger14, logAdapter15);
        java.lang.reflect.Type type17 = null;
        springMvcApiReader16.addTypeToSkippedTypes(type17);
        java.util.Set<java.lang.reflect.Type> typeSet19 = springMvcApiReader16.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet20 = springMvcApiReader16.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet20);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = null;
        springMvcApiReader2.LOG = logAdapter22;
        java.util.Set<java.lang.reflect.Type> typeSet24 = springMvcApiReader2.typesToSkip;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter25 = null;
        springMvcApiReader2.LOG = logAdapter25;
        io.swagger.models.Operation operation27 = null;
        io.swagger.annotations.ApiOperation apiOperation28 = null;
        springMvcApiReader2.updateTagsForOperation(operation27, apiOperation28);
        java.util.Set<java.lang.reflect.Type> typeSet30 = springMvcApiReader2.typesToSkip;
        io.swagger.annotations.Api api31 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.lang.String> strSet32 = springMvcApiReader2.extractTags(api31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(typeSet19);
        org.junit.Assert.assertNotNull(typeSet20);
        org.junit.Assert.assertNotNull(typeSet24);
        org.junit.Assert.assertNotNull(typeSet30);
    }

    @Test
    public void test02668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02668");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        java.util.Set<java.lang.reflect.Type> typeSet5 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet6 = springMvcApiReader2.getTypesToSkip();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = null;
        java.lang.String str9 = springMvcApiReader2.parseOperationPath("", strMap8);
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader12 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger10, logAdapter11);
        java.lang.reflect.Type[] typeArray13 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet14 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet14, typeArray13);
        springMvcApiReader12.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet14);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter17 = springMvcApiReader12.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap19 = null;
        java.lang.String str20 = springMvcApiReader12.parseOperationPath("", strMap19);
        io.swagger.annotations.Api api22 = null;
        boolean boolean23 = springMvcApiReader12.canReadApi(false, api22);
        java.util.Map<java.lang.String, java.lang.String> strMap25 = null;
        java.lang.String str26 = springMvcApiReader12.parseOperationPath("hi!", strMap25);
        io.swagger.models.Swagger swagger27 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter28 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader29 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger27, logAdapter28);
        java.lang.Class<?> wildcardClass30 = springMvcApiReader29.getClass();
        springMvcApiReader12.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass30);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.reflect.Type[] typeArray35 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet36 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet36, typeArray35);
        springMvcApiReader34.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet36);
        java.lang.annotation.Annotation[] annotationArray39 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList40 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList40, annotationArray39);
        boolean boolean42 = springMvcApiReader34.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList40);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList43 = springMvcApiReader2.getParameters((java.lang.reflect.Type) wildcardClass30, (java.util.List<java.lang.annotation.Annotation>) annotationList40);
        springMvcApiReader2.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet45 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger46 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter47 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader48 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger46, logAdapter47);
        java.lang.reflect.Type[] typeArray49 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet50 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet50, typeArray49);
        springMvcApiReader48.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet50);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter53 = springMvcApiReader48.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap55 = null;
        java.lang.String str56 = springMvcApiReader48.parseOperationPath("", strMap55);
        io.swagger.annotations.Api api58 = null;
        boolean boolean59 = springMvcApiReader48.canReadApi(false, api58);
        java.util.Map<java.lang.String, java.lang.String> strMap61 = null;
        java.lang.String str62 = springMvcApiReader48.parseOperationPath("", strMap61);
        java.util.Set<java.lang.reflect.Type> typeSet63 = springMvcApiReader48.getTypesToSkip();
        springMvcApiReader2.setTypesToSkip(typeSet63);
        io.swagger.models.Swagger swagger65 = null;
        springMvcApiReader2.swagger = swagger65;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter67 = null;
        springMvcApiReader2.LOG = logAdapter67;
        io.swagger.annotations.ApiOperation apiOperation69 = null;
        io.swagger.models.Operation operation70 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateOperationProtocols(apiOperation69, operation70);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeSet5);
        org.junit.Assert.assertNotNull(typeSet6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(typeArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(logAdapter17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "/hi!" + "'", str26, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(typeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(annotationArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(parameterList43);
        org.junit.Assert.assertNotNull(typeSet45);
        org.junit.Assert.assertNotNull(typeArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNull(logAdapter53);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "" + "'", str62, "");
        org.junit.Assert.assertNotNull(typeSet63);
    }

    @Test
    public void test02669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02669");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader2.parseOperationPath("hi!", strMap15);
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.Class<?> wildcardClass20 = springMvcApiReader19.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass20);
        java.util.Map<java.lang.String, java.lang.String> strMap23 = null;
        java.lang.String str24 = springMvcApiReader2.parseOperationPath("/hi!", strMap23);
        io.swagger.models.Swagger swagger25 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter26 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader27 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger25, logAdapter26);
        java.lang.reflect.Type[] typeArray28 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet29 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet29, typeArray28);
        springMvcApiReader27.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet29);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet29);
        io.swagger.models.Swagger swagger33 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter34 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader35 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger33, logAdapter34);
        java.lang.reflect.Type[] typeArray36 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet37 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet37, typeArray36);
        springMvcApiReader35.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet37);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter40 = springMvcApiReader35.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap42 = null;
        java.lang.String str43 = springMvcApiReader35.parseOperationPath("", strMap42);
        java.lang.reflect.Type[] typeArray44 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList45 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList45, typeArray44);
        springMvcApiReader35.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList45);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList45);
        java.lang.annotation.Annotation[] annotationArray49 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList50 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList50, annotationArray49);
        boolean boolean52 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList50);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter53 = null;
        springMvcApiReader2.LOG = logAdapter53;
        io.swagger.models.Swagger swagger55 = springMvcApiReader2.swagger;
        io.swagger.models.Operation operation56 = null;
        io.swagger.annotations.ApiOperation apiOperation57 = null;
        springMvcApiReader2.updateTagsForOperation(operation56, apiOperation57);
        java.util.Set<java.lang.reflect.Type> typeSet59 = springMvcApiReader2.getTypesToSkip();
        io.swagger.annotations.Api api61 = null;
        boolean boolean62 = springMvcApiReader2.canReadApi(false, api61);
        io.swagger.models.Operation operation63 = null;
        io.swagger.annotations.ApiResponses apiResponses64 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateApiResponse(operation63, apiResponses64);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/hi!" + "'", str16, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "/hi!" + "'", str24, "/hi!");
        org.junit.Assert.assertNotNull(typeArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(logAdapter40);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertNotNull(typeArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(annotationArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(swagger55);
        org.junit.Assert.assertNotNull(typeSet59);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
    }

    @Test
    public void test02670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02670");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        java.util.Set<java.lang.reflect.Type> typeSet5 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet6 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet7 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger8 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader10 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger8, logAdapter9);
        java.lang.reflect.Type[] typeArray11 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet12 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet12, typeArray11);
        springMvcApiReader10.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet12);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter15 = springMvcApiReader10.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap17 = null;
        java.lang.String str18 = springMvcApiReader10.parseOperationPath("", strMap17);
        java.lang.reflect.Type[] typeArray19 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList20 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList20, typeArray19);
        springMvcApiReader10.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList20);
        io.swagger.models.Swagger swagger23 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter24 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader25 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger23, logAdapter24);
        java.lang.reflect.Type[] typeArray26 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet27 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet27, typeArray26);
        springMvcApiReader25.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet27);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter30 = springMvcApiReader25.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap32 = null;
        java.lang.String str33 = springMvcApiReader25.parseOperationPath("", strMap32);
        io.swagger.models.Swagger swagger34 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter35 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader36 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger34, logAdapter35);
        java.lang.Class<?> wildcardClass37 = springMvcApiReader36.getClass();
        java.lang.reflect.Type[] typeArray38 = new java.lang.reflect.Type[] { wildcardClass37 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet39 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet39, typeArray38);
        springMvcApiReader25.typesToSkip = typeSet39;
        java.util.Set<java.lang.reflect.Type> typeSet42 = springMvcApiReader25.getTypesToSkip();
        springMvcApiReader10.setTypesToSkip(typeSet42);
        springMvcApiReader2.setTypesToSkip(typeSet42);
        io.swagger.models.Swagger swagger45 = springMvcApiReader2.swagger;
        io.swagger.annotations.ResponseHeader[] responseHeaderArray46 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap47 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray46);
        io.swagger.models.Swagger swagger48 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter49 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader50 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger48, logAdapter49);
        java.lang.reflect.Type[] typeArray51 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet52 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet52, typeArray51);
        springMvcApiReader50.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet52);
        java.util.Set<java.lang.reflect.Type> typeSet55 = springMvcApiReader50.typesToSkip;
        io.swagger.models.Swagger swagger56 = springMvcApiReader50.swagger;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter57 = null;
        springMvcApiReader50.LOG = logAdapter57;
        io.swagger.models.Swagger swagger59 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter60 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader61 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger59, logAdapter60);
        io.swagger.models.Swagger swagger62 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter63 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader64 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger62, logAdapter63);
        java.lang.reflect.Type[] typeArray65 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet66 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet66, typeArray65);
        springMvcApiReader64.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet66);
        java.lang.annotation.Annotation[] annotationArray69 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList70 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList70, annotationArray69);
        boolean boolean72 = springMvcApiReader64.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList70);
        boolean boolean73 = springMvcApiReader61.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList70);
        io.swagger.models.Swagger swagger74 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter75 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader76 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger74, logAdapter75);
        java.lang.reflect.Type[] typeArray77 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet78 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet78, typeArray77);
        springMvcApiReader76.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet78);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter81 = springMvcApiReader76.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap83 = null;
        java.lang.String str84 = springMvcApiReader76.parseOperationPath("", strMap83);
        io.swagger.annotations.Api api86 = null;
        boolean boolean87 = springMvcApiReader76.canReadApi(false, api86);
        io.swagger.models.Swagger swagger88 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter89 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader90 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger88, logAdapter89);
        java.lang.reflect.Type type91 = null;
        springMvcApiReader90.addTypeToSkippedTypes(type91);
        java.util.Set<java.lang.reflect.Type> typeSet93 = springMvcApiReader90.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet94 = springMvcApiReader90.typesToSkip;
        springMvcApiReader76.setTypesToSkip(typeSet94);
        springMvcApiReader61.typesToSkip = typeSet94;
        springMvcApiReader50.typesToSkip = typeSet94;
        springMvcApiReader2.typesToSkip = typeSet94;
        org.junit.Assert.assertNotNull(typeSet5);
        org.junit.Assert.assertNotNull(typeSet6);
        org.junit.Assert.assertNotNull(typeSet7);
        org.junit.Assert.assertNotNull(typeArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(logAdapter15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNotNull(typeArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(typeArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(logAdapter30);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(typeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(typeSet42);
        org.junit.Assert.assertNull(swagger45);
        org.junit.Assert.assertNull(strMap47);
        org.junit.Assert.assertNotNull(typeArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(typeSet55);
        org.junit.Assert.assertNull(swagger56);
        org.junit.Assert.assertNotNull(typeArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(annotationArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(typeArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNull(logAdapter81);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "" + "'", str84, "");
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(typeSet93);
        org.junit.Assert.assertNotNull(typeSet94);
    }

    @Test
    public void test02671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02671");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        java.util.Set<java.lang.reflect.Type> typeSet5 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet6 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger14 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter15 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader16 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger14, logAdapter15);
        java.lang.reflect.Type[] typeArray17 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet18 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet18, typeArray17);
        springMvcApiReader16.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet18);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet18);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet18);
        springMvcApiReader2.updateExtensionChain();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter24 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger25 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter26 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader27 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger25, logAdapter26);
        io.swagger.models.Swagger swagger28 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter29 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader30 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger28, logAdapter29);
        java.lang.reflect.Type[] typeArray31 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet32 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet32, typeArray31);
        springMvcApiReader30.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet32);
        java.lang.annotation.Annotation[] annotationArray35 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList36 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList36, annotationArray35);
        boolean boolean38 = springMvcApiReader30.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList36);
        boolean boolean39 = springMvcApiReader27.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList36);
        io.swagger.models.Swagger swagger40 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter41 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader42 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger40, logAdapter41);
        java.lang.reflect.Type[] typeArray43 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet44 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet44, typeArray43);
        springMvcApiReader42.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet44);
        java.lang.annotation.Annotation[] annotationArray47 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList48 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList48, annotationArray47);
        boolean boolean50 = springMvcApiReader42.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList48);
        boolean boolean51 = springMvcApiReader27.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList48);
        boolean boolean52 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList48);
        io.swagger.models.Operation operation55 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updatePath("/hi!", "/hi!", operation55);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeSet5);
        org.junit.Assert.assertNotNull(typeSet6);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(logAdapter24);
        org.junit.Assert.assertNotNull(typeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(annotationArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(typeArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(annotationArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
    }

    @Test
    public void test02672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02672");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader2.parseOperationPath("hi!", strMap15);
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.Class<?> wildcardClass20 = springMvcApiReader19.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass20);
        io.swagger.models.Swagger swagger22 = null;
        springMvcApiReader2.swagger = swagger22;
        io.swagger.models.Operation operation24 = null;
        io.swagger.annotations.ApiOperation apiOperation25 = null;
        springMvcApiReader2.updateTagsForOperation(operation24, apiOperation25);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter27 = null;
        springMvcApiReader2.LOG = logAdapter27;
        java.lang.Class<?> wildcardClass29 = springMvcApiReader2.getClass();
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/hi!" + "'", str16, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test02673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02673");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type type18 = null;
        springMvcApiReader17.addTypeToSkippedTypes(type18);
        java.util.Set<java.lang.reflect.Type> typeSet20 = springMvcApiReader17.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet20);
        java.util.Set<java.lang.reflect.Type> typeSet22 = springMvcApiReader2.getTypesToSkip();
        io.swagger.annotations.Api api24 = null;
        boolean boolean25 = springMvcApiReader2.canReadApi(true, api24);
        io.swagger.models.Swagger swagger26 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter27 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader28 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger26, logAdapter27);
        java.lang.reflect.Type[] typeArray29 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet30 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet30, typeArray29);
        springMvcApiReader28.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet30);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = springMvcApiReader28.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap35 = null;
        java.lang.String str36 = springMvcApiReader28.parseOperationPath("", strMap35);
        io.swagger.annotations.Api api38 = null;
        boolean boolean39 = springMvcApiReader28.canReadApi(false, api38);
        java.util.Map<java.lang.String, java.lang.String> strMap41 = null;
        java.lang.String str42 = springMvcApiReader28.parseOperationPath("hi!", strMap41);
        io.swagger.models.Swagger swagger43 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter44 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader45 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger43, logAdapter44);
        java.lang.Class<?> wildcardClass46 = springMvcApiReader45.getClass();
        springMvcApiReader28.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass46);
        springMvcApiReader28.updateExtensionChain();
        io.swagger.models.Swagger swagger49 = null;
        springMvcApiReader28.swagger = swagger49;
        io.swagger.models.Swagger swagger51 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter52 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader53 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger51, logAdapter52);
        java.lang.reflect.Type[] typeArray54 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet55 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet55, typeArray54);
        springMvcApiReader53.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet55);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter58 = springMvcApiReader53.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap60 = null;
        java.lang.String str61 = springMvcApiReader53.parseOperationPath("", strMap60);
        io.swagger.models.Swagger swagger62 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter63 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader64 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger62, logAdapter63);
        java.lang.Class<?> wildcardClass65 = springMvcApiReader64.getClass();
        java.lang.reflect.Type[] typeArray66 = new java.lang.reflect.Type[] { wildcardClass65 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet67 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet67, typeArray66);
        springMvcApiReader53.typesToSkip = typeSet67;
        java.util.Set<java.lang.reflect.Type> typeSet70 = springMvcApiReader53.getTypesToSkip();
        java.lang.Class<?> wildcardClass71 = springMvcApiReader53.getClass();
        springMvcApiReader28.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass71);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass71);
        io.swagger.annotations.Api api75 = null;
        boolean boolean76 = springMvcApiReader2.canReadApi(false, api75);
        io.swagger.models.Operation operation79 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updatePath("", "/hi!", operation79);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeSet20);
        org.junit.Assert.assertNotNull(typeSet22);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(typeArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(logAdapter33);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "/hi!" + "'", str42, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(typeArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(logAdapter58);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "" + "'", str61, "");
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(typeArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(typeSet70);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
    }

    @Test
    public void test02674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02674");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.lang.annotation.Annotation[] annotationArray7 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList8 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList8, annotationArray7);
        boolean boolean10 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList8);
        io.swagger.models.Swagger swagger11 = null;
        springMvcApiReader2.swagger = swagger11;
        io.swagger.models.Swagger swagger13 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter14 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader15 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger13, logAdapter14);
        java.lang.reflect.Type[] typeArray16 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet17 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet17, typeArray16);
        springMvcApiReader15.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet17);
        java.lang.annotation.Annotation[] annotationArray20 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList21 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList21, annotationArray20);
        boolean boolean23 = springMvcApiReader15.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList21);
        io.swagger.models.Swagger swagger24 = null;
        springMvcApiReader15.swagger = swagger24;
        java.lang.annotation.Annotation[] annotationArray26 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList27 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList27, annotationArray26);
        boolean boolean29 = springMvcApiReader15.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList27);
        boolean boolean30 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList27);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter31 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.util.Map<java.lang.String, java.lang.String> strMap36 = null;
        java.lang.String str37 = springMvcApiReader34.parseOperationPath("/hi!", strMap36);
        java.util.Set<java.lang.reflect.Type> typeSet38 = springMvcApiReader34.getTypesToSkip();
        springMvcApiReader2.setTypesToSkip(typeSet38);
        java.util.Map<java.lang.String, java.lang.String> strMap41 = null;
        java.lang.String str42 = springMvcApiReader2.parseOperationPath("hi!", strMap41);
        io.swagger.annotations.ApiOperation apiOperation43 = null;
        io.swagger.models.Operation operation44 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateOperationProtocols(apiOperation43, operation44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(annotationArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(typeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(annotationArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(annotationArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(logAdapter31);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "/hi!" + "'", str37, "/hi!");
        org.junit.Assert.assertNotNull(typeSet38);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "/hi!" + "'", str42, "/hi!");
    }

    @Test
    public void test02675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02675");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        java.util.Set<java.lang.reflect.Type> typeSet5 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet6 = springMvcApiReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet7 = null;
        springMvcApiReader2.typesToSkip = typeSet7;
        java.util.Map<java.lang.String, java.lang.String> strMap10 = null;
        java.lang.String str11 = springMvcApiReader2.parseOperationPath("/hi!", strMap10);
        io.swagger.annotations.Api api13 = null;
        boolean boolean14 = springMvcApiReader2.canReadApi(true, api13);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter15 = springMvcApiReader2.LOG;
        io.swagger.models.Operation operation18 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updatePath("/hi!", "/hi!", operation18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeSet5);
        org.junit.Assert.assertNotNull(typeSet6);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "/hi!" + "'", str11, "/hi!");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(logAdapter15);
    }

    @Test
    public void test02676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02676");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader2.parseOperationPath("hi!", strMap15);
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.Class<?> wildcardClass20 = springMvcApiReader19.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass20);
        java.util.Map<java.lang.String, java.lang.String> strMap23 = null;
        java.lang.String str24 = springMvcApiReader2.parseOperationPath("/hi!", strMap23);
        io.swagger.models.Swagger swagger25 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter26 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader27 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger25, logAdapter26);
        java.lang.reflect.Type[] typeArray28 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet29 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet29, typeArray28);
        springMvcApiReader27.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet29);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet29);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger34 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter35 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader36 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger34, logAdapter35);
        java.lang.reflect.Type[] typeArray37 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet38 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet38, typeArray37);
        springMvcApiReader36.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet38);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter41 = springMvcApiReader36.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap43 = null;
        java.lang.String str44 = springMvcApiReader36.parseOperationPath("", strMap43);
        io.swagger.annotations.Api api46 = null;
        boolean boolean47 = springMvcApiReader36.canReadApi(false, api46);
        java.util.Map<java.lang.String, java.lang.String> strMap49 = null;
        java.lang.String str50 = springMvcApiReader36.parseOperationPath("hi!", strMap49);
        io.swagger.models.Swagger swagger51 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter52 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader53 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger51, logAdapter52);
        java.lang.Class<?> wildcardClass54 = springMvcApiReader53.getClass();
        springMvcApiReader36.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass54);
        io.swagger.models.Swagger swagger56 = null;
        springMvcApiReader36.swagger = swagger56;
        io.swagger.models.Swagger swagger58 = springMvcApiReader36.swagger;
        java.util.Set<java.lang.reflect.Type> typeSet59 = springMvcApiReader36.typesToSkip;
        springMvcApiReader36.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet61 = springMvcApiReader36.typesToSkip;
        java.util.Map<java.lang.String, java.lang.String> strMap63 = null;
        java.lang.String str64 = springMvcApiReader36.parseOperationPath("hi!", strMap63);
        io.swagger.models.Swagger swagger65 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter66 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader67 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger65, logAdapter66);
        java.lang.reflect.Type[] typeArray68 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet69 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet69, typeArray68);
        springMvcApiReader67.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet69);
        java.util.Set<java.lang.reflect.Type> typeSet72 = springMvcApiReader67.typesToSkip;
        java.lang.Class<?> wildcardClass73 = springMvcApiReader67.getClass();
        io.swagger.models.Swagger swagger74 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter75 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader76 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger74, logAdapter75);
        java.lang.reflect.Type[] typeArray77 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet78 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet78, typeArray77);
        springMvcApiReader76.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet78);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter81 = springMvcApiReader76.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap83 = null;
        java.lang.String str84 = springMvcApiReader76.parseOperationPath("", strMap83);
        io.swagger.models.Swagger swagger85 = springMvcApiReader76.swagger;
        io.swagger.annotations.Api api87 = null;
        boolean boolean88 = springMvcApiReader76.canReadApi(false, api87);
        java.util.Set<java.lang.reflect.Type> typeSet89 = springMvcApiReader76.typesToSkip;
        java.lang.annotation.Annotation[] annotationArray90 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList91 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean92 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList91, annotationArray90);
        boolean boolean93 = springMvcApiReader76.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList91);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList94 = springMvcApiReader36.getParameters((java.lang.reflect.Type) wildcardClass73, (java.util.List<java.lang.annotation.Annotation>) annotationList91);
        java.lang.Class<?> wildcardClass95 = parameterList94.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass95);
        java.util.Map<java.lang.String, java.lang.String> strMap98 = null;
        java.lang.String str99 = springMvcApiReader2.parseOperationPath("hi!", strMap98);
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/hi!" + "'", str16, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "/hi!" + "'", str24, "/hi!");
        org.junit.Assert.assertNotNull(typeArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(logAdapter33);
        org.junit.Assert.assertNotNull(typeArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(logAdapter41);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "/hi!" + "'", str50, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNull(swagger58);
        org.junit.Assert.assertNotNull(typeSet59);
        org.junit.Assert.assertNotNull(typeSet61);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "/hi!" + "'", str64, "/hi!");
        org.junit.Assert.assertNotNull(typeArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(typeSet72);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(typeArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNull(logAdapter81);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "" + "'", str84, "");
        org.junit.Assert.assertNull(swagger85);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(typeSet89);
        org.junit.Assert.assertNotNull(annotationArray90);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNotNull(parameterList94);
        org.junit.Assert.assertNotNull(wildcardClass95);
        org.junit.Assert.assertEquals("'" + str99 + "' != '" + "/hi!" + "'", str99, "/hi!");
    }

    @Test
    public void test02677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02677");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.util.Set<java.lang.reflect.Type> typeSet7 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger8 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger9 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter10 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader11 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger9, logAdapter10);
        java.lang.reflect.Type[] typeArray12 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet13 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet13, typeArray12);
        springMvcApiReader11.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet13);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = springMvcApiReader11.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap18 = null;
        java.lang.String str19 = springMvcApiReader11.parseOperationPath("", strMap18);
        io.swagger.annotations.Api api21 = null;
        boolean boolean22 = springMvcApiReader11.canReadApi(false, api21);
        java.util.Map<java.lang.String, java.lang.String> strMap24 = null;
        java.lang.String str25 = springMvcApiReader11.parseOperationPath("hi!", strMap24);
        io.swagger.models.Swagger swagger26 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter27 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader28 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger26, logAdapter27);
        java.lang.Class<?> wildcardClass29 = springMvcApiReader28.getClass();
        springMvcApiReader11.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass29);
        io.swagger.models.Swagger swagger31 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter32 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader33 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger31, logAdapter32);
        java.lang.reflect.Type[] typeArray34 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet35 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet35, typeArray34);
        springMvcApiReader33.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet35);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter38 = springMvcApiReader33.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap40 = null;
        java.lang.String str41 = springMvcApiReader33.parseOperationPath("", strMap40);
        io.swagger.annotations.Api api43 = null;
        boolean boolean44 = springMvcApiReader33.canReadApi(false, api43);
        java.util.Map<java.lang.String, java.lang.String> strMap46 = null;
        java.lang.String str47 = springMvcApiReader33.parseOperationPath("hi!", strMap46);
        io.swagger.models.Swagger swagger48 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter49 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader50 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger48, logAdapter49);
        java.lang.Class<?> wildcardClass51 = springMvcApiReader50.getClass();
        springMvcApiReader33.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass51);
        java.util.Map<java.lang.String, java.lang.String> strMap54 = null;
        java.lang.String str55 = springMvcApiReader33.parseOperationPath("/hi!", strMap54);
        io.swagger.models.Swagger swagger56 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter57 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader58 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger56, logAdapter57);
        java.lang.reflect.Type[] typeArray59 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet60 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet60, typeArray59);
        springMvcApiReader58.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet60);
        springMvcApiReader33.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet60);
        io.swagger.models.Swagger swagger64 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter65 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader66 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger64, logAdapter65);
        java.lang.reflect.Type[] typeArray67 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet68 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet68, typeArray67);
        springMvcApiReader66.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet68);
        java.lang.annotation.Annotation[] annotationArray71 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList72 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList72, annotationArray71);
        boolean boolean74 = springMvcApiReader66.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList72);
        io.swagger.models.Swagger swagger75 = null;
        springMvcApiReader66.swagger = swagger75;
        io.swagger.models.Swagger swagger77 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter78 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader79 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger77, logAdapter78);
        java.lang.reflect.Type[] typeArray80 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet81 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet81, typeArray80);
        springMvcApiReader79.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet81);
        java.lang.annotation.Annotation[] annotationArray84 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList85 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList85, annotationArray84);
        boolean boolean87 = springMvcApiReader79.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList85);
        io.swagger.models.Swagger swagger88 = null;
        springMvcApiReader79.swagger = swagger88;
        java.lang.annotation.Annotation[] annotationArray90 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList91 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean92 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList91, annotationArray90);
        boolean boolean93 = springMvcApiReader79.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList91);
        boolean boolean94 = springMvcApiReader66.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList91);
        boolean boolean95 = springMvcApiReader33.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList91);
        boolean boolean96 = springMvcApiReader11.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList91);
        java.util.Set<java.lang.reflect.Type> typeSet97 = springMvcApiReader11.getTypesToSkip();
        springMvcApiReader2.setTypesToSkip(typeSet97);
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeSet7);
        org.junit.Assert.assertNull(swagger8);
        org.junit.Assert.assertNotNull(typeArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(logAdapter16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "/hi!" + "'", str25, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(typeArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(logAdapter38);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "/hi!" + "'", str47, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "/hi!" + "'", str55, "/hi!");
        org.junit.Assert.assertNotNull(typeArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(typeArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(annotationArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(typeArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(annotationArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(annotationArray90);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertNotNull(typeSet97);
    }

    @Test
    public void test02678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02678");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.lang.annotation.Annotation[] annotationArray7 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList8 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList8, annotationArray7);
        boolean boolean10 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList8);
        java.util.Set<java.lang.reflect.Type> typeSet11 = springMvcApiReader2.typesToSkip;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Operation operation13 = null;
        io.swagger.annotations.ApiOperation apiOperation14 = null;
        springMvcApiReader2.updateTagsForOperation(operation13, apiOperation14);
        io.swagger.models.Swagger swagger16 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter17 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader18 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger16, logAdapter17);
        java.lang.reflect.Type[] typeArray19 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet20 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet20, typeArray19);
        springMvcApiReader18.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet20);
        java.lang.annotation.Annotation[] annotationArray23 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList24 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList24, annotationArray23);
        boolean boolean26 = springMvcApiReader18.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList24);
        io.swagger.models.Swagger swagger27 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter28 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader29 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger27, logAdapter28);
        java.lang.reflect.Type[] typeArray30 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet31 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet31, typeArray30);
        springMvcApiReader29.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet31);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter34 = springMvcApiReader29.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap36 = null;
        java.lang.String str37 = springMvcApiReader29.parseOperationPath("", strMap36);
        io.swagger.annotations.Api api39 = null;
        boolean boolean40 = springMvcApiReader29.canReadApi(false, api39);
        java.util.Map<java.lang.String, java.lang.String> strMap42 = null;
        java.lang.String str43 = springMvcApiReader29.parseOperationPath("hi!", strMap42);
        io.swagger.models.Swagger swagger44 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter45 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader46 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger44, logAdapter45);
        java.lang.Class<?> wildcardClass47 = springMvcApiReader46.getClass();
        springMvcApiReader29.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass47);
        java.util.Map<java.lang.String, java.lang.String> strMap50 = null;
        java.lang.String str51 = springMvcApiReader29.parseOperationPath("/hi!", strMap50);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray52 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap53 = springMvcApiReader29.parseResponseHeaders(responseHeaderArray52);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap54 = springMvcApiReader18.parseResponseHeaders(responseHeaderArray52);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap55 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray52);
        io.swagger.models.Swagger swagger56 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter57 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader58 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger56, logAdapter57);
        java.lang.reflect.Type[] typeArray59 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet60 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet60, typeArray59);
        springMvcApiReader58.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet60);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter63 = springMvcApiReader58.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap65 = null;
        java.lang.String str66 = springMvcApiReader58.parseOperationPath("", strMap65);
        io.swagger.models.Swagger swagger67 = springMvcApiReader58.swagger;
        io.swagger.annotations.Api api69 = null;
        boolean boolean70 = springMvcApiReader58.canReadApi(false, api69);
        java.util.Set<java.lang.reflect.Type> typeSet71 = springMvcApiReader58.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet72 = springMvcApiReader58.getTypesToSkip();
        springMvcApiReader2.setTypesToSkip(typeSet72);
        io.swagger.models.Operation operation74 = null;
        io.swagger.annotations.ApiOperation apiOperation75 = null;
        springMvcApiReader2.updateTagsForOperation(operation74, apiOperation75);
        io.swagger.models.Swagger swagger77 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter78 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader79 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger77, logAdapter78);
        java.lang.reflect.Type[] typeArray80 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet81 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet81, typeArray80);
        springMvcApiReader79.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet81);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter84 = springMvcApiReader79.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap86 = null;
        java.lang.String str87 = springMvcApiReader79.parseOperationPath("", strMap86);
        java.lang.reflect.Type[] typeArray88 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList89 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList89, typeArray88);
        springMvcApiReader79.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList89);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList89);
        com.github.kongchen.swagger.docgen.spring.SpringResource springResource93 = null;
        // The following exception was thrown during execution in test generation
        try {
            io.swagger.models.Swagger swagger94 = springMvcApiReader2.read(springResource93);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(annotationArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(typeSet11);
        org.junit.Assert.assertNotNull(typeArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(annotationArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(typeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(logAdapter34);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "/hi!" + "'", str43, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "/hi!" + "'", str51, "/hi!");
        org.junit.Assert.assertNotNull(responseHeaderArray52);
        org.junit.Assert.assertNull(strMap53);
        org.junit.Assert.assertNull(strMap54);
        org.junit.Assert.assertNull(strMap55);
        org.junit.Assert.assertNotNull(typeArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNull(logAdapter63);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "" + "'", str66, "");
        org.junit.Assert.assertNull(swagger67);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(typeSet71);
        org.junit.Assert.assertNotNull(typeSet72);
        org.junit.Assert.assertNotNull(typeArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNull(logAdapter84);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "" + "'", str87, "");
        org.junit.Assert.assertNotNull(typeArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
    }

    @Test
    public void test02679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02679");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader2.parseOperationPath("hi!", strMap15);
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.Class<?> wildcardClass20 = springMvcApiReader19.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass20);
        io.swagger.models.Swagger swagger22 = null;
        springMvcApiReader2.swagger = swagger22;
        io.swagger.models.Swagger swagger24 = springMvcApiReader2.swagger;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter25 = null;
        springMvcApiReader2.LOG = logAdapter25;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter27 = null;
        springMvcApiReader2.LOG = logAdapter27;
        java.util.Set<java.lang.reflect.Type> typeSet29 = springMvcApiReader2.getTypesToSkip();
        io.swagger.annotations.ApiOperation apiOperation30 = null;
        io.swagger.models.Operation operation31 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateOperationProtocols(apiOperation30, operation31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/hi!" + "'", str16, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNull(swagger24);
        org.junit.Assert.assertNotNull(typeSet29);
    }

    @Test
    public void test02680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02680");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader2.parseOperationPath("hi!", strMap15);
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.Class<?> wildcardClass20 = springMvcApiReader19.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass20);
        io.swagger.models.Swagger swagger22 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader24 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger22, logAdapter23);
        java.lang.reflect.Type[] typeArray25 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet26 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet26, typeArray25);
        springMvcApiReader24.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet26);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter29 = springMvcApiReader24.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap31 = null;
        java.lang.String str32 = springMvcApiReader24.parseOperationPath("", strMap31);
        java.lang.reflect.Type[] typeArray33 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList34 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList34, typeArray33);
        springMvcApiReader24.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList34);
        java.lang.String[] strArray37 = new java.lang.String[] {};
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!", "", "hi!" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap42 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray43 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList44 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList44, securityRequirementArray43);
        io.swagger.models.Operation operation46 = null;
        springMvcApiReader24.updateOperation(strArray37, strArray41, strMap42, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList44, operation46);
        java.lang.String[] strArray54 = new java.lang.String[] { "/hi!", "", "/hi!", "hi!", "hi!", "hi!" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap55 = null;
        io.swagger.models.Swagger swagger56 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter57 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader58 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger56, logAdapter57);
        java.lang.reflect.Type[] typeArray59 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet60 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet60, typeArray59);
        springMvcApiReader58.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet60);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter63 = springMvcApiReader58.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap65 = null;
        java.lang.String str66 = springMvcApiReader58.parseOperationPath("", strMap65);
        java.lang.reflect.Type[] typeArray67 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList68 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList68, typeArray67);
        springMvcApiReader58.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList68);
        java.lang.String[] strArray71 = new java.lang.String[] {};
        java.lang.String[] strArray75 = new java.lang.String[] { "hi!", "", "hi!" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap76 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray77 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList78 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList78, securityRequirementArray77);
        io.swagger.models.Operation operation80 = null;
        springMvcApiReader58.updateOperation(strArray71, strArray75, strMap76, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList78, operation80);
        io.swagger.models.Operation operation82 = null;
        springMvcApiReader2.updateOperation(strArray37, strArray54, strMap55, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList78, operation82);
        io.swagger.models.Swagger swagger84 = null;
        springMvcApiReader2.swagger = swagger84;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter86 = springMvcApiReader2.LOG;
        io.swagger.models.Operation operation87 = null;
        io.swagger.annotations.ApiOperation apiOperation88 = null;
        springMvcApiReader2.updateTagsForOperation(operation87, apiOperation88);
        io.swagger.models.Swagger swagger90 = springMvcApiReader2.swagger;
        java.util.Set<java.lang.reflect.Type> typeSet91 = springMvcApiReader2.getTypesToSkip();
        io.swagger.annotations.Api api93 = null;
        boolean boolean94 = springMvcApiReader2.canReadApi(true, api93);
        java.util.Set<java.lang.reflect.Type> typeSet95 = springMvcApiReader2.getTypesToSkip();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter96 = null;
        springMvcApiReader2.LOG = logAdapter96;
        com.github.kongchen.swagger.docgen.spring.SpringResource springResource98 = null;
        // The following exception was thrown during execution in test generation
        try {
            io.swagger.models.Swagger swagger99 = springMvcApiReader2.read(springResource98);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/hi!" + "'", str16, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(typeArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(logAdapter29);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertNotNull(typeArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(securityRequirementArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(typeArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNull(logAdapter63);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "" + "'", str66, "");
        org.junit.Assert.assertNotNull(typeArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertNotNull(securityRequirementArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNull(logAdapter86);
        org.junit.Assert.assertNull(swagger90);
        org.junit.Assert.assertNotNull(typeSet91);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertNotNull(typeSet95);
    }

    @Test
    public void test02681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02681");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        java.util.Set<java.lang.reflect.Type> typeSet5 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet6 = springMvcApiReader2.getTypesToSkip();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = null;
        java.lang.String str9 = springMvcApiReader2.parseOperationPath("", strMap8);
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader12 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger10, logAdapter11);
        java.lang.reflect.Type[] typeArray13 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet14 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet14, typeArray13);
        springMvcApiReader12.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet14);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter17 = springMvcApiReader12.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap19 = null;
        java.lang.String str20 = springMvcApiReader12.parseOperationPath("", strMap19);
        io.swagger.annotations.Api api22 = null;
        boolean boolean23 = springMvcApiReader12.canReadApi(false, api22);
        java.util.Map<java.lang.String, java.lang.String> strMap25 = null;
        java.lang.String str26 = springMvcApiReader12.parseOperationPath("hi!", strMap25);
        io.swagger.models.Swagger swagger27 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter28 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader29 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger27, logAdapter28);
        java.lang.Class<?> wildcardClass30 = springMvcApiReader29.getClass();
        springMvcApiReader12.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass30);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.reflect.Type[] typeArray35 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet36 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet36, typeArray35);
        springMvcApiReader34.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet36);
        java.lang.annotation.Annotation[] annotationArray39 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList40 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList40, annotationArray39);
        boolean boolean42 = springMvcApiReader34.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList40);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList43 = springMvcApiReader2.getParameters((java.lang.reflect.Type) wildcardClass30, (java.util.List<java.lang.annotation.Annotation>) annotationList40);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.annotations.Api api46 = null;
        boolean boolean47 = springMvcApiReader2.canReadApi(false, api46);
        java.util.Set<java.lang.reflect.Type> typeSet48 = springMvcApiReader2.getTypesToSkip();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter49 = null;
        springMvcApiReader2.LOG = logAdapter49;
        org.junit.Assert.assertNotNull(typeSet5);
        org.junit.Assert.assertNotNull(typeSet6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(typeArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(logAdapter17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "/hi!" + "'", str26, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(typeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(annotationArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(parameterList43);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(typeSet48);
    }

    @Test
    public void test02682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02682");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.lang.annotation.Annotation[] annotationArray7 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList8 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList8, annotationArray7);
        boolean boolean10 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList8);
        io.swagger.models.Swagger swagger11 = null;
        springMvcApiReader2.swagger = swagger11;
        java.util.Map<java.lang.String, java.lang.String> strMap14 = null;
        java.lang.String str15 = springMvcApiReader2.parseOperationPath("hi!", strMap14);
        io.swagger.models.Swagger swagger16 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter17 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader18 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger16, logAdapter17);
        java.lang.reflect.Type type19 = null;
        springMvcApiReader18.addTypeToSkippedTypes(type19);
        java.util.Set<java.lang.reflect.Type> typeSet21 = springMvcApiReader18.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet22 = springMvcApiReader18.typesToSkip;
        springMvcApiReader2.typesToSkip = typeSet22;
        io.swagger.models.Swagger swagger24 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger25 = springMvcApiReader2.swagger;
        java.util.Set<java.lang.reflect.Type> typeSet26 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Operation operation29 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updatePath("hi!", "hi!", operation29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(annotationArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "/hi!" + "'", str15, "/hi!");
        org.junit.Assert.assertNotNull(typeSet21);
        org.junit.Assert.assertNotNull(typeSet22);
        org.junit.Assert.assertNull(swagger24);
        org.junit.Assert.assertNull(swagger25);
        org.junit.Assert.assertNotNull(typeSet26);
    }

    @Test
    public void test02683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02683");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.models.Swagger swagger3 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter4 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader5 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger3, logAdapter4);
        java.lang.reflect.Type[] typeArray6 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet7 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet7, typeArray6);
        springMvcApiReader5.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet7);
        java.lang.annotation.Annotation[] annotationArray10 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList11 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList11, annotationArray10);
        boolean boolean13 = springMvcApiReader5.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList11);
        boolean boolean14 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList11);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type[] typeArray18 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet19 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet19, typeArray18);
        springMvcApiReader17.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet19);
        java.lang.annotation.Annotation[] annotationArray22 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList23 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList23, annotationArray22);
        boolean boolean25 = springMvcApiReader17.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList23);
        boolean boolean26 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList23);
        java.util.Set<java.lang.reflect.Type> typeSet27 = springMvcApiReader2.getTypesToSkip();
        io.swagger.annotations.Api api29 = null;
        boolean boolean30 = springMvcApiReader2.canReadApi(true, api29);
        java.util.Map<java.lang.String, java.lang.String> strMap32 = null;
        java.lang.String str33 = springMvcApiReader2.parseOperationPath("", strMap32);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter34 = null;
        springMvcApiReader2.LOG = logAdapter34;
        java.lang.reflect.Method method36 = null;
        io.swagger.models.Operation operation37 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.readImplicitParameters(method36, operation37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(annotationArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(typeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(annotationArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(typeSet27);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
    }

    @Test
    public void test02684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02684");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.lang.annotation.Annotation[] annotationArray7 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList8 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList8, annotationArray7);
        boolean boolean10 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList8);
        io.swagger.models.Swagger swagger11 = null;
        springMvcApiReader2.swagger = swagger11;
        io.swagger.models.Swagger swagger13 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter14 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader15 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger13, logAdapter14);
        java.lang.reflect.Type[] typeArray16 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet17 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet17, typeArray16);
        springMvcApiReader15.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet17);
        java.lang.annotation.Annotation[] annotationArray20 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList21 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList21, annotationArray20);
        boolean boolean23 = springMvcApiReader15.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList21);
        io.swagger.models.Swagger swagger24 = null;
        springMvcApiReader15.swagger = swagger24;
        java.lang.annotation.Annotation[] annotationArray26 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList27 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList27, annotationArray26);
        boolean boolean29 = springMvcApiReader15.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList27);
        boolean boolean30 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList27);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter31 = springMvcApiReader2.LOG;
        io.swagger.models.Operation operation32 = null;
        io.swagger.annotations.ApiOperation apiOperation33 = null;
        springMvcApiReader2.updateTagsForOperation(operation32, apiOperation33);
        io.swagger.models.Operation operation37 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updatePath("/hi!", "/hi!", operation37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(annotationArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(typeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(annotationArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(annotationArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(logAdapter31);
    }

    @Test
    public void test02685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02685");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        springMvcApiReader2.LOG = logAdapter8;
        springMvcApiReader2.updateExtensionChain();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = null;
        java.lang.String str13 = springMvcApiReader2.parseOperationPath("", strMap12);
        io.swagger.annotations.Api api14 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<io.swagger.models.SecurityRequirement> securityRequirementList15 = springMvcApiReader2.getSecurityRequirements(api14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
    }

    @Test
    public void test02686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02686");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.models.Swagger swagger3 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter4 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader5 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger3, logAdapter4);
        java.lang.reflect.Type[] typeArray6 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet7 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet7, typeArray6);
        springMvcApiReader5.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet7);
        java.lang.annotation.Annotation[] annotationArray10 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList11 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList11, annotationArray10);
        boolean boolean13 = springMvcApiReader5.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList11);
        boolean boolean14 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList11);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type[] typeArray18 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet19 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet19, typeArray18);
        springMvcApiReader17.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet19);
        java.lang.annotation.Annotation[] annotationArray22 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList23 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList23, annotationArray22);
        boolean boolean25 = springMvcApiReader17.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList23);
        boolean boolean26 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList23);
        java.util.Set<java.lang.reflect.Type> typeSet27 = null;
        springMvcApiReader2.typesToSkip = typeSet27;
        io.swagger.models.Swagger swagger29 = null;
        springMvcApiReader2.swagger = swagger29;
        io.swagger.models.Operation operation31 = null;
        io.swagger.annotations.ApiOperation apiOperation32 = null;
        springMvcApiReader2.updateTagsForOperation(operation31, apiOperation32);
        java.util.Set<java.lang.reflect.Type> typeSet34 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger35 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter36 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader37 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger35, logAdapter36);
        java.lang.reflect.Type[] typeArray38 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet39 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet39, typeArray38);
        springMvcApiReader37.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet39);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter42 = springMvcApiReader37.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap44 = null;
        java.lang.String str45 = springMvcApiReader37.parseOperationPath("", strMap44);
        io.swagger.models.Swagger swagger46 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter47 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader48 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger46, logAdapter47);
        java.lang.Class<?> wildcardClass49 = springMvcApiReader48.getClass();
        java.lang.reflect.Type[] typeArray50 = new java.lang.reflect.Type[] { wildcardClass49 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet51 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet51, typeArray50);
        springMvcApiReader37.typesToSkip = typeSet51;
        java.util.Set<java.lang.reflect.Type> typeSet54 = springMvcApiReader37.getTypesToSkip();
        io.swagger.models.Swagger swagger55 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter56 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader57 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger55, logAdapter56);
        java.lang.reflect.Type type58 = null;
        springMvcApiReader57.addTypeToSkippedTypes(type58);
        java.util.Set<java.lang.reflect.Type> typeSet60 = springMvcApiReader57.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet61 = springMvcApiReader57.typesToSkip;
        springMvcApiReader37.setTypesToSkip(typeSet61);
        springMvcApiReader2.setTypesToSkip(typeSet61);
        io.swagger.models.Swagger swagger64 = null;
        springMvcApiReader2.swagger = swagger64;
        io.swagger.models.Operation operation66 = null;
        io.swagger.annotations.ApiResponses apiResponses67 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateApiResponse(operation66, apiResponses67);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(annotationArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(typeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(annotationArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(typeSet34);
        org.junit.Assert.assertNotNull(typeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(logAdapter42);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(typeArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(typeSet54);
        org.junit.Assert.assertNotNull(typeSet60);
        org.junit.Assert.assertNotNull(typeSet61);
    }

    @Test
    public void test02687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02687");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("hi!", strMap9);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        springMvcApiReader2.LOG = logAdapter11;
        java.lang.annotation.Annotation[] annotationArray13 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList14 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList14, annotationArray13);
        boolean boolean16 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList14);
        io.swagger.models.Operation operation19 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updatePath("/hi!", "/hi!", operation19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "/hi!" + "'", str10, "/hi!");
        org.junit.Assert.assertNotNull(annotationArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test02688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02688");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.util.Set<java.lang.reflect.Type> typeSet7 = springMvcApiReader2.typesToSkip;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger9 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter10 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader11 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger9, logAdapter10);
        java.lang.reflect.Type[] typeArray12 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet13 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet13, typeArray12);
        springMvcApiReader11.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet13);
        java.lang.annotation.Annotation[] annotationArray16 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList17 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList17, annotationArray16);
        boolean boolean19 = springMvcApiReader11.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList17);
        io.swagger.models.Swagger swagger20 = null;
        springMvcApiReader11.swagger = swagger20;
        io.swagger.models.Swagger swagger22 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader24 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger22, logAdapter23);
        java.lang.reflect.Type[] typeArray25 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet26 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet26, typeArray25);
        springMvcApiReader24.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet26);
        java.lang.annotation.Annotation[] annotationArray29 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList30 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList30, annotationArray29);
        boolean boolean32 = springMvcApiReader24.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList30);
        io.swagger.models.Swagger swagger33 = null;
        springMvcApiReader24.swagger = swagger33;
        java.lang.annotation.Annotation[] annotationArray35 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList36 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList36, annotationArray35);
        boolean boolean38 = springMvcApiReader24.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList36);
        boolean boolean39 = springMvcApiReader11.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList36);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter40 = springMvcApiReader11.LOG;
        io.swagger.models.Swagger swagger41 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter42 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader43 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger41, logAdapter42);
        java.util.Map<java.lang.String, java.lang.String> strMap45 = null;
        java.lang.String str46 = springMvcApiReader43.parseOperationPath("/hi!", strMap45);
        java.util.Set<java.lang.reflect.Type> typeSet47 = springMvcApiReader43.getTypesToSkip();
        springMvcApiReader11.setTypesToSkip(typeSet47);
        springMvcApiReader2.typesToSkip = typeSet47;
        io.swagger.models.Operation operation50 = null;
        io.swagger.annotations.ApiOperation apiOperation51 = null;
        springMvcApiReader2.updateTagsForOperation(operation50, apiOperation51);
        java.util.Set<java.lang.reflect.Type> typeSet53 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger54 = springMvcApiReader2.swagger;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter55 = springMvcApiReader2.LOG;
        io.swagger.annotations.ApiOperation apiOperation56 = null;
        io.swagger.models.Operation operation57 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateOperationProtocols(apiOperation56, operation57);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeSet7);
        org.junit.Assert.assertNotNull(typeArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(annotationArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(typeArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(annotationArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(annotationArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(logAdapter40);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "/hi!" + "'", str46, "/hi!");
        org.junit.Assert.assertNotNull(typeSet47);
        org.junit.Assert.assertNotNull(typeSet53);
        org.junit.Assert.assertNull(swagger54);
        org.junit.Assert.assertNull(logAdapter55);
    }

    @Test
    public void test02689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02689");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader2.parseOperationPath("hi!", strMap15);
        io.swagger.models.Operation operation17 = null;
        io.swagger.annotations.ApiOperation apiOperation18 = null;
        springMvcApiReader2.updateTagsForOperation(operation17, apiOperation18);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.annotations.Api api22 = null;
        boolean boolean23 = springMvcApiReader2.canReadApi(true, api22);
        io.swagger.models.Swagger swagger24 = springMvcApiReader2.swagger;
        com.github.kongchen.swagger.docgen.spring.SpringResource springResource25 = null;
        // The following exception was thrown during execution in test generation
        try {
            io.swagger.models.Swagger swagger26 = springMvcApiReader2.read(springResource25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/hi!" + "'", str16, "/hi!");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(swagger24);
    }

    @Test
    public void test02690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02690");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.lang.annotation.Annotation[] annotationArray7 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList8 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList8, annotationArray7);
        boolean boolean10 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList8);
        io.swagger.models.Swagger swagger11 = null;
        springMvcApiReader2.swagger = swagger11;
        io.swagger.models.Swagger swagger13 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter14 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader15 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger13, logAdapter14);
        java.lang.reflect.Type[] typeArray16 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet17 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet17, typeArray16);
        springMvcApiReader15.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet17);
        java.lang.annotation.Annotation[] annotationArray20 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList21 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList21, annotationArray20);
        boolean boolean23 = springMvcApiReader15.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList21);
        io.swagger.models.Swagger swagger24 = null;
        springMvcApiReader15.swagger = swagger24;
        java.lang.annotation.Annotation[] annotationArray26 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList27 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList27, annotationArray26);
        boolean boolean29 = springMvcApiReader15.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList27);
        boolean boolean30 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList27);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger32 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger33 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter34 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader35 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger33, logAdapter34);
        java.lang.reflect.Type[] typeArray36 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet37 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet37, typeArray36);
        springMvcApiReader35.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet37);
        java.lang.annotation.Annotation[] annotationArray40 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList41 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList41, annotationArray40);
        boolean boolean43 = springMvcApiReader35.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList41);
        java.util.Map<java.lang.String, java.lang.String> strMap45 = null;
        java.lang.String str46 = springMvcApiReader35.parseOperationPath("hi!", strMap45);
        io.swagger.models.Swagger swagger47 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter48 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader49 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger47, logAdapter48);
        java.lang.reflect.Type[] typeArray50 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet51 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet51, typeArray50);
        springMvcApiReader49.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet51);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter54 = springMvcApiReader49.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap56 = null;
        java.lang.String str57 = springMvcApiReader49.parseOperationPath("", strMap56);
        io.swagger.models.Swagger swagger58 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter59 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader60 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger58, logAdapter59);
        java.lang.Class<?> wildcardClass61 = springMvcApiReader60.getClass();
        java.lang.reflect.Type[] typeArray62 = new java.lang.reflect.Type[] { wildcardClass61 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet63 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet63, typeArray62);
        springMvcApiReader49.typesToSkip = typeSet63;
        java.util.Set<java.lang.reflect.Type> typeSet66 = springMvcApiReader49.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet67 = springMvcApiReader49.typesToSkip;
        springMvcApiReader35.setTypesToSkip(typeSet67);
        springMvcApiReader2.typesToSkip = typeSet67;
        io.swagger.models.Swagger swagger70 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter71 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader72 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger70, logAdapter71);
        java.lang.reflect.Type type73 = null;
        springMvcApiReader72.addTypeToSkippedTypes(type73);
        java.util.Set<java.lang.reflect.Type> typeSet75 = springMvcApiReader72.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet76 = springMvcApiReader72.getTypesToSkip();
        java.util.Map<java.lang.String, java.lang.String> strMap78 = null;
        java.lang.String str79 = springMvcApiReader72.parseOperationPath("", strMap78);
        io.swagger.models.Operation operation80 = null;
        io.swagger.annotations.ApiOperation apiOperation81 = null;
        springMvcApiReader72.updateTagsForOperation(operation80, apiOperation81);
        io.swagger.annotations.Api api84 = null;
        boolean boolean85 = springMvcApiReader72.canReadApi(false, api84);
        java.util.Set<java.lang.reflect.Type> typeSet86 = springMvcApiReader72.getTypesToSkip();
        springMvcApiReader2.setTypesToSkip(typeSet86);
        io.swagger.annotations.Api api89 = null;
        boolean boolean90 = springMvcApiReader2.canReadApi(false, api89);
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(annotationArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(typeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(annotationArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(annotationArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(swagger32);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(annotationArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "/hi!" + "'", str46, "/hi!");
        org.junit.Assert.assertNotNull(typeArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(logAdapter54);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "" + "'", str57, "");
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(typeArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(typeSet66);
        org.junit.Assert.assertNotNull(typeSet67);
        org.junit.Assert.assertNotNull(typeSet75);
        org.junit.Assert.assertNotNull(typeSet76);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "" + "'", str79, "");
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(typeSet86);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
    }

    @Test
    public void test02691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02691");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.lang.annotation.Annotation[] annotationArray7 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList8 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList8, annotationArray7);
        boolean boolean10 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList8);
        java.util.Set<java.lang.reflect.Type> typeSet11 = springMvcApiReader2.typesToSkip;
        com.github.kongchen.swagger.docgen.spring.SpringResource springResource12 = null;
        // The following exception was thrown during execution in test generation
        try {
            io.swagger.models.Swagger swagger13 = springMvcApiReader2.read(springResource12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(annotationArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(typeSet11);
    }

    @Test
    public void test02692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02692");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.models.Swagger swagger11 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter12 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader13 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger11, logAdapter12);
        java.lang.Class<?> wildcardClass14 = springMvcApiReader13.getClass();
        java.lang.reflect.Type[] typeArray15 = new java.lang.reflect.Type[] { wildcardClass14 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet16 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet16, typeArray15);
        springMvcApiReader2.typesToSkip = typeSet16;
        java.util.Set<java.lang.reflect.Type> typeSet19 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger20 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter21 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader22 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger20, logAdapter21);
        java.lang.reflect.Type type23 = null;
        springMvcApiReader22.addTypeToSkippedTypes(type23);
        java.util.Set<java.lang.reflect.Type> typeSet25 = springMvcApiReader22.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet26 = springMvcApiReader22.getTypesToSkip();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter27 = springMvcApiReader22.LOG;
        io.swagger.models.Swagger swagger28 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter29 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader30 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger28, logAdapter29);
        java.lang.reflect.Type[] typeArray31 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet32 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet32, typeArray31);
        springMvcApiReader30.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet32);
        io.swagger.models.Swagger swagger35 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter36 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader37 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger35, logAdapter36);
        java.lang.reflect.Type[] typeArray38 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet39 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet39, typeArray38);
        springMvcApiReader37.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet39);
        springMvcApiReader30.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet39);
        io.swagger.models.Swagger swagger43 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter44 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader45 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger43, logAdapter44);
        java.lang.reflect.Type[] typeArray46 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet47 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet47, typeArray46);
        springMvcApiReader45.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet47);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter50 = springMvcApiReader45.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap52 = null;
        java.lang.String str53 = springMvcApiReader45.parseOperationPath("", strMap52);
        io.swagger.annotations.Api api55 = null;
        boolean boolean56 = springMvcApiReader45.canReadApi(false, api55);
        java.util.Map<java.lang.String, java.lang.String> strMap58 = null;
        java.lang.String str59 = springMvcApiReader45.parseOperationPath("hi!", strMap58);
        io.swagger.models.Swagger swagger60 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter61 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader62 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger60, logAdapter61);
        java.lang.Class<?> wildcardClass63 = springMvcApiReader62.getClass();
        springMvcApiReader45.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass63);
        springMvcApiReader30.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass63);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter66 = springMvcApiReader30.LOG;
        io.swagger.models.Swagger swagger67 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter68 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader69 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger67, logAdapter68);
        java.lang.reflect.Type[] typeArray70 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet71 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet71, typeArray70);
        springMvcApiReader69.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet71);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter74 = springMvcApiReader69.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap76 = null;
        java.lang.String str77 = springMvcApiReader69.parseOperationPath("", strMap76);
        java.lang.reflect.Type[] typeArray78 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList79 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList79, typeArray78);
        springMvcApiReader69.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList79);
        springMvcApiReader30.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList79);
        springMvcApiReader22.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList79);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList79);
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap85 = null;
        io.swagger.annotations.Api api86 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, io.swagger.models.Tag> strMap87 = springMvcApiReader2.updateTagsForApi(strMap85, api86);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(typeArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(typeSet19);
        org.junit.Assert.assertNotNull(typeSet25);
        org.junit.Assert.assertNotNull(typeSet26);
        org.junit.Assert.assertNull(logAdapter27);
        org.junit.Assert.assertNotNull(typeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(typeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(typeArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(logAdapter50);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "/hi!" + "'", str59, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNull(logAdapter66);
        org.junit.Assert.assertNotNull(typeArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNull(logAdapter74);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "" + "'", str77, "");
        org.junit.Assert.assertNotNull(typeArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
    }

    @Test
    public void test02693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02693");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.lang.annotation.Annotation[] annotationArray7 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList8 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList8, annotationArray7);
        boolean boolean10 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList8);
        java.util.Set<java.lang.reflect.Type> typeSet11 = springMvcApiReader2.typesToSkip;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Operation operation13 = null;
        io.swagger.annotations.ApiOperation apiOperation14 = null;
        springMvcApiReader2.updateTagsForOperation(operation13, apiOperation14);
        io.swagger.models.Swagger swagger16 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter17 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader18 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger16, logAdapter17);
        java.lang.reflect.Type[] typeArray19 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet20 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet20, typeArray19);
        springMvcApiReader18.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet20);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = springMvcApiReader18.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap25 = null;
        java.lang.String str26 = springMvcApiReader18.parseOperationPath("", strMap25);
        io.swagger.models.Swagger swagger27 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter28 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader29 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger27, logAdapter28);
        java.lang.Class<?> wildcardClass30 = springMvcApiReader29.getClass();
        java.lang.reflect.Type[] typeArray31 = new java.lang.reflect.Type[] { wildcardClass30 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet32 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet32, typeArray31);
        springMvcApiReader18.typesToSkip = typeSet32;
        io.swagger.models.Swagger swagger35 = null;
        springMvcApiReader18.swagger = swagger35;
        java.util.Set<java.lang.reflect.Type> typeSet37 = springMvcApiReader18.getTypesToSkip();
        java.util.Map<java.lang.String, java.lang.String> strMap39 = null;
        java.lang.String str40 = springMvcApiReader18.parseOperationPath("", strMap39);
        io.swagger.models.Swagger swagger41 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter42 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader43 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger41, logAdapter42);
        java.lang.reflect.Type[] typeArray44 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet45 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet45, typeArray44);
        springMvcApiReader43.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet45);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter48 = springMvcApiReader43.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap50 = null;
        java.lang.String str51 = springMvcApiReader43.parseOperationPath("", strMap50);
        java.lang.reflect.Type[] typeArray52 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList53 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList53, typeArray52);
        springMvcApiReader43.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList53);
        java.lang.String[] strArray56 = new java.lang.String[] {};
        java.lang.String[] strArray60 = new java.lang.String[] { "hi!", "", "hi!" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap61 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray62 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList63 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList63, securityRequirementArray62);
        io.swagger.models.Operation operation65 = null;
        springMvcApiReader43.updateOperation(strArray56, strArray60, strMap61, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList63, operation65);
        springMvcApiReader43.updateExtensionChain();
        java.lang.Class<?> wildcardClass68 = springMvcApiReader43.getClass();
        springMvcApiReader18.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass68);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass68);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter71 = null;
        springMvcApiReader2.LOG = logAdapter71;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter73 = null;
        springMvcApiReader2.LOG = logAdapter73;
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(annotationArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(typeSet11);
        org.junit.Assert.assertNotNull(typeArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(logAdapter23);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(typeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(typeSet37);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertNotNull(typeArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(logAdapter48);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNotNull(typeArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertNotNull(securityRequirementArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test02694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02694");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader2.parseOperationPath("hi!", strMap15);
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.Class<?> wildcardClass20 = springMvcApiReader19.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass20);
        io.swagger.models.Swagger swagger22 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader24 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger22, logAdapter23);
        java.lang.reflect.Type[] typeArray25 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet26 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet26, typeArray25);
        springMvcApiReader24.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet26);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter29 = springMvcApiReader24.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap31 = null;
        java.lang.String str32 = springMvcApiReader24.parseOperationPath("", strMap31);
        java.lang.reflect.Type[] typeArray33 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList34 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList34, typeArray33);
        springMvcApiReader24.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList34);
        java.lang.String[] strArray37 = new java.lang.String[] {};
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!", "", "hi!" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap42 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray43 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList44 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList44, securityRequirementArray43);
        io.swagger.models.Operation operation46 = null;
        springMvcApiReader24.updateOperation(strArray37, strArray41, strMap42, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList44, operation46);
        java.lang.String[] strArray54 = new java.lang.String[] { "/hi!", "", "/hi!", "hi!", "hi!", "hi!" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap55 = null;
        io.swagger.models.Swagger swagger56 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter57 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader58 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger56, logAdapter57);
        java.lang.reflect.Type[] typeArray59 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet60 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet60, typeArray59);
        springMvcApiReader58.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet60);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter63 = springMvcApiReader58.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap65 = null;
        java.lang.String str66 = springMvcApiReader58.parseOperationPath("", strMap65);
        java.lang.reflect.Type[] typeArray67 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList68 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList68, typeArray67);
        springMvcApiReader58.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList68);
        java.lang.String[] strArray71 = new java.lang.String[] {};
        java.lang.String[] strArray75 = new java.lang.String[] { "hi!", "", "hi!" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap76 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray77 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList78 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList78, securityRequirementArray77);
        io.swagger.models.Operation operation80 = null;
        springMvcApiReader58.updateOperation(strArray71, strArray75, strMap76, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList78, operation80);
        io.swagger.models.Operation operation82 = null;
        springMvcApiReader2.updateOperation(strArray37, strArray54, strMap55, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList78, operation82);
        io.swagger.models.Swagger swagger84 = null;
        springMvcApiReader2.swagger = swagger84;
        io.swagger.models.Operation operation86 = null;
        io.swagger.annotations.ApiOperation apiOperation87 = null;
        springMvcApiReader2.updateTagsForOperation(operation86, apiOperation87);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter89 = null;
        springMvcApiReader2.LOG = logAdapter89;
        io.swagger.annotations.Api api91 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.lang.String> strSet92 = springMvcApiReader2.extractTags(api91);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/hi!" + "'", str16, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(typeArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(logAdapter29);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertNotNull(typeArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(securityRequirementArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(typeArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNull(logAdapter63);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "" + "'", str66, "");
        org.junit.Assert.assertNotNull(typeArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertNotNull(securityRequirementArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
    }

    @Test
    public void test02695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02695");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        io.swagger.models.Swagger swagger5 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter6 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader7 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger5, logAdapter6);
        java.lang.reflect.Type[] typeArray8 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet9 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet9, typeArray8);
        springMvcApiReader7.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet9);
        io.swagger.models.Swagger swagger12 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter13 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader14 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger12, logAdapter13);
        java.lang.reflect.Type[] typeArray15 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet16 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet16, typeArray15);
        springMvcApiReader14.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet16);
        springMvcApiReader7.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet16);
        io.swagger.models.Swagger swagger20 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter21 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader22 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger20, logAdapter21);
        java.lang.reflect.Type[] typeArray23 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet24 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet24, typeArray23);
        springMvcApiReader22.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet24);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter27 = springMvcApiReader22.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap29 = null;
        java.lang.String str30 = springMvcApiReader22.parseOperationPath("", strMap29);
        io.swagger.annotations.Api api32 = null;
        boolean boolean33 = springMvcApiReader22.canReadApi(false, api32);
        java.util.Map<java.lang.String, java.lang.String> strMap35 = null;
        java.lang.String str36 = springMvcApiReader22.parseOperationPath("hi!", strMap35);
        io.swagger.models.Swagger swagger37 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter38 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader39 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger37, logAdapter38);
        java.lang.Class<?> wildcardClass40 = springMvcApiReader39.getClass();
        springMvcApiReader22.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass40);
        springMvcApiReader7.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass40);
        java.util.Set<java.lang.reflect.Type> typeSet43 = springMvcApiReader7.getTypesToSkip();
        springMvcApiReader2.typesToSkip = typeSet43;
        java.util.Set<java.lang.reflect.Type> typeSet45 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger46 = null;
        springMvcApiReader2.swagger = swagger46;
        io.swagger.models.Operation operation50 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updatePath("", "/hi!", operation50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(typeArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(typeArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(logAdapter27);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "/hi!" + "'", str36, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(typeSet43);
        org.junit.Assert.assertNotNull(typeSet45);
    }

    @Test
    public void test02696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02696");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        springMvcApiReader2.LOG = logAdapter8;
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader12 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger10, logAdapter11);
        java.lang.reflect.Type type13 = null;
        springMvcApiReader12.addTypeToSkippedTypes(type13);
        java.util.Set<java.lang.reflect.Type> typeSet15 = springMvcApiReader12.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet16 = springMvcApiReader12.getTypesToSkip();
        java.util.Map<java.lang.String, java.lang.String> strMap18 = null;
        java.lang.String str19 = springMvcApiReader12.parseOperationPath("", strMap18);
        io.swagger.models.Swagger swagger20 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter21 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader22 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger20, logAdapter21);
        java.lang.reflect.Type[] typeArray23 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet24 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet24, typeArray23);
        springMvcApiReader22.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet24);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter27 = springMvcApiReader22.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap29 = null;
        java.lang.String str30 = springMvcApiReader22.parseOperationPath("", strMap29);
        io.swagger.annotations.Api api32 = null;
        boolean boolean33 = springMvcApiReader22.canReadApi(false, api32);
        java.util.Map<java.lang.String, java.lang.String> strMap35 = null;
        java.lang.String str36 = springMvcApiReader22.parseOperationPath("hi!", strMap35);
        io.swagger.models.Swagger swagger37 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter38 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader39 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger37, logAdapter38);
        java.lang.Class<?> wildcardClass40 = springMvcApiReader39.getClass();
        springMvcApiReader22.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass40);
        io.swagger.models.Swagger swagger42 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter43 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader44 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger42, logAdapter43);
        java.lang.reflect.Type[] typeArray45 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet46 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet46, typeArray45);
        springMvcApiReader44.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet46);
        java.lang.annotation.Annotation[] annotationArray49 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList50 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList50, annotationArray49);
        boolean boolean52 = springMvcApiReader44.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList50);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList53 = springMvcApiReader12.getParameters((java.lang.reflect.Type) wildcardClass40, (java.util.List<java.lang.annotation.Annotation>) annotationList50);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass40);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter55 = null;
        springMvcApiReader2.LOG = logAdapter55;
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap57 = null;
        io.swagger.annotations.Api api58 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, io.swagger.models.Tag> strMap59 = springMvcApiReader2.updateTagsForApi(strMap57, api58);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertNotNull(typeSet15);
        org.junit.Assert.assertNotNull(typeSet16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertNotNull(typeArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(logAdapter27);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "/hi!" + "'", str36, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(typeArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(annotationArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(parameterList53);
    }

    @Test
    public void test02697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02697");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        springMvcApiReader2.LOG = logAdapter8;
        springMvcApiReader2.updateExtensionChain();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        springMvcApiReader2.LOG = logAdapter11;
        io.swagger.models.Swagger swagger13 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger14 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter15 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader16 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger14, logAdapter15);
        java.lang.reflect.Type[] typeArray17 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet18 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet18, typeArray17);
        springMvcApiReader16.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet18);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter21 = springMvcApiReader16.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap23 = null;
        java.lang.String str24 = springMvcApiReader16.parseOperationPath("", strMap23);
        io.swagger.annotations.Api api26 = null;
        boolean boolean27 = springMvcApiReader16.canReadApi(false, api26);
        java.util.Map<java.lang.String, java.lang.String> strMap29 = null;
        java.lang.String str30 = springMvcApiReader16.parseOperationPath("hi!", strMap29);
        io.swagger.models.Swagger swagger31 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter32 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader33 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger31, logAdapter32);
        java.lang.Class<?> wildcardClass34 = springMvcApiReader33.getClass();
        springMvcApiReader16.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass34);
        io.swagger.models.Swagger swagger36 = null;
        springMvcApiReader16.swagger = swagger36;
        io.swagger.models.Swagger swagger38 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter39 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader40 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger38, logAdapter39);
        java.lang.reflect.Type type41 = null;
        springMvcApiReader40.addTypeToSkippedTypes(type41);
        java.util.Set<java.lang.reflect.Type> typeSet43 = springMvcApiReader40.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet44 = springMvcApiReader40.getTypesToSkip();
        io.swagger.models.Swagger swagger45 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter46 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader47 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger45, logAdapter46);
        java.lang.reflect.Type[] typeArray48 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet49 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet49, typeArray48);
        springMvcApiReader47.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet49);
        io.swagger.models.Swagger swagger52 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter53 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader54 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger52, logAdapter53);
        java.lang.reflect.Type[] typeArray55 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet56 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet56, typeArray55);
        springMvcApiReader54.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet56);
        springMvcApiReader47.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet56);
        springMvcApiReader40.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet56);
        java.lang.Class<?> wildcardClass61 = typeSet56.getClass();
        springMvcApiReader16.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass61);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass61);
        io.swagger.models.Swagger swagger64 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter65 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader66 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger64, logAdapter65);
        java.lang.reflect.Type[] typeArray67 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet68 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet68, typeArray67);
        springMvcApiReader66.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet68);
        java.lang.annotation.Annotation[] annotationArray71 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList72 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList72, annotationArray71);
        boolean boolean74 = springMvcApiReader66.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList72);
        io.swagger.models.Swagger swagger75 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter76 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader77 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger75, logAdapter76);
        java.lang.reflect.Type[] typeArray78 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet79 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet79, typeArray78);
        springMvcApiReader77.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet79);
        java.util.Set<java.lang.reflect.Type> typeSet82 = springMvcApiReader77.typesToSkip;
        springMvcApiReader77.updateExtensionChain();
        io.swagger.models.Swagger swagger84 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter85 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader86 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger84, logAdapter85);
        java.lang.Class<?> wildcardClass87 = springMvcApiReader86.getClass();
        springMvcApiReader77.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass87);
        springMvcApiReader66.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass87);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass87);
        io.swagger.models.Operation operation91 = null;
        io.swagger.annotations.ApiOperation apiOperation92 = null;
        springMvcApiReader2.updateTagsForOperation(operation91, apiOperation92);
        com.github.kongchen.swagger.docgen.spring.SpringResource springResource94 = null;
        // The following exception was thrown during execution in test generation
        try {
            io.swagger.models.Swagger swagger95 = springMvcApiReader2.read(springResource94);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertNull(swagger13);
        org.junit.Assert.assertNotNull(typeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(logAdapter21);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "/hi!" + "'", str30, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(typeSet43);
        org.junit.Assert.assertNotNull(typeSet44);
        org.junit.Assert.assertNotNull(typeArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(typeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(typeArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(annotationArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(typeArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(typeSet82);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test02698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02698");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        springMvcApiReader2.LOG = logAdapter8;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(true, api12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader2.parseOperationPath("", strMap15);
        io.swagger.annotations.Api api18 = null;
        boolean boolean19 = springMvcApiReader2.canReadApi(false, api18);
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test02699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02699");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader2.parseOperationPath("hi!", strMap15);
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.Class<?> wildcardClass20 = springMvcApiReader19.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass20);
        io.swagger.models.Swagger swagger22 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader24 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger22, logAdapter23);
        java.lang.reflect.Type[] typeArray25 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet26 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet26, typeArray25);
        springMvcApiReader24.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet26);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter29 = springMvcApiReader24.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap31 = null;
        java.lang.String str32 = springMvcApiReader24.parseOperationPath("", strMap31);
        io.swagger.annotations.Api api34 = null;
        boolean boolean35 = springMvcApiReader24.canReadApi(false, api34);
        java.util.Map<java.lang.String, java.lang.String> strMap37 = null;
        java.lang.String str38 = springMvcApiReader24.parseOperationPath("hi!", strMap37);
        io.swagger.models.Swagger swagger39 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter40 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader41 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger39, logAdapter40);
        java.lang.Class<?> wildcardClass42 = springMvcApiReader41.getClass();
        springMvcApiReader24.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass42);
        java.util.Map<java.lang.String, java.lang.String> strMap45 = null;
        java.lang.String str46 = springMvcApiReader24.parseOperationPath("/hi!", strMap45);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray47 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap48 = springMvcApiReader24.parseResponseHeaders(responseHeaderArray47);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap49 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray47);
        java.util.Set<java.lang.reflect.Type> typeSet50 = springMvcApiReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet51 = springMvcApiReader2.typesToSkip;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.annotations.Api api53 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.lang.String> strSet54 = springMvcApiReader2.extractTags(api53);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/hi!" + "'", str16, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(typeArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(logAdapter29);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "/hi!" + "'", str38, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "/hi!" + "'", str46, "/hi!");
        org.junit.Assert.assertNotNull(responseHeaderArray47);
        org.junit.Assert.assertNull(strMap48);
        org.junit.Assert.assertNull(strMap49);
        org.junit.Assert.assertNotNull(typeSet50);
        org.junit.Assert.assertNotNull(typeSet51);
    }

    @Test
    public void test02700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02700");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type[] typeArray18 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet19 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet19, typeArray18);
        springMvcApiReader17.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet19);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = springMvcApiReader17.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap24 = null;
        java.lang.String str25 = springMvcApiReader17.parseOperationPath("", strMap24);
        io.swagger.annotations.Api api27 = null;
        boolean boolean28 = springMvcApiReader17.canReadApi(false, api27);
        java.util.Map<java.lang.String, java.lang.String> strMap30 = null;
        java.lang.String str31 = springMvcApiReader17.parseOperationPath("hi!", strMap30);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.Class<?> wildcardClass35 = springMvcApiReader34.getClass();
        springMvcApiReader17.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger39 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter40 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader41 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger39, logAdapter40);
        java.lang.reflect.Type[] typeArray42 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet43 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet43, typeArray42);
        springMvcApiReader41.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet43);
        io.swagger.models.Swagger swagger46 = springMvcApiReader41.swagger;
        io.swagger.models.Swagger swagger47 = springMvcApiReader41.swagger;
        io.swagger.models.Swagger swagger48 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter49 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader50 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger48, logAdapter49);
        java.lang.reflect.Type[] typeArray51 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet52 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet52, typeArray51);
        springMvcApiReader50.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet52);
        java.lang.annotation.Annotation[] annotationArray55 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList56 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList56, annotationArray55);
        boolean boolean58 = springMvcApiReader50.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList56);
        boolean boolean59 = springMvcApiReader41.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList56);
        java.lang.Class<?> wildcardClass60 = springMvcApiReader41.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass60);
        java.util.Set<java.lang.reflect.Type> typeSet62 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger63 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter64 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader65 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger63, logAdapter64);
        java.lang.reflect.Type[] typeArray66 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet67 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet67, typeArray66);
        springMvcApiReader65.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet67);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter70 = springMvcApiReader65.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap72 = null;
        java.lang.String str73 = springMvcApiReader65.parseOperationPath("", strMap72);
        io.swagger.models.Swagger swagger74 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter75 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader76 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger74, logAdapter75);
        java.lang.Class<?> wildcardClass77 = springMvcApiReader76.getClass();
        java.lang.reflect.Type[] typeArray78 = new java.lang.reflect.Type[] { wildcardClass77 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet79 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet79, typeArray78);
        springMvcApiReader65.typesToSkip = typeSet79;
        io.swagger.models.Swagger swagger82 = null;
        springMvcApiReader65.swagger = swagger82;
        java.util.Set<java.lang.reflect.Type> typeSet84 = springMvcApiReader65.getTypesToSkip();
        springMvcApiReader2.setTypesToSkip(typeSet84);
        java.lang.Class<?> wildcardClass86 = springMvcApiReader2.getClass();
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(logAdapter22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "/hi!" + "'", str31, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(typeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNull(swagger46);
        org.junit.Assert.assertNull(swagger47);
        org.junit.Assert.assertNotNull(typeArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(annotationArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(typeSet62);
        org.junit.Assert.assertNotNull(typeArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNull(logAdapter70);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "" + "'", str73, "");
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(typeArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(typeSet84);
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test02701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02701");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type type18 = null;
        springMvcApiReader17.addTypeToSkippedTypes(type18);
        java.util.Set<java.lang.reflect.Type> typeSet20 = springMvcApiReader17.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet20);
        io.swagger.models.Swagger swagger22 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader24 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger22, logAdapter23);
        java.lang.reflect.Type[] typeArray25 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet26 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet26, typeArray25);
        springMvcApiReader24.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet26);
        io.swagger.models.Swagger swagger29 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter30 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader31 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger29, logAdapter30);
        java.lang.reflect.Type[] typeArray32 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet33 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet33, typeArray32);
        springMvcApiReader31.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet33);
        springMvcApiReader24.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet33);
        io.swagger.models.Swagger swagger37 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter38 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader39 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger37, logAdapter38);
        java.lang.reflect.Type[] typeArray40 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet41 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet41, typeArray40);
        springMvcApiReader39.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet41);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter44 = springMvcApiReader39.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap46 = null;
        java.lang.String str47 = springMvcApiReader39.parseOperationPath("", strMap46);
        io.swagger.annotations.Api api49 = null;
        boolean boolean50 = springMvcApiReader39.canReadApi(false, api49);
        java.util.Map<java.lang.String, java.lang.String> strMap52 = null;
        java.lang.String str53 = springMvcApiReader39.parseOperationPath("hi!", strMap52);
        io.swagger.models.Swagger swagger54 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter55 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader56 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger54, logAdapter55);
        java.lang.Class<?> wildcardClass57 = springMvcApiReader56.getClass();
        springMvcApiReader39.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass57);
        springMvcApiReader24.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass57);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter60 = springMvcApiReader24.LOG;
        io.swagger.models.Swagger swagger61 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter62 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader63 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger61, logAdapter62);
        java.lang.reflect.Type[] typeArray64 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet65 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet65, typeArray64);
        springMvcApiReader63.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet65);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter68 = springMvcApiReader63.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap70 = null;
        java.lang.String str71 = springMvcApiReader63.parseOperationPath("", strMap70);
        java.lang.reflect.Type[] typeArray72 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList73 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList73, typeArray72);
        springMvcApiReader63.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList73);
        springMvcApiReader24.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList73);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList73);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter78 = null;
        springMvcApiReader2.LOG = logAdapter78;
        io.swagger.annotations.ApiOperation apiOperation80 = null;
        io.swagger.models.Operation operation81 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateOperationProtocols(apiOperation80, operation81);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeSet20);
        org.junit.Assert.assertNotNull(typeArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(typeArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(typeArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(logAdapter44);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "/hi!" + "'", str53, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNull(logAdapter60);
        org.junit.Assert.assertNotNull(typeArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNull(logAdapter68);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "" + "'", str71, "");
        org.junit.Assert.assertNotNull(typeArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    }

    @Test
    public void test02702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02702");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type type18 = null;
        springMvcApiReader17.addTypeToSkippedTypes(type18);
        java.util.Set<java.lang.reflect.Type> typeSet20 = springMvcApiReader17.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet20);
        java.util.Set<java.lang.reflect.Type> typeSet22 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger23 = null;
        springMvcApiReader2.swagger = swagger23;
        java.util.Set<java.lang.reflect.Type> typeSet25 = springMvcApiReader2.getTypesToSkip();
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger27 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter28 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader29 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger27, logAdapter28);
        java.lang.reflect.Type type30 = null;
        springMvcApiReader29.addTypeToSkippedTypes(type30);
        java.util.Set<java.lang.reflect.Type> typeSet32 = springMvcApiReader29.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet33 = springMvcApiReader29.getTypesToSkip();
        java.util.Map<java.lang.String, java.lang.String> strMap35 = null;
        java.lang.String str36 = springMvcApiReader29.parseOperationPath("", strMap35);
        io.swagger.models.Operation operation37 = null;
        io.swagger.annotations.ApiOperation apiOperation38 = null;
        springMvcApiReader29.updateTagsForOperation(operation37, apiOperation38);
        io.swagger.annotations.Api api41 = null;
        boolean boolean42 = springMvcApiReader29.canReadApi(false, api41);
        java.util.Set<java.lang.reflect.Type> typeSet43 = springMvcApiReader29.getTypesToSkip();
        springMvcApiReader2.typesToSkip = typeSet43;
        io.swagger.models.Swagger swagger45 = springMvcApiReader2.swagger;
        io.swagger.models.Operation operation46 = null;
        io.swagger.annotations.ApiResponses apiResponses47 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateApiResponse(operation46, apiResponses47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeSet20);
        org.junit.Assert.assertNotNull(typeSet22);
        org.junit.Assert.assertNotNull(typeSet25);
        org.junit.Assert.assertNotNull(typeSet32);
        org.junit.Assert.assertNotNull(typeSet33);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(typeSet43);
        org.junit.Assert.assertNull(swagger45);
    }

    @Test
    public void test02703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02703");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type[] typeArray18 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet19 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet19, typeArray18);
        springMvcApiReader17.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet19);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = springMvcApiReader17.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap24 = null;
        java.lang.String str25 = springMvcApiReader17.parseOperationPath("", strMap24);
        io.swagger.annotations.Api api27 = null;
        boolean boolean28 = springMvcApiReader17.canReadApi(false, api27);
        java.util.Map<java.lang.String, java.lang.String> strMap30 = null;
        java.lang.String str31 = springMvcApiReader17.parseOperationPath("hi!", strMap30);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.Class<?> wildcardClass35 = springMvcApiReader34.getClass();
        springMvcApiReader17.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger39 = null;
        springMvcApiReader2.swagger = swagger39;
        java.util.Set<java.lang.reflect.Type> typeSet41 = springMvcApiReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet42 = springMvcApiReader2.typesToSkip;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter43 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap45 = null;
        java.lang.String str46 = springMvcApiReader2.parseOperationPath("", strMap45);
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(logAdapter22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "/hi!" + "'", str31, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(typeSet41);
        org.junit.Assert.assertNotNull(typeSet42);
        org.junit.Assert.assertNull(logAdapter43);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
    }

    @Test
    public void test02704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02704");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        java.util.Set<java.lang.reflect.Type> typeSet5 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet6 = springMvcApiReader2.getTypesToSkip();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = null;
        java.lang.String str9 = springMvcApiReader2.parseOperationPath("", strMap8);
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader12 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger10, logAdapter11);
        java.lang.reflect.Type[] typeArray13 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet14 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet14, typeArray13);
        springMvcApiReader12.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet14);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter17 = springMvcApiReader12.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap19 = null;
        java.lang.String str20 = springMvcApiReader12.parseOperationPath("", strMap19);
        io.swagger.models.Swagger swagger21 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader23 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger21, logAdapter22);
        java.lang.Class<?> wildcardClass24 = springMvcApiReader23.getClass();
        java.lang.reflect.Type[] typeArray25 = new java.lang.reflect.Type[] { wildcardClass24 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet26 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet26, typeArray25);
        springMvcApiReader12.typesToSkip = typeSet26;
        io.swagger.models.Operation operation29 = null;
        io.swagger.annotations.ApiOperation apiOperation30 = null;
        springMvcApiReader12.updateTagsForOperation(operation29, apiOperation30);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.reflect.Type[] typeArray35 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet36 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet36, typeArray35);
        springMvcApiReader34.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet36);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter39 = springMvcApiReader34.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap41 = null;
        java.lang.String str42 = springMvcApiReader34.parseOperationPath("", strMap41);
        io.swagger.annotations.Api api44 = null;
        boolean boolean45 = springMvcApiReader34.canReadApi(false, api44);
        java.util.Map<java.lang.String, java.lang.String> strMap47 = null;
        java.lang.String str48 = springMvcApiReader34.parseOperationPath("hi!", strMap47);
        io.swagger.models.Swagger swagger49 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter50 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader51 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger49, logAdapter50);
        java.lang.reflect.Type[] typeArray52 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet53 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet53, typeArray52);
        springMvcApiReader51.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet53);
        io.swagger.models.Swagger swagger56 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter57 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader58 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger56, logAdapter57);
        java.lang.reflect.Type[] typeArray59 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet60 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet60, typeArray59);
        springMvcApiReader58.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet60);
        springMvcApiReader51.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet60);
        io.swagger.models.Swagger swagger64 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter65 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader66 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger64, logAdapter65);
        java.lang.reflect.Type[] typeArray67 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet68 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet68, typeArray67);
        springMvcApiReader66.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet68);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter71 = springMvcApiReader66.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap73 = null;
        java.lang.String str74 = springMvcApiReader66.parseOperationPath("", strMap73);
        io.swagger.annotations.Api api76 = null;
        boolean boolean77 = springMvcApiReader66.canReadApi(false, api76);
        java.util.Map<java.lang.String, java.lang.String> strMap79 = null;
        java.lang.String str80 = springMvcApiReader66.parseOperationPath("hi!", strMap79);
        io.swagger.models.Swagger swagger81 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter82 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader83 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger81, logAdapter82);
        java.lang.Class<?> wildcardClass84 = springMvcApiReader83.getClass();
        springMvcApiReader66.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass84);
        springMvcApiReader51.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass84);
        springMvcApiReader34.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass84);
        java.lang.annotation.Annotation[] annotationArray88 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList89 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList89, annotationArray88);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList91 = springMvcApiReader12.getParameters((java.lang.reflect.Type) wildcardClass84, (java.util.List<java.lang.annotation.Annotation>) annotationList89);
        boolean boolean92 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList89);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter93 = springMvcApiReader2.LOG;
        io.swagger.annotations.Api api94 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<io.swagger.models.SecurityRequirement> securityRequirementList95 = springMvcApiReader2.getSecurityRequirements(api94);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeSet5);
        org.junit.Assert.assertNotNull(typeSet6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(typeArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(logAdapter17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(typeArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(typeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(logAdapter39);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "/hi!" + "'", str48, "/hi!");
        org.junit.Assert.assertNotNull(typeArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(typeArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(typeArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNull(logAdapter71);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "" + "'", str74, "");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "/hi!" + "'", str80, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertNotNull(annotationArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(parameterList91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNull(logAdapter93);
    }

    @Test
    public void test02705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02705");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader2.parseOperationPath("hi!", strMap15);
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.Class<?> wildcardClass20 = springMvcApiReader19.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass20);
        io.swagger.models.Swagger swagger22 = null;
        springMvcApiReader2.swagger = swagger22;
        io.swagger.models.Swagger swagger24 = springMvcApiReader2.swagger;
        java.util.Set<java.lang.reflect.Type> typeSet25 = springMvcApiReader2.typesToSkip;
        springMvcApiReader2.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet27 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet28 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger29 = springMvcApiReader2.swagger;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Operation operation33 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updatePath("hi!", "/hi!", operation33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/hi!" + "'", str16, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNull(swagger24);
        org.junit.Assert.assertNotNull(typeSet25);
        org.junit.Assert.assertNotNull(typeSet27);
        org.junit.Assert.assertNotNull(typeSet28);
        org.junit.Assert.assertNull(swagger29);
    }

    @Test
    public void test02706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02706");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        java.util.Set<java.lang.reflect.Type> typeSet5 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet6 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet7 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger8 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader10 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger8, logAdapter9);
        java.lang.reflect.Type[] typeArray11 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet12 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet12, typeArray11);
        springMvcApiReader10.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet12);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter15 = springMvcApiReader10.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap17 = null;
        java.lang.String str18 = springMvcApiReader10.parseOperationPath("", strMap17);
        java.lang.reflect.Type[] typeArray19 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList20 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList20, typeArray19);
        springMvcApiReader10.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList20);
        io.swagger.models.Swagger swagger23 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter24 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader25 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger23, logAdapter24);
        java.lang.reflect.Type[] typeArray26 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet27 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet27, typeArray26);
        springMvcApiReader25.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet27);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter30 = springMvcApiReader25.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap32 = null;
        java.lang.String str33 = springMvcApiReader25.parseOperationPath("", strMap32);
        io.swagger.models.Swagger swagger34 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter35 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader36 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger34, logAdapter35);
        java.lang.Class<?> wildcardClass37 = springMvcApiReader36.getClass();
        java.lang.reflect.Type[] typeArray38 = new java.lang.reflect.Type[] { wildcardClass37 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet39 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet39, typeArray38);
        springMvcApiReader25.typesToSkip = typeSet39;
        java.util.Set<java.lang.reflect.Type> typeSet42 = springMvcApiReader25.getTypesToSkip();
        springMvcApiReader10.setTypesToSkip(typeSet42);
        springMvcApiReader2.setTypesToSkip(typeSet42);
        io.swagger.models.Swagger swagger45 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger46 = null;
        springMvcApiReader2.swagger = swagger46;
        io.swagger.models.Swagger swagger48 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter49 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader50 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger48, logAdapter49);
        java.lang.reflect.Type[] typeArray51 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet52 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet52, typeArray51);
        springMvcApiReader50.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet52);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter55 = springMvcApiReader50.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap57 = null;
        java.lang.String str58 = springMvcApiReader50.parseOperationPath("", strMap57);
        java.lang.reflect.Type[] typeArray59 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList60 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList60, typeArray59);
        springMvcApiReader50.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList60);
        java.lang.String[] strArray63 = new java.lang.String[] {};
        java.lang.String[] strArray67 = new java.lang.String[] { "hi!", "", "hi!" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap68 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray69 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList70 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList70, securityRequirementArray69);
        io.swagger.models.Operation operation72 = null;
        springMvcApiReader50.updateOperation(strArray63, strArray67, strMap68, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList70, operation72);
        springMvcApiReader50.updateExtensionChain();
        springMvcApiReader50.updateExtensionChain();
        io.swagger.models.Swagger swagger76 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter77 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader78 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger76, logAdapter77);
        java.lang.reflect.Type[] typeArray79 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet80 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet80, typeArray79);
        springMvcApiReader78.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet80);
        io.swagger.models.Swagger swagger83 = springMvcApiReader78.swagger;
        io.swagger.models.Swagger swagger84 = springMvcApiReader78.swagger;
        io.swagger.models.Swagger swagger85 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter86 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader87 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger85, logAdapter86);
        java.lang.reflect.Type[] typeArray88 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet89 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet89, typeArray88);
        springMvcApiReader87.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet89);
        java.lang.annotation.Annotation[] annotationArray92 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList93 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean94 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList93, annotationArray92);
        boolean boolean95 = springMvcApiReader87.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList93);
        boolean boolean96 = springMvcApiReader78.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList93);
        boolean boolean97 = springMvcApiReader50.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList93);
        boolean boolean98 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList93);
        java.lang.Class<?> wildcardClass99 = springMvcApiReader2.getClass();
        org.junit.Assert.assertNotNull(typeSet5);
        org.junit.Assert.assertNotNull(typeSet6);
        org.junit.Assert.assertNotNull(typeSet7);
        org.junit.Assert.assertNotNull(typeArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(logAdapter15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNotNull(typeArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(typeArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(logAdapter30);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(typeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(typeSet42);
        org.junit.Assert.assertNull(swagger45);
        org.junit.Assert.assertNotNull(typeArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNull(logAdapter55);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "" + "'", str58, "");
        org.junit.Assert.assertNotNull(typeArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertNotNull(securityRequirementArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(typeArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNull(swagger83);
        org.junit.Assert.assertNull(swagger84);
        org.junit.Assert.assertNotNull(typeArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(annotationArray92);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test02707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02707");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader2.parseOperationPath("hi!", strMap15);
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.Class<?> wildcardClass20 = springMvcApiReader19.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass20);
        io.swagger.models.Swagger swagger22 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader24 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger22, logAdapter23);
        java.lang.reflect.Type[] typeArray25 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet26 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet26, typeArray25);
        springMvcApiReader24.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet26);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter29 = springMvcApiReader24.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap31 = null;
        java.lang.String str32 = springMvcApiReader24.parseOperationPath("", strMap31);
        io.swagger.annotations.Api api34 = null;
        boolean boolean35 = springMvcApiReader24.canReadApi(false, api34);
        java.util.Map<java.lang.String, java.lang.String> strMap37 = null;
        java.lang.String str38 = springMvcApiReader24.parseOperationPath("hi!", strMap37);
        io.swagger.models.Swagger swagger39 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter40 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader41 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger39, logAdapter40);
        java.lang.Class<?> wildcardClass42 = springMvcApiReader41.getClass();
        springMvcApiReader24.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass42);
        java.util.Map<java.lang.String, java.lang.String> strMap45 = null;
        java.lang.String str46 = springMvcApiReader24.parseOperationPath("/hi!", strMap45);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray47 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap48 = springMvcApiReader24.parseResponseHeaders(responseHeaderArray47);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap49 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray47);
        java.util.Set<java.lang.reflect.Type> typeSet50 = springMvcApiReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet51 = springMvcApiReader2.typesToSkip;
        java.util.Map<java.lang.String, java.lang.String> strMap53 = null;
        java.lang.String str54 = springMvcApiReader2.parseOperationPath("", strMap53);
        io.swagger.models.Operation operation55 = null;
        io.swagger.annotations.ApiOperation apiOperation56 = null;
        springMvcApiReader2.updateTagsForOperation(operation55, apiOperation56);
        java.util.Set<java.lang.reflect.Type> typeSet58 = springMvcApiReader2.getTypesToSkip();
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap59 = null;
        io.swagger.annotations.Api api60 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, io.swagger.models.Tag> strMap61 = springMvcApiReader2.updateTagsForApi(strMap59, api60);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/hi!" + "'", str16, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(typeArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(logAdapter29);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "/hi!" + "'", str38, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "/hi!" + "'", str46, "/hi!");
        org.junit.Assert.assertNotNull(responseHeaderArray47);
        org.junit.Assert.assertNull(strMap48);
        org.junit.Assert.assertNull(strMap49);
        org.junit.Assert.assertNotNull(typeSet50);
        org.junit.Assert.assertNotNull(typeSet51);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertNotNull(typeSet58);
    }

    @Test
    public void test02708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02708");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader2.parseOperationPath("hi!", strMap15);
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.Class<?> wildcardClass20 = springMvcApiReader19.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass20);
        java.util.Map<java.lang.String, java.lang.String> strMap23 = null;
        java.lang.String str24 = springMvcApiReader2.parseOperationPath("/hi!", strMap23);
        io.swagger.models.Swagger swagger25 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter26 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader27 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger25, logAdapter26);
        java.lang.reflect.Type[] typeArray28 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet29 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet29, typeArray28);
        springMvcApiReader27.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet29);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet29);
        io.swagger.models.Swagger swagger33 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter34 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader35 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger33, logAdapter34);
        java.lang.reflect.Type[] typeArray36 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet37 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet37, typeArray36);
        springMvcApiReader35.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet37);
        java.lang.annotation.Annotation[] annotationArray40 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList41 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList41, annotationArray40);
        boolean boolean43 = springMvcApiReader35.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList41);
        io.swagger.models.Swagger swagger44 = null;
        springMvcApiReader35.swagger = swagger44;
        io.swagger.models.Swagger swagger46 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter47 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader48 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger46, logAdapter47);
        java.lang.reflect.Type[] typeArray49 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet50 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet50, typeArray49);
        springMvcApiReader48.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet50);
        java.lang.annotation.Annotation[] annotationArray53 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList54 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList54, annotationArray53);
        boolean boolean56 = springMvcApiReader48.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList54);
        io.swagger.models.Swagger swagger57 = null;
        springMvcApiReader48.swagger = swagger57;
        java.lang.annotation.Annotation[] annotationArray59 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList60 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList60, annotationArray59);
        boolean boolean62 = springMvcApiReader48.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList60);
        boolean boolean63 = springMvcApiReader35.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList60);
        boolean boolean64 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList60);
        java.util.Set<java.lang.reflect.Type> typeSet65 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger66 = springMvcApiReader2.swagger;
        java.util.Set<java.lang.reflect.Type> typeSet67 = null;
        springMvcApiReader2.setTypesToSkip(typeSet67);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter69 = null;
        springMvcApiReader2.LOG = logAdapter69;
        java.lang.reflect.Method method71 = null;
        io.swagger.models.Operation operation72 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.readImplicitParameters(method71, operation72);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/hi!" + "'", str16, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "/hi!" + "'", str24, "/hi!");
        org.junit.Assert.assertNotNull(typeArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(annotationArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(typeArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(annotationArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(annotationArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(typeSet65);
        org.junit.Assert.assertNull(swagger66);
    }

    @Test
    public void test02709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02709");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader2.parseOperationPath("hi!", strMap15);
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.reflect.Type[] typeArray20 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet21 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet21, typeArray20);
        springMvcApiReader19.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet21);
        io.swagger.models.Swagger swagger24 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter25 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader26 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger24, logAdapter25);
        java.lang.reflect.Type[] typeArray27 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet28 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet28, typeArray27);
        springMvcApiReader26.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet28);
        springMvcApiReader19.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet28);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.reflect.Type[] typeArray35 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet36 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet36, typeArray35);
        springMvcApiReader34.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet36);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter39 = springMvcApiReader34.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap41 = null;
        java.lang.String str42 = springMvcApiReader34.parseOperationPath("", strMap41);
        io.swagger.annotations.Api api44 = null;
        boolean boolean45 = springMvcApiReader34.canReadApi(false, api44);
        java.util.Map<java.lang.String, java.lang.String> strMap47 = null;
        java.lang.String str48 = springMvcApiReader34.parseOperationPath("hi!", strMap47);
        io.swagger.models.Swagger swagger49 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter50 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader51 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger49, logAdapter50);
        java.lang.Class<?> wildcardClass52 = springMvcApiReader51.getClass();
        springMvcApiReader34.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        springMvcApiReader19.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        java.util.Set<java.lang.reflect.Type> typeSet56 = springMvcApiReader2.getTypesToSkip();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter57 = springMvcApiReader2.LOG;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Operation operation59 = null;
        io.swagger.annotations.ApiOperation apiOperation60 = null;
        springMvcApiReader2.updateTagsForOperation(operation59, apiOperation60);
        java.util.Set<java.lang.reflect.Type> typeSet62 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger63 = null;
        springMvcApiReader2.swagger = swagger63;
        io.swagger.models.Operation operation65 = null;
        io.swagger.annotations.ApiResponses apiResponses66 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateApiResponse(operation65, apiResponses66);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/hi!" + "'", str16, "/hi!");
        org.junit.Assert.assertNotNull(typeArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(typeArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(typeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(logAdapter39);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "/hi!" + "'", str48, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(typeSet56);
        org.junit.Assert.assertNull(logAdapter57);
        org.junit.Assert.assertNotNull(typeSet62);
    }

    @Test
    public void test02710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02710");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader2.parseOperationPath("hi!", strMap15);
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.Class<?> wildcardClass20 = springMvcApiReader19.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass20);
        io.swagger.models.Swagger swagger22 = null;
        springMvcApiReader2.swagger = swagger22;
        io.swagger.models.Operation operation24 = null;
        io.swagger.annotations.ApiOperation apiOperation25 = null;
        springMvcApiReader2.updateTagsForOperation(operation24, apiOperation25);
        java.util.Set<java.lang.reflect.Type> typeSet27 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger28 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter29 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader30 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger28, logAdapter29);
        java.lang.reflect.Type[] typeArray31 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet32 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet32, typeArray31);
        springMvcApiReader30.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet32);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter35 = springMvcApiReader30.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap37 = null;
        java.lang.String str38 = springMvcApiReader30.parseOperationPath("", strMap37);
        java.lang.reflect.Type[] typeArray39 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList40 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList40, typeArray39);
        springMvcApiReader30.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList40);
        java.lang.String[] strArray43 = new java.lang.String[] {};
        java.lang.String[] strArray47 = new java.lang.String[] { "hi!", "", "hi!" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap48 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray49 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList50 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList50, securityRequirementArray49);
        io.swagger.models.Operation operation52 = null;
        springMvcApiReader30.updateOperation(strArray43, strArray47, strMap48, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList50, operation52);
        java.util.Map<java.lang.String, java.lang.String> strMap55 = null;
        java.lang.String str56 = springMvcApiReader30.parseOperationPath("", strMap55);
        springMvcApiReader30.updateExtensionChain();
        io.swagger.models.Swagger swagger58 = null;
        springMvcApiReader30.swagger = swagger58;
        io.swagger.models.Operation operation60 = null;
        io.swagger.annotations.ApiOperation apiOperation61 = null;
        springMvcApiReader30.updateTagsForOperation(operation60, apiOperation61);
        io.swagger.models.Swagger swagger63 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter64 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader65 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger63, logAdapter64);
        java.lang.reflect.Type[] typeArray66 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet67 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet67, typeArray66);
        springMvcApiReader65.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet67);
        io.swagger.models.Swagger swagger70 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter71 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader72 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger70, logAdapter71);
        java.lang.reflect.Type[] typeArray73 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet74 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet74, typeArray73);
        springMvcApiReader72.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet74);
        springMvcApiReader65.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet74);
        springMvcApiReader30.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet74);
        springMvcApiReader2.typesToSkip = typeSet74;
        com.github.kongchen.swagger.docgen.spring.SpringResource springResource80 = null;
        // The following exception was thrown during execution in test generation
        try {
            io.swagger.models.Swagger swagger81 = springMvcApiReader2.read(springResource80);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/hi!" + "'", str16, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(typeSet27);
        org.junit.Assert.assertNotNull(typeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(logAdapter35);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertNotNull(typeArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNotNull(securityRequirementArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertNotNull(typeArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(typeArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
    }

    @Test
    public void test02711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02711");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        java.util.Set<java.lang.reflect.Type> typeSet5 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet6 = springMvcApiReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet7 = null;
        springMvcApiReader2.typesToSkip = typeSet7;
        java.util.Set<java.lang.reflect.Type> typeSet9 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader12 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger10, logAdapter11);
        java.lang.reflect.Type[] typeArray13 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet14 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet14, typeArray13);
        springMvcApiReader12.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet14);
        java.lang.annotation.Annotation[] annotationArray17 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList18 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList18, annotationArray17);
        boolean boolean20 = springMvcApiReader12.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList18);
        io.swagger.models.Swagger swagger21 = null;
        springMvcApiReader12.swagger = swagger21;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = null;
        springMvcApiReader12.LOG = logAdapter23;
        springMvcApiReader12.updateExtensionChain();
        io.swagger.models.Operation operation26 = null;
        io.swagger.annotations.ApiOperation apiOperation27 = null;
        springMvcApiReader12.updateTagsForOperation(operation26, apiOperation27);
        io.swagger.models.Swagger swagger29 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter30 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader31 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger29, logAdapter30);
        java.lang.reflect.Type[] typeArray32 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet33 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet33, typeArray32);
        springMvcApiReader31.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet33);
        java.lang.annotation.Annotation[] annotationArray36 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList37 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList37, annotationArray36);
        boolean boolean39 = springMvcApiReader31.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList37);
        io.swagger.models.Swagger swagger40 = null;
        springMvcApiReader31.swagger = swagger40;
        io.swagger.models.Swagger swagger42 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter43 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader44 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger42, logAdapter43);
        java.lang.reflect.Type[] typeArray45 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet46 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet46, typeArray45);
        springMvcApiReader44.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet46);
        java.lang.annotation.Annotation[] annotationArray49 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList50 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList50, annotationArray49);
        boolean boolean52 = springMvcApiReader44.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList50);
        io.swagger.models.Swagger swagger53 = null;
        springMvcApiReader44.swagger = swagger53;
        java.lang.annotation.Annotation[] annotationArray55 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList56 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList56, annotationArray55);
        boolean boolean58 = springMvcApiReader44.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList56);
        boolean boolean59 = springMvcApiReader31.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList56);
        boolean boolean60 = springMvcApiReader12.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList56);
        boolean boolean61 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList56);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter62 = null;
        springMvcApiReader2.LOG = logAdapter62;
        io.swagger.models.Swagger swagger64 = springMvcApiReader2.swagger;
        io.swagger.annotations.Api api66 = null;
        boolean boolean67 = springMvcApiReader2.canReadApi(false, api66);
        java.lang.Class<?> wildcardClass68 = springMvcApiReader2.getClass();
        org.junit.Assert.assertNotNull(typeSet5);
        org.junit.Assert.assertNotNull(typeSet6);
        org.junit.Assert.assertNull(typeSet9);
        org.junit.Assert.assertNotNull(typeArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(annotationArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(typeArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(annotationArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(typeArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(annotationArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(annotationArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNull(swagger64);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test02712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02712");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type[] typeArray18 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet19 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet19, typeArray18);
        springMvcApiReader17.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet19);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = springMvcApiReader17.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap24 = null;
        java.lang.String str25 = springMvcApiReader17.parseOperationPath("", strMap24);
        io.swagger.annotations.Api api27 = null;
        boolean boolean28 = springMvcApiReader17.canReadApi(false, api27);
        java.util.Map<java.lang.String, java.lang.String> strMap30 = null;
        java.lang.String str31 = springMvcApiReader17.parseOperationPath("hi!", strMap30);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.Class<?> wildcardClass35 = springMvcApiReader34.getClass();
        springMvcApiReader17.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter38 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger39 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter40 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader41 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger39, logAdapter40);
        java.lang.reflect.Type[] typeArray42 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet43 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet43, typeArray42);
        springMvcApiReader41.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet43);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter46 = springMvcApiReader41.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap48 = null;
        java.lang.String str49 = springMvcApiReader41.parseOperationPath("", strMap48);
        java.lang.reflect.Type[] typeArray50 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList51 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList51, typeArray50);
        springMvcApiReader41.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList51);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList51);
        io.swagger.models.Swagger swagger55 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter56 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader57 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger55, logAdapter56);
        java.lang.reflect.Type[] typeArray58 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet59 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet59, typeArray58);
        springMvcApiReader57.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet59);
        java.util.Set<java.lang.reflect.Type> typeSet62 = springMvcApiReader57.typesToSkip;
        springMvcApiReader57.updateExtensionChain();
        io.swagger.models.Swagger swagger64 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter65 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader66 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger64, logAdapter65);
        java.lang.Class<?> wildcardClass67 = springMvcApiReader66.getClass();
        springMvcApiReader57.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass67);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass67);
        io.swagger.models.Swagger swagger70 = springMvcApiReader2.swagger;
        io.swagger.annotations.Api api72 = null;
        boolean boolean73 = springMvcApiReader2.canReadApi(false, api72);
        io.swagger.annotations.ApiOperation apiOperation74 = null;
        io.swagger.models.Operation operation75 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateOperationProtocols(apiOperation74, operation75);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(logAdapter22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "/hi!" + "'", str31, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNull(logAdapter38);
        org.junit.Assert.assertNotNull(typeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNull(logAdapter46);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertNotNull(typeArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(typeArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(typeSet62);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNull(swagger70);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
    }

    @Test
    public void test02713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02713");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        java.util.Set<java.lang.reflect.Type> typeSet5 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet6 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger14 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter15 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader16 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger14, logAdapter15);
        java.lang.reflect.Type[] typeArray17 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet18 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet18, typeArray17);
        springMvcApiReader16.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet18);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet18);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet18);
        io.swagger.models.Operation operation23 = null;
        io.swagger.annotations.ApiOperation apiOperation24 = null;
        springMvcApiReader2.updateTagsForOperation(operation23, apiOperation24);
        io.swagger.annotations.Api api27 = null;
        boolean boolean28 = springMvcApiReader2.canReadApi(false, api27);
        io.swagger.models.Swagger swagger29 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter30 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader31 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger29, logAdapter30);
        java.lang.reflect.Type[] typeArray32 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet33 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet33, typeArray32);
        springMvcApiReader31.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet33);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter36 = springMvcApiReader31.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap38 = null;
        java.lang.String str39 = springMvcApiReader31.parseOperationPath("", strMap38);
        java.lang.reflect.Type[] typeArray40 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList41 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList41, typeArray40);
        springMvcApiReader31.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList41);
        io.swagger.models.Swagger swagger44 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter45 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader46 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger44, logAdapter45);
        java.lang.reflect.Type[] typeArray47 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet48 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet48, typeArray47);
        springMvcApiReader46.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet48);
        java.lang.annotation.Annotation[] annotationArray51 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList52 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList52, annotationArray51);
        boolean boolean54 = springMvcApiReader46.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList52);
        boolean boolean55 = springMvcApiReader31.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList52);
        boolean boolean56 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList52);
        java.lang.Class<?> wildcardClass57 = springMvcApiReader2.getClass();
        org.junit.Assert.assertNotNull(typeSet5);
        org.junit.Assert.assertNotNull(typeSet6);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(typeArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(logAdapter36);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertNotNull(typeArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(typeArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(annotationArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test02714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02714");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger15 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger16 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter17 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader18 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger16, logAdapter17);
        java.lang.reflect.Type[] typeArray19 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet20 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet20, typeArray19);
        springMvcApiReader18.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet20);
        java.lang.annotation.Annotation[] annotationArray23 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList24 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList24, annotationArray23);
        boolean boolean26 = springMvcApiReader18.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList24);
        io.swagger.models.Swagger swagger27 = null;
        springMvcApiReader18.swagger = swagger27;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter29 = null;
        springMvcApiReader18.LOG = logAdapter29;
        io.swagger.models.Swagger swagger31 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter32 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader33 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger31, logAdapter32);
        java.lang.reflect.Type[] typeArray34 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet35 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet35, typeArray34);
        springMvcApiReader33.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet35);
        io.swagger.models.Swagger swagger38 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter39 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader40 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger38, logAdapter39);
        java.lang.reflect.Type[] typeArray41 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet42 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet42, typeArray41);
        springMvcApiReader40.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet42);
        springMvcApiReader33.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet42);
        io.swagger.models.Swagger swagger46 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter47 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader48 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger46, logAdapter47);
        java.lang.reflect.Type type49 = null;
        springMvcApiReader48.addTypeToSkippedTypes(type49);
        java.util.Set<java.lang.reflect.Type> typeSet51 = springMvcApiReader48.typesToSkip;
        springMvcApiReader33.setTypesToSkip(typeSet51);
        java.util.Set<java.lang.reflect.Type> typeSet53 = springMvcApiReader33.getTypesToSkip();
        io.swagger.annotations.Api api55 = null;
        boolean boolean56 = springMvcApiReader33.canReadApi(true, api55);
        io.swagger.models.Swagger swagger57 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter58 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader59 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger57, logAdapter58);
        java.lang.reflect.Type type60 = null;
        springMvcApiReader59.addTypeToSkippedTypes(type60);
        java.util.Set<java.lang.reflect.Type> typeSet62 = springMvcApiReader59.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet63 = springMvcApiReader59.getTypesToSkip();
        springMvcApiReader33.typesToSkip = typeSet63;
        springMvcApiReader18.setTypesToSkip(typeSet63);
        springMvcApiReader2.typesToSkip = typeSet63;
        java.util.Set<java.lang.reflect.Type> typeSet67 = springMvcApiReader2.typesToSkip;
        java.util.Map<java.lang.String, java.lang.String> strMap69 = null;
        java.lang.String str70 = springMvcApiReader2.parseOperationPath("", strMap69);
        java.lang.reflect.Type type71 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type71);
        java.util.Set<java.lang.reflect.Type> typeSet73 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Operation operation74 = null;
        io.swagger.annotations.ApiResponses apiResponses75 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateApiResponse(operation74, apiResponses75);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(swagger15);
        org.junit.Assert.assertNotNull(typeArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(annotationArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(typeArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(typeArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(typeSet51);
        org.junit.Assert.assertNotNull(typeSet53);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(typeSet62);
        org.junit.Assert.assertNotNull(typeSet63);
        org.junit.Assert.assertNotNull(typeSet67);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "" + "'", str70, "");
        org.junit.Assert.assertNotNull(typeSet73);
    }

    @Test
    public void test02715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02715");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader2.parseOperationPath("hi!", strMap15);
        io.swagger.models.Operation operation17 = null;
        io.swagger.annotations.ApiOperation apiOperation18 = null;
        springMvcApiReader2.updateTagsForOperation(operation17, apiOperation18);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.annotations.Api api22 = null;
        boolean boolean23 = springMvcApiReader2.canReadApi(false, api22);
        io.swagger.models.Swagger swagger24 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter25 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader26 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger24, logAdapter25);
        java.lang.reflect.Type[] typeArray27 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet28 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet28, typeArray27);
        springMvcApiReader26.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet28);
        java.lang.annotation.Annotation[] annotationArray31 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList32 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList32, annotationArray31);
        boolean boolean34 = springMvcApiReader26.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList32);
        java.util.Set<java.lang.reflect.Type> typeSet35 = springMvcApiReader26.typesToSkip;
        springMvcApiReader26.updateExtensionChain();
        io.swagger.models.Operation operation37 = null;
        io.swagger.annotations.ApiOperation apiOperation38 = null;
        springMvcApiReader26.updateTagsForOperation(operation37, apiOperation38);
        springMvcApiReader26.updateExtensionChain();
        io.swagger.models.Swagger swagger41 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter42 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader43 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger41, logAdapter42);
        java.lang.reflect.Type[] typeArray44 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet45 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet45, typeArray44);
        springMvcApiReader43.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet45);
        java.lang.annotation.Annotation[] annotationArray48 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList49 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList49, annotationArray48);
        boolean boolean51 = springMvcApiReader43.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList49);
        io.swagger.models.Swagger swagger52 = null;
        springMvcApiReader43.swagger = swagger52;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter54 = null;
        springMvcApiReader43.LOG = logAdapter54;
        java.util.Set<java.lang.reflect.Type> typeSet56 = springMvcApiReader43.getTypesToSkip();
        java.lang.Class<?> wildcardClass57 = typeSet56.getClass();
        springMvcApiReader26.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass57);
        io.swagger.models.Swagger swagger59 = springMvcApiReader26.swagger;
        java.util.Set<java.lang.reflect.Type> typeSet60 = springMvcApiReader26.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet60);
        io.swagger.models.Operation operation62 = null;
        io.swagger.annotations.ApiOperation apiOperation63 = null;
        springMvcApiReader2.updateTagsForOperation(operation62, apiOperation63);
        io.swagger.models.Operation operation65 = null;
        io.swagger.annotations.ApiResponses apiResponses66 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateApiResponse(operation65, apiResponses66);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/hi!" + "'", str16, "/hi!");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(typeArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(annotationArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(typeSet35);
        org.junit.Assert.assertNotNull(typeArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(annotationArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(typeSet56);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNull(swagger59);
        org.junit.Assert.assertNotNull(typeSet60);
    }

    @Test
    public void test02716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02716");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.lang.annotation.Annotation[] annotationArray7 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList8 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList8, annotationArray7);
        boolean boolean10 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList8);
        io.swagger.models.Swagger swagger11 = null;
        springMvcApiReader2.swagger = swagger11;
        java.lang.annotation.Annotation[] annotationArray13 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList14 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList14, annotationArray13);
        boolean boolean16 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList14);
        io.swagger.models.Swagger swagger17 = null;
        springMvcApiReader2.swagger = swagger17;
        io.swagger.models.Operation operation19 = null;
        io.swagger.annotations.ApiOperation apiOperation20 = null;
        springMvcApiReader2.updateTagsForOperation(operation19, apiOperation20);
        io.swagger.annotations.Api api22 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<io.swagger.models.SecurityRequirement> securityRequirementList23 = springMvcApiReader2.getSecurityRequirements(api22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(annotationArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(annotationArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test02717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02717");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type type18 = null;
        springMvcApiReader17.addTypeToSkippedTypes(type18);
        java.util.Set<java.lang.reflect.Type> typeSet20 = springMvcApiReader17.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet20);
        java.util.Set<java.lang.reflect.Type> typeSet22 = springMvcApiReader2.getTypesToSkip();
        io.swagger.annotations.Api api24 = null;
        boolean boolean25 = springMvcApiReader2.canReadApi(true, api24);
        io.swagger.models.Swagger swagger26 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter27 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader28 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger26, logAdapter27);
        java.lang.reflect.Type type29 = null;
        springMvcApiReader28.addTypeToSkippedTypes(type29);
        java.util.Set<java.lang.reflect.Type> typeSet31 = springMvcApiReader28.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet32 = springMvcApiReader28.getTypesToSkip();
        springMvcApiReader2.typesToSkip = typeSet32;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter34 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap36 = null;
        java.lang.String str37 = springMvcApiReader2.parseOperationPath("", strMap36);
        io.swagger.models.Swagger swagger38 = null;
        springMvcApiReader2.swagger = swagger38;
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeSet20);
        org.junit.Assert.assertNotNull(typeSet22);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(typeSet31);
        org.junit.Assert.assertNotNull(typeSet32);
        org.junit.Assert.assertNull(logAdapter34);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
    }

    @Test
    public void test02718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02718");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        io.swagger.models.Swagger swagger5 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter6 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader7 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger5, logAdapter6);
        java.lang.reflect.Type[] typeArray8 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet9 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet9, typeArray8);
        springMvcApiReader7.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet9);
        io.swagger.models.Swagger swagger12 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter13 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader14 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger12, logAdapter13);
        java.lang.reflect.Type[] typeArray15 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet16 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet16, typeArray15);
        springMvcApiReader14.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet16);
        springMvcApiReader7.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet16);
        io.swagger.models.Swagger swagger20 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter21 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader22 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger20, logAdapter21);
        java.lang.reflect.Type[] typeArray23 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet24 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet24, typeArray23);
        springMvcApiReader22.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet24);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter27 = springMvcApiReader22.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap29 = null;
        java.lang.String str30 = springMvcApiReader22.parseOperationPath("", strMap29);
        io.swagger.annotations.Api api32 = null;
        boolean boolean33 = springMvcApiReader22.canReadApi(false, api32);
        java.util.Map<java.lang.String, java.lang.String> strMap35 = null;
        java.lang.String str36 = springMvcApiReader22.parseOperationPath("hi!", strMap35);
        io.swagger.models.Swagger swagger37 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter38 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader39 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger37, logAdapter38);
        java.lang.Class<?> wildcardClass40 = springMvcApiReader39.getClass();
        springMvcApiReader22.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass40);
        springMvcApiReader7.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass40);
        java.util.Set<java.lang.reflect.Type> typeSet43 = springMvcApiReader7.getTypesToSkip();
        springMvcApiReader2.typesToSkip = typeSet43;
        java.util.Set<java.lang.reflect.Type> typeSet45 = springMvcApiReader2.getTypesToSkip();
        io.swagger.annotations.Api api47 = null;
        boolean boolean48 = springMvcApiReader2.canReadApi(false, api47);
        io.swagger.models.Swagger swagger49 = springMvcApiReader2.swagger;
        io.swagger.models.Operation operation50 = null;
        io.swagger.annotations.ApiOperation apiOperation51 = null;
        springMvcApiReader2.updateTagsForOperation(operation50, apiOperation51);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter53 = null;
        springMvcApiReader2.LOG = logAdapter53;
        io.swagger.models.Swagger swagger55 = null;
        springMvcApiReader2.swagger = swagger55;
        io.swagger.models.Swagger swagger57 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter58 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader59 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger57, logAdapter58);
        java.lang.reflect.Type[] typeArray60 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet61 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet61, typeArray60);
        springMvcApiReader59.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet61);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter64 = springMvcApiReader59.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap66 = null;
        java.lang.String str67 = springMvcApiReader59.parseOperationPath("", strMap66);
        io.swagger.annotations.Api api69 = null;
        boolean boolean70 = springMvcApiReader59.canReadApi(false, api69);
        java.util.Map<java.lang.String, java.lang.String> strMap72 = null;
        java.lang.String str73 = springMvcApiReader59.parseOperationPath("hi!", strMap72);
        io.swagger.models.Operation operation74 = null;
        io.swagger.annotations.ApiOperation apiOperation75 = null;
        springMvcApiReader59.updateTagsForOperation(operation74, apiOperation75);
        java.lang.Class<?> wildcardClass77 = springMvcApiReader59.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass77);
        com.github.kongchen.swagger.docgen.spring.SpringResource springResource79 = null;
        // The following exception was thrown during execution in test generation
        try {
            io.swagger.models.Swagger swagger80 = springMvcApiReader2.read(springResource79);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(typeArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(typeArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(logAdapter27);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "/hi!" + "'", str36, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(typeSet43);
        org.junit.Assert.assertNotNull(typeSet45);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(swagger49);
        org.junit.Assert.assertNotNull(typeArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNull(logAdapter64);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "" + "'", str67, "");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "/hi!" + "'", str73, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test02719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02719");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type[] typeArray18 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet19 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet19, typeArray18);
        springMvcApiReader17.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet19);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = springMvcApiReader17.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap24 = null;
        java.lang.String str25 = springMvcApiReader17.parseOperationPath("", strMap24);
        io.swagger.annotations.Api api27 = null;
        boolean boolean28 = springMvcApiReader17.canReadApi(false, api27);
        java.util.Map<java.lang.String, java.lang.String> strMap30 = null;
        java.lang.String str31 = springMvcApiReader17.parseOperationPath("hi!", strMap30);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.Class<?> wildcardClass35 = springMvcApiReader34.getClass();
        springMvcApiReader17.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        java.util.Map<java.lang.String, java.lang.String> strMap39 = null;
        java.lang.String str40 = springMvcApiReader2.parseOperationPath("hi!", strMap39);
        io.swagger.models.Swagger swagger41 = null;
        springMvcApiReader2.swagger = swagger41;
        java.util.Map<java.lang.String, java.lang.String> strMap44 = null;
        java.lang.String str45 = springMvcApiReader2.parseOperationPath("/hi!", strMap44);
        io.swagger.models.Swagger swagger46 = springMvcApiReader2.swagger;
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap47 = null;
        io.swagger.annotations.Api api48 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, io.swagger.models.Tag> strMap49 = springMvcApiReader2.updateTagsForApi(strMap47, api48);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(logAdapter22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "/hi!" + "'", str31, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "/hi!" + "'", str40, "/hi!");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "/hi!" + "'", str45, "/hi!");
        org.junit.Assert.assertNull(swagger46);
    }

    @Test
    public void test02720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02720");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.util.Set<java.lang.reflect.Type> typeSet7 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger8 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader10 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger8, logAdapter9);
        java.lang.reflect.Type[] typeArray11 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet12 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet12, typeArray11);
        springMvcApiReader10.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet12);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter15 = springMvcApiReader10.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap17 = null;
        java.lang.String str18 = springMvcApiReader10.parseOperationPath("", strMap17);
        io.swagger.annotations.Api api20 = null;
        boolean boolean21 = springMvcApiReader10.canReadApi(false, api20);
        java.util.Map<java.lang.String, java.lang.String> strMap23 = null;
        java.lang.String str24 = springMvcApiReader10.parseOperationPath("hi!", strMap23);
        io.swagger.models.Swagger swagger25 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter26 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader27 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger25, logAdapter26);
        java.lang.reflect.Type[] typeArray28 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet29 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet29, typeArray28);
        springMvcApiReader27.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet29);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.reflect.Type[] typeArray35 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet36 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet36, typeArray35);
        springMvcApiReader34.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet36);
        springMvcApiReader27.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet36);
        io.swagger.models.Swagger swagger40 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter41 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader42 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger40, logAdapter41);
        java.lang.reflect.Type[] typeArray43 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet44 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet44, typeArray43);
        springMvcApiReader42.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet44);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter47 = springMvcApiReader42.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap49 = null;
        java.lang.String str50 = springMvcApiReader42.parseOperationPath("", strMap49);
        io.swagger.annotations.Api api52 = null;
        boolean boolean53 = springMvcApiReader42.canReadApi(false, api52);
        java.util.Map<java.lang.String, java.lang.String> strMap55 = null;
        java.lang.String str56 = springMvcApiReader42.parseOperationPath("hi!", strMap55);
        io.swagger.models.Swagger swagger57 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter58 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader59 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger57, logAdapter58);
        java.lang.Class<?> wildcardClass60 = springMvcApiReader59.getClass();
        springMvcApiReader42.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass60);
        springMvcApiReader27.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass60);
        springMvcApiReader10.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass60);
        io.swagger.models.Swagger swagger64 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter65 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader66 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger64, logAdapter65);
        java.lang.reflect.Type[] typeArray67 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet68 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet68, typeArray67);
        springMvcApiReader66.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet68);
        java.lang.annotation.Annotation[] annotationArray71 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList72 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList72, annotationArray71);
        boolean boolean74 = springMvcApiReader66.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList72);
        io.swagger.models.Swagger swagger75 = null;
        springMvcApiReader66.swagger = swagger75;
        java.lang.annotation.Annotation[] annotationArray77 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList78 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList78, annotationArray77);
        boolean boolean80 = springMvcApiReader66.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList78);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList81 = springMvcApiReader2.getParameters((java.lang.reflect.Type) wildcardClass60, (java.util.List<java.lang.annotation.Annotation>) annotationList78);
        java.util.Set<java.lang.reflect.Type> typeSet82 = springMvcApiReader2.getTypesToSkip();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter83 = springMvcApiReader2.LOG;
        java.util.Set<java.lang.reflect.Type> typeSet84 = springMvcApiReader2.getTypesToSkip();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter85 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger86 = springMvcApiReader2.swagger;
        java.util.Set<java.lang.reflect.Type> typeSet87 = springMvcApiReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet88 = springMvcApiReader2.typesToSkip;
        com.github.kongchen.swagger.docgen.spring.SpringResource springResource89 = null;
        // The following exception was thrown during execution in test generation
        try {
            io.swagger.models.Swagger swagger90 = springMvcApiReader2.read(springResource89);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeSet7);
        org.junit.Assert.assertNotNull(typeArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(logAdapter15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "/hi!" + "'", str24, "/hi!");
        org.junit.Assert.assertNotNull(typeArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(typeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(typeArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(logAdapter47);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "/hi!" + "'", str56, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(typeArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(annotationArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(annotationArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(parameterList81);
        org.junit.Assert.assertNotNull(typeSet82);
        org.junit.Assert.assertNull(logAdapter83);
        org.junit.Assert.assertNotNull(typeSet84);
        org.junit.Assert.assertNull(logAdapter85);
        org.junit.Assert.assertNull(swagger86);
        org.junit.Assert.assertNotNull(typeSet87);
        org.junit.Assert.assertNotNull(typeSet88);
    }

    @Test
    public void test02721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02721");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        java.util.Map<java.lang.String, java.lang.String> strMap16 = null;
        java.lang.String str17 = springMvcApiReader2.parseOperationPath("/hi!", strMap16);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = springMvcApiReader2.LOG;
        java.util.Set<java.lang.reflect.Type> typeSet19 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger20 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter21 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader22 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger20, logAdapter21);
        java.lang.reflect.Type[] typeArray23 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet24 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet24, typeArray23);
        springMvcApiReader22.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet24);
        java.lang.annotation.Annotation[] annotationArray27 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList28 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList28, annotationArray27);
        boolean boolean30 = springMvcApiReader22.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList28);
        io.swagger.models.Swagger swagger31 = null;
        springMvcApiReader22.swagger = swagger31;
        io.swagger.models.Swagger swagger33 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter34 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader35 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger33, logAdapter34);
        java.lang.reflect.Type[] typeArray36 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet37 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet37, typeArray36);
        springMvcApiReader35.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet37);
        java.lang.annotation.Annotation[] annotationArray40 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList41 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList41, annotationArray40);
        boolean boolean43 = springMvcApiReader35.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList41);
        io.swagger.models.Swagger swagger44 = null;
        springMvcApiReader35.swagger = swagger44;
        java.lang.annotation.Annotation[] annotationArray46 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList47 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList47, annotationArray46);
        boolean boolean49 = springMvcApiReader35.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList47);
        boolean boolean50 = springMvcApiReader22.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList47);
        boolean boolean51 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList47);
        java.util.Map<java.lang.String, java.lang.String> strMap53 = null;
        java.lang.String str54 = springMvcApiReader2.parseOperationPath("", strMap53);
        io.swagger.models.Operation operation55 = null;
        io.swagger.annotations.ApiResponses apiResponses56 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateApiResponse(operation55, apiResponses56);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "/hi!" + "'", str17, "/hi!");
        org.junit.Assert.assertNull(logAdapter18);
        org.junit.Assert.assertNotNull(typeSet19);
        org.junit.Assert.assertNotNull(typeArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(annotationArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(annotationArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(annotationArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
    }

    @Test
    public void test02722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02722");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.lang.annotation.Annotation[] annotationArray7 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList8 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList8, annotationArray7);
        boolean boolean10 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList8);
        io.swagger.models.Swagger swagger11 = null;
        springMvcApiReader2.swagger = swagger11;
        io.swagger.models.Swagger swagger13 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter14 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader15 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger13, logAdapter14);
        java.lang.reflect.Type[] typeArray16 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet17 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet17, typeArray16);
        springMvcApiReader15.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet17);
        java.lang.annotation.Annotation[] annotationArray20 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList21 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList21, annotationArray20);
        boolean boolean23 = springMvcApiReader15.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList21);
        io.swagger.models.Swagger swagger24 = null;
        springMvcApiReader15.swagger = swagger24;
        java.lang.annotation.Annotation[] annotationArray26 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList27 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList27, annotationArray26);
        boolean boolean29 = springMvcApiReader15.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList27);
        boolean boolean30 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList27);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger32 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger33 = null;
        springMvcApiReader2.swagger = swagger33;
        io.swagger.annotations.Api api36 = null;
        boolean boolean37 = springMvcApiReader2.canReadApi(false, api36);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter38 = springMvcApiReader2.LOG;
        java.lang.reflect.Method method39 = null;
        io.swagger.models.Operation operation40 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.readImplicitParameters(method39, operation40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(annotationArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(typeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(annotationArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(annotationArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(swagger32);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(logAdapter38);
    }

    @Test
    public void test02723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02723");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        java.util.Set<java.lang.reflect.Type> typeSet5 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet6 = springMvcApiReader2.getTypesToSkip();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger8 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader10 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger8, logAdapter9);
        java.lang.reflect.Type type11 = null;
        springMvcApiReader10.addTypeToSkippedTypes(type11);
        java.util.Set<java.lang.reflect.Type> typeSet13 = springMvcApiReader10.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet14 = springMvcApiReader10.getTypesToSkip();
        java.util.Map<java.lang.String, java.lang.String> strMap16 = null;
        java.lang.String str17 = springMvcApiReader10.parseOperationPath("", strMap16);
        io.swagger.models.Swagger swagger18 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter19 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader20 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger18, logAdapter19);
        java.lang.reflect.Type[] typeArray21 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet22 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet22, typeArray21);
        springMvcApiReader20.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet22);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter25 = springMvcApiReader20.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap27 = null;
        java.lang.String str28 = springMvcApiReader20.parseOperationPath("", strMap27);
        io.swagger.annotations.Api api30 = null;
        boolean boolean31 = springMvcApiReader20.canReadApi(false, api30);
        java.util.Map<java.lang.String, java.lang.String> strMap33 = null;
        java.lang.String str34 = springMvcApiReader20.parseOperationPath("hi!", strMap33);
        io.swagger.models.Swagger swagger35 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter36 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader37 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger35, logAdapter36);
        java.lang.Class<?> wildcardClass38 = springMvcApiReader37.getClass();
        springMvcApiReader20.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass38);
        io.swagger.models.Swagger swagger40 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter41 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader42 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger40, logAdapter41);
        java.lang.reflect.Type[] typeArray43 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet44 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet44, typeArray43);
        springMvcApiReader42.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet44);
        java.lang.annotation.Annotation[] annotationArray47 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList48 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList48, annotationArray47);
        boolean boolean50 = springMvcApiReader42.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList48);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList51 = springMvcApiReader10.getParameters((java.lang.reflect.Type) wildcardClass38, (java.util.List<java.lang.annotation.Annotation>) annotationList48);
        springMvcApiReader10.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet53 = springMvcApiReader10.typesToSkip;
        springMvcApiReader2.typesToSkip = typeSet53;
        io.swagger.annotations.ApiOperation apiOperation55 = null;
        io.swagger.models.Operation operation56 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateOperationProtocols(apiOperation55, operation56);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeSet5);
        org.junit.Assert.assertNotNull(typeSet6);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertNotNull(typeSet13);
        org.junit.Assert.assertNotNull(typeSet14);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNotNull(typeArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(logAdapter25);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "/hi!" + "'", str34, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(typeArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(annotationArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(parameterList51);
        org.junit.Assert.assertNotNull(typeSet53);
    }

    @Test
    public void test02724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02724");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        java.util.Set<java.lang.reflect.Type> typeSet5 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet6 = springMvcApiReader2.getTypesToSkip();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = null;
        java.lang.String str9 = springMvcApiReader2.parseOperationPath("", strMap8);
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader12 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger10, logAdapter11);
        java.lang.reflect.Type[] typeArray13 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet14 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet14, typeArray13);
        springMvcApiReader12.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet14);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter17 = springMvcApiReader12.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap19 = null;
        java.lang.String str20 = springMvcApiReader12.parseOperationPath("", strMap19);
        io.swagger.annotations.Api api22 = null;
        boolean boolean23 = springMvcApiReader12.canReadApi(false, api22);
        java.util.Map<java.lang.String, java.lang.String> strMap25 = null;
        java.lang.String str26 = springMvcApiReader12.parseOperationPath("hi!", strMap25);
        io.swagger.models.Swagger swagger27 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter28 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader29 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger27, logAdapter28);
        java.lang.Class<?> wildcardClass30 = springMvcApiReader29.getClass();
        springMvcApiReader12.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass30);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.reflect.Type[] typeArray35 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet36 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet36, typeArray35);
        springMvcApiReader34.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet36);
        java.lang.annotation.Annotation[] annotationArray39 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList40 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList40, annotationArray39);
        boolean boolean42 = springMvcApiReader34.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList40);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList43 = springMvcApiReader2.getParameters((java.lang.reflect.Type) wildcardClass30, (java.util.List<java.lang.annotation.Annotation>) annotationList40);
        springMvcApiReader2.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet45 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet46 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger47 = springMvcApiReader2.swagger;
        io.swagger.models.parameters.Parameter[] parameterArray48 = new io.swagger.models.parameters.Parameter[] {};
        java.util.ArrayList<io.swagger.models.parameters.Parameter> parameterList49 = new java.util.ArrayList<io.swagger.models.parameters.Parameter>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.parameters.Parameter>) parameterList49, parameterArray48);
        java.util.Map<java.lang.String, java.lang.String> strMap51 = null;
        io.swagger.models.Operation operation52 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateOperationParameters((java.util.List<io.swagger.models.parameters.Parameter>) parameterList49, strMap51, operation52);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeSet5);
        org.junit.Assert.assertNotNull(typeSet6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(typeArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(logAdapter17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "/hi!" + "'", str26, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(typeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(annotationArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(parameterList43);
        org.junit.Assert.assertNotNull(typeSet45);
        org.junit.Assert.assertNotNull(typeSet46);
        org.junit.Assert.assertNull(swagger47);
        org.junit.Assert.assertNotNull(parameterArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
    }

    @Test
    public void test02725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02725");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader2.parseOperationPath("hi!", strMap15);
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.reflect.Type[] typeArray20 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet21 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet21, typeArray20);
        springMvcApiReader19.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet21);
        io.swagger.models.Swagger swagger24 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter25 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader26 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger24, logAdapter25);
        java.lang.reflect.Type[] typeArray27 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet28 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet28, typeArray27);
        springMvcApiReader26.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet28);
        springMvcApiReader19.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet28);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.reflect.Type[] typeArray35 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet36 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet36, typeArray35);
        springMvcApiReader34.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet36);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter39 = springMvcApiReader34.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap41 = null;
        java.lang.String str42 = springMvcApiReader34.parseOperationPath("", strMap41);
        io.swagger.annotations.Api api44 = null;
        boolean boolean45 = springMvcApiReader34.canReadApi(false, api44);
        java.util.Map<java.lang.String, java.lang.String> strMap47 = null;
        java.lang.String str48 = springMvcApiReader34.parseOperationPath("hi!", strMap47);
        io.swagger.models.Swagger swagger49 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter50 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader51 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger49, logAdapter50);
        java.lang.Class<?> wildcardClass52 = springMvcApiReader51.getClass();
        springMvcApiReader34.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        springMvcApiReader19.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        java.util.Set<java.lang.reflect.Type> typeSet56 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger57 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter58 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader59 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger57, logAdapter58);
        java.lang.reflect.Type[] typeArray60 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet61 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet61, typeArray60);
        springMvcApiReader59.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet61);
        io.swagger.models.Swagger swagger64 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter65 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader66 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger64, logAdapter65);
        java.lang.reflect.Type[] typeArray67 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet68 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet68, typeArray67);
        springMvcApiReader66.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet68);
        springMvcApiReader59.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet68);
        io.swagger.models.Swagger swagger72 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter73 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader74 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger72, logAdapter73);
        java.lang.reflect.Type type75 = null;
        springMvcApiReader74.addTypeToSkippedTypes(type75);
        java.util.Set<java.lang.reflect.Type> typeSet77 = springMvcApiReader74.typesToSkip;
        springMvcApiReader59.setTypesToSkip(typeSet77);
        io.swagger.models.Swagger swagger79 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter80 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader81 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger79, logAdapter80);
        java.lang.reflect.Type[] typeArray82 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet83 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet83, typeArray82);
        springMvcApiReader81.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet83);
        java.lang.annotation.Annotation[] annotationArray86 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList87 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList87, annotationArray86);
        boolean boolean89 = springMvcApiReader81.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList87);
        io.swagger.models.Swagger swagger90 = null;
        springMvcApiReader81.swagger = swagger90;
        java.util.Set<java.lang.reflect.Type> typeSet92 = springMvcApiReader81.getTypesToSkip();
        springMvcApiReader59.setTypesToSkip(typeSet92);
        springMvcApiReader2.setTypesToSkip(typeSet92);
        java.lang.Class<?> wildcardClass95 = springMvcApiReader2.getClass();
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/hi!" + "'", str16, "/hi!");
        org.junit.Assert.assertNotNull(typeArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(typeArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(typeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(logAdapter39);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "/hi!" + "'", str48, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(typeSet56);
        org.junit.Assert.assertNotNull(typeArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(typeArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(typeSet77);
        org.junit.Assert.assertNotNull(typeArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(annotationArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(typeSet92);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test02726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02726");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.lang.annotation.Annotation[] annotationArray7 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList8 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList8, annotationArray7);
        boolean boolean10 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList8);
        java.util.Set<java.lang.reflect.Type> typeSet11 = springMvcApiReader2.typesToSkip;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Operation operation13 = null;
        io.swagger.annotations.ApiOperation apiOperation14 = null;
        springMvcApiReader2.updateTagsForOperation(operation13, apiOperation14);
        io.swagger.annotations.Api api17 = null;
        boolean boolean18 = springMvcApiReader2.canReadApi(true, api17);
        io.swagger.models.Swagger swagger19 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter20 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader21 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger19, logAdapter20);
        java.lang.reflect.Type[] typeArray22 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet23 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet23, typeArray22);
        springMvcApiReader21.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet23);
        java.lang.annotation.Annotation[] annotationArray26 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList27 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList27, annotationArray26);
        boolean boolean29 = springMvcApiReader21.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList27);
        boolean boolean30 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList27);
        io.swagger.models.Operation operation31 = null;
        io.swagger.annotations.ApiResponses apiResponses32 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateApiResponse(operation31, apiResponses32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(annotationArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(typeSet11);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(typeArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(annotationArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test02727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02727");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.lang.annotation.Annotation[] annotationArray7 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList8 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList8, annotationArray7);
        boolean boolean10 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList8);
        io.swagger.models.Swagger swagger11 = null;
        springMvcApiReader2.swagger = swagger11;
        java.util.Set<java.lang.reflect.Type> typeSet13 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger14 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter15 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader16 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger14, logAdapter15);
        java.lang.reflect.Type type17 = null;
        springMvcApiReader16.addTypeToSkippedTypes(type17);
        java.util.Set<java.lang.reflect.Type> typeSet19 = springMvcApiReader16.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet20 = springMvcApiReader16.getTypesToSkip();
        springMvcApiReader2.setTypesToSkip(typeSet20);
        java.util.Set<java.lang.reflect.Type> typeSet22 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger23 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter24 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader25 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger23, logAdapter24);
        java.lang.reflect.Type type26 = null;
        springMvcApiReader25.addTypeToSkippedTypes(type26);
        io.swagger.models.Swagger swagger28 = springMvcApiReader25.swagger;
        io.swagger.models.Swagger swagger29 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter30 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader31 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger29, logAdapter30);
        java.lang.reflect.Type type32 = null;
        springMvcApiReader31.addTypeToSkippedTypes(type32);
        java.util.Set<java.lang.reflect.Type> typeSet34 = springMvcApiReader31.typesToSkip;
        springMvcApiReader25.setTypesToSkip(typeSet34);
        java.util.Set<java.lang.reflect.Type> typeSet36 = springMvcApiReader25.typesToSkip;
        springMvcApiReader2.typesToSkip = typeSet36;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter38 = springMvcApiReader2.LOG;
        java.lang.Class<?> wildcardClass39 = springMvcApiReader2.getClass();
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(annotationArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(typeSet13);
        org.junit.Assert.assertNotNull(typeSet19);
        org.junit.Assert.assertNotNull(typeSet20);
        org.junit.Assert.assertNotNull(typeSet22);
        org.junit.Assert.assertNull(swagger28);
        org.junit.Assert.assertNotNull(typeSet34);
        org.junit.Assert.assertNotNull(typeSet36);
        org.junit.Assert.assertNull(logAdapter38);
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test02728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02728");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader2.parseOperationPath("hi!", strMap15);
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.Class<?> wildcardClass20 = springMvcApiReader19.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass20);
        io.swagger.models.Swagger swagger22 = null;
        springMvcApiReader2.swagger = swagger22;
        io.swagger.models.Swagger swagger24 = springMvcApiReader2.swagger;
        java.util.Set<java.lang.reflect.Type> typeSet25 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger26 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter27 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader28 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger26, logAdapter27);
        java.lang.reflect.Type[] typeArray29 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet30 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet30, typeArray29);
        springMvcApiReader28.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet30);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = springMvcApiReader28.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap35 = null;
        java.lang.String str36 = springMvcApiReader28.parseOperationPath("", strMap35);
        io.swagger.models.Swagger swagger37 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter38 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader39 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger37, logAdapter38);
        java.lang.Class<?> wildcardClass40 = springMvcApiReader39.getClass();
        java.lang.reflect.Type[] typeArray41 = new java.lang.reflect.Type[] { wildcardClass40 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet42 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet42, typeArray41);
        springMvcApiReader28.typesToSkip = typeSet42;
        io.swagger.models.Swagger swagger45 = springMvcApiReader28.swagger;
        java.lang.Class<?> wildcardClass46 = springMvcApiReader28.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass46);
        io.swagger.annotations.Api api48 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<io.swagger.models.SecurityRequirement> securityRequirementList49 = springMvcApiReader2.getSecurityRequirements(api48);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/hi!" + "'", str16, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNull(swagger24);
        org.junit.Assert.assertNotNull(typeSet25);
        org.junit.Assert.assertNotNull(typeArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(logAdapter33);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(typeArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(swagger45);
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test02729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02729");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        java.lang.reflect.Type[] typeArray11 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList12 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList12, typeArray11);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList12);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!", "", "hi!" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap20 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray21 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList22 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList22, securityRequirementArray21);
        io.swagger.models.Operation operation24 = null;
        springMvcApiReader2.updateOperation(strArray15, strArray19, strMap20, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList22, operation24);
        springMvcApiReader2.updateExtensionChain();
        springMvcApiReader2.updateExtensionChain();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter28 = null;
        springMvcApiReader2.LOG = logAdapter28;
        io.swagger.models.Operation operation30 = null;
        io.swagger.annotations.ApiOperation apiOperation31 = null;
        springMvcApiReader2.updateTagsForOperation(operation30, apiOperation31);
        io.swagger.models.Operation operation35 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updatePath("", "hi!", operation35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(typeArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(securityRequirementArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test02730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02730");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader2.parseOperationPath("hi!", strMap15);
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.reflect.Type[] typeArray20 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet21 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet21, typeArray20);
        springMvcApiReader19.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet21);
        io.swagger.models.Swagger swagger24 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter25 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader26 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger24, logAdapter25);
        java.lang.reflect.Type[] typeArray27 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet28 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet28, typeArray27);
        springMvcApiReader26.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet28);
        springMvcApiReader19.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet28);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.reflect.Type[] typeArray35 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet36 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet36, typeArray35);
        springMvcApiReader34.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet36);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter39 = springMvcApiReader34.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap41 = null;
        java.lang.String str42 = springMvcApiReader34.parseOperationPath("", strMap41);
        io.swagger.annotations.Api api44 = null;
        boolean boolean45 = springMvcApiReader34.canReadApi(false, api44);
        java.util.Map<java.lang.String, java.lang.String> strMap47 = null;
        java.lang.String str48 = springMvcApiReader34.parseOperationPath("hi!", strMap47);
        io.swagger.models.Swagger swagger49 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter50 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader51 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger49, logAdapter50);
        java.lang.Class<?> wildcardClass52 = springMvcApiReader51.getClass();
        springMvcApiReader34.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        springMvcApiReader19.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        com.github.kongchen.swagger.docgen.spring.SpringResource springResource56 = null;
        // The following exception was thrown during execution in test generation
        try {
            io.swagger.models.Swagger swagger57 = springMvcApiReader2.read(springResource56);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/hi!" + "'", str16, "/hi!");
        org.junit.Assert.assertNotNull(typeArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(typeArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(typeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(logAdapter39);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "/hi!" + "'", str48, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test02731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02731");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.util.Set<java.lang.reflect.Type> typeSet7 = springMvcApiReader2.typesToSkip;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger9 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter10 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader11 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger9, logAdapter10);
        java.lang.Class<?> wildcardClass12 = springMvcApiReader11.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass12);
        io.swagger.models.Swagger swagger14 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter15 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader16 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger14, logAdapter15);
        java.lang.Class<?> wildcardClass17 = springMvcApiReader16.getClass();
        java.lang.annotation.Annotation[] annotationArray18 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList19 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList19, annotationArray18);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList21 = springMvcApiReader2.getParameters((java.lang.reflect.Type) wildcardClass17, (java.util.List<java.lang.annotation.Annotation>) annotationList19);
        io.swagger.models.Swagger swagger22 = null;
        springMvcApiReader2.swagger = swagger22;
        io.swagger.models.Swagger swagger24 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter25 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader26 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger24, logAdapter25);
        java.lang.reflect.Type[] typeArray27 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet28 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet28, typeArray27);
        springMvcApiReader26.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet28);
        java.util.Set<java.lang.reflect.Type> typeSet31 = springMvcApiReader26.typesToSkip;
        io.swagger.models.Swagger swagger32 = springMvcApiReader26.swagger;
        io.swagger.models.Operation operation33 = null;
        io.swagger.annotations.ApiOperation apiOperation34 = null;
        springMvcApiReader26.updateTagsForOperation(operation33, apiOperation34);
        java.util.Set<java.lang.reflect.Type> typeSet36 = springMvcApiReader26.getTypesToSkip();
        io.swagger.models.Swagger swagger37 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter38 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader39 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger37, logAdapter38);
        java.lang.reflect.Type[] typeArray40 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet41 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet41, typeArray40);
        springMvcApiReader39.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet41);
        java.lang.annotation.Annotation[] annotationArray44 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList45 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList45, annotationArray44);
        boolean boolean47 = springMvcApiReader39.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList45);
        io.swagger.models.Swagger swagger48 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter49 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader50 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger48, logAdapter49);
        java.lang.reflect.Type[] typeArray51 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet52 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet52, typeArray51);
        springMvcApiReader50.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet52);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter55 = springMvcApiReader50.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap57 = null;
        java.lang.String str58 = springMvcApiReader50.parseOperationPath("", strMap57);
        io.swagger.annotations.Api api60 = null;
        boolean boolean61 = springMvcApiReader50.canReadApi(false, api60);
        java.util.Map<java.lang.String, java.lang.String> strMap63 = null;
        java.lang.String str64 = springMvcApiReader50.parseOperationPath("hi!", strMap63);
        io.swagger.models.Swagger swagger65 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter66 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader67 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger65, logAdapter66);
        java.lang.Class<?> wildcardClass68 = springMvcApiReader67.getClass();
        springMvcApiReader50.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass68);
        java.util.Map<java.lang.String, java.lang.String> strMap71 = null;
        java.lang.String str72 = springMvcApiReader50.parseOperationPath("/hi!", strMap71);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray73 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap74 = springMvcApiReader50.parseResponseHeaders(responseHeaderArray73);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap75 = springMvcApiReader39.parseResponseHeaders(responseHeaderArray73);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap76 = springMvcApiReader26.parseResponseHeaders(responseHeaderArray73);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap77 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray73);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter78 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger79 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger80 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger81 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter82 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader83 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger81, logAdapter82);
        java.lang.reflect.Type type84 = null;
        springMvcApiReader83.addTypeToSkippedTypes(type84);
        java.util.Set<java.lang.reflect.Type> typeSet86 = springMvcApiReader83.typesToSkip;
        io.swagger.models.Swagger swagger87 = springMvcApiReader83.swagger;
        springMvcApiReader83.updateExtensionChain();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter89 = springMvcApiReader83.LOG;
        springMvcApiReader83.updateExtensionChain();
        io.swagger.models.Operation operation91 = null;
        io.swagger.annotations.ApiOperation apiOperation92 = null;
        springMvcApiReader83.updateTagsForOperation(operation91, apiOperation92);
        java.util.Set<java.lang.reflect.Type> typeSet94 = springMvcApiReader83.getTypesToSkip();
        springMvcApiReader2.setTypesToSkip(typeSet94);
        io.swagger.models.Operation operation96 = null;
        io.swagger.annotations.ApiResponses apiResponses97 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateApiResponse(operation96, apiResponses97);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeSet7);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(annotationArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(parameterList21);
        org.junit.Assert.assertNotNull(typeArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(typeSet31);
        org.junit.Assert.assertNull(swagger32);
        org.junit.Assert.assertNotNull(typeSet36);
        org.junit.Assert.assertNotNull(typeArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(annotationArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(typeArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNull(logAdapter55);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "" + "'", str58, "");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "/hi!" + "'", str64, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "/hi!" + "'", str72, "/hi!");
        org.junit.Assert.assertNotNull(responseHeaderArray73);
        org.junit.Assert.assertNull(strMap74);
        org.junit.Assert.assertNull(strMap75);
        org.junit.Assert.assertNull(strMap76);
        org.junit.Assert.assertNull(strMap77);
        org.junit.Assert.assertNull(logAdapter78);
        org.junit.Assert.assertNull(swagger79);
        org.junit.Assert.assertNull(swagger80);
        org.junit.Assert.assertNotNull(typeSet86);
        org.junit.Assert.assertNull(swagger87);
        org.junit.Assert.assertNull(logAdapter89);
        org.junit.Assert.assertNotNull(typeSet94);
    }

    @Test
    public void test02732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02732");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader2.parseOperationPath("hi!", strMap15);
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.Class<?> wildcardClass20 = springMvcApiReader19.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass20);
        io.swagger.models.Swagger swagger22 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader24 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger22, logAdapter23);
        java.lang.reflect.Type[] typeArray25 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet26 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet26, typeArray25);
        springMvcApiReader24.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet26);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter29 = springMvcApiReader24.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap31 = null;
        java.lang.String str32 = springMvcApiReader24.parseOperationPath("", strMap31);
        java.lang.reflect.Type[] typeArray33 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList34 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList34, typeArray33);
        springMvcApiReader24.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList34);
        java.lang.String[] strArray37 = new java.lang.String[] {};
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!", "", "hi!" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap42 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray43 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList44 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList44, securityRequirementArray43);
        io.swagger.models.Operation operation46 = null;
        springMvcApiReader24.updateOperation(strArray37, strArray41, strMap42, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList44, operation46);
        java.lang.String[] strArray54 = new java.lang.String[] { "/hi!", "", "/hi!", "hi!", "hi!", "hi!" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap55 = null;
        io.swagger.models.Swagger swagger56 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter57 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader58 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger56, logAdapter57);
        java.lang.reflect.Type[] typeArray59 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet60 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet60, typeArray59);
        springMvcApiReader58.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet60);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter63 = springMvcApiReader58.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap65 = null;
        java.lang.String str66 = springMvcApiReader58.parseOperationPath("", strMap65);
        java.lang.reflect.Type[] typeArray67 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList68 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList68, typeArray67);
        springMvcApiReader58.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList68);
        java.lang.String[] strArray71 = new java.lang.String[] {};
        java.lang.String[] strArray75 = new java.lang.String[] { "hi!", "", "hi!" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap76 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray77 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList78 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList78, securityRequirementArray77);
        io.swagger.models.Operation operation80 = null;
        springMvcApiReader58.updateOperation(strArray71, strArray75, strMap76, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList78, operation80);
        io.swagger.models.Operation operation82 = null;
        springMvcApiReader2.updateOperation(strArray37, strArray54, strMap55, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList78, operation82);
        io.swagger.models.Swagger swagger84 = null;
        springMvcApiReader2.swagger = swagger84;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter86 = springMvcApiReader2.LOG;
        io.swagger.models.Operation operation87 = null;
        io.swagger.annotations.ApiOperation apiOperation88 = null;
        springMvcApiReader2.updateTagsForOperation(operation87, apiOperation88);
        io.swagger.models.Swagger swagger90 = springMvcApiReader2.swagger;
        java.util.Set<java.lang.reflect.Type> typeSet91 = springMvcApiReader2.getTypesToSkip();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter92 = springMvcApiReader2.LOG;
        java.util.Set<java.lang.reflect.Type> typeSet93 = springMvcApiReader2.typesToSkip;
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/hi!" + "'", str16, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(typeArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(logAdapter29);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertNotNull(typeArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(securityRequirementArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(typeArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNull(logAdapter63);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "" + "'", str66, "");
        org.junit.Assert.assertNotNull(typeArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertNotNull(securityRequirementArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNull(logAdapter86);
        org.junit.Assert.assertNull(swagger90);
        org.junit.Assert.assertNotNull(typeSet91);
        org.junit.Assert.assertNull(logAdapter92);
        org.junit.Assert.assertNotNull(typeSet93);
    }

    @Test
    public void test02733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02733");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type type18 = null;
        springMvcApiReader17.addTypeToSkippedTypes(type18);
        java.util.Set<java.lang.reflect.Type> typeSet20 = springMvcApiReader17.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet20);
        java.util.Set<java.lang.reflect.Type> typeSet22 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger23 = null;
        springMvcApiReader2.swagger = swagger23;
        java.util.Set<java.lang.reflect.Type> typeSet25 = springMvcApiReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet26 = springMvcApiReader2.getTypesToSkip();
        io.swagger.annotations.ApiOperation apiOperation27 = null;
        io.swagger.models.Operation operation28 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateOperationProtocols(apiOperation27, operation28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeSet20);
        org.junit.Assert.assertNotNull(typeSet22);
        org.junit.Assert.assertNotNull(typeSet25);
        org.junit.Assert.assertNotNull(typeSet26);
    }

    @Test
    public void test02734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02734");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        java.util.Set<java.lang.reflect.Type> typeSet5 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet6 = springMvcApiReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet7 = null;
        springMvcApiReader2.typesToSkip = typeSet7;
        java.util.Set<java.lang.reflect.Type> typeSet9 = springMvcApiReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet10 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger11 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter12 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader13 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger11, logAdapter12);
        java.lang.reflect.Type[] typeArray14 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet15 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet15, typeArray14);
        springMvcApiReader13.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet15);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = springMvcApiReader13.LOG;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter19 = null;
        springMvcApiReader13.LOG = logAdapter19;
        springMvcApiReader13.updateExtensionChain();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = null;
        springMvcApiReader13.LOG = logAdapter22;
        io.swagger.models.Swagger swagger24 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter25 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader26 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger24, logAdapter25);
        java.lang.reflect.Type[] typeArray27 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet28 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet28, typeArray27);
        springMvcApiReader26.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet28);
        java.lang.annotation.Annotation[] annotationArray31 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList32 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList32, annotationArray31);
        boolean boolean34 = springMvcApiReader26.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList32);
        io.swagger.models.Swagger swagger35 = null;
        springMvcApiReader26.swagger = swagger35;
        java.util.Set<java.lang.reflect.Type> typeSet37 = springMvcApiReader26.getTypesToSkip();
        io.swagger.models.Swagger swagger38 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter39 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader40 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger38, logAdapter39);
        java.lang.reflect.Type[] typeArray41 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet42 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet42, typeArray41);
        springMvcApiReader40.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet42);
        io.swagger.models.Swagger swagger45 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter46 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader47 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger45, logAdapter46);
        java.lang.reflect.Type[] typeArray48 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet49 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet49, typeArray48);
        springMvcApiReader47.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet49);
        springMvcApiReader40.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet49);
        io.swagger.models.Swagger swagger53 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter54 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader55 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger53, logAdapter54);
        java.lang.reflect.Type[] typeArray56 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet57 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet57, typeArray56);
        springMvcApiReader55.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet57);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter60 = springMvcApiReader55.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap62 = null;
        java.lang.String str63 = springMvcApiReader55.parseOperationPath("", strMap62);
        io.swagger.annotations.Api api65 = null;
        boolean boolean66 = springMvcApiReader55.canReadApi(false, api65);
        java.util.Map<java.lang.String, java.lang.String> strMap68 = null;
        java.lang.String str69 = springMvcApiReader55.parseOperationPath("hi!", strMap68);
        io.swagger.models.Swagger swagger70 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter71 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader72 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger70, logAdapter71);
        java.lang.Class<?> wildcardClass73 = springMvcApiReader72.getClass();
        springMvcApiReader55.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass73);
        springMvcApiReader40.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass73);
        springMvcApiReader26.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass73);
        springMvcApiReader13.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass73);
        io.swagger.models.Swagger swagger78 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter79 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader80 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger78, logAdapter79);
        java.lang.reflect.Type[] typeArray81 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet82 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet82, typeArray81);
        springMvcApiReader80.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet82);
        java.lang.annotation.Annotation[] annotationArray85 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList86 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList86, annotationArray85);
        boolean boolean88 = springMvcApiReader80.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList86);
        io.swagger.models.Swagger swagger89 = null;
        springMvcApiReader80.swagger = swagger89;
        java.lang.annotation.Annotation[] annotationArray91 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList92 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean93 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList92, annotationArray91);
        boolean boolean94 = springMvcApiReader80.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList92);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList95 = springMvcApiReader2.getParameters((java.lang.reflect.Type) wildcardClass73, (java.util.List<java.lang.annotation.Annotation>) annotationList92);
        io.swagger.models.Operation operation96 = null;
        io.swagger.annotations.ApiResponses apiResponses97 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateApiResponse(operation96, apiResponses97);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeSet5);
        org.junit.Assert.assertNotNull(typeSet6);
        org.junit.Assert.assertNull(typeSet9);
        org.junit.Assert.assertNull(typeSet10);
        org.junit.Assert.assertNotNull(typeArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(logAdapter18);
        org.junit.Assert.assertNotNull(typeArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(annotationArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(typeSet37);
        org.junit.Assert.assertNotNull(typeArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(typeArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(typeArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNull(logAdapter60);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "" + "'", str63, "");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "/hi!" + "'", str69, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(typeArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(annotationArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(annotationArray91);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertNotNull(parameterList95);
    }

    @Test
    public void test02735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02735");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader2.parseOperationPath("hi!", strMap15);
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.reflect.Type[] typeArray20 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet21 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet21, typeArray20);
        springMvcApiReader19.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet21);
        io.swagger.models.Swagger swagger24 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter25 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader26 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger24, logAdapter25);
        java.lang.reflect.Type[] typeArray27 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet28 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet28, typeArray27);
        springMvcApiReader26.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet28);
        springMvcApiReader19.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet28);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.reflect.Type[] typeArray35 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet36 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet36, typeArray35);
        springMvcApiReader34.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet36);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter39 = springMvcApiReader34.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap41 = null;
        java.lang.String str42 = springMvcApiReader34.parseOperationPath("", strMap41);
        io.swagger.annotations.Api api44 = null;
        boolean boolean45 = springMvcApiReader34.canReadApi(false, api44);
        java.util.Map<java.lang.String, java.lang.String> strMap47 = null;
        java.lang.String str48 = springMvcApiReader34.parseOperationPath("hi!", strMap47);
        io.swagger.models.Swagger swagger49 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter50 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader51 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger49, logAdapter50);
        java.lang.Class<?> wildcardClass52 = springMvcApiReader51.getClass();
        springMvcApiReader34.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        springMvcApiReader19.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        java.util.Set<java.lang.reflect.Type> typeSet56 = springMvcApiReader2.getTypesToSkip();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter57 = springMvcApiReader2.LOG;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter58 = null;
        springMvcApiReader2.LOG = logAdapter58;
        io.swagger.annotations.Api api60 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<io.swagger.models.SecurityRequirement> securityRequirementList61 = springMvcApiReader2.getSecurityRequirements(api60);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/hi!" + "'", str16, "/hi!");
        org.junit.Assert.assertNotNull(typeArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(typeArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(typeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(logAdapter39);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "/hi!" + "'", str48, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(typeSet56);
        org.junit.Assert.assertNull(logAdapter57);
    }

    @Test
    public void test02736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02736");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.util.Set<java.lang.reflect.Type> typeSet7 = springMvcApiReader2.typesToSkip;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger9 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter10 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader11 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger9, logAdapter10);
        java.lang.Class<?> wildcardClass12 = springMvcApiReader11.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass12);
        io.swagger.models.Swagger swagger14 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter15 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader16 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger14, logAdapter15);
        java.lang.Class<?> wildcardClass17 = springMvcApiReader16.getClass();
        java.lang.annotation.Annotation[] annotationArray18 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList19 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList19, annotationArray18);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList21 = springMvcApiReader2.getParameters((java.lang.reflect.Type) wildcardClass17, (java.util.List<java.lang.annotation.Annotation>) annotationList19);
        io.swagger.models.Operation operation22 = null;
        io.swagger.annotations.ApiOperation apiOperation23 = null;
        springMvcApiReader2.updateTagsForOperation(operation22, apiOperation23);
        java.util.Set<java.lang.reflect.Type> typeSet25 = springMvcApiReader2.typesToSkip;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.annotations.ApiOperation apiOperation27 = null;
        io.swagger.models.Operation operation28 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateOperationProtocols(apiOperation27, operation28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeSet7);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(annotationArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(parameterList21);
        org.junit.Assert.assertNotNull(typeSet25);
    }

    @Test
    public void test02737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02737");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.lang.annotation.Annotation[] annotationArray7 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList8 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList8, annotationArray7);
        boolean boolean10 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList8);
        io.swagger.models.Swagger swagger11 = null;
        springMvcApiReader2.swagger = swagger11;
        io.swagger.models.Swagger swagger13 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter14 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader15 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger13, logAdapter14);
        java.lang.reflect.Type[] typeArray16 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet17 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet17, typeArray16);
        springMvcApiReader15.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet17);
        java.util.Set<java.lang.reflect.Type> typeSet20 = springMvcApiReader15.typesToSkip;
        io.swagger.models.Swagger swagger21 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader23 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger21, logAdapter22);
        java.lang.reflect.Type[] typeArray24 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet25 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet25, typeArray24);
        springMvcApiReader23.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet25);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter28 = springMvcApiReader23.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap30 = null;
        java.lang.String str31 = springMvcApiReader23.parseOperationPath("", strMap30);
        io.swagger.annotations.Api api33 = null;
        boolean boolean34 = springMvcApiReader23.canReadApi(false, api33);
        java.util.Map<java.lang.String, java.lang.String> strMap36 = null;
        java.lang.String str37 = springMvcApiReader23.parseOperationPath("hi!", strMap36);
        io.swagger.models.Swagger swagger38 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter39 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader40 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger38, logAdapter39);
        java.lang.reflect.Type[] typeArray41 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet42 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet42, typeArray41);
        springMvcApiReader40.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet42);
        io.swagger.models.Swagger swagger45 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter46 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader47 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger45, logAdapter46);
        java.lang.reflect.Type[] typeArray48 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet49 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet49, typeArray48);
        springMvcApiReader47.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet49);
        springMvcApiReader40.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet49);
        io.swagger.models.Swagger swagger53 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter54 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader55 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger53, logAdapter54);
        java.lang.reflect.Type[] typeArray56 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet57 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet57, typeArray56);
        springMvcApiReader55.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet57);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter60 = springMvcApiReader55.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap62 = null;
        java.lang.String str63 = springMvcApiReader55.parseOperationPath("", strMap62);
        io.swagger.annotations.Api api65 = null;
        boolean boolean66 = springMvcApiReader55.canReadApi(false, api65);
        java.util.Map<java.lang.String, java.lang.String> strMap68 = null;
        java.lang.String str69 = springMvcApiReader55.parseOperationPath("hi!", strMap68);
        io.swagger.models.Swagger swagger70 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter71 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader72 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger70, logAdapter71);
        java.lang.Class<?> wildcardClass73 = springMvcApiReader72.getClass();
        springMvcApiReader55.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass73);
        springMvcApiReader40.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass73);
        springMvcApiReader23.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass73);
        io.swagger.models.Swagger swagger77 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter78 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader79 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger77, logAdapter78);
        java.lang.reflect.Type[] typeArray80 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet81 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet81, typeArray80);
        springMvcApiReader79.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet81);
        java.lang.annotation.Annotation[] annotationArray84 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList85 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList85, annotationArray84);
        boolean boolean87 = springMvcApiReader79.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList85);
        io.swagger.models.Swagger swagger88 = null;
        springMvcApiReader79.swagger = swagger88;
        java.lang.annotation.Annotation[] annotationArray90 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList91 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean92 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList91, annotationArray90);
        boolean boolean93 = springMvcApiReader79.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList91);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList94 = springMvcApiReader15.getParameters((java.lang.reflect.Type) wildcardClass73, (java.util.List<java.lang.annotation.Annotation>) annotationList91);
        java.util.Set<java.lang.reflect.Type> typeSet95 = springMvcApiReader15.getTypesToSkip();
        springMvcApiReader2.typesToSkip = typeSet95;
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap97 = null;
        io.swagger.annotations.Api api98 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, io.swagger.models.Tag> strMap99 = springMvcApiReader2.updateTagsForApi(strMap97, api98);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(annotationArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(typeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(typeSet20);
        org.junit.Assert.assertNotNull(typeArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(logAdapter28);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "/hi!" + "'", str37, "/hi!");
        org.junit.Assert.assertNotNull(typeArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(typeArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(typeArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNull(logAdapter60);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "" + "'", str63, "");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "/hi!" + "'", str69, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(typeArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(annotationArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(annotationArray90);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNotNull(parameterList94);
        org.junit.Assert.assertNotNull(typeSet95);
    }

    @Test
    public void test02738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02738");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.lang.annotation.Annotation[] annotationArray7 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList8 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList8, annotationArray7);
        boolean boolean10 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList8);
        java.util.Set<java.lang.reflect.Type> typeSet11 = springMvcApiReader2.typesToSkip;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Operation operation13 = null;
        io.swagger.annotations.ApiOperation apiOperation14 = null;
        springMvcApiReader2.updateTagsForOperation(operation13, apiOperation14);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.reflect.Type[] typeArray20 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet21 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet21, typeArray20);
        springMvcApiReader19.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet21);
        java.lang.annotation.Annotation[] annotationArray24 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList25 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList25, annotationArray24);
        boolean boolean27 = springMvcApiReader19.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList25);
        io.swagger.models.Swagger swagger28 = null;
        springMvcApiReader19.swagger = swagger28;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter30 = null;
        springMvcApiReader19.LOG = logAdapter30;
        java.util.Set<java.lang.reflect.Type> typeSet32 = springMvcApiReader19.getTypesToSkip();
        java.lang.Class<?> wildcardClass33 = typeSet32.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass33);
        io.swagger.models.Swagger swagger35 = null;
        springMvcApiReader2.swagger = swagger35;
        io.swagger.annotations.Api api38 = null;
        boolean boolean39 = springMvcApiReader2.canReadApi(true, api38);
        java.lang.reflect.Method method40 = null;
        io.swagger.models.Operation operation41 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.readImplicitParameters(method40, operation41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(annotationArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(typeSet11);
        org.junit.Assert.assertNotNull(typeArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(annotationArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(typeSet32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    }

    @Test
    public void test02739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02739");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.lang.annotation.Annotation[] annotationArray7 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList8 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList8, annotationArray7);
        boolean boolean10 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList8);
        java.util.Map<java.lang.String, java.lang.String> strMap12 = null;
        java.lang.String str13 = springMvcApiReader2.parseOperationPath("hi!", strMap12);
        io.swagger.models.Swagger swagger14 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter15 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader16 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger14, logAdapter15);
        java.lang.reflect.Type[] typeArray17 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet18 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet18, typeArray17);
        springMvcApiReader16.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet18);
        io.swagger.models.Swagger swagger21 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader23 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger21, logAdapter22);
        java.lang.reflect.Type[] typeArray24 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet25 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet25, typeArray24);
        springMvcApiReader23.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet25);
        springMvcApiReader16.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet25);
        io.swagger.models.Swagger swagger29 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter30 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader31 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger29, logAdapter30);
        java.lang.reflect.Type type32 = null;
        springMvcApiReader31.addTypeToSkippedTypes(type32);
        java.util.Set<java.lang.reflect.Type> typeSet34 = springMvcApiReader31.typesToSkip;
        springMvcApiReader16.setTypesToSkip(typeSet34);
        java.util.Set<java.lang.reflect.Type> typeSet36 = springMvcApiReader16.typesToSkip;
        springMvcApiReader2.typesToSkip = typeSet36;
        io.swagger.annotations.Api api38 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.lang.String> strSet39 = springMvcApiReader2.extractTags(api38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(annotationArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "/hi!" + "'", str13, "/hi!");
        org.junit.Assert.assertNotNull(typeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(typeArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(typeSet34);
        org.junit.Assert.assertNotNull(typeSet36);
    }

    @Test
    public void test02740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02740");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader2.parseOperationPath("hi!", strMap15);
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.Class<?> wildcardClass20 = springMvcApiReader19.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass20);
        io.swagger.models.Swagger swagger22 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader24 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger22, logAdapter23);
        java.lang.reflect.Type[] typeArray25 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet26 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet26, typeArray25);
        springMvcApiReader24.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet26);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter29 = springMvcApiReader24.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap31 = null;
        java.lang.String str32 = springMvcApiReader24.parseOperationPath("", strMap31);
        java.lang.reflect.Type[] typeArray33 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList34 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList34, typeArray33);
        springMvcApiReader24.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList34);
        java.lang.String[] strArray37 = new java.lang.String[] {};
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!", "", "hi!" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap42 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray43 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList44 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList44, securityRequirementArray43);
        io.swagger.models.Operation operation46 = null;
        springMvcApiReader24.updateOperation(strArray37, strArray41, strMap42, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList44, operation46);
        java.lang.String[] strArray54 = new java.lang.String[] { "/hi!", "", "/hi!", "hi!", "hi!", "hi!" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap55 = null;
        io.swagger.models.Swagger swagger56 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter57 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader58 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger56, logAdapter57);
        java.lang.reflect.Type[] typeArray59 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet60 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet60, typeArray59);
        springMvcApiReader58.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet60);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter63 = springMvcApiReader58.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap65 = null;
        java.lang.String str66 = springMvcApiReader58.parseOperationPath("", strMap65);
        java.lang.reflect.Type[] typeArray67 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList68 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList68, typeArray67);
        springMvcApiReader58.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList68);
        java.lang.String[] strArray71 = new java.lang.String[] {};
        java.lang.String[] strArray75 = new java.lang.String[] { "hi!", "", "hi!" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap76 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray77 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList78 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList78, securityRequirementArray77);
        io.swagger.models.Operation operation80 = null;
        springMvcApiReader58.updateOperation(strArray71, strArray75, strMap76, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList78, operation80);
        io.swagger.models.Operation operation82 = null;
        springMvcApiReader2.updateOperation(strArray37, strArray54, strMap55, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList78, operation82);
        io.swagger.models.Swagger swagger84 = null;
        springMvcApiReader2.swagger = swagger84;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter86 = springMvcApiReader2.LOG;
        io.swagger.models.Operation operation87 = null;
        io.swagger.annotations.ApiOperation apiOperation88 = null;
        springMvcApiReader2.updateTagsForOperation(operation87, apiOperation88);
        java.util.Map<java.lang.String, java.lang.String> strMap91 = null;
        java.lang.String str92 = springMvcApiReader2.parseOperationPath("/hi!", strMap91);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter93 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger94 = null;
        springMvcApiReader2.swagger = swagger94;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter96 = springMvcApiReader2.LOG;
        io.swagger.annotations.Api api97 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<io.swagger.models.SecurityRequirement> securityRequirementList98 = springMvcApiReader2.getSecurityRequirements(api97);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/hi!" + "'", str16, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(typeArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(logAdapter29);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertNotNull(typeArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(securityRequirementArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(typeArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNull(logAdapter63);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "" + "'", str66, "");
        org.junit.Assert.assertNotNull(typeArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertNotNull(securityRequirementArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNull(logAdapter86);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "/hi!" + "'", str92, "/hi!");
        org.junit.Assert.assertNull(logAdapter93);
        org.junit.Assert.assertNull(logAdapter96);
    }

    @Test
    public void test02741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02741");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type[] typeArray18 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet19 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet19, typeArray18);
        springMvcApiReader17.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet19);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = springMvcApiReader17.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap24 = null;
        java.lang.String str25 = springMvcApiReader17.parseOperationPath("", strMap24);
        io.swagger.annotations.Api api27 = null;
        boolean boolean28 = springMvcApiReader17.canReadApi(false, api27);
        java.util.Map<java.lang.String, java.lang.String> strMap30 = null;
        java.lang.String str31 = springMvcApiReader17.parseOperationPath("hi!", strMap30);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.Class<?> wildcardClass35 = springMvcApiReader34.getClass();
        springMvcApiReader17.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger39 = null;
        springMvcApiReader2.swagger = swagger39;
        springMvcApiReader2.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet42 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger43 = null;
        springMvcApiReader2.swagger = swagger43;
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(logAdapter22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "/hi!" + "'", str31, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(typeSet42);
    }

    @Test
    public void test02742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02742");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        io.swagger.models.Swagger swagger5 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger6 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader8 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger6, logAdapter7);
        java.lang.reflect.Type type9 = null;
        springMvcApiReader8.addTypeToSkippedTypes(type9);
        java.util.Set<java.lang.reflect.Type> typeSet11 = springMvcApiReader8.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet11);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter13 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger14 = springMvcApiReader2.swagger;
        java.util.Set<java.lang.reflect.Type> typeSet15 = null;
        springMvcApiReader2.typesToSkip = typeSet15;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter17 = springMvcApiReader2.LOG;
        java.lang.reflect.Method method18 = null;
        io.swagger.models.Operation operation19 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.readImplicitParameters(method18, operation19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(swagger5);
        org.junit.Assert.assertNotNull(typeSet11);
        org.junit.Assert.assertNull(logAdapter13);
        org.junit.Assert.assertNull(swagger14);
        org.junit.Assert.assertNull(logAdapter17);
    }

    @Test
    public void test02743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02743");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.lang.annotation.Annotation[] annotationArray7 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList8 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList8, annotationArray7);
        boolean boolean10 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList8);
        io.swagger.models.Swagger swagger11 = null;
        springMvcApiReader2.swagger = swagger11;
        io.swagger.annotations.ResponseHeader[] responseHeaderArray13 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap14 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray13);
        io.swagger.annotations.Api api16 = null;
        boolean boolean17 = springMvcApiReader2.canReadApi(false, api16);
        io.swagger.models.Operation operation18 = null;
        io.swagger.annotations.ApiOperation apiOperation19 = null;
        springMvcApiReader2.updateTagsForOperation(operation18, apiOperation19);
        java.util.Set<java.lang.reflect.Type> typeSet21 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger22 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader24 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger22, logAdapter23);
        java.lang.reflect.Type[] typeArray25 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet26 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet26, typeArray25);
        springMvcApiReader24.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet26);
        java.lang.annotation.Annotation[] annotationArray29 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList30 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList30, annotationArray29);
        boolean boolean32 = springMvcApiReader24.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList30);
        java.util.Map<java.lang.String, java.lang.String> strMap34 = null;
        java.lang.String str35 = springMvcApiReader24.parseOperationPath("", strMap34);
        java.lang.Class<?> wildcardClass36 = springMvcApiReader24.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass36);
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(annotationArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(responseHeaderArray13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(typeSet21);
        org.junit.Assert.assertNotNull(typeArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(annotationArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test02744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02744");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        java.util.Set<java.lang.reflect.Type> typeSet5 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet6 = springMvcApiReader2.getTypesToSkip();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = null;
        java.lang.String str9 = springMvcApiReader2.parseOperationPath("", strMap8);
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader12 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger10, logAdapter11);
        java.lang.reflect.Type[] typeArray13 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet14 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet14, typeArray13);
        springMvcApiReader12.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet14);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter17 = springMvcApiReader12.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap19 = null;
        java.lang.String str20 = springMvcApiReader12.parseOperationPath("", strMap19);
        io.swagger.annotations.Api api22 = null;
        boolean boolean23 = springMvcApiReader12.canReadApi(false, api22);
        java.util.Map<java.lang.String, java.lang.String> strMap25 = null;
        java.lang.String str26 = springMvcApiReader12.parseOperationPath("hi!", strMap25);
        io.swagger.models.Swagger swagger27 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter28 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader29 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger27, logAdapter28);
        java.lang.Class<?> wildcardClass30 = springMvcApiReader29.getClass();
        springMvcApiReader12.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass30);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.reflect.Type[] typeArray35 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet36 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet36, typeArray35);
        springMvcApiReader34.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet36);
        java.lang.annotation.Annotation[] annotationArray39 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList40 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList40, annotationArray39);
        boolean boolean42 = springMvcApiReader34.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList40);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList43 = springMvcApiReader2.getParameters((java.lang.reflect.Type) wildcardClass30, (java.util.List<java.lang.annotation.Annotation>) annotationList40);
        springMvcApiReader2.updateExtensionChain();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter45 = null;
        springMvcApiReader2.LOG = logAdapter45;
        io.swagger.models.Swagger swagger47 = springMvcApiReader2.swagger;
        org.junit.Assert.assertNotNull(typeSet5);
        org.junit.Assert.assertNotNull(typeSet6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(typeArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(logAdapter17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "/hi!" + "'", str26, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(typeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(annotationArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(parameterList43);
        org.junit.Assert.assertNull(swagger47);
    }

    @Test
    public void test02745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02745");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader2.parseOperationPath("hi!", strMap15);
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.Class<?> wildcardClass20 = springMvcApiReader19.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass20);
        io.swagger.models.Swagger swagger22 = null;
        springMvcApiReader2.swagger = swagger22;
        io.swagger.models.Operation operation24 = null;
        io.swagger.annotations.ApiOperation apiOperation25 = null;
        springMvcApiReader2.updateTagsForOperation(operation24, apiOperation25);
        io.swagger.annotations.ApiOperation apiOperation27 = null;
        io.swagger.models.Operation operation28 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateOperationProtocols(apiOperation27, operation28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/hi!" + "'", str16, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test02746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02746");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Operation operation8 = null;
        io.swagger.annotations.ApiOperation apiOperation9 = null;
        springMvcApiReader2.updateTagsForOperation(operation8, apiOperation9);
        io.swagger.models.Swagger swagger11 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter12 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader13 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger11, logAdapter12);
        java.lang.reflect.Type[] typeArray14 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet15 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet15, typeArray14);
        springMvcApiReader13.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet15);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = springMvcApiReader13.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap20 = null;
        java.lang.String str21 = springMvcApiReader13.parseOperationPath("", strMap20);
        io.swagger.models.Swagger swagger22 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader24 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger22, logAdapter23);
        java.lang.Class<?> wildcardClass25 = springMvcApiReader24.getClass();
        java.lang.reflect.Type[] typeArray26 = new java.lang.reflect.Type[] { wildcardClass25 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet27 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet27, typeArray26);
        springMvcApiReader13.typesToSkip = typeSet27;
        io.swagger.annotations.Api api31 = null;
        boolean boolean32 = springMvcApiReader13.canReadApi(false, api31);
        io.swagger.models.Operation operation33 = null;
        io.swagger.annotations.ApiOperation apiOperation34 = null;
        springMvcApiReader13.updateTagsForOperation(operation33, apiOperation34);
        io.swagger.annotations.Api api37 = null;
        boolean boolean38 = springMvcApiReader13.canReadApi(true, api37);
        io.swagger.models.Swagger swagger39 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter40 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader41 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger39, logAdapter40);
        java.lang.reflect.Type[] typeArray42 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet43 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet43, typeArray42);
        springMvcApiReader41.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet43);
        java.lang.annotation.Annotation[] annotationArray46 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList47 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList47, annotationArray46);
        boolean boolean49 = springMvcApiReader41.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList47);
        io.swagger.models.Swagger swagger50 = null;
        springMvcApiReader41.swagger = swagger50;
        java.lang.annotation.Annotation[] annotationArray52 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList53 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList53, annotationArray52);
        boolean boolean55 = springMvcApiReader41.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList53);
        boolean boolean56 = springMvcApiReader13.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList53);
        boolean boolean57 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList53);
        com.github.kongchen.swagger.docgen.spring.SpringResource springResource58 = null;
        // The following exception was thrown during execution in test generation
        try {
            io.swagger.models.Swagger swagger59 = springMvcApiReader2.read(springResource58);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(logAdapter18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(typeArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(typeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(annotationArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(annotationArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
    }

    @Test
    public void test02747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02747");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        io.swagger.models.Swagger swagger5 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger6 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader8 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger6, logAdapter7);
        java.lang.reflect.Type type9 = null;
        springMvcApiReader8.addTypeToSkippedTypes(type9);
        java.util.Set<java.lang.reflect.Type> typeSet11 = springMvcApiReader8.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet11);
        java.util.Set<java.lang.reflect.Type> typeSet13 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet14 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Operation operation15 = null;
        io.swagger.annotations.ApiOperation apiOperation16 = null;
        springMvcApiReader2.updateTagsForOperation(operation15, apiOperation16);
        org.junit.Assert.assertNull(swagger5);
        org.junit.Assert.assertNotNull(typeSet11);
        org.junit.Assert.assertNotNull(typeSet13);
        org.junit.Assert.assertNotNull(typeSet14);
    }

    @Test
    public void test02748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02748");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.models.Swagger swagger11 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter12 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader13 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger11, logAdapter12);
        java.lang.Class<?> wildcardClass14 = springMvcApiReader13.getClass();
        java.lang.reflect.Type[] typeArray15 = new java.lang.reflect.Type[] { wildcardClass14 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet16 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet16, typeArray15);
        springMvcApiReader2.typesToSkip = typeSet16;
        io.swagger.annotations.Api api20 = null;
        boolean boolean21 = springMvcApiReader2.canReadApi(false, api20);
        io.swagger.models.Operation operation22 = null;
        io.swagger.annotations.ApiOperation apiOperation23 = null;
        springMvcApiReader2.updateTagsForOperation(operation22, apiOperation23);
        io.swagger.annotations.Api api26 = null;
        boolean boolean27 = springMvcApiReader2.canReadApi(true, api26);
        io.swagger.models.Swagger swagger28 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter29 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader30 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger28, logAdapter29);
        java.lang.reflect.Type[] typeArray31 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet32 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet32, typeArray31);
        springMvcApiReader30.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet32);
        java.lang.annotation.Annotation[] annotationArray35 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList36 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList36, annotationArray35);
        boolean boolean38 = springMvcApiReader30.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList36);
        io.swagger.models.Swagger swagger39 = null;
        springMvcApiReader30.swagger = swagger39;
        java.lang.annotation.Annotation[] annotationArray41 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList42 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList42, annotationArray41);
        boolean boolean44 = springMvcApiReader30.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList42);
        boolean boolean45 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList42);
        java.util.Map<java.lang.String, java.lang.String> strMap47 = null;
        java.lang.String str48 = springMvcApiReader2.parseOperationPath("/hi!", strMap47);
        io.swagger.models.Operation operation49 = null;
        io.swagger.annotations.ApiResponses apiResponses50 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateApiResponse(operation49, apiResponses50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(typeArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(typeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(annotationArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(annotationArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "/hi!" + "'", str48, "/hi!");
    }

    @Test
    public void test02749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02749");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.lang.annotation.Annotation[] annotationArray7 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList8 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList8, annotationArray7);
        boolean boolean10 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList8);
        java.util.Set<java.lang.reflect.Type> typeSet11 = springMvcApiReader2.typesToSkip;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Operation operation13 = null;
        io.swagger.annotations.ApiOperation apiOperation14 = null;
        springMvcApiReader2.updateTagsForOperation(operation13, apiOperation14);
        springMvcApiReader2.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet17 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger18 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter19 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader20 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger18, logAdapter19);
        java.lang.reflect.Type[] typeArray21 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet22 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet22, typeArray21);
        springMvcApiReader20.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet22);
        java.lang.annotation.Annotation[] annotationArray25 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList26 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList26, annotationArray25);
        boolean boolean28 = springMvcApiReader20.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList26);
        io.swagger.models.Swagger swagger29 = null;
        springMvcApiReader20.swagger = swagger29;
        io.swagger.models.Swagger swagger31 = null;
        springMvcApiReader20.swagger = swagger31;
        io.swagger.models.Swagger swagger33 = null;
        springMvcApiReader20.swagger = swagger33;
        io.swagger.models.Swagger swagger35 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter36 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader37 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger35, logAdapter36);
        java.lang.reflect.Type type38 = null;
        springMvcApiReader37.addTypeToSkippedTypes(type38);
        java.util.Set<java.lang.reflect.Type> typeSet40 = springMvcApiReader37.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet41 = springMvcApiReader37.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet42 = null;
        springMvcApiReader37.typesToSkip = typeSet42;
        java.util.Set<java.lang.reflect.Type> typeSet44 = springMvcApiReader37.getTypesToSkip();
        io.swagger.models.Swagger swagger45 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter46 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader47 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger45, logAdapter46);
        java.lang.reflect.Type[] typeArray48 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet49 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet49, typeArray48);
        springMvcApiReader47.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet49);
        java.lang.annotation.Annotation[] annotationArray52 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList53 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList53, annotationArray52);
        boolean boolean55 = springMvcApiReader47.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList53);
        io.swagger.models.Swagger swagger56 = null;
        springMvcApiReader47.swagger = swagger56;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter58 = null;
        springMvcApiReader47.LOG = logAdapter58;
        springMvcApiReader47.updateExtensionChain();
        io.swagger.models.Operation operation61 = null;
        io.swagger.annotations.ApiOperation apiOperation62 = null;
        springMvcApiReader47.updateTagsForOperation(operation61, apiOperation62);
        io.swagger.models.Swagger swagger64 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter65 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader66 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger64, logAdapter65);
        java.lang.reflect.Type[] typeArray67 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet68 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet68, typeArray67);
        springMvcApiReader66.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet68);
        java.lang.annotation.Annotation[] annotationArray71 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList72 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList72, annotationArray71);
        boolean boolean74 = springMvcApiReader66.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList72);
        io.swagger.models.Swagger swagger75 = null;
        springMvcApiReader66.swagger = swagger75;
        io.swagger.models.Swagger swagger77 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter78 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader79 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger77, logAdapter78);
        java.lang.reflect.Type[] typeArray80 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet81 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet81, typeArray80);
        springMvcApiReader79.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet81);
        java.lang.annotation.Annotation[] annotationArray84 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList85 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList85, annotationArray84);
        boolean boolean87 = springMvcApiReader79.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList85);
        io.swagger.models.Swagger swagger88 = null;
        springMvcApiReader79.swagger = swagger88;
        java.lang.annotation.Annotation[] annotationArray90 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList91 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean92 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList91, annotationArray90);
        boolean boolean93 = springMvcApiReader79.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList91);
        boolean boolean94 = springMvcApiReader66.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList91);
        boolean boolean95 = springMvcApiReader47.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList91);
        boolean boolean96 = springMvcApiReader37.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList91);
        boolean boolean97 = springMvcApiReader20.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList91);
        boolean boolean98 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList91);
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(annotationArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(typeSet11);
        org.junit.Assert.assertNotNull(typeSet17);
        org.junit.Assert.assertNotNull(typeArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(annotationArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(typeSet40);
        org.junit.Assert.assertNotNull(typeSet41);
        org.junit.Assert.assertNull(typeSet44);
        org.junit.Assert.assertNotNull(typeArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(annotationArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(typeArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(annotationArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(typeArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(annotationArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(annotationArray90);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
    }

    @Test
    public void test02750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02750");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader2.parseOperationPath("hi!", strMap15);
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.Class<?> wildcardClass20 = springMvcApiReader19.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass20);
        java.util.Map<java.lang.String, java.lang.String> strMap23 = null;
        java.lang.String str24 = springMvcApiReader2.parseOperationPath("/hi!", strMap23);
        io.swagger.models.Swagger swagger25 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter26 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader27 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger25, logAdapter26);
        java.lang.reflect.Type[] typeArray28 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet29 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet29, typeArray28);
        springMvcApiReader27.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet29);
        java.lang.annotation.Annotation[] annotationArray32 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList33 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList33, annotationArray32);
        boolean boolean35 = springMvcApiReader27.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList33);
        java.util.Set<java.lang.reflect.Type> typeSet36 = springMvcApiReader27.typesToSkip;
        springMvcApiReader27.updateExtensionChain();
        io.swagger.models.Operation operation38 = null;
        io.swagger.annotations.ApiOperation apiOperation39 = null;
        springMvcApiReader27.updateTagsForOperation(operation38, apiOperation39);
        io.swagger.annotations.Api api42 = null;
        boolean boolean43 = springMvcApiReader27.canReadApi(true, api42);
        io.swagger.models.Swagger swagger44 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter45 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader46 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger44, logAdapter45);
        java.lang.reflect.Type[] typeArray47 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet48 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet48, typeArray47);
        springMvcApiReader46.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet48);
        java.lang.annotation.Annotation[] annotationArray51 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList52 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList52, annotationArray51);
        boolean boolean54 = springMvcApiReader46.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList52);
        io.swagger.models.Swagger swagger55 = null;
        springMvcApiReader46.swagger = swagger55;
        java.util.Set<java.lang.reflect.Type> typeSet57 = springMvcApiReader46.getTypesToSkip();
        java.lang.Class<?> wildcardClass58 = springMvcApiReader46.getClass();
        java.lang.annotation.Annotation[] annotationArray59 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList60 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList60, annotationArray59);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList62 = springMvcApiReader27.getParameters((java.lang.reflect.Type) wildcardClass58, (java.util.List<java.lang.annotation.Annotation>) annotationList60);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass58);
        io.swagger.models.Operation operation64 = null;
        io.swagger.annotations.ApiOperation apiOperation65 = null;
        springMvcApiReader2.updateTagsForOperation(operation64, apiOperation65);
        java.util.Set<java.lang.reflect.Type> typeSet67 = springMvcApiReader2.getTypesToSkip();
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/hi!" + "'", str16, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "/hi!" + "'", str24, "/hi!");
        org.junit.Assert.assertNotNull(typeArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(annotationArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(typeSet36);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(typeArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(annotationArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(typeSet57);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(annotationArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(parameterList62);
        org.junit.Assert.assertNotNull(typeSet67);
    }

    @Test
    public void test02751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02751");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        java.util.Set<java.lang.reflect.Type> typeSet5 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet6 = springMvcApiReader2.getTypesToSkip();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = null;
        java.lang.String str9 = springMvcApiReader2.parseOperationPath("/hi!", strMap8);
        io.swagger.annotations.ApiOperation apiOperation10 = null;
        io.swagger.models.Operation operation11 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateOperationProtocols(apiOperation10, operation11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeSet5);
        org.junit.Assert.assertNotNull(typeSet6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "/hi!" + "'", str9, "/hi!");
    }

    @Test
    public void test02752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02752");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        io.swagger.models.Swagger swagger14 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter15 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader16 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger14, logAdapter15);
        java.lang.reflect.Type type17 = null;
        springMvcApiReader16.addTypeToSkippedTypes(type17);
        java.util.Set<java.lang.reflect.Type> typeSet19 = springMvcApiReader16.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet20 = springMvcApiReader16.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet20);
        io.swagger.annotations.Api api23 = null;
        boolean boolean24 = springMvcApiReader2.canReadApi(false, api23);
        io.swagger.models.Swagger swagger25 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter26 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader27 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger25, logAdapter26);
        java.lang.reflect.Type[] typeArray28 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet29 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet29, typeArray28);
        springMvcApiReader27.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet29);
        java.lang.annotation.Annotation[] annotationArray32 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList33 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList33, annotationArray32);
        boolean boolean35 = springMvcApiReader27.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList33);
        io.swagger.models.Swagger swagger36 = null;
        springMvcApiReader27.swagger = swagger36;
        io.swagger.annotations.ResponseHeader[] responseHeaderArray38 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap39 = springMvcApiReader27.parseResponseHeaders(responseHeaderArray38);
        io.swagger.models.Swagger swagger40 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter41 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader42 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger40, logAdapter41);
        java.lang.reflect.Type[] typeArray43 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet44 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet44, typeArray43);
        springMvcApiReader42.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet44);
        io.swagger.models.Swagger swagger47 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter48 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader49 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger47, logAdapter48);
        java.lang.reflect.Type[] typeArray50 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet51 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet51, typeArray50);
        springMvcApiReader49.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet51);
        springMvcApiReader42.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet51);
        io.swagger.models.Swagger swagger55 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter56 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader57 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger55, logAdapter56);
        java.lang.reflect.Type[] typeArray58 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet59 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet59, typeArray58);
        springMvcApiReader57.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet59);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter62 = springMvcApiReader57.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap64 = null;
        java.lang.String str65 = springMvcApiReader57.parseOperationPath("", strMap64);
        io.swagger.annotations.Api api67 = null;
        boolean boolean68 = springMvcApiReader57.canReadApi(false, api67);
        java.util.Map<java.lang.String, java.lang.String> strMap70 = null;
        java.lang.String str71 = springMvcApiReader57.parseOperationPath("hi!", strMap70);
        io.swagger.models.Swagger swagger72 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter73 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader74 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger72, logAdapter73);
        java.lang.Class<?> wildcardClass75 = springMvcApiReader74.getClass();
        springMvcApiReader57.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass75);
        springMvcApiReader42.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass75);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter78 = springMvcApiReader42.LOG;
        io.swagger.models.Swagger swagger79 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter80 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader81 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger79, logAdapter80);
        java.lang.reflect.Type[] typeArray82 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet83 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet83, typeArray82);
        springMvcApiReader81.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet83);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter86 = springMvcApiReader81.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap88 = null;
        java.lang.String str89 = springMvcApiReader81.parseOperationPath("", strMap88);
        java.lang.reflect.Type[] typeArray90 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList91 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean92 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList91, typeArray90);
        springMvcApiReader81.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList91);
        springMvcApiReader42.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList91);
        springMvcApiReader27.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList91);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList91);
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(typeSet19);
        org.junit.Assert.assertNotNull(typeSet20);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(typeArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(annotationArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(responseHeaderArray38);
        org.junit.Assert.assertNull(strMap39);
        org.junit.Assert.assertNotNull(typeArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(typeArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(typeArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNull(logAdapter62);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "" + "'", str65, "");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "/hi!" + "'", str71, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNull(logAdapter78);
        org.junit.Assert.assertNotNull(typeArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNull(logAdapter86);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "" + "'", str89, "");
        org.junit.Assert.assertNotNull(typeArray90);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
    }

    @Test
    public void test02753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02753");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        java.lang.reflect.Type[] typeArray11 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList12 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList12, typeArray11);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList12);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!", "", "hi!" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap20 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray21 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList22 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList22, securityRequirementArray21);
        io.swagger.models.Operation operation24 = null;
        springMvcApiReader2.updateOperation(strArray15, strArray19, strMap20, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList22, operation24);
        springMvcApiReader2.updateExtensionChain();
        springMvcApiReader2.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet28 = springMvcApiReader2.typesToSkip;
        io.swagger.annotations.Api api29 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.lang.String> strSet30 = springMvcApiReader2.extractTags(api29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(typeArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(securityRequirementArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(typeSet28);
    }

    @Test
    public void test02754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02754");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.util.Map<java.lang.String, java.lang.String> strMap4 = null;
        java.lang.String str5 = springMvcApiReader2.parseOperationPath("/hi!", strMap4);
        java.util.Set<java.lang.reflect.Type> typeSet6 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter14 = springMvcApiReader9.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap16 = null;
        java.lang.String str17 = springMvcApiReader9.parseOperationPath("", strMap16);
        io.swagger.models.Swagger swagger18 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter19 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader20 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger18, logAdapter19);
        java.lang.Class<?> wildcardClass21 = springMvcApiReader20.getClass();
        java.lang.reflect.Type[] typeArray22 = new java.lang.reflect.Type[] { wildcardClass21 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet23 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet23, typeArray22);
        springMvcApiReader9.typesToSkip = typeSet23;
        io.swagger.models.Swagger swagger26 = null;
        springMvcApiReader9.swagger = swagger26;
        java.util.Set<java.lang.reflect.Type> typeSet28 = springMvcApiReader9.getTypesToSkip();
        io.swagger.models.Swagger swagger29 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter30 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader31 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger29, logAdapter30);
        java.lang.reflect.Type[] typeArray32 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet33 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet33, typeArray32);
        springMvcApiReader31.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet33);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter36 = springMvcApiReader31.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap38 = null;
        java.lang.String str39 = springMvcApiReader31.parseOperationPath("", strMap38);
        java.lang.reflect.Type[] typeArray40 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList41 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList41, typeArray40);
        springMvcApiReader31.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList41);
        java.lang.String[] strArray44 = new java.lang.String[] {};
        java.lang.String[] strArray48 = new java.lang.String[] { "hi!", "", "hi!" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap49 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray50 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList51 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList51, securityRequirementArray50);
        io.swagger.models.Operation operation53 = null;
        springMvcApiReader31.updateOperation(strArray44, strArray48, strMap49, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList51, operation53);
        java.lang.String[] strArray57 = new java.lang.String[] { "/hi!", "hi!" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap58 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray59 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList60 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList60, securityRequirementArray59);
        io.swagger.models.Operation operation62 = null;
        springMvcApiReader9.updateOperation(strArray48, strArray57, strMap58, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList60, operation62);
        io.swagger.models.Swagger swagger64 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter65 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader66 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger64, logAdapter65);
        java.lang.reflect.Type[] typeArray67 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet68 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet68, typeArray67);
        springMvcApiReader66.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet68);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter71 = springMvcApiReader66.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap73 = null;
        java.lang.String str74 = springMvcApiReader66.parseOperationPath("", strMap73);
        io.swagger.annotations.Api api76 = null;
        boolean boolean77 = springMvcApiReader66.canReadApi(false, api76);
        java.util.Map<java.lang.String, java.lang.String> strMap79 = null;
        java.lang.String str80 = springMvcApiReader66.parseOperationPath("hi!", strMap79);
        springMvcApiReader66.updateExtensionChain();
        java.lang.String[] strArray83 = new java.lang.String[] { "/hi!" };
        java.lang.String[] strArray84 = new java.lang.String[] {};
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap85 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray86 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList87 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList87, securityRequirementArray86);
        io.swagger.models.Operation operation89 = null;
        springMvcApiReader66.updateOperation(strArray83, strArray84, strMap85, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList87, operation89);
        io.swagger.models.Operation operation91 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String[] strArray92 = springMvcApiReader2.updateOperationProduces(strArray48, strArray84, operation91);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "/hi!" + "'", str5, "/hi!");
        org.junit.Assert.assertNotNull(typeSet6);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(logAdapter14);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(typeArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(typeSet28);
        org.junit.Assert.assertNotNull(typeArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(logAdapter36);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertNotNull(typeArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertNotNull(securityRequirementArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertNotNull(securityRequirementArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(typeArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNull(logAdapter71);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "" + "'", str74, "");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "/hi!" + "'", str80, "/hi!");
        org.junit.Assert.assertNotNull(strArray83);
        org.junit.Assert.assertNotNull(strArray84);
        org.junit.Assert.assertNotNull(securityRequirementArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
    }

    @Test
    public void test02755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02755");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.lang.annotation.Annotation[] annotationArray7 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList8 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList8, annotationArray7);
        boolean boolean10 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList8);
        io.swagger.models.Swagger swagger11 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter12 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader13 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger11, logAdapter12);
        java.lang.reflect.Type[] typeArray14 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet15 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet15, typeArray14);
        springMvcApiReader13.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet15);
        java.lang.annotation.Annotation[] annotationArray18 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList19 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList19, annotationArray18);
        boolean boolean21 = springMvcApiReader13.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList19);
        io.swagger.models.Swagger swagger22 = null;
        springMvcApiReader13.swagger = swagger22;
        io.swagger.models.Swagger swagger24 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter25 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader26 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger24, logAdapter25);
        java.lang.reflect.Type[] typeArray27 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet28 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet28, typeArray27);
        springMvcApiReader26.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet28);
        java.lang.annotation.Annotation[] annotationArray31 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList32 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList32, annotationArray31);
        boolean boolean34 = springMvcApiReader26.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList32);
        io.swagger.models.Swagger swagger35 = null;
        springMvcApiReader26.swagger = swagger35;
        java.lang.annotation.Annotation[] annotationArray37 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList38 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList38, annotationArray37);
        boolean boolean40 = springMvcApiReader26.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList38);
        boolean boolean41 = springMvcApiReader13.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList38);
        springMvcApiReader13.updateExtensionChain();
        io.swagger.models.Swagger swagger43 = springMvcApiReader13.swagger;
        springMvcApiReader13.updateExtensionChain();
        io.swagger.models.Swagger swagger45 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter46 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader47 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger45, logAdapter46);
        java.lang.reflect.Type type48 = null;
        springMvcApiReader47.addTypeToSkippedTypes(type48);
        java.util.Set<java.lang.reflect.Type> typeSet50 = springMvcApiReader47.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet51 = springMvcApiReader47.getTypesToSkip();
        java.util.Map<java.lang.String, java.lang.String> strMap53 = null;
        java.lang.String str54 = springMvcApiReader47.parseOperationPath("", strMap53);
        io.swagger.models.Swagger swagger55 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter56 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader57 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger55, logAdapter56);
        java.lang.reflect.Type[] typeArray58 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet59 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet59, typeArray58);
        springMvcApiReader57.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet59);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter62 = springMvcApiReader57.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap64 = null;
        java.lang.String str65 = springMvcApiReader57.parseOperationPath("", strMap64);
        io.swagger.annotations.Api api67 = null;
        boolean boolean68 = springMvcApiReader57.canReadApi(false, api67);
        java.util.Map<java.lang.String, java.lang.String> strMap70 = null;
        java.lang.String str71 = springMvcApiReader57.parseOperationPath("hi!", strMap70);
        io.swagger.models.Swagger swagger72 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter73 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader74 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger72, logAdapter73);
        java.lang.Class<?> wildcardClass75 = springMvcApiReader74.getClass();
        springMvcApiReader57.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass75);
        io.swagger.models.Swagger swagger77 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter78 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader79 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger77, logAdapter78);
        java.lang.reflect.Type[] typeArray80 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet81 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet81, typeArray80);
        springMvcApiReader79.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet81);
        java.lang.annotation.Annotation[] annotationArray84 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList85 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList85, annotationArray84);
        boolean boolean87 = springMvcApiReader79.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList85);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList88 = springMvcApiReader47.getParameters((java.lang.reflect.Type) wildcardClass75, (java.util.List<java.lang.annotation.Annotation>) annotationList85);
        springMvcApiReader13.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass75);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass75);
        io.swagger.annotations.Api api91 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.lang.String> strSet92 = springMvcApiReader2.extractTags(api91);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(annotationArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(typeArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(annotationArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(typeArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(annotationArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(annotationArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(swagger43);
        org.junit.Assert.assertNotNull(typeSet50);
        org.junit.Assert.assertNotNull(typeSet51);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertNotNull(typeArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNull(logAdapter62);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "" + "'", str65, "");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "/hi!" + "'", str71, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(typeArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(annotationArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(parameterList88);
    }

    @Test
    public void test02756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02756");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        java.util.Map<java.lang.String, java.lang.String> strMap16 = null;
        java.lang.String str17 = springMvcApiReader2.parseOperationPath("/hi!", strMap16);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger19 = springMvcApiReader2.swagger;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter20 = null;
        springMvcApiReader2.LOG = logAdapter20;
        io.swagger.models.Swagger swagger22 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader24 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger22, logAdapter23);
        java.lang.reflect.Type[] typeArray25 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet26 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet26, typeArray25);
        springMvcApiReader24.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet26);
        io.swagger.models.Swagger swagger29 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter30 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader31 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger29, logAdapter30);
        java.lang.reflect.Type[] typeArray32 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet33 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet33, typeArray32);
        springMvcApiReader31.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet33);
        springMvcApiReader24.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet33);
        io.swagger.models.Swagger swagger37 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter38 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader39 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger37, logAdapter38);
        java.lang.reflect.Type type40 = null;
        springMvcApiReader39.addTypeToSkippedTypes(type40);
        java.util.Set<java.lang.reflect.Type> typeSet42 = springMvcApiReader39.typesToSkip;
        springMvcApiReader24.setTypesToSkip(typeSet42);
        java.util.Set<java.lang.reflect.Type> typeSet44 = springMvcApiReader24.getTypesToSkip();
        io.swagger.annotations.Api api46 = null;
        boolean boolean47 = springMvcApiReader24.canReadApi(true, api46);
        java.lang.String[] strArray48 = null;
        io.swagger.models.Swagger swagger49 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter50 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader51 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger49, logAdapter50);
        java.lang.reflect.Type[] typeArray52 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet53 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet53, typeArray52);
        springMvcApiReader51.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet53);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter56 = springMvcApiReader51.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap58 = null;
        java.lang.String str59 = springMvcApiReader51.parseOperationPath("", strMap58);
        io.swagger.annotations.Api api61 = null;
        boolean boolean62 = springMvcApiReader51.canReadApi(false, api61);
        java.util.Map<java.lang.String, java.lang.String> strMap64 = null;
        java.lang.String str65 = springMvcApiReader51.parseOperationPath("hi!", strMap64);
        springMvcApiReader51.updateExtensionChain();
        java.lang.String[] strArray68 = new java.lang.String[] { "/hi!" };
        java.lang.String[] strArray69 = new java.lang.String[] {};
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap70 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray71 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList72 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList72, securityRequirementArray71);
        io.swagger.models.Operation operation74 = null;
        springMvcApiReader51.updateOperation(strArray68, strArray69, strMap70, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList72, operation74);
        io.swagger.models.Operation operation76 = null;
        java.lang.String[] strArray77 = springMvcApiReader24.updateOperationProduces(strArray48, strArray69, operation76);
        java.lang.String[] strArray78 = null;
        io.swagger.models.Operation operation79 = null;
        java.lang.String[] strArray80 = springMvcApiReader2.updateOperationProduces(strArray48, strArray78, operation79);
        java.util.Set<java.lang.reflect.Type> typeSet81 = springMvcApiReader2.getTypesToSkip();
        io.swagger.annotations.Api api82 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<io.swagger.models.SecurityRequirement> securityRequirementList83 = springMvcApiReader2.getSecurityRequirements(api82);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "/hi!" + "'", str17, "/hi!");
        org.junit.Assert.assertNull(logAdapter18);
        org.junit.Assert.assertNull(swagger19);
        org.junit.Assert.assertNotNull(typeArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(typeArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(typeSet42);
        org.junit.Assert.assertNotNull(typeSet44);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(typeArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(logAdapter56);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "" + "'", str59, "");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "/hi!" + "'", str65, "/hi!");
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertNotNull(securityRequirementArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNull(strArray80);
        org.junit.Assert.assertNotNull(typeSet81);
    }

    @Test
    public void test02757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02757");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type[] typeArray18 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet19 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet19, typeArray18);
        springMvcApiReader17.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet19);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = springMvcApiReader17.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap24 = null;
        java.lang.String str25 = springMvcApiReader17.parseOperationPath("", strMap24);
        io.swagger.annotations.Api api27 = null;
        boolean boolean28 = springMvcApiReader17.canReadApi(false, api27);
        java.util.Map<java.lang.String, java.lang.String> strMap30 = null;
        java.lang.String str31 = springMvcApiReader17.parseOperationPath("hi!", strMap30);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.Class<?> wildcardClass35 = springMvcApiReader34.getClass();
        springMvcApiReader17.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        java.lang.reflect.Type type38 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type38);
        io.swagger.models.Swagger swagger40 = null;
        springMvcApiReader2.swagger = swagger40;
        io.swagger.models.Operation operation44 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updatePath("hi!", "", operation44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(logAdapter22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "/hi!" + "'", str31, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test02758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02758");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader2.parseOperationPath("hi!", strMap15);
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.reflect.Type[] typeArray20 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet21 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet21, typeArray20);
        springMvcApiReader19.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet21);
        io.swagger.models.Swagger swagger24 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter25 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader26 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger24, logAdapter25);
        java.lang.reflect.Type[] typeArray27 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet28 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet28, typeArray27);
        springMvcApiReader26.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet28);
        springMvcApiReader19.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet28);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.reflect.Type[] typeArray35 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet36 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet36, typeArray35);
        springMvcApiReader34.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet36);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter39 = springMvcApiReader34.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap41 = null;
        java.lang.String str42 = springMvcApiReader34.parseOperationPath("", strMap41);
        io.swagger.annotations.Api api44 = null;
        boolean boolean45 = springMvcApiReader34.canReadApi(false, api44);
        java.util.Map<java.lang.String, java.lang.String> strMap47 = null;
        java.lang.String str48 = springMvcApiReader34.parseOperationPath("hi!", strMap47);
        io.swagger.models.Swagger swagger49 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter50 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader51 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger49, logAdapter50);
        java.lang.Class<?> wildcardClass52 = springMvcApiReader51.getClass();
        springMvcApiReader34.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        springMvcApiReader19.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        io.swagger.models.Swagger swagger56 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter57 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader58 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger56, logAdapter57);
        java.lang.reflect.Type[] typeArray59 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet60 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet60, typeArray59);
        springMvcApiReader58.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet60);
        java.util.Set<java.lang.reflect.Type> typeSet63 = springMvcApiReader58.typesToSkip;
        springMvcApiReader2.typesToSkip = typeSet63;
        io.swagger.models.Swagger swagger65 = springMvcApiReader2.swagger;
        io.swagger.annotations.Api api66 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.lang.String> strSet67 = springMvcApiReader2.extractTags(api66);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/hi!" + "'", str16, "/hi!");
        org.junit.Assert.assertNotNull(typeArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(typeArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(typeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(logAdapter39);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "/hi!" + "'", str48, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(typeArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(typeSet63);
        org.junit.Assert.assertNull(swagger65);
    }

    @Test
    public void test02759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02759");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter3 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger4 = null;
        springMvcApiReader2.swagger = swagger4;
        java.util.Set<java.lang.reflect.Type> typeSet6 = springMvcApiReader2.getTypesToSkip();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.lang.reflect.Method method8 = null;
        io.swagger.models.Operation operation9 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.readImplicitParameters(method8, operation9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(logAdapter3);
        org.junit.Assert.assertNotNull(typeSet6);
        org.junit.Assert.assertNull(logAdapter7);
    }

    @Test
    public void test02760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02760");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader2.parseOperationPath("hi!", strMap15);
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.Class<?> wildcardClass20 = springMvcApiReader19.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass20);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger23 = null;
        springMvcApiReader2.swagger = swagger23;
        java.util.Set<java.lang.reflect.Type> typeSet25 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet26 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger27 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter28 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader29 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger27, logAdapter28);
        java.lang.reflect.Type[] typeArray30 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet31 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet31, typeArray30);
        springMvcApiReader29.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet31);
        io.swagger.models.Swagger swagger34 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter35 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader36 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger34, logAdapter35);
        java.lang.reflect.Type[] typeArray37 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet38 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet38, typeArray37);
        springMvcApiReader36.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet38);
        springMvcApiReader29.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet38);
        io.swagger.models.Swagger swagger42 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter43 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader44 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger42, logAdapter43);
        java.lang.reflect.Type type45 = null;
        springMvcApiReader44.addTypeToSkippedTypes(type45);
        java.util.Set<java.lang.reflect.Type> typeSet47 = springMvcApiReader44.typesToSkip;
        springMvcApiReader29.setTypesToSkip(typeSet47);
        java.util.Set<java.lang.reflect.Type> typeSet49 = springMvcApiReader29.typesToSkip;
        io.swagger.models.Swagger swagger50 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter51 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader52 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger50, logAdapter51);
        java.lang.reflect.Type[] typeArray53 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet54 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet54, typeArray53);
        springMvcApiReader52.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet54);
        java.lang.annotation.Annotation[] annotationArray57 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList58 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList58, annotationArray57);
        boolean boolean60 = springMvcApiReader52.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList58);
        io.swagger.models.Swagger swagger61 = null;
        springMvcApiReader52.swagger = swagger61;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter63 = null;
        springMvcApiReader52.LOG = logAdapter63;
        java.util.Set<java.lang.reflect.Type> typeSet65 = springMvcApiReader52.getTypesToSkip();
        java.lang.Class<?> wildcardClass66 = typeSet65.getClass();
        io.swagger.models.Swagger swagger67 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter68 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader69 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger67, logAdapter68);
        java.lang.reflect.Type[] typeArray70 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet71 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet71, typeArray70);
        springMvcApiReader69.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet71);
        java.util.Set<java.lang.reflect.Type> typeSet74 = springMvcApiReader69.typesToSkip;
        io.swagger.models.Swagger swagger75 = springMvcApiReader69.swagger;
        io.swagger.models.Swagger swagger76 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter77 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader78 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger76, logAdapter77);
        java.lang.reflect.Type[] typeArray79 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet80 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet80, typeArray79);
        springMvcApiReader78.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet80);
        java.lang.annotation.Annotation[] annotationArray83 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList84 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList84, annotationArray83);
        boolean boolean86 = springMvcApiReader78.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList84);
        io.swagger.models.Swagger swagger87 = null;
        springMvcApiReader78.swagger = swagger87;
        java.lang.annotation.Annotation[] annotationArray89 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList90 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean91 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList90, annotationArray89);
        boolean boolean92 = springMvcApiReader78.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList90);
        boolean boolean93 = springMvcApiReader69.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList90);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList94 = springMvcApiReader29.getParameters((java.lang.reflect.Type) wildcardClass66, (java.util.List<java.lang.annotation.Annotation>) annotationList90);
        java.util.Map<java.lang.String, java.lang.String> strMap95 = null;
        io.swagger.models.Operation operation96 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateOperationParameters(parameterList94, strMap95, operation96);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/hi!" + "'", str16, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(typeSet25);
        org.junit.Assert.assertNotNull(typeSet26);
        org.junit.Assert.assertNotNull(typeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(typeArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(typeSet47);
        org.junit.Assert.assertNotNull(typeSet49);
        org.junit.Assert.assertNotNull(typeArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(annotationArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(typeSet65);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(typeArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(typeSet74);
        org.junit.Assert.assertNull(swagger75);
        org.junit.Assert.assertNotNull(typeArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(annotationArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(annotationArray89);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNotNull(parameterList94);
    }

    @Test
    public void test02761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02761");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        java.util.Set<java.lang.reflect.Type> typeSet5 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet6 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger14 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter15 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader16 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger14, logAdapter15);
        java.lang.reflect.Type[] typeArray17 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet18 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet18, typeArray17);
        springMvcApiReader16.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet18);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet18);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet18);
        springMvcApiReader2.updateExtensionChain();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter24 = springMvcApiReader2.LOG;
        io.swagger.annotations.Api api26 = null;
        boolean boolean27 = springMvcApiReader2.canReadApi(false, api26);
        java.lang.reflect.Type type28 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type28);
        io.swagger.models.Swagger swagger30 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter31 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader32 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger30, logAdapter31);
        java.lang.reflect.Type[] typeArray33 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet34 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet34, typeArray33);
        springMvcApiReader32.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet34);
        java.util.Set<java.lang.reflect.Type> typeSet37 = springMvcApiReader32.typesToSkip;
        springMvcApiReader2.typesToSkip = typeSet37;
        io.swagger.models.Operation operation41 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updatePath("hi!", "/hi!", operation41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeSet5);
        org.junit.Assert.assertNotNull(typeSet6);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(logAdapter24);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(typeArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(typeSet37);
    }

    @Test
    public void test02762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02762");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        java.util.Map<java.lang.String, java.lang.String> strMap16 = null;
        java.lang.String str17 = springMvcApiReader2.parseOperationPath("/hi!", strMap16);
        io.swagger.models.Swagger swagger18 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter19 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader20 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger18, logAdapter19);
        java.lang.reflect.Type[] typeArray21 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet22 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet22, typeArray21);
        springMvcApiReader20.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet22);
        java.lang.annotation.Annotation[] annotationArray25 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList26 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList26, annotationArray25);
        boolean boolean28 = springMvcApiReader20.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList26);
        io.swagger.models.Swagger swagger29 = null;
        springMvcApiReader20.swagger = swagger29;
        io.swagger.models.Swagger swagger31 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter32 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader33 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger31, logAdapter32);
        java.lang.reflect.Type[] typeArray34 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet35 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet35, typeArray34);
        springMvcApiReader33.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet35);
        java.lang.annotation.Annotation[] annotationArray38 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList39 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList39, annotationArray38);
        boolean boolean41 = springMvcApiReader33.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList39);
        io.swagger.models.Swagger swagger42 = null;
        springMvcApiReader33.swagger = swagger42;
        java.lang.annotation.Annotation[] annotationArray44 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList45 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList45, annotationArray44);
        boolean boolean47 = springMvcApiReader33.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList45);
        boolean boolean48 = springMvcApiReader20.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList45);
        boolean boolean49 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList45);
        io.swagger.models.Swagger swagger50 = null;
        springMvcApiReader2.swagger = swagger50;
        io.swagger.models.Swagger swagger52 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter53 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader54 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger52, logAdapter53);
        java.lang.reflect.Type[] typeArray55 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet56 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet56, typeArray55);
        springMvcApiReader54.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet56);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter59 = springMvcApiReader54.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap61 = null;
        java.lang.String str62 = springMvcApiReader54.parseOperationPath("", strMap61);
        java.lang.reflect.Type[] typeArray63 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList64 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList64, typeArray63);
        springMvcApiReader54.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList64);
        java.lang.String[] strArray67 = new java.lang.String[] {};
        java.lang.String[] strArray71 = new java.lang.String[] { "hi!", "", "hi!" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap72 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray73 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList74 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList74, securityRequirementArray73);
        io.swagger.models.Operation operation76 = null;
        springMvcApiReader54.updateOperation(strArray67, strArray71, strMap72, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList74, operation76);
        java.util.Map<java.lang.String, java.lang.String> strMap79 = null;
        java.lang.String str80 = springMvcApiReader54.parseOperationPath("", strMap79);
        io.swagger.models.Operation operation81 = null;
        io.swagger.annotations.ApiOperation apiOperation82 = null;
        springMvcApiReader54.updateTagsForOperation(operation81, apiOperation82);
        io.swagger.models.Swagger swagger84 = springMvcApiReader54.swagger;
        java.util.Map<java.lang.String, java.lang.String> strMap86 = null;
        java.lang.String str87 = springMvcApiReader54.parseOperationPath("/hi!", strMap86);
        java.util.Map<java.lang.String, java.lang.String> strMap89 = null;
        java.lang.String str90 = springMvcApiReader54.parseOperationPath("", strMap89);
        java.lang.Class<?> wildcardClass91 = springMvcApiReader54.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass91);
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "/hi!" + "'", str17, "/hi!");
        org.junit.Assert.assertNotNull(typeArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(annotationArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(typeArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(annotationArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(annotationArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(typeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNull(logAdapter59);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "" + "'", str62, "");
        org.junit.Assert.assertNotNull(typeArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertNotNull(securityRequirementArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "" + "'", str80, "");
        org.junit.Assert.assertNull(swagger84);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "/hi!" + "'", str87, "/hi!");
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "" + "'", str90, "");
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test02763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02763");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader2.parseOperationPath("hi!", strMap15);
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.Class<?> wildcardClass20 = springMvcApiReader19.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass20);
        java.util.Map<java.lang.String, java.lang.String> strMap23 = null;
        java.lang.String str24 = springMvcApiReader2.parseOperationPath("/hi!", strMap23);
        io.swagger.models.Swagger swagger25 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter26 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader27 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger25, logAdapter26);
        java.lang.reflect.Type[] typeArray28 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet29 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet29, typeArray28);
        springMvcApiReader27.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet29);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet29);
        io.swagger.models.Swagger swagger33 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter34 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader35 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger33, logAdapter34);
        java.lang.reflect.Type[] typeArray36 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet37 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet37, typeArray36);
        springMvcApiReader35.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet37);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter40 = springMvcApiReader35.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap42 = null;
        java.lang.String str43 = springMvcApiReader35.parseOperationPath("", strMap42);
        java.lang.reflect.Type[] typeArray44 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList45 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList45, typeArray44);
        springMvcApiReader35.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList45);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList45);
        java.lang.annotation.Annotation[] annotationArray49 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList50 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList50, annotationArray49);
        boolean boolean52 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList50);
        io.swagger.models.Swagger swagger53 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter54 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader55 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger53, logAdapter54);
        java.lang.reflect.Type[] typeArray56 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet57 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet57, typeArray56);
        springMvcApiReader55.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet57);
        java.lang.annotation.Annotation[] annotationArray60 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList61 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList61, annotationArray60);
        boolean boolean63 = springMvcApiReader55.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList61);
        io.swagger.models.Swagger swagger64 = null;
        springMvcApiReader55.swagger = swagger64;
        java.util.Set<java.lang.reflect.Type> typeSet66 = springMvcApiReader55.getTypesToSkip();
        springMvcApiReader2.setTypesToSkip(typeSet66);
        io.swagger.models.Swagger swagger68 = null;
        springMvcApiReader2.swagger = swagger68;
        io.swagger.models.Swagger swagger70 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger71 = springMvcApiReader2.swagger;
        io.swagger.annotations.ApiOperation apiOperation72 = null;
        io.swagger.models.Operation operation73 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateOperationProtocols(apiOperation72, operation73);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/hi!" + "'", str16, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "/hi!" + "'", str24, "/hi!");
        org.junit.Assert.assertNotNull(typeArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(logAdapter40);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertNotNull(typeArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(annotationArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(typeArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(annotationArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(typeSet66);
        org.junit.Assert.assertNull(swagger70);
        org.junit.Assert.assertNull(swagger71);
    }

    @Test
    public void test02764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02764");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        java.util.Set<java.lang.reflect.Type> typeSet5 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet6 = springMvcApiReader2.getTypesToSkip();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = null;
        java.lang.String str9 = springMvcApiReader2.parseOperationPath("", strMap8);
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader12 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger10, logAdapter11);
        java.lang.reflect.Type[] typeArray13 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet14 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet14, typeArray13);
        springMvcApiReader12.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet14);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter17 = springMvcApiReader12.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap19 = null;
        java.lang.String str20 = springMvcApiReader12.parseOperationPath("", strMap19);
        io.swagger.models.Swagger swagger21 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader23 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger21, logAdapter22);
        java.lang.Class<?> wildcardClass24 = springMvcApiReader23.getClass();
        java.lang.reflect.Type[] typeArray25 = new java.lang.reflect.Type[] { wildcardClass24 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet26 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet26, typeArray25);
        springMvcApiReader12.typesToSkip = typeSet26;
        io.swagger.models.Operation operation29 = null;
        io.swagger.annotations.ApiOperation apiOperation30 = null;
        springMvcApiReader12.updateTagsForOperation(operation29, apiOperation30);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.reflect.Type[] typeArray35 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet36 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet36, typeArray35);
        springMvcApiReader34.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet36);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter39 = springMvcApiReader34.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap41 = null;
        java.lang.String str42 = springMvcApiReader34.parseOperationPath("", strMap41);
        io.swagger.annotations.Api api44 = null;
        boolean boolean45 = springMvcApiReader34.canReadApi(false, api44);
        java.util.Map<java.lang.String, java.lang.String> strMap47 = null;
        java.lang.String str48 = springMvcApiReader34.parseOperationPath("hi!", strMap47);
        io.swagger.models.Swagger swagger49 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter50 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader51 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger49, logAdapter50);
        java.lang.reflect.Type[] typeArray52 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet53 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet53, typeArray52);
        springMvcApiReader51.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet53);
        io.swagger.models.Swagger swagger56 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter57 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader58 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger56, logAdapter57);
        java.lang.reflect.Type[] typeArray59 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet60 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet60, typeArray59);
        springMvcApiReader58.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet60);
        springMvcApiReader51.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet60);
        io.swagger.models.Swagger swagger64 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter65 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader66 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger64, logAdapter65);
        java.lang.reflect.Type[] typeArray67 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet68 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet68, typeArray67);
        springMvcApiReader66.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet68);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter71 = springMvcApiReader66.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap73 = null;
        java.lang.String str74 = springMvcApiReader66.parseOperationPath("", strMap73);
        io.swagger.annotations.Api api76 = null;
        boolean boolean77 = springMvcApiReader66.canReadApi(false, api76);
        java.util.Map<java.lang.String, java.lang.String> strMap79 = null;
        java.lang.String str80 = springMvcApiReader66.parseOperationPath("hi!", strMap79);
        io.swagger.models.Swagger swagger81 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter82 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader83 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger81, logAdapter82);
        java.lang.Class<?> wildcardClass84 = springMvcApiReader83.getClass();
        springMvcApiReader66.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass84);
        springMvcApiReader51.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass84);
        springMvcApiReader34.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass84);
        java.lang.annotation.Annotation[] annotationArray88 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList89 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList89, annotationArray88);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList91 = springMvcApiReader12.getParameters((java.lang.reflect.Type) wildcardClass84, (java.util.List<java.lang.annotation.Annotation>) annotationList89);
        boolean boolean92 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList89);
        java.util.Set<java.lang.reflect.Type> typeSet93 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger94 = null;
        springMvcApiReader2.swagger = swagger94;
        io.swagger.annotations.Api api96 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.lang.String> strSet97 = springMvcApiReader2.extractTags(api96);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeSet5);
        org.junit.Assert.assertNotNull(typeSet6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(typeArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(logAdapter17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(typeArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(typeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(logAdapter39);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "/hi!" + "'", str48, "/hi!");
        org.junit.Assert.assertNotNull(typeArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(typeArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(typeArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNull(logAdapter71);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "" + "'", str74, "");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "/hi!" + "'", str80, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertNotNull(annotationArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(parameterList91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(typeSet93);
    }

    @Test
    public void test02765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02765");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        io.swagger.annotations.Api api15 = null;
        boolean boolean16 = springMvcApiReader2.canReadApi(true, api15);
        io.swagger.models.Swagger swagger17 = springMvcApiReader2.swagger;
        io.swagger.models.Operation operation20 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updatePath("hi!", "", operation20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(swagger17);
    }

    @Test
    public void test02766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02766");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger15 = null;
        springMvcApiReader2.swagger = swagger15;
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.reflect.Type[] typeArray20 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet21 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet21, typeArray20);
        springMvcApiReader19.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet21);
        java.lang.annotation.Annotation[] annotationArray24 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList25 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList25, annotationArray24);
        boolean boolean27 = springMvcApiReader19.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList25);
        io.swagger.models.Swagger swagger28 = null;
        springMvcApiReader19.swagger = swagger28;
        java.lang.annotation.Annotation[] annotationArray30 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList31 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList31, annotationArray30);
        boolean boolean33 = springMvcApiReader19.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList31);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter34 = null;
        springMvcApiReader19.LOG = logAdapter34;
        io.swagger.models.Swagger swagger36 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter37 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader38 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger36, logAdapter37);
        java.lang.reflect.Type type39 = null;
        springMvcApiReader38.addTypeToSkippedTypes(type39);
        java.util.Set<java.lang.reflect.Type> typeSet41 = springMvcApiReader38.typesToSkip;
        springMvcApiReader19.setTypesToSkip(typeSet41);
        io.swagger.models.Swagger swagger43 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter44 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader45 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger43, logAdapter44);
        java.lang.reflect.Type[] typeArray46 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet47 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet47, typeArray46);
        springMvcApiReader45.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet47);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter50 = springMvcApiReader45.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap52 = null;
        java.lang.String str53 = springMvcApiReader45.parseOperationPath("", strMap52);
        java.lang.reflect.Type[] typeArray54 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList55 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList55, typeArray54);
        springMvcApiReader45.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList55);
        io.swagger.models.Swagger swagger58 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter59 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader60 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger58, logAdapter59);
        java.lang.reflect.Type[] typeArray61 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet62 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet62, typeArray61);
        springMvcApiReader60.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet62);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter65 = springMvcApiReader60.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap67 = null;
        java.lang.String str68 = springMvcApiReader60.parseOperationPath("", strMap67);
        io.swagger.models.Swagger swagger69 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter70 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader71 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger69, logAdapter70);
        java.lang.Class<?> wildcardClass72 = springMvcApiReader71.getClass();
        java.lang.reflect.Type[] typeArray73 = new java.lang.reflect.Type[] { wildcardClass72 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet74 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet74, typeArray73);
        springMvcApiReader60.typesToSkip = typeSet74;
        java.util.Set<java.lang.reflect.Type> typeSet77 = springMvcApiReader60.getTypesToSkip();
        springMvcApiReader45.setTypesToSkip(typeSet77);
        springMvcApiReader19.setTypesToSkip(typeSet77);
        springMvcApiReader2.setTypesToSkip(typeSet77);
        io.swagger.models.Operation operation81 = null;
        io.swagger.annotations.ApiOperation apiOperation82 = null;
        springMvcApiReader2.updateTagsForOperation(operation81, apiOperation82);
        com.github.kongchen.swagger.docgen.spring.SpringResource springResource84 = null;
        // The following exception was thrown during execution in test generation
        try {
            io.swagger.models.Swagger swagger85 = springMvcApiReader2.read(springResource84);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(annotationArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(annotationArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(typeSet41);
        org.junit.Assert.assertNotNull(typeArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(logAdapter50);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertNotNull(typeArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(typeArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNull(logAdapter65);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "" + "'", str68, "");
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(typeArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(typeSet77);
    }

    @Test
    public void test02767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02767");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter3 = springMvcApiReader2.LOG;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter4 = springMvcApiReader2.LOG;
        io.swagger.models.Operation operation7 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updatePath("/hi!", "", operation7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(logAdapter3);
        org.junit.Assert.assertNull(logAdapter4);
    }

    @Test
    public void test02768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02768");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.lang.annotation.Annotation[] annotationArray7 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList8 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList8, annotationArray7);
        boolean boolean10 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList8);
        java.util.Set<java.lang.reflect.Type> typeSet11 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger12 = null;
        springMvcApiReader2.swagger = swagger12;
        io.swagger.models.Swagger swagger14 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type type18 = null;
        springMvcApiReader17.addTypeToSkippedTypes(type18);
        java.util.Set<java.lang.reflect.Type> typeSet20 = springMvcApiReader17.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet21 = springMvcApiReader17.getTypesToSkip();
        java.util.Map<java.lang.String, java.lang.String> strMap23 = null;
        java.lang.String str24 = springMvcApiReader17.parseOperationPath("", strMap23);
        io.swagger.models.Operation operation25 = null;
        io.swagger.annotations.ApiOperation apiOperation26 = null;
        springMvcApiReader17.updateTagsForOperation(operation25, apiOperation26);
        io.swagger.annotations.Api api29 = null;
        boolean boolean30 = springMvcApiReader17.canReadApi(false, api29);
        io.swagger.models.Swagger swagger31 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter32 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader33 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger31, logAdapter32);
        java.lang.reflect.Type[] typeArray34 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet35 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet35, typeArray34);
        springMvcApiReader33.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet35);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter38 = springMvcApiReader33.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap40 = null;
        java.lang.String str41 = springMvcApiReader33.parseOperationPath("", strMap40);
        io.swagger.annotations.Api api43 = null;
        boolean boolean44 = springMvcApiReader33.canReadApi(false, api43);
        java.util.Map<java.lang.String, java.lang.String> strMap46 = null;
        java.lang.String str47 = springMvcApiReader33.parseOperationPath("hi!", strMap46);
        java.util.Map<java.lang.String, java.lang.String> strMap49 = null;
        java.lang.String str50 = springMvcApiReader33.parseOperationPath("hi!", strMap49);
        io.swagger.models.Operation operation51 = null;
        io.swagger.annotations.ApiOperation apiOperation52 = null;
        springMvcApiReader33.updateTagsForOperation(operation51, apiOperation52);
        java.lang.Class<?> wildcardClass54 = springMvcApiReader33.getClass();
        springMvcApiReader17.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass54);
        java.util.Set<java.lang.reflect.Type> typeSet56 = springMvcApiReader17.getTypesToSkip();
        io.swagger.models.Swagger swagger57 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter58 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader59 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger57, logAdapter58);
        java.lang.reflect.Type[] typeArray60 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet61 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet61, typeArray60);
        springMvcApiReader59.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet61);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter64 = springMvcApiReader59.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap66 = null;
        java.lang.String str67 = springMvcApiReader59.parseOperationPath("", strMap66);
        java.lang.reflect.Type[] typeArray68 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList69 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList69, typeArray68);
        springMvcApiReader59.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList69);
        io.swagger.models.Swagger swagger72 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter73 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader74 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger72, logAdapter73);
        java.lang.reflect.Type[] typeArray75 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet76 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet76, typeArray75);
        springMvcApiReader74.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet76);
        java.lang.annotation.Annotation[] annotationArray79 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList80 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList80, annotationArray79);
        boolean boolean82 = springMvcApiReader74.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList80);
        boolean boolean83 = springMvcApiReader59.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList80);
        boolean boolean84 = springMvcApiReader17.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList80);
        boolean boolean85 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList80);
        java.util.Map<java.lang.String, java.lang.String> strMap87 = null;
        java.lang.String str88 = springMvcApiReader2.parseOperationPath("", strMap87);
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(annotationArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(typeSet11);
        org.junit.Assert.assertNull(swagger14);
        org.junit.Assert.assertNotNull(typeSet20);
        org.junit.Assert.assertNotNull(typeSet21);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(typeArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(logAdapter38);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "/hi!" + "'", str47, "/hi!");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "/hi!" + "'", str50, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(typeSet56);
        org.junit.Assert.assertNotNull(typeArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNull(logAdapter64);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "" + "'", str67, "");
        org.junit.Assert.assertNotNull(typeArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(typeArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(annotationArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "" + "'", str88, "");
    }

    @Test
    public void test02769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02769");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.lang.annotation.Annotation[] annotationArray7 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList8 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList8, annotationArray7);
        boolean boolean10 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList8);
        java.util.Map<java.lang.String, java.lang.String> strMap12 = null;
        java.lang.String str13 = springMvcApiReader2.parseOperationPath("hi!", strMap12);
        io.swagger.models.Swagger swagger14 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter15 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader16 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger14, logAdapter15);
        java.lang.reflect.Type[] typeArray17 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet18 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet18, typeArray17);
        springMvcApiReader16.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet18);
        io.swagger.models.Swagger swagger21 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader23 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger21, logAdapter22);
        java.lang.reflect.Type[] typeArray24 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet25 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet25, typeArray24);
        springMvcApiReader23.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet25);
        springMvcApiReader16.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet25);
        io.swagger.models.Swagger swagger29 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter30 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader31 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger29, logAdapter30);
        java.lang.reflect.Type type32 = null;
        springMvcApiReader31.addTypeToSkippedTypes(type32);
        java.util.Set<java.lang.reflect.Type> typeSet34 = springMvcApiReader31.typesToSkip;
        springMvcApiReader16.setTypesToSkip(typeSet34);
        java.util.Set<java.lang.reflect.Type> typeSet36 = springMvcApiReader16.typesToSkip;
        springMvcApiReader2.typesToSkip = typeSet36;
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap38 = null;
        io.swagger.annotations.Api api39 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, io.swagger.models.Tag> strMap40 = springMvcApiReader2.updateTagsForApi(strMap38, api39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(annotationArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "/hi!" + "'", str13, "/hi!");
        org.junit.Assert.assertNotNull(typeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(typeArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(typeSet34);
        org.junit.Assert.assertNotNull(typeSet36);
    }

    @Test
    public void test02770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02770");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        io.swagger.models.Swagger swagger14 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter15 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader16 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger14, logAdapter15);
        java.lang.reflect.Type type17 = null;
        springMvcApiReader16.addTypeToSkippedTypes(type17);
        java.util.Set<java.lang.reflect.Type> typeSet19 = springMvcApiReader16.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet20 = springMvcApiReader16.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet20);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = null;
        springMvcApiReader2.LOG = logAdapter22;
        java.util.Set<java.lang.reflect.Type> typeSet24 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Operation operation25 = null;
        io.swagger.annotations.ApiOperation apiOperation26 = null;
        springMvcApiReader2.updateTagsForOperation(operation25, apiOperation26);
        java.util.Set<java.lang.reflect.Type> typeSet28 = springMvcApiReader2.typesToSkip;
        io.swagger.annotations.Api api30 = null;
        boolean boolean31 = springMvcApiReader2.canReadApi(true, api30);
        java.lang.Class<?> wildcardClass32 = springMvcApiReader2.getClass();
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(typeSet19);
        org.junit.Assert.assertNotNull(typeSet20);
        org.junit.Assert.assertNotNull(typeSet24);
        org.junit.Assert.assertNotNull(typeSet28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test02771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02771");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        io.swagger.models.Swagger swagger14 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter15 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader16 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger14, logAdapter15);
        java.lang.reflect.Type type17 = null;
        springMvcApiReader16.addTypeToSkippedTypes(type17);
        java.util.Set<java.lang.reflect.Type> typeSet19 = springMvcApiReader16.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet20 = springMvcApiReader16.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet20);
        io.swagger.models.Operation operation24 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updatePath("/hi!", "", operation24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(typeSet19);
        org.junit.Assert.assertNotNull(typeSet20);
    }

    @Test
    public void test02772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02772");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger15 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger16 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter17 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader18 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger16, logAdapter17);
        java.lang.reflect.Type[] typeArray19 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet20 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet20, typeArray19);
        springMvcApiReader18.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet20);
        java.lang.annotation.Annotation[] annotationArray23 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList24 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList24, annotationArray23);
        boolean boolean26 = springMvcApiReader18.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList24);
        io.swagger.models.Swagger swagger27 = null;
        springMvcApiReader18.swagger = swagger27;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter29 = null;
        springMvcApiReader18.LOG = logAdapter29;
        io.swagger.models.Swagger swagger31 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter32 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader33 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger31, logAdapter32);
        java.lang.reflect.Type[] typeArray34 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet35 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet35, typeArray34);
        springMvcApiReader33.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet35);
        io.swagger.models.Swagger swagger38 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter39 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader40 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger38, logAdapter39);
        java.lang.reflect.Type[] typeArray41 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet42 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet42, typeArray41);
        springMvcApiReader40.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet42);
        springMvcApiReader33.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet42);
        io.swagger.models.Swagger swagger46 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter47 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader48 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger46, logAdapter47);
        java.lang.reflect.Type type49 = null;
        springMvcApiReader48.addTypeToSkippedTypes(type49);
        java.util.Set<java.lang.reflect.Type> typeSet51 = springMvcApiReader48.typesToSkip;
        springMvcApiReader33.setTypesToSkip(typeSet51);
        java.util.Set<java.lang.reflect.Type> typeSet53 = springMvcApiReader33.getTypesToSkip();
        io.swagger.annotations.Api api55 = null;
        boolean boolean56 = springMvcApiReader33.canReadApi(true, api55);
        io.swagger.models.Swagger swagger57 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter58 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader59 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger57, logAdapter58);
        java.lang.reflect.Type type60 = null;
        springMvcApiReader59.addTypeToSkippedTypes(type60);
        java.util.Set<java.lang.reflect.Type> typeSet62 = springMvcApiReader59.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet63 = springMvcApiReader59.getTypesToSkip();
        springMvcApiReader33.typesToSkip = typeSet63;
        springMvcApiReader18.setTypesToSkip(typeSet63);
        springMvcApiReader2.typesToSkip = typeSet63;
        java.util.Set<java.lang.reflect.Type> typeSet67 = springMvcApiReader2.typesToSkip;
        java.util.Map<java.lang.String, java.lang.String> strMap69 = null;
        java.lang.String str70 = springMvcApiReader2.parseOperationPath("", strMap69);
        io.swagger.annotations.Api api71 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.lang.String> strSet72 = springMvcApiReader2.extractTags(api71);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(swagger15);
        org.junit.Assert.assertNotNull(typeArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(annotationArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(typeArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(typeArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(typeSet51);
        org.junit.Assert.assertNotNull(typeSet53);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(typeSet62);
        org.junit.Assert.assertNotNull(typeSet63);
        org.junit.Assert.assertNotNull(typeSet67);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "" + "'", str70, "");
    }

    @Test
    public void test02773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02773");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.lang.annotation.Annotation[] annotationArray7 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList8 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList8, annotationArray7);
        boolean boolean10 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList8);
        java.util.Set<java.lang.reflect.Type> typeSet11 = springMvcApiReader2.typesToSkip;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Operation operation13 = null;
        io.swagger.annotations.ApiOperation apiOperation14 = null;
        springMvcApiReader2.updateTagsForOperation(operation13, apiOperation14);
        io.swagger.annotations.Api api17 = null;
        boolean boolean18 = springMvcApiReader2.canReadApi(true, api17);
        io.swagger.models.Swagger swagger19 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger20 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter21 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader22 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger20, logAdapter21);
        java.lang.reflect.Type[] typeArray23 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet24 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet24, typeArray23);
        springMvcApiReader22.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet24);
        java.lang.annotation.Annotation[] annotationArray27 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList28 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList28, annotationArray27);
        boolean boolean30 = springMvcApiReader22.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList28);
        java.util.Set<java.lang.reflect.Type> typeSet31 = springMvcApiReader22.typesToSkip;
        io.swagger.models.Swagger swagger32 = null;
        springMvcApiReader22.swagger = swagger32;
        io.swagger.models.Swagger swagger34 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter35 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader36 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger34, logAdapter35);
        java.lang.reflect.Type[] typeArray37 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet38 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet38, typeArray37);
        springMvcApiReader36.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet38);
        io.swagger.models.Swagger swagger41 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter42 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader43 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger41, logAdapter42);
        java.lang.reflect.Type[] typeArray44 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet45 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet45, typeArray44);
        springMvcApiReader43.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet45);
        springMvcApiReader36.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet45);
        io.swagger.models.Swagger swagger49 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter50 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader51 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger49, logAdapter50);
        java.lang.reflect.Type[] typeArray52 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet53 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet53, typeArray52);
        springMvcApiReader51.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet53);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter56 = springMvcApiReader51.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap58 = null;
        java.lang.String str59 = springMvcApiReader51.parseOperationPath("", strMap58);
        io.swagger.annotations.Api api61 = null;
        boolean boolean62 = springMvcApiReader51.canReadApi(false, api61);
        java.util.Map<java.lang.String, java.lang.String> strMap64 = null;
        java.lang.String str65 = springMvcApiReader51.parseOperationPath("hi!", strMap64);
        io.swagger.models.Swagger swagger66 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter67 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader68 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger66, logAdapter67);
        java.lang.Class<?> wildcardClass69 = springMvcApiReader68.getClass();
        springMvcApiReader51.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass69);
        springMvcApiReader36.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass69);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter72 = springMvcApiReader36.LOG;
        springMvcApiReader36.updateExtensionChain();
        io.swagger.models.Swagger swagger74 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter75 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader76 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger74, logAdapter75);
        java.lang.reflect.Type[] typeArray77 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet78 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet78, typeArray77);
        springMvcApiReader76.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet78);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter81 = springMvcApiReader76.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap83 = null;
        java.lang.String str84 = springMvcApiReader76.parseOperationPath("", strMap83);
        java.lang.reflect.Type[] typeArray85 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList86 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList86, typeArray85);
        springMvcApiReader76.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList86);
        springMvcApiReader36.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList86);
        springMvcApiReader22.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList86);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList86);
        io.swagger.models.Operation operation92 = null;
        io.swagger.annotations.ApiResponses apiResponses93 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateApiResponse(operation92, apiResponses93);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(annotationArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(typeSet11);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(swagger19);
        org.junit.Assert.assertNotNull(typeArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(annotationArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(typeSet31);
        org.junit.Assert.assertNotNull(typeArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(typeArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(typeArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(logAdapter56);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "" + "'", str59, "");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "/hi!" + "'", str65, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNull(logAdapter72);
        org.junit.Assert.assertNotNull(typeArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNull(logAdapter81);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "" + "'", str84, "");
        org.junit.Assert.assertNotNull(typeArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
    }

    @Test
    public void test02774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02774");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.lang.annotation.Annotation[] annotationArray7 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList8 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList8, annotationArray7);
        boolean boolean10 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList8);
        java.util.Set<java.lang.reflect.Type> typeSet11 = springMvcApiReader2.typesToSkip;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Operation operation13 = null;
        io.swagger.annotations.ApiOperation apiOperation14 = null;
        springMvcApiReader2.updateTagsForOperation(operation13, apiOperation14);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.reflect.Type[] typeArray20 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet21 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet21, typeArray20);
        springMvcApiReader19.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet21);
        java.lang.annotation.Annotation[] annotationArray24 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList25 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList25, annotationArray24);
        boolean boolean27 = springMvcApiReader19.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList25);
        io.swagger.models.Swagger swagger28 = null;
        springMvcApiReader19.swagger = swagger28;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter30 = null;
        springMvcApiReader19.LOG = logAdapter30;
        java.util.Set<java.lang.reflect.Type> typeSet32 = springMvcApiReader19.getTypesToSkip();
        java.lang.Class<?> wildcardClass33 = typeSet32.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass33);
        io.swagger.models.Operation operation35 = null;
        io.swagger.annotations.ApiOperation apiOperation36 = null;
        springMvcApiReader2.updateTagsForOperation(operation35, apiOperation36);
        io.swagger.models.Swagger swagger38 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter39 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader40 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger38, logAdapter39);
        java.lang.reflect.Type[] typeArray41 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet42 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet42, typeArray41);
        springMvcApiReader40.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet42);
        io.swagger.models.Swagger swagger45 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter46 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader47 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger45, logAdapter46);
        java.lang.reflect.Type[] typeArray48 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet49 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet49, typeArray48);
        springMvcApiReader47.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet49);
        springMvcApiReader40.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet49);
        io.swagger.models.Swagger swagger53 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter54 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader55 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger53, logAdapter54);
        java.lang.reflect.Type type56 = null;
        springMvcApiReader55.addTypeToSkippedTypes(type56);
        java.util.Set<java.lang.reflect.Type> typeSet58 = springMvcApiReader55.typesToSkip;
        springMvcApiReader40.setTypesToSkip(typeSet58);
        java.util.Set<java.lang.reflect.Type> typeSet60 = springMvcApiReader40.typesToSkip;
        io.swagger.models.Swagger swagger61 = null;
        springMvcApiReader40.swagger = swagger61;
        io.swagger.models.Swagger swagger63 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter64 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader65 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger63, logAdapter64);
        java.lang.reflect.Type[] typeArray66 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet67 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet67, typeArray66);
        springMvcApiReader65.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet67);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter70 = springMvcApiReader65.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap72 = null;
        java.lang.String str73 = springMvcApiReader65.parseOperationPath("", strMap72);
        io.swagger.annotations.Api api75 = null;
        boolean boolean76 = springMvcApiReader65.canReadApi(false, api75);
        io.swagger.models.Swagger swagger77 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter78 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader79 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger77, logAdapter78);
        java.lang.reflect.Type type80 = null;
        springMvcApiReader79.addTypeToSkippedTypes(type80);
        java.util.Set<java.lang.reflect.Type> typeSet82 = springMvcApiReader79.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet83 = springMvcApiReader79.typesToSkip;
        springMvcApiReader65.setTypesToSkip(typeSet83);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter85 = null;
        springMvcApiReader65.LOG = logAdapter85;
        java.util.Set<java.lang.reflect.Type> typeSet87 = springMvcApiReader65.typesToSkip;
        io.swagger.annotations.Api api89 = null;
        boolean boolean90 = springMvcApiReader65.canReadApi(false, api89);
        java.lang.Class<?> wildcardClass91 = springMvcApiReader65.getClass();
        springMvcApiReader40.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass91);
        java.lang.Class<?> wildcardClass93 = springMvcApiReader40.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass93);
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap95 = null;
        io.swagger.annotations.Api api96 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, io.swagger.models.Tag> strMap97 = springMvcApiReader2.updateTagsForApi(strMap95, api96);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(annotationArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(typeSet11);
        org.junit.Assert.assertNotNull(typeArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(annotationArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(typeSet32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(typeArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(typeArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(typeSet58);
        org.junit.Assert.assertNotNull(typeSet60);
        org.junit.Assert.assertNotNull(typeArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNull(logAdapter70);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "" + "'", str73, "");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(typeSet82);
        org.junit.Assert.assertNotNull(typeSet83);
        org.junit.Assert.assertNotNull(typeSet87);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(wildcardClass91);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test02775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02775");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        io.swagger.models.Swagger swagger5 = springMvcApiReader2.swagger;
        java.lang.reflect.Method method6 = null;
        io.swagger.models.Operation operation7 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.readImplicitParameters(method6, operation7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(swagger5);
    }

    @Test
    public void test02776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02776");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader2.parseOperationPath("hi!", strMap15);
        io.swagger.models.Operation operation17 = null;
        io.swagger.annotations.ApiOperation apiOperation18 = null;
        springMvcApiReader2.updateTagsForOperation(operation17, apiOperation18);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.annotations.Api api22 = null;
        boolean boolean23 = springMvcApiReader2.canReadApi(false, api22);
        io.swagger.models.Swagger swagger24 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter25 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader26 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger24, logAdapter25);
        java.lang.reflect.Type[] typeArray27 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet28 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet28, typeArray27);
        springMvcApiReader26.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet28);
        java.lang.annotation.Annotation[] annotationArray31 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList32 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList32, annotationArray31);
        boolean boolean34 = springMvcApiReader26.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList32);
        java.util.Set<java.lang.reflect.Type> typeSet35 = springMvcApiReader26.typesToSkip;
        springMvcApiReader26.updateExtensionChain();
        io.swagger.models.Operation operation37 = null;
        io.swagger.annotations.ApiOperation apiOperation38 = null;
        springMvcApiReader26.updateTagsForOperation(operation37, apiOperation38);
        springMvcApiReader26.updateExtensionChain();
        io.swagger.models.Swagger swagger41 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter42 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader43 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger41, logAdapter42);
        java.lang.reflect.Type[] typeArray44 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet45 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet45, typeArray44);
        springMvcApiReader43.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet45);
        java.lang.annotation.Annotation[] annotationArray48 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList49 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList49, annotationArray48);
        boolean boolean51 = springMvcApiReader43.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList49);
        io.swagger.models.Swagger swagger52 = null;
        springMvcApiReader43.swagger = swagger52;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter54 = null;
        springMvcApiReader43.LOG = logAdapter54;
        java.util.Set<java.lang.reflect.Type> typeSet56 = springMvcApiReader43.getTypesToSkip();
        java.lang.Class<?> wildcardClass57 = typeSet56.getClass();
        springMvcApiReader26.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass57);
        io.swagger.models.Swagger swagger59 = springMvcApiReader26.swagger;
        java.util.Set<java.lang.reflect.Type> typeSet60 = springMvcApiReader26.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet60);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter62 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap63 = null;
        io.swagger.annotations.Api api64 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, io.swagger.models.Tag> strMap65 = springMvcApiReader2.updateTagsForApi(strMap63, api64);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/hi!" + "'", str16, "/hi!");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(typeArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(annotationArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(typeSet35);
        org.junit.Assert.assertNotNull(typeArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(annotationArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(typeSet56);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNull(swagger59);
        org.junit.Assert.assertNotNull(typeSet60);
        org.junit.Assert.assertNull(logAdapter62);
    }

    @Test
    public void test02777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02777");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        java.util.Set<java.lang.reflect.Type> typeSet5 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet6 = springMvcApiReader2.getTypesToSkip();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        io.swagger.annotations.Api api9 = null;
        boolean boolean10 = springMvcApiReader2.canReadApi(true, api9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        java.util.Set<java.lang.reflect.Type> typeSet14 = springMvcApiReader2.getTypesToSkip();
        java.lang.String[] strArray15 = null;
        io.swagger.models.Swagger swagger16 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter17 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader18 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger16, logAdapter17);
        java.lang.reflect.Type[] typeArray19 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet20 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet20, typeArray19);
        springMvcApiReader18.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet20);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = springMvcApiReader18.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap25 = null;
        java.lang.String str26 = springMvcApiReader18.parseOperationPath("", strMap25);
        io.swagger.annotations.Api api28 = null;
        boolean boolean29 = springMvcApiReader18.canReadApi(false, api28);
        java.util.Map<java.lang.String, java.lang.String> strMap31 = null;
        java.lang.String str32 = springMvcApiReader18.parseOperationPath("hi!", strMap31);
        springMvcApiReader18.updateExtensionChain();
        java.lang.String[] strArray35 = new java.lang.String[] { "/hi!" };
        java.lang.String[] strArray36 = new java.lang.String[] {};
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap37 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray38 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList39 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList39, securityRequirementArray38);
        io.swagger.models.Operation operation41 = null;
        springMvcApiReader18.updateOperation(strArray35, strArray36, strMap37, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList39, operation41);
        io.swagger.models.Operation operation43 = null;
        java.lang.String[] strArray44 = springMvcApiReader2.updateOperationProduces(strArray15, strArray36, operation43);
        java.lang.Class<?> wildcardClass45 = strArray36.getClass();
        org.junit.Assert.assertNotNull(typeSet5);
        org.junit.Assert.assertNotNull(typeSet6);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(typeSet14);
        org.junit.Assert.assertNotNull(typeArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(logAdapter23);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "/hi!" + "'", str32, "/hi!");
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(securityRequirementArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test02778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02778");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("hi!", strMap9);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        springMvcApiReader2.LOG = logAdapter11;
        io.swagger.annotations.Api api14 = null;
        boolean boolean15 = springMvcApiReader2.canReadApi(false, api14);
        io.swagger.annotations.Api api16 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.lang.String> strSet17 = springMvcApiReader2.extractTags(api16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "/hi!" + "'", str10, "/hi!");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test02779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02779");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        springMvcApiReader2.LOG = logAdapter8;
        springMvcApiReader2.updateExtensionChain();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = null;
        java.lang.String str13 = springMvcApiReader2.parseOperationPath("", strMap12);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter14 = springMvcApiReader2.LOG;
        io.swagger.models.Operation operation15 = null;
        io.swagger.annotations.ApiOperation apiOperation16 = null;
        springMvcApiReader2.updateTagsForOperation(operation15, apiOperation16);
        io.swagger.annotations.Api api19 = null;
        boolean boolean20 = springMvcApiReader2.canReadApi(false, api19);
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNull(logAdapter14);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test02780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02780");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger15 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger16 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter17 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader18 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger16, logAdapter17);
        java.lang.reflect.Type[] typeArray19 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet20 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet20, typeArray19);
        springMvcApiReader18.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet20);
        java.lang.annotation.Annotation[] annotationArray23 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList24 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList24, annotationArray23);
        boolean boolean26 = springMvcApiReader18.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList24);
        io.swagger.models.Swagger swagger27 = null;
        springMvcApiReader18.swagger = swagger27;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter29 = null;
        springMvcApiReader18.LOG = logAdapter29;
        io.swagger.models.Swagger swagger31 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter32 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader33 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger31, logAdapter32);
        java.lang.reflect.Type[] typeArray34 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet35 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet35, typeArray34);
        springMvcApiReader33.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet35);
        io.swagger.models.Swagger swagger38 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter39 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader40 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger38, logAdapter39);
        java.lang.reflect.Type[] typeArray41 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet42 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet42, typeArray41);
        springMvcApiReader40.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet42);
        springMvcApiReader33.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet42);
        io.swagger.models.Swagger swagger46 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter47 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader48 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger46, logAdapter47);
        java.lang.reflect.Type type49 = null;
        springMvcApiReader48.addTypeToSkippedTypes(type49);
        java.util.Set<java.lang.reflect.Type> typeSet51 = springMvcApiReader48.typesToSkip;
        springMvcApiReader33.setTypesToSkip(typeSet51);
        java.util.Set<java.lang.reflect.Type> typeSet53 = springMvcApiReader33.getTypesToSkip();
        io.swagger.annotations.Api api55 = null;
        boolean boolean56 = springMvcApiReader33.canReadApi(true, api55);
        io.swagger.models.Swagger swagger57 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter58 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader59 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger57, logAdapter58);
        java.lang.reflect.Type type60 = null;
        springMvcApiReader59.addTypeToSkippedTypes(type60);
        java.util.Set<java.lang.reflect.Type> typeSet62 = springMvcApiReader59.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet63 = springMvcApiReader59.getTypesToSkip();
        springMvcApiReader33.typesToSkip = typeSet63;
        springMvcApiReader18.setTypesToSkip(typeSet63);
        springMvcApiReader2.typesToSkip = typeSet63;
        java.util.Set<java.lang.reflect.Type> typeSet67 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet68 = springMvcApiReader2.getTypesToSkip();
        io.swagger.annotations.ApiOperation apiOperation69 = null;
        io.swagger.models.Operation operation70 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateOperationProtocols(apiOperation69, operation70);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(swagger15);
        org.junit.Assert.assertNotNull(typeArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(annotationArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(typeArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(typeArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(typeSet51);
        org.junit.Assert.assertNotNull(typeSet53);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(typeSet62);
        org.junit.Assert.assertNotNull(typeSet63);
        org.junit.Assert.assertNotNull(typeSet67);
        org.junit.Assert.assertNotNull(typeSet68);
    }

    @Test
    public void test02781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02781");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type[] typeArray18 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet19 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet19, typeArray18);
        springMvcApiReader17.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet19);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = springMvcApiReader17.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap24 = null;
        java.lang.String str25 = springMvcApiReader17.parseOperationPath("", strMap24);
        io.swagger.annotations.Api api27 = null;
        boolean boolean28 = springMvcApiReader17.canReadApi(false, api27);
        java.util.Map<java.lang.String, java.lang.String> strMap30 = null;
        java.lang.String str31 = springMvcApiReader17.parseOperationPath("hi!", strMap30);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.Class<?> wildcardClass35 = springMvcApiReader34.getClass();
        springMvcApiReader17.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter38 = springMvcApiReader2.LOG;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger40 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter41 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader42 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger40, logAdapter41);
        java.lang.reflect.Type[] typeArray43 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet44 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet44, typeArray43);
        springMvcApiReader42.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet44);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter47 = springMvcApiReader42.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap49 = null;
        java.lang.String str50 = springMvcApiReader42.parseOperationPath("", strMap49);
        java.lang.reflect.Type[] typeArray51 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList52 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList52, typeArray51);
        springMvcApiReader42.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList52);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList52);
        java.util.Map<java.lang.String, java.lang.String> strMap57 = null;
        java.lang.String str58 = springMvcApiReader2.parseOperationPath("hi!", strMap57);
        java.util.Map<java.lang.String, java.lang.String> strMap60 = null;
        java.lang.String str61 = springMvcApiReader2.parseOperationPath("/hi!", strMap60);
        io.swagger.models.Swagger swagger62 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter63 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader64 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger62, logAdapter63);
        java.lang.reflect.Type type65 = null;
        springMvcApiReader64.addTypeToSkippedTypes(type65);
        java.util.Set<java.lang.reflect.Type> typeSet67 = springMvcApiReader64.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet67);
        io.swagger.models.Swagger swagger69 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter70 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader71 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger69, logAdapter70);
        io.swagger.models.Swagger swagger72 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter73 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader74 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger72, logAdapter73);
        java.lang.reflect.Type[] typeArray75 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet76 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet76, typeArray75);
        springMvcApiReader74.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet76);
        java.lang.annotation.Annotation[] annotationArray79 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList80 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList80, annotationArray79);
        boolean boolean82 = springMvcApiReader74.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList80);
        boolean boolean83 = springMvcApiReader71.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList80);
        io.swagger.models.Swagger swagger84 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter85 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader86 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger84, logAdapter85);
        java.lang.reflect.Type[] typeArray87 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet88 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean89 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet88, typeArray87);
        springMvcApiReader86.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet88);
        java.lang.annotation.Annotation[] annotationArray91 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList92 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean93 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList92, annotationArray91);
        boolean boolean94 = springMvcApiReader86.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList92);
        boolean boolean95 = springMvcApiReader71.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList92);
        boolean boolean96 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList92);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter97 = springMvcApiReader2.LOG;
        com.github.kongchen.swagger.docgen.spring.SpringResource springResource98 = null;
        // The following exception was thrown during execution in test generation
        try {
            io.swagger.models.Swagger swagger99 = springMvcApiReader2.read(springResource98);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(logAdapter22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "/hi!" + "'", str31, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNull(logAdapter38);
        org.junit.Assert.assertNotNull(typeArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(logAdapter47);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertNotNull(typeArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "/hi!" + "'", str58, "/hi!");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "/hi!" + "'", str61, "/hi!");
        org.junit.Assert.assertNotNull(typeSet67);
        org.junit.Assert.assertNotNull(typeArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(annotationArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(typeArray87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(annotationArray91);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertNull(logAdapter97);
    }

    @Test
    public void test02782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02782");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.lang.annotation.Annotation[] annotationArray7 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList8 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList8, annotationArray7);
        boolean boolean10 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList8);
        io.swagger.models.Swagger swagger11 = null;
        springMvcApiReader2.swagger = swagger11;
        java.lang.annotation.Annotation[] annotationArray13 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList14 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList14, annotationArray13);
        boolean boolean16 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList14);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter17 = null;
        springMvcApiReader2.LOG = logAdapter17;
        io.swagger.models.Swagger swagger19 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter20 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader21 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger19, logAdapter20);
        java.lang.reflect.Type type22 = null;
        springMvcApiReader21.addTypeToSkippedTypes(type22);
        java.util.Set<java.lang.reflect.Type> typeSet24 = springMvcApiReader21.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet24);
        java.util.Map<java.lang.String, java.lang.String> strMap27 = null;
        java.lang.String str28 = springMvcApiReader2.parseOperationPath("", strMap27);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger30 = springMvcApiReader2.swagger;
        springMvcApiReader2.updateExtensionChain();
        java.lang.reflect.Method method32 = null;
        io.swagger.models.Operation operation33 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.readImplicitParameters(method32, operation33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(annotationArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(annotationArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(typeSet24);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNull(swagger30);
    }

    @Test
    public void test02783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02783");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.models.Swagger swagger3 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter4 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader5 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger3, logAdapter4);
        java.lang.reflect.Type[] typeArray6 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet7 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet7, typeArray6);
        springMvcApiReader5.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet7);
        java.lang.annotation.Annotation[] annotationArray10 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList11 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList11, annotationArray10);
        boolean boolean13 = springMvcApiReader5.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList11);
        boolean boolean14 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList11);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type[] typeArray18 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet19 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet19, typeArray18);
        springMvcApiReader17.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet19);
        java.lang.annotation.Annotation[] annotationArray22 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList23 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList23, annotationArray22);
        boolean boolean25 = springMvcApiReader17.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList23);
        boolean boolean26 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList23);
        java.util.Set<java.lang.reflect.Type> typeSet27 = springMvcApiReader2.getTypesToSkip();
        io.swagger.annotations.Api api29 = null;
        boolean boolean30 = springMvcApiReader2.canReadApi(true, api29);
        io.swagger.models.Swagger swagger31 = null;
        springMvcApiReader2.swagger = swagger31;
        io.swagger.annotations.Api api33 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<io.swagger.models.SecurityRequirement> securityRequirementList34 = springMvcApiReader2.getSecurityRequirements(api33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(annotationArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(typeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(annotationArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(typeSet27);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test02784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02784");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        java.util.Set<java.lang.reflect.Type> typeSet5 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet6 = springMvcApiReader2.getTypesToSkip();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = null;
        java.lang.String str9 = springMvcApiReader2.parseOperationPath("", strMap8);
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader12 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger10, logAdapter11);
        java.lang.reflect.Type[] typeArray13 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet14 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet14, typeArray13);
        springMvcApiReader12.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet14);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter17 = springMvcApiReader12.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap19 = null;
        java.lang.String str20 = springMvcApiReader12.parseOperationPath("", strMap19);
        io.swagger.annotations.Api api22 = null;
        boolean boolean23 = springMvcApiReader12.canReadApi(false, api22);
        java.util.Map<java.lang.String, java.lang.String> strMap25 = null;
        java.lang.String str26 = springMvcApiReader12.parseOperationPath("hi!", strMap25);
        io.swagger.models.Swagger swagger27 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter28 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader29 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger27, logAdapter28);
        java.lang.Class<?> wildcardClass30 = springMvcApiReader29.getClass();
        springMvcApiReader12.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass30);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.reflect.Type[] typeArray35 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet36 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet36, typeArray35);
        springMvcApiReader34.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet36);
        java.lang.annotation.Annotation[] annotationArray39 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList40 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList40, annotationArray39);
        boolean boolean42 = springMvcApiReader34.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList40);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList43 = springMvcApiReader2.getParameters((java.lang.reflect.Type) wildcardClass30, (java.util.List<java.lang.annotation.Annotation>) annotationList40);
        springMvcApiReader2.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet45 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet46 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger47 = null;
        springMvcApiReader2.swagger = swagger47;
        io.swagger.annotations.Api api50 = null;
        boolean boolean51 = springMvcApiReader2.canReadApi(false, api50);
        com.github.kongchen.swagger.docgen.spring.SpringResource springResource52 = null;
        // The following exception was thrown during execution in test generation
        try {
            io.swagger.models.Swagger swagger53 = springMvcApiReader2.read(springResource52);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeSet5);
        org.junit.Assert.assertNotNull(typeSet6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(typeArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(logAdapter17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "/hi!" + "'", str26, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(typeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(annotationArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(parameterList43);
        org.junit.Assert.assertNotNull(typeSet45);
        org.junit.Assert.assertNotNull(typeSet46);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    }

    @Test
    public void test02785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02785");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader2.parseOperationPath("hi!", strMap15);
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.Class<?> wildcardClass20 = springMvcApiReader19.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass20);
        io.swagger.models.Swagger swagger22 = null;
        springMvcApiReader2.swagger = swagger22;
        io.swagger.models.Swagger swagger24 = springMvcApiReader2.swagger;
        java.util.Set<java.lang.reflect.Type> typeSet25 = springMvcApiReader2.typesToSkip;
        springMvcApiReader2.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet27 = springMvcApiReader2.typesToSkip;
        java.util.Map<java.lang.String, java.lang.String> strMap29 = null;
        java.lang.String str30 = springMvcApiReader2.parseOperationPath("hi!", strMap29);
        io.swagger.models.Operation operation31 = null;
        io.swagger.annotations.ApiResponses apiResponses32 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateApiResponse(operation31, apiResponses32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/hi!" + "'", str16, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNull(swagger24);
        org.junit.Assert.assertNotNull(typeSet25);
        org.junit.Assert.assertNotNull(typeSet27);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "/hi!" + "'", str30, "/hi!");
    }

    @Test
    public void test02786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02786");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type[] typeArray18 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet19 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet19, typeArray18);
        springMvcApiReader17.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet19);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = springMvcApiReader17.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap24 = null;
        java.lang.String str25 = springMvcApiReader17.parseOperationPath("", strMap24);
        io.swagger.annotations.Api api27 = null;
        boolean boolean28 = springMvcApiReader17.canReadApi(false, api27);
        java.util.Map<java.lang.String, java.lang.String> strMap30 = null;
        java.lang.String str31 = springMvcApiReader17.parseOperationPath("hi!", strMap30);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.Class<?> wildcardClass35 = springMvcApiReader34.getClass();
        springMvcApiReader17.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        springMvcApiReader2.updateExtensionChain();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter39 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger40 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter41 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader42 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger40, logAdapter41);
        java.lang.reflect.Type[] typeArray43 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet44 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet44, typeArray43);
        springMvcApiReader42.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet44);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter47 = springMvcApiReader42.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap49 = null;
        java.lang.String str50 = springMvcApiReader42.parseOperationPath("", strMap49);
        java.lang.reflect.Type[] typeArray51 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList52 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList52, typeArray51);
        springMvcApiReader42.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList52);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList52);
        java.util.Set<java.lang.reflect.Type> typeSet56 = springMvcApiReader2.getTypesToSkip();
        com.github.kongchen.swagger.docgen.spring.SpringResource springResource57 = null;
        // The following exception was thrown during execution in test generation
        try {
            io.swagger.models.Swagger swagger58 = springMvcApiReader2.read(springResource57);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(logAdapter22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "/hi!" + "'", str31, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNull(logAdapter39);
        org.junit.Assert.assertNotNull(typeArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(logAdapter47);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertNotNull(typeArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(typeSet56);
    }

    @Test
    public void test02787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02787");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.models.Swagger swagger3 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter4 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader5 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger3, logAdapter4);
        java.lang.reflect.Type[] typeArray6 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet7 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet7, typeArray6);
        springMvcApiReader5.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet7);
        java.lang.annotation.Annotation[] annotationArray10 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList11 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList11, annotationArray10);
        boolean boolean13 = springMvcApiReader5.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList11);
        boolean boolean14 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList11);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type[] typeArray18 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet19 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet19, typeArray18);
        springMvcApiReader17.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet19);
        java.lang.annotation.Annotation[] annotationArray22 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList23 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList23, annotationArray22);
        boolean boolean25 = springMvcApiReader17.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList23);
        boolean boolean26 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList23);
        java.util.Set<java.lang.reflect.Type> typeSet27 = null;
        springMvcApiReader2.typesToSkip = typeSet27;
        io.swagger.models.Swagger swagger29 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter30 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader31 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger29, logAdapter30);
        java.lang.reflect.Type[] typeArray32 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet33 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet33, typeArray32);
        springMvcApiReader31.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet33);
        java.lang.annotation.Annotation[] annotationArray36 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList37 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList37, annotationArray36);
        boolean boolean39 = springMvcApiReader31.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList37);
        io.swagger.models.Swagger swagger40 = null;
        springMvcApiReader31.swagger = swagger40;
        io.swagger.annotations.ResponseHeader[] responseHeaderArray42 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap43 = springMvcApiReader31.parseResponseHeaders(responseHeaderArray42);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap44 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray42);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass45 = strMap44.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(annotationArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(typeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(annotationArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(typeArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(annotationArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(responseHeaderArray42);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNull(strMap44);
    }

    @Test
    public void test02788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02788");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        java.util.Set<java.lang.reflect.Type> typeSet5 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger6 = null;
        springMvcApiReader2.swagger = swagger6;
        io.swagger.models.Swagger swagger8 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader10 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger8, logAdapter9);
        java.lang.reflect.Type[] typeArray11 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet12 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet12, typeArray11);
        springMvcApiReader10.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet12);
        java.util.Set<java.lang.reflect.Type> typeSet15 = springMvcApiReader10.typesToSkip;
        io.swagger.models.Swagger swagger16 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter17 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader18 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger16, logAdapter17);
        java.lang.reflect.Type[] typeArray19 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet20 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet20, typeArray19);
        springMvcApiReader18.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet20);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = springMvcApiReader18.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap25 = null;
        java.lang.String str26 = springMvcApiReader18.parseOperationPath("", strMap25);
        io.swagger.annotations.Api api28 = null;
        boolean boolean29 = springMvcApiReader18.canReadApi(false, api28);
        java.util.Map<java.lang.String, java.lang.String> strMap31 = null;
        java.lang.String str32 = springMvcApiReader18.parseOperationPath("hi!", strMap31);
        io.swagger.models.Swagger swagger33 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter34 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader35 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger33, logAdapter34);
        java.lang.reflect.Type[] typeArray36 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet37 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet37, typeArray36);
        springMvcApiReader35.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet37);
        io.swagger.models.Swagger swagger40 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter41 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader42 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger40, logAdapter41);
        java.lang.reflect.Type[] typeArray43 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet44 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet44, typeArray43);
        springMvcApiReader42.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet44);
        springMvcApiReader35.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet44);
        io.swagger.models.Swagger swagger48 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter49 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader50 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger48, logAdapter49);
        java.lang.reflect.Type[] typeArray51 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet52 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet52, typeArray51);
        springMvcApiReader50.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet52);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter55 = springMvcApiReader50.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap57 = null;
        java.lang.String str58 = springMvcApiReader50.parseOperationPath("", strMap57);
        io.swagger.annotations.Api api60 = null;
        boolean boolean61 = springMvcApiReader50.canReadApi(false, api60);
        java.util.Map<java.lang.String, java.lang.String> strMap63 = null;
        java.lang.String str64 = springMvcApiReader50.parseOperationPath("hi!", strMap63);
        io.swagger.models.Swagger swagger65 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter66 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader67 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger65, logAdapter66);
        java.lang.Class<?> wildcardClass68 = springMvcApiReader67.getClass();
        springMvcApiReader50.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass68);
        springMvcApiReader35.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass68);
        springMvcApiReader18.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass68);
        io.swagger.models.Swagger swagger72 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter73 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader74 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger72, logAdapter73);
        java.lang.reflect.Type[] typeArray75 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet76 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet76, typeArray75);
        springMvcApiReader74.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet76);
        java.lang.annotation.Annotation[] annotationArray79 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList80 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList80, annotationArray79);
        boolean boolean82 = springMvcApiReader74.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList80);
        io.swagger.models.Swagger swagger83 = null;
        springMvcApiReader74.swagger = swagger83;
        java.lang.annotation.Annotation[] annotationArray85 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList86 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList86, annotationArray85);
        boolean boolean88 = springMvcApiReader74.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList86);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList89 = springMvcApiReader10.getParameters((java.lang.reflect.Type) wildcardClass68, (java.util.List<java.lang.annotation.Annotation>) annotationList86);
        boolean boolean90 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList86);
        java.util.Set<java.lang.reflect.Type> typeSet91 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger92 = springMvcApiReader2.swagger;
        springMvcApiReader2.updateExtensionChain();
        org.junit.Assert.assertNotNull(typeSet5);
        org.junit.Assert.assertNotNull(typeArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(typeSet15);
        org.junit.Assert.assertNotNull(typeArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(logAdapter23);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "/hi!" + "'", str32, "/hi!");
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(typeArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(typeArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNull(logAdapter55);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "" + "'", str58, "");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "/hi!" + "'", str64, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(typeArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(annotationArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(annotationArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(parameterList89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(typeSet91);
        org.junit.Assert.assertNull(swagger92);
    }

    @Test
    public void test02789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02789");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        io.swagger.models.Swagger swagger5 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter6 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader7 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger5, logAdapter6);
        java.lang.reflect.Type[] typeArray8 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet9 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet9, typeArray8);
        springMvcApiReader7.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet9);
        java.lang.annotation.Annotation[] annotationArray12 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList13 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList13, annotationArray12);
        boolean boolean15 = springMvcApiReader7.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList13);
        io.swagger.models.Swagger swagger16 = null;
        springMvcApiReader7.swagger = swagger16;
        io.swagger.models.Swagger swagger18 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter19 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader20 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger18, logAdapter19);
        java.lang.reflect.Type[] typeArray21 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet22 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet22, typeArray21);
        springMvcApiReader20.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet22);
        java.lang.annotation.Annotation[] annotationArray25 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList26 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList26, annotationArray25);
        boolean boolean28 = springMvcApiReader20.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList26);
        io.swagger.models.Swagger swagger29 = null;
        springMvcApiReader20.swagger = swagger29;
        java.lang.annotation.Annotation[] annotationArray31 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList32 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList32, annotationArray31);
        boolean boolean34 = springMvcApiReader20.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList32);
        boolean boolean35 = springMvcApiReader7.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList32);
        springMvcApiReader7.updateExtensionChain();
        io.swagger.models.Swagger swagger37 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter38 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader39 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger37, logAdapter38);
        java.lang.reflect.Type[] typeArray40 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet41 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet41, typeArray40);
        springMvcApiReader39.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet41);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter44 = springMvcApiReader39.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap46 = null;
        java.lang.String str47 = springMvcApiReader39.parseOperationPath("", strMap46);
        io.swagger.annotations.Api api49 = null;
        boolean boolean50 = springMvcApiReader39.canReadApi(false, api49);
        java.util.Map<java.lang.String, java.lang.String> strMap52 = null;
        java.lang.String str53 = springMvcApiReader39.parseOperationPath("hi!", strMap52);
        java.util.Map<java.lang.String, java.lang.String> strMap55 = null;
        java.lang.String str56 = springMvcApiReader39.parseOperationPath("hi!", strMap55);
        io.swagger.models.Operation operation57 = null;
        io.swagger.annotations.ApiOperation apiOperation58 = null;
        springMvcApiReader39.updateTagsForOperation(operation57, apiOperation58);
        java.lang.Class<?> wildcardClass60 = springMvcApiReader39.getClass();
        springMvcApiReader7.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass60);
        io.swagger.models.Swagger swagger62 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter63 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader64 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger62, logAdapter63);
        java.lang.reflect.Type[] typeArray65 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet66 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet66, typeArray65);
        springMvcApiReader64.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet66);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter69 = springMvcApiReader64.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap71 = null;
        java.lang.String str72 = springMvcApiReader64.parseOperationPath("", strMap71);
        io.swagger.models.Swagger swagger73 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter74 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader75 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger73, logAdapter74);
        java.lang.Class<?> wildcardClass76 = springMvcApiReader75.getClass();
        java.lang.reflect.Type[] typeArray77 = new java.lang.reflect.Type[] { wildcardClass76 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet78 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet78, typeArray77);
        springMvcApiReader64.typesToSkip = typeSet78;
        java.util.Set<java.lang.reflect.Type> typeSet81 = springMvcApiReader64.getTypesToSkip();
        io.swagger.models.Swagger swagger82 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter83 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader84 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger82, logAdapter83);
        java.lang.reflect.Type[] typeArray85 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet86 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet86, typeArray85);
        springMvcApiReader84.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet86);
        java.lang.annotation.Annotation[] annotationArray89 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList90 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean91 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList90, annotationArray89);
        boolean boolean92 = springMvcApiReader84.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList90);
        boolean boolean93 = springMvcApiReader64.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList90);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList94 = springMvcApiReader2.getParameters((java.lang.reflect.Type) wildcardClass60, (java.util.List<java.lang.annotation.Annotation>) annotationList90);
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap95 = null;
        io.swagger.annotations.Api api96 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, io.swagger.models.Tag> strMap97 = springMvcApiReader2.updateTagsForApi(strMap95, api96);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(annotationArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(typeArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(annotationArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(annotationArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(typeArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(logAdapter44);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "/hi!" + "'", str53, "/hi!");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "/hi!" + "'", str56, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(typeArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNull(logAdapter69);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "" + "'", str72, "");
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(typeArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(typeSet81);
        org.junit.Assert.assertNotNull(typeArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(annotationArray89);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNotNull(parameterList94);
    }

    @Test
    public void test02790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02790");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.lang.annotation.Annotation[] annotationArray7 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList8 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList8, annotationArray7);
        boolean boolean10 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList8);
        java.util.Set<java.lang.reflect.Type> typeSet11 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger12 = null;
        springMvcApiReader2.swagger = swagger12;
        io.swagger.models.Operation operation14 = null;
        io.swagger.annotations.ApiOperation apiOperation15 = null;
        springMvcApiReader2.updateTagsForOperation(operation14, apiOperation15);
        java.lang.Class<?> wildcardClass17 = springMvcApiReader2.getClass();
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(annotationArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(typeSet11);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test02791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02791");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        io.swagger.models.Swagger swagger14 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter15 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader16 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger14, logAdapter15);
        java.lang.reflect.Type type17 = null;
        springMvcApiReader16.addTypeToSkippedTypes(type17);
        java.util.Set<java.lang.reflect.Type> typeSet19 = springMvcApiReader16.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet20 = springMvcApiReader16.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet20);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = null;
        springMvcApiReader2.LOG = logAdapter22;
        java.util.Set<java.lang.reflect.Type> typeSet24 = springMvcApiReader2.typesToSkip;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter25 = null;
        springMvcApiReader2.LOG = logAdapter25;
        io.swagger.models.Operation operation27 = null;
        io.swagger.annotations.ApiOperation apiOperation28 = null;
        springMvcApiReader2.updateTagsForOperation(operation27, apiOperation28);
        io.swagger.models.Swagger swagger30 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter31 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader32 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger30, logAdapter31);
        java.lang.reflect.Type type33 = null;
        springMvcApiReader32.addTypeToSkippedTypes(type33);
        io.swagger.models.Swagger swagger35 = springMvcApiReader32.swagger;
        io.swagger.models.Swagger swagger36 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter37 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader38 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger36, logAdapter37);
        java.lang.reflect.Type[] typeArray39 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet40 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet40, typeArray39);
        springMvcApiReader38.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet40);
        io.swagger.models.Swagger swagger43 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter44 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader45 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger43, logAdapter44);
        java.lang.reflect.Type[] typeArray46 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet47 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet47, typeArray46);
        springMvcApiReader45.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet47);
        springMvcApiReader38.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet47);
        io.swagger.models.Swagger swagger51 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter52 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader53 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger51, logAdapter52);
        java.lang.reflect.Type[] typeArray54 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet55 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet55, typeArray54);
        springMvcApiReader53.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet55);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter58 = springMvcApiReader53.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap60 = null;
        java.lang.String str61 = springMvcApiReader53.parseOperationPath("", strMap60);
        io.swagger.annotations.Api api63 = null;
        boolean boolean64 = springMvcApiReader53.canReadApi(false, api63);
        java.util.Map<java.lang.String, java.lang.String> strMap66 = null;
        java.lang.String str67 = springMvcApiReader53.parseOperationPath("hi!", strMap66);
        io.swagger.models.Swagger swagger68 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter69 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader70 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger68, logAdapter69);
        java.lang.Class<?> wildcardClass71 = springMvcApiReader70.getClass();
        springMvcApiReader53.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass71);
        springMvcApiReader38.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass71);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter74 = springMvcApiReader38.LOG;
        io.swagger.models.Swagger swagger75 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter76 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader77 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger75, logAdapter76);
        java.lang.reflect.Type[] typeArray78 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet79 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet79, typeArray78);
        springMvcApiReader77.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet79);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter82 = springMvcApiReader77.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap84 = null;
        java.lang.String str85 = springMvcApiReader77.parseOperationPath("", strMap84);
        java.lang.reflect.Type[] typeArray86 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList87 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList87, typeArray86);
        springMvcApiReader77.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList87);
        springMvcApiReader38.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList87);
        springMvcApiReader32.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList87);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList87);
        io.swagger.models.Swagger swagger93 = springMvcApiReader2.swagger;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass94 = swagger93.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(typeSet19);
        org.junit.Assert.assertNotNull(typeSet20);
        org.junit.Assert.assertNotNull(typeSet24);
        org.junit.Assert.assertNull(swagger35);
        org.junit.Assert.assertNotNull(typeArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(typeArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(typeArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(logAdapter58);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "" + "'", str61, "");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "/hi!" + "'", str67, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNull(logAdapter74);
        org.junit.Assert.assertNotNull(typeArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNull(logAdapter82);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "" + "'", str85, "");
        org.junit.Assert.assertNotNull(typeArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNull(swagger93);
    }

    @Test
    public void test02792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02792");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        java.lang.reflect.Type[] typeArray11 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList12 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList12, typeArray11);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList12);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!", "", "hi!" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap20 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray21 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList22 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList22, securityRequirementArray21);
        io.swagger.models.Operation operation24 = null;
        springMvcApiReader2.updateOperation(strArray15, strArray19, strMap20, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList22, operation24);
        java.util.Map<java.lang.String, java.lang.String> strMap27 = null;
        java.lang.String str28 = springMvcApiReader2.parseOperationPath("", strMap27);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger30 = null;
        springMvcApiReader2.swagger = swagger30;
        io.swagger.annotations.Api api33 = null;
        boolean boolean34 = springMvcApiReader2.canReadApi(false, api33);
        java.util.Set<java.lang.reflect.Type> typeSet35 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger36 = springMvcApiReader2.swagger;
        io.swagger.models.Operation operation37 = null;
        io.swagger.annotations.ApiResponses apiResponses38 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateApiResponse(operation37, apiResponses38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(typeArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(securityRequirementArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(typeSet35);
        org.junit.Assert.assertNull(swagger36);
    }

    @Test
    public void test02793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02793");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = springMvcApiReader2.swagger;
        java.util.Set<java.lang.reflect.Type> typeSet8 = springMvcApiReader2.typesToSkip;
        java.lang.reflect.Method method9 = null;
        io.swagger.models.Operation operation10 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.readImplicitParameters(method9, operation10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(swagger7);
        org.junit.Assert.assertNotNull(typeSet8);
    }

    @Test
    public void test02794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02794");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.models.Swagger swagger11 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter12 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader13 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger11, logAdapter12);
        java.lang.Class<?> wildcardClass14 = springMvcApiReader13.getClass();
        java.lang.reflect.Type[] typeArray15 = new java.lang.reflect.Type[] { wildcardClass14 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet16 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet16, typeArray15);
        springMvcApiReader2.typesToSkip = typeSet16;
        io.swagger.annotations.Api api20 = null;
        boolean boolean21 = springMvcApiReader2.canReadApi(false, api20);
        io.swagger.models.Operation operation22 = null;
        io.swagger.annotations.ApiOperation apiOperation23 = null;
        springMvcApiReader2.updateTagsForOperation(operation22, apiOperation23);
        io.swagger.models.Swagger swagger25 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter26 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader27 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger25, logAdapter26);
        java.lang.reflect.Type[] typeArray28 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet29 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet29, typeArray28);
        springMvcApiReader27.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet29);
        io.swagger.models.Swagger swagger32 = springMvcApiReader27.swagger;
        io.swagger.models.Swagger swagger33 = springMvcApiReader27.swagger;
        io.swagger.models.Swagger swagger34 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter35 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader36 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger34, logAdapter35);
        java.lang.reflect.Type[] typeArray37 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet38 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet38, typeArray37);
        springMvcApiReader36.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet38);
        java.lang.annotation.Annotation[] annotationArray41 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList42 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList42, annotationArray41);
        boolean boolean44 = springMvcApiReader36.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList42);
        boolean boolean45 = springMvcApiReader27.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList42);
        java.lang.Class<?> wildcardClass46 = springMvcApiReader27.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass46);
        java.util.Map<java.lang.String, java.lang.String> strMap49 = null;
        java.lang.String str50 = springMvcApiReader2.parseOperationPath("/hi!", strMap49);
        io.swagger.annotations.ApiOperation apiOperation51 = null;
        io.swagger.models.Operation operation52 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateOperationProtocols(apiOperation51, operation52);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(typeArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(typeArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(swagger32);
        org.junit.Assert.assertNull(swagger33);
        org.junit.Assert.assertNotNull(typeArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(annotationArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "/hi!" + "'", str50, "/hi!");
    }

    @Test
    public void test02795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02795");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        java.lang.reflect.Type[] typeArray11 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList12 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList12, typeArray11);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList12);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!", "", "hi!" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap20 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray21 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList22 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList22, securityRequirementArray21);
        io.swagger.models.Operation operation24 = null;
        springMvcApiReader2.updateOperation(strArray15, strArray19, strMap20, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList22, operation24);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger27 = null;
        springMvcApiReader2.swagger = swagger27;
        springMvcApiReader2.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet30 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger31 = null;
        springMvcApiReader2.swagger = swagger31;
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(typeArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(securityRequirementArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(typeSet30);
    }

    @Test
    public void test02796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02796");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.lang.annotation.Annotation[] annotationArray7 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList8 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList8, annotationArray7);
        boolean boolean10 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList8);
        io.swagger.models.Swagger swagger11 = null;
        springMvcApiReader2.swagger = swagger11;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter13 = null;
        springMvcApiReader2.LOG = logAdapter13;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger16 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter17 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader18 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger16, logAdapter17);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter19 = springMvcApiReader18.LOG;
        io.swagger.models.Swagger swagger20 = null;
        springMvcApiReader18.swagger = swagger20;
        java.util.Set<java.lang.reflect.Type> typeSet22 = springMvcApiReader18.getTypesToSkip();
        springMvcApiReader2.typesToSkip = typeSet22;
        io.swagger.models.Swagger swagger24 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter25 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader26 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger24, logAdapter25);
        java.lang.reflect.Type[] typeArray27 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet28 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet28, typeArray27);
        springMvcApiReader26.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet28);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter31 = springMvcApiReader26.LOG;
        io.swagger.annotations.Api api33 = null;
        boolean boolean34 = springMvcApiReader26.canReadApi(true, api33);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter35 = null;
        springMvcApiReader26.LOG = logAdapter35;
        java.util.Set<java.lang.reflect.Type> typeSet37 = springMvcApiReader26.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet38 = springMvcApiReader26.typesToSkip;
        io.swagger.models.Swagger swagger39 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter40 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader41 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger39, logAdapter40);
        java.lang.reflect.Type[] typeArray42 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet43 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet43, typeArray42);
        springMvcApiReader41.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet43);
        java.lang.annotation.Annotation[] annotationArray46 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList47 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList47, annotationArray46);
        boolean boolean49 = springMvcApiReader41.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList47);
        java.util.Set<java.lang.reflect.Type> typeSet50 = springMvcApiReader41.typesToSkip;
        springMvcApiReader41.updateExtensionChain();
        io.swagger.models.Operation operation52 = null;
        io.swagger.annotations.ApiOperation apiOperation53 = null;
        springMvcApiReader41.updateTagsForOperation(operation52, apiOperation53);
        io.swagger.annotations.Api api56 = null;
        boolean boolean57 = springMvcApiReader41.canReadApi(true, api56);
        io.swagger.models.Swagger swagger58 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter59 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader60 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger58, logAdapter59);
        java.lang.reflect.Type[] typeArray61 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet62 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet62, typeArray61);
        springMvcApiReader60.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet62);
        java.lang.annotation.Annotation[] annotationArray65 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList66 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList66, annotationArray65);
        boolean boolean68 = springMvcApiReader60.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList66);
        boolean boolean69 = springMvcApiReader41.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList66);
        boolean boolean70 = springMvcApiReader26.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList66);
        boolean boolean71 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList66);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.annotations.Api api73 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<io.swagger.models.SecurityRequirement> securityRequirementList74 = springMvcApiReader2.getSecurityRequirements(api73);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(annotationArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(logAdapter19);
        org.junit.Assert.assertNotNull(typeSet22);
        org.junit.Assert.assertNotNull(typeArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(logAdapter31);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(typeSet37);
        org.junit.Assert.assertNotNull(typeSet38);
        org.junit.Assert.assertNotNull(typeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(annotationArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(typeSet50);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(typeArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(annotationArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
    }

    @Test
    public void test02797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02797");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.lang.annotation.Annotation[] annotationArray7 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList8 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList8, annotationArray7);
        boolean boolean10 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList8);
        io.swagger.models.Swagger swagger11 = null;
        springMvcApiReader2.swagger = swagger11;
        io.swagger.models.Swagger swagger13 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter14 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader15 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger13, logAdapter14);
        java.lang.reflect.Type[] typeArray16 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet17 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet17, typeArray16);
        springMvcApiReader15.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet17);
        java.lang.annotation.Annotation[] annotationArray20 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList21 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList21, annotationArray20);
        boolean boolean23 = springMvcApiReader15.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList21);
        io.swagger.models.Swagger swagger24 = null;
        springMvcApiReader15.swagger = swagger24;
        java.lang.annotation.Annotation[] annotationArray26 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList27 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList27, annotationArray26);
        boolean boolean29 = springMvcApiReader15.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList27);
        boolean boolean30 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList27);
        springMvcApiReader2.updateExtensionChain();
        java.util.Map<java.lang.String, java.lang.String> strMap33 = null;
        java.lang.String str34 = springMvcApiReader2.parseOperationPath("", strMap33);
        java.util.Map<java.lang.String, java.lang.String> strMap36 = null;
        java.lang.String str37 = springMvcApiReader2.parseOperationPath("/hi!", strMap36);
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap38 = null;
        io.swagger.annotations.Api api39 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, io.swagger.models.Tag> strMap40 = springMvcApiReader2.updateTagsForApi(strMap38, api39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(annotationArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(typeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(annotationArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(annotationArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "/hi!" + "'", str37, "/hi!");
    }

    @Test
    public void test02798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02798");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.lang.annotation.Annotation[] annotationArray7 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList8 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList8, annotationArray7);
        boolean boolean10 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList8);
        io.swagger.models.Swagger swagger11 = null;
        springMvcApiReader2.swagger = swagger11;
        java.lang.annotation.Annotation[] annotationArray13 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList14 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList14, annotationArray13);
        boolean boolean16 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList14);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter17 = null;
        springMvcApiReader2.LOG = logAdapter17;
        io.swagger.models.Swagger swagger19 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter20 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader21 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger19, logAdapter20);
        java.lang.reflect.Type type22 = null;
        springMvcApiReader21.addTypeToSkippedTypes(type22);
        java.util.Set<java.lang.reflect.Type> typeSet24 = springMvcApiReader21.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet24);
        java.util.Set<java.lang.reflect.Type> typeSet26 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger27 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter28 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader29 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger27, logAdapter28);
        java.lang.reflect.Type[] typeArray30 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet31 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet31, typeArray30);
        springMvcApiReader29.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet31);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter34 = springMvcApiReader29.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap36 = null;
        java.lang.String str37 = springMvcApiReader29.parseOperationPath("", strMap36);
        io.swagger.models.Swagger swagger38 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter39 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader40 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger38, logAdapter39);
        java.lang.Class<?> wildcardClass41 = springMvcApiReader40.getClass();
        java.lang.reflect.Type[] typeArray42 = new java.lang.reflect.Type[] { wildcardClass41 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet43 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet43, typeArray42);
        springMvcApiReader29.typesToSkip = typeSet43;
        java.util.Set<java.lang.reflect.Type> typeSet46 = springMvcApiReader29.getTypesToSkip();
        java.util.Map<java.lang.String, java.lang.String> strMap48 = null;
        java.lang.String str49 = springMvcApiReader29.parseOperationPath("/hi!", strMap48);
        java.util.Set<java.lang.reflect.Type> typeSet50 = springMvcApiReader29.getTypesToSkip();
        io.swagger.models.Swagger swagger51 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter52 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader53 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger51, logAdapter52);
        java.lang.reflect.Type[] typeArray54 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet55 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet55, typeArray54);
        springMvcApiReader53.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet55);
        java.lang.annotation.Annotation[] annotationArray58 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList59 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList59, annotationArray58);
        boolean boolean61 = springMvcApiReader53.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList59);
        io.swagger.models.Swagger swagger62 = null;
        springMvcApiReader53.swagger = swagger62;
        io.swagger.annotations.ResponseHeader[] responseHeaderArray64 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap65 = springMvcApiReader53.parseResponseHeaders(responseHeaderArray64);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap66 = springMvcApiReader29.parseResponseHeaders(responseHeaderArray64);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap67 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray64);
        java.util.Map<java.lang.String, java.lang.String> strMap69 = null;
        java.lang.String str70 = springMvcApiReader2.parseOperationPath("hi!", strMap69);
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(annotationArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(annotationArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(typeSet24);
        org.junit.Assert.assertNotNull(typeSet26);
        org.junit.Assert.assertNotNull(typeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(logAdapter34);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(typeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(typeSet46);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "/hi!" + "'", str49, "/hi!");
        org.junit.Assert.assertNotNull(typeSet50);
        org.junit.Assert.assertNotNull(typeArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(annotationArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(responseHeaderArray64);
        org.junit.Assert.assertNull(strMap65);
        org.junit.Assert.assertNull(strMap66);
        org.junit.Assert.assertNull(strMap67);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "/hi!" + "'", str70, "/hi!");
    }

    @Test
    public void test02799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02799");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        java.util.Set<java.lang.reflect.Type> typeSet5 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet6 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet7 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger8 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader10 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger8, logAdapter9);
        java.lang.reflect.Type[] typeArray11 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet12 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet12, typeArray11);
        springMvcApiReader10.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet12);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter15 = springMvcApiReader10.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap17 = null;
        java.lang.String str18 = springMvcApiReader10.parseOperationPath("", strMap17);
        java.lang.reflect.Type[] typeArray19 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList20 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList20, typeArray19);
        springMvcApiReader10.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList20);
        io.swagger.models.Swagger swagger23 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter24 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader25 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger23, logAdapter24);
        java.lang.reflect.Type[] typeArray26 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet27 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet27, typeArray26);
        springMvcApiReader25.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet27);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter30 = springMvcApiReader25.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap32 = null;
        java.lang.String str33 = springMvcApiReader25.parseOperationPath("", strMap32);
        io.swagger.models.Swagger swagger34 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter35 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader36 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger34, logAdapter35);
        java.lang.Class<?> wildcardClass37 = springMvcApiReader36.getClass();
        java.lang.reflect.Type[] typeArray38 = new java.lang.reflect.Type[] { wildcardClass37 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet39 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet39, typeArray38);
        springMvcApiReader25.typesToSkip = typeSet39;
        java.util.Set<java.lang.reflect.Type> typeSet42 = springMvcApiReader25.getTypesToSkip();
        springMvcApiReader10.setTypesToSkip(typeSet42);
        springMvcApiReader2.setTypesToSkip(typeSet42);
        io.swagger.models.Swagger swagger45 = springMvcApiReader2.swagger;
        io.swagger.annotations.Api api47 = null;
        boolean boolean48 = springMvcApiReader2.canReadApi(false, api47);
        io.swagger.models.Operation operation49 = null;
        io.swagger.annotations.ApiResponses apiResponses50 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateApiResponse(operation49, apiResponses50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeSet5);
        org.junit.Assert.assertNotNull(typeSet6);
        org.junit.Assert.assertNotNull(typeSet7);
        org.junit.Assert.assertNotNull(typeArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(logAdapter15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNotNull(typeArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(typeArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(logAdapter30);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(typeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(typeSet42);
        org.junit.Assert.assertNull(swagger45);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
    }

    @Test
    public void test02800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02800");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.util.Map<java.lang.String, java.lang.String> strMap4 = null;
        java.lang.String str5 = springMvcApiReader2.parseOperationPath("/hi!", strMap4);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger7 = springMvcApiReader2.swagger;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass8 = swagger7.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "/hi!" + "'", str5, "/hi!");
        org.junit.Assert.assertNull(swagger7);
    }

    @Test
    public void test02801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02801");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader2.parseOperationPath("hi!", strMap15);
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.Class<?> wildcardClass20 = springMvcApiReader19.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass20);
        io.swagger.models.Swagger swagger22 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader24 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger22, logAdapter23);
        java.lang.reflect.Type[] typeArray25 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet26 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet26, typeArray25);
        springMvcApiReader24.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet26);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter29 = springMvcApiReader24.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap31 = null;
        java.lang.String str32 = springMvcApiReader24.parseOperationPath("", strMap31);
        java.lang.reflect.Type[] typeArray33 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList34 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList34, typeArray33);
        springMvcApiReader24.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList34);
        java.lang.String[] strArray37 = new java.lang.String[] {};
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!", "", "hi!" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap42 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray43 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList44 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList44, securityRequirementArray43);
        io.swagger.models.Operation operation46 = null;
        springMvcApiReader24.updateOperation(strArray37, strArray41, strMap42, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList44, operation46);
        java.lang.String[] strArray54 = new java.lang.String[] { "/hi!", "", "/hi!", "hi!", "hi!", "hi!" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap55 = null;
        io.swagger.models.Swagger swagger56 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter57 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader58 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger56, logAdapter57);
        java.lang.reflect.Type[] typeArray59 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet60 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet60, typeArray59);
        springMvcApiReader58.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet60);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter63 = springMvcApiReader58.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap65 = null;
        java.lang.String str66 = springMvcApiReader58.parseOperationPath("", strMap65);
        java.lang.reflect.Type[] typeArray67 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList68 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList68, typeArray67);
        springMvcApiReader58.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList68);
        java.lang.String[] strArray71 = new java.lang.String[] {};
        java.lang.String[] strArray75 = new java.lang.String[] { "hi!", "", "hi!" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap76 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray77 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList78 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList78, securityRequirementArray77);
        io.swagger.models.Operation operation80 = null;
        springMvcApiReader58.updateOperation(strArray71, strArray75, strMap76, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList78, operation80);
        io.swagger.models.Operation operation82 = null;
        springMvcApiReader2.updateOperation(strArray37, strArray54, strMap55, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList78, operation82);
        io.swagger.models.Swagger swagger84 = null;
        springMvcApiReader2.swagger = swagger84;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter86 = springMvcApiReader2.LOG;
        io.swagger.models.Operation operation87 = null;
        io.swagger.annotations.ApiOperation apiOperation88 = null;
        springMvcApiReader2.updateTagsForOperation(operation87, apiOperation88);
        java.util.Map<java.lang.String, java.lang.String> strMap91 = null;
        java.lang.String str92 = springMvcApiReader2.parseOperationPath("/hi!", strMap91);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter93 = springMvcApiReader2.LOG;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter94 = null;
        springMvcApiReader2.LOG = logAdapter94;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter96 = null;
        springMvcApiReader2.LOG = logAdapter96;
        io.swagger.annotations.Api api98 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<io.swagger.models.SecurityRequirement> securityRequirementList99 = springMvcApiReader2.getSecurityRequirements(api98);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/hi!" + "'", str16, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(typeArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(logAdapter29);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertNotNull(typeArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(securityRequirementArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(typeArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNull(logAdapter63);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "" + "'", str66, "");
        org.junit.Assert.assertNotNull(typeArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertNotNull(securityRequirementArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNull(logAdapter86);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "/hi!" + "'", str92, "/hi!");
        org.junit.Assert.assertNull(logAdapter93);
    }

    @Test
    public void test02802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02802");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.lang.annotation.Annotation[] annotationArray7 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList8 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList8, annotationArray7);
        boolean boolean10 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList8);
        java.util.Set<java.lang.reflect.Type> typeSet11 = springMvcApiReader2.typesToSkip;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Operation operation13 = null;
        io.swagger.annotations.ApiOperation apiOperation14 = null;
        springMvcApiReader2.updateTagsForOperation(operation13, apiOperation14);
        io.swagger.annotations.Api api17 = null;
        boolean boolean18 = springMvcApiReader2.canReadApi(true, api17);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter19 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger20 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter21 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader22 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger20, logAdapter21);
        java.lang.reflect.Type type23 = null;
        springMvcApiReader22.addTypeToSkippedTypes(type23);
        java.util.Set<java.lang.reflect.Type> typeSet25 = springMvcApiReader22.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet26 = springMvcApiReader22.getTypesToSkip();
        java.util.Map<java.lang.String, java.lang.String> strMap28 = null;
        java.lang.String str29 = springMvcApiReader22.parseOperationPath("", strMap28);
        io.swagger.models.Swagger swagger30 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter31 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader32 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger30, logAdapter31);
        java.lang.reflect.Type[] typeArray33 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet34 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet34, typeArray33);
        springMvcApiReader32.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet34);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter37 = springMvcApiReader32.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap39 = null;
        java.lang.String str40 = springMvcApiReader32.parseOperationPath("", strMap39);
        io.swagger.annotations.Api api42 = null;
        boolean boolean43 = springMvcApiReader32.canReadApi(false, api42);
        java.util.Map<java.lang.String, java.lang.String> strMap45 = null;
        java.lang.String str46 = springMvcApiReader32.parseOperationPath("hi!", strMap45);
        io.swagger.models.Swagger swagger47 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter48 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader49 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger47, logAdapter48);
        java.lang.Class<?> wildcardClass50 = springMvcApiReader49.getClass();
        springMvcApiReader32.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass50);
        io.swagger.models.Swagger swagger52 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter53 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader54 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger52, logAdapter53);
        java.lang.reflect.Type[] typeArray55 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet56 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet56, typeArray55);
        springMvcApiReader54.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet56);
        java.lang.annotation.Annotation[] annotationArray59 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList60 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList60, annotationArray59);
        boolean boolean62 = springMvcApiReader54.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList60);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList63 = springMvcApiReader22.getParameters((java.lang.reflect.Type) wildcardClass50, (java.util.List<java.lang.annotation.Annotation>) annotationList60);
        boolean boolean64 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList60);
        io.swagger.models.Swagger swagger65 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter66 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader67 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger65, logAdapter66);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter68 = springMvcApiReader67.LOG;
        io.swagger.models.Swagger swagger69 = null;
        springMvcApiReader67.swagger = swagger69;
        io.swagger.models.Swagger swagger71 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter72 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader73 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger71, logAdapter72);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter74 = springMvcApiReader73.LOG;
        java.util.Set<java.lang.reflect.Type> typeSet75 = springMvcApiReader73.typesToSkip;
        io.swagger.models.Swagger swagger76 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter77 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader78 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger76, logAdapter77);
        java.lang.reflect.Type[] typeArray79 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet80 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet80, typeArray79);
        springMvcApiReader78.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet80);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter83 = springMvcApiReader78.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap85 = null;
        java.lang.String str86 = springMvcApiReader78.parseOperationPath("", strMap85);
        java.lang.reflect.Type[] typeArray87 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList88 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean89 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList88, typeArray87);
        springMvcApiReader78.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList88);
        springMvcApiReader73.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList88);
        springMvcApiReader67.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList88);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList88);
        io.swagger.annotations.Api api94 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.lang.String> strSet95 = springMvcApiReader2.extractTags(api94);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(annotationArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(typeSet11);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(logAdapter19);
        org.junit.Assert.assertNotNull(typeSet25);
        org.junit.Assert.assertNotNull(typeSet26);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertNotNull(typeArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(logAdapter37);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "/hi!" + "'", str46, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(typeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(annotationArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(parameterList63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNull(logAdapter68);
        org.junit.Assert.assertNull(logAdapter74);
        org.junit.Assert.assertNotNull(typeSet75);
        org.junit.Assert.assertNotNull(typeArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNull(logAdapter83);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "" + "'", str86, "");
        org.junit.Assert.assertNotNull(typeArray87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
    }

    @Test
    public void test02803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02803");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        java.util.Set<java.lang.reflect.Type> typeSet5 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger6 = springMvcApiReader2.swagger;
        springMvcApiReader2.updateExtensionChain();
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("/hi!", strMap9);
        io.swagger.annotations.Api api11 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.lang.String> strSet12 = springMvcApiReader2.extractTags(api11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeSet5);
        org.junit.Assert.assertNull(swagger6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "/hi!" + "'", str10, "/hi!");
    }

    @Test
    public void test02804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02804");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        java.util.Set<java.lang.reflect.Type> typeSet5 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger6 = null;
        springMvcApiReader2.swagger = swagger6;
        io.swagger.models.Swagger swagger8 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader10 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger8, logAdapter9);
        java.lang.reflect.Type type11 = null;
        springMvcApiReader10.addTypeToSkippedTypes(type11);
        java.util.Set<java.lang.reflect.Type> typeSet13 = springMvcApiReader10.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet14 = springMvcApiReader10.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet15 = null;
        springMvcApiReader10.typesToSkip = typeSet15;
        java.util.Set<java.lang.reflect.Type> typeSet17 = springMvcApiReader10.getTypesToSkip();
        io.swagger.models.Swagger swagger18 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter19 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader20 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger18, logAdapter19);
        java.lang.reflect.Type type21 = null;
        springMvcApiReader20.addTypeToSkippedTypes(type21);
        java.util.Set<java.lang.reflect.Type> typeSet23 = springMvcApiReader20.typesToSkip;
        springMvcApiReader10.typesToSkip = typeSet23;
        java.util.Set<java.lang.reflect.Type> typeSet25 = springMvcApiReader10.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet25);
        io.swagger.models.Swagger swagger27 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter28 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader29 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger27, logAdapter28);
        java.lang.reflect.Type type30 = null;
        springMvcApiReader29.addTypeToSkippedTypes(type30);
        java.util.Set<java.lang.reflect.Type> typeSet32 = springMvcApiReader29.typesToSkip;
        io.swagger.models.Swagger swagger33 = null;
        springMvcApiReader29.swagger = swagger33;
        io.swagger.models.Swagger swagger35 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter36 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader37 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger35, logAdapter36);
        java.lang.reflect.Type type38 = null;
        springMvcApiReader37.addTypeToSkippedTypes(type38);
        java.util.Set<java.lang.reflect.Type> typeSet40 = springMvcApiReader37.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet41 = springMvcApiReader37.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet42 = null;
        springMvcApiReader37.typesToSkip = typeSet42;
        java.util.Set<java.lang.reflect.Type> typeSet44 = springMvcApiReader37.getTypesToSkip();
        io.swagger.models.Swagger swagger45 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter46 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader47 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger45, logAdapter46);
        java.lang.reflect.Type type48 = null;
        springMvcApiReader47.addTypeToSkippedTypes(type48);
        java.util.Set<java.lang.reflect.Type> typeSet50 = springMvcApiReader47.typesToSkip;
        springMvcApiReader37.typesToSkip = typeSet50;
        java.util.Set<java.lang.reflect.Type> typeSet52 = springMvcApiReader37.typesToSkip;
        springMvcApiReader29.setTypesToSkip(typeSet52);
        springMvcApiReader2.setTypesToSkip(typeSet52);
        java.util.Set<java.lang.reflect.Type> typeSet55 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Operation operation58 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updatePath("hi!", "/hi!", operation58);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeSet5);
        org.junit.Assert.assertNotNull(typeSet13);
        org.junit.Assert.assertNotNull(typeSet14);
        org.junit.Assert.assertNull(typeSet17);
        org.junit.Assert.assertNotNull(typeSet23);
        org.junit.Assert.assertNotNull(typeSet25);
        org.junit.Assert.assertNotNull(typeSet32);
        org.junit.Assert.assertNotNull(typeSet40);
        org.junit.Assert.assertNotNull(typeSet41);
        org.junit.Assert.assertNull(typeSet44);
        org.junit.Assert.assertNotNull(typeSet50);
        org.junit.Assert.assertNotNull(typeSet52);
        org.junit.Assert.assertNotNull(typeSet55);
    }

    @Test
    public void test02805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02805");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.util.Set<java.lang.reflect.Type> typeSet7 = springMvcApiReader2.typesToSkip;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger9 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter10 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader11 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger9, logAdapter10);
        java.lang.Class<?> wildcardClass12 = springMvcApiReader11.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass12);
        io.swagger.models.Swagger swagger14 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter15 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader16 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger14, logAdapter15);
        java.lang.reflect.Type[] typeArray17 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet18 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet18, typeArray17);
        springMvcApiReader16.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet18);
        io.swagger.models.Swagger swagger21 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader23 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger21, logAdapter22);
        java.lang.reflect.Type[] typeArray24 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet25 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet25, typeArray24);
        springMvcApiReader23.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet25);
        springMvcApiReader16.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet25);
        io.swagger.models.Swagger swagger29 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter30 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader31 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger29, logAdapter30);
        java.lang.reflect.Type[] typeArray32 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet33 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet33, typeArray32);
        springMvcApiReader31.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet33);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter36 = springMvcApiReader31.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap38 = null;
        java.lang.String str39 = springMvcApiReader31.parseOperationPath("", strMap38);
        io.swagger.annotations.Api api41 = null;
        boolean boolean42 = springMvcApiReader31.canReadApi(false, api41);
        java.util.Map<java.lang.String, java.lang.String> strMap44 = null;
        java.lang.String str45 = springMvcApiReader31.parseOperationPath("hi!", strMap44);
        io.swagger.models.Swagger swagger46 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter47 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader48 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger46, logAdapter47);
        java.lang.Class<?> wildcardClass49 = springMvcApiReader48.getClass();
        springMvcApiReader31.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass49);
        springMvcApiReader16.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass49);
        springMvcApiReader16.updateExtensionChain();
        io.swagger.models.Swagger swagger53 = null;
        springMvcApiReader16.swagger = swagger53;
        java.util.Set<java.lang.reflect.Type> typeSet55 = springMvcApiReader16.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet55);
        io.swagger.annotations.Api api58 = null;
        boolean boolean59 = springMvcApiReader2.canReadApi(true, api58);
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeSet7);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(typeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(typeArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(typeArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(logAdapter36);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "/hi!" + "'", str45, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(typeSet55);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
    }

    @Test
    public void test02806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02806");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        java.util.Set<java.lang.reflect.Type> typeSet5 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet6 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger14 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter15 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader16 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger14, logAdapter15);
        java.lang.reflect.Type[] typeArray17 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet18 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet18, typeArray17);
        springMvcApiReader16.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet18);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet18);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet18);
        springMvcApiReader2.updateExtensionChain();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter24 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger25 = springMvcApiReader2.swagger;
        java.util.Set<java.lang.reflect.Type> typeSet26 = springMvcApiReader2.typesToSkip;
        java.util.List<java.lang.reflect.Type> typeList27 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.setTypesToSkip(typeList27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeSet5);
        org.junit.Assert.assertNotNull(typeSet6);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(logAdapter24);
        org.junit.Assert.assertNull(swagger25);
        org.junit.Assert.assertNotNull(typeSet26);
    }

    @Test
    public void test02807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02807");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        java.util.Set<java.lang.reflect.Type> typeSet5 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet6 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger14 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter15 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader16 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger14, logAdapter15);
        java.lang.reflect.Type[] typeArray17 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet18 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet18, typeArray17);
        springMvcApiReader16.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet18);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet18);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet18);
        io.swagger.models.Operation operation23 = null;
        io.swagger.annotations.ApiOperation apiOperation24 = null;
        springMvcApiReader2.updateTagsForOperation(operation23, apiOperation24);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter26 = null;
        springMvcApiReader2.LOG = logAdapter26;
        java.util.Map<java.lang.String, java.lang.String> strMap29 = null;
        java.lang.String str30 = springMvcApiReader2.parseOperationPath("/hi!", strMap29);
        com.github.kongchen.swagger.docgen.spring.SpringResource springResource31 = null;
        // The following exception was thrown during execution in test generation
        try {
            io.swagger.models.Swagger swagger32 = springMvcApiReader2.read(springResource31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeSet5);
        org.junit.Assert.assertNotNull(typeSet6);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "/hi!" + "'", str30, "/hi!");
    }

    @Test
    public void test02808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02808");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        java.util.Set<java.lang.reflect.Type> typeSet5 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet6 = springMvcApiReader2.getTypesToSkip();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = null;
        java.lang.String str9 = springMvcApiReader2.parseOperationPath("", strMap8);
        io.swagger.models.Operation operation10 = null;
        io.swagger.annotations.ApiOperation apiOperation11 = null;
        springMvcApiReader2.updateTagsForOperation(operation10, apiOperation11);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter13 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger14 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter15 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader16 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger14, logAdapter15);
        java.lang.reflect.Type[] typeArray17 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet18 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet18, typeArray17);
        springMvcApiReader16.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet18);
        java.lang.annotation.Annotation[] annotationArray21 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList22 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList22, annotationArray21);
        boolean boolean24 = springMvcApiReader16.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList22);
        io.swagger.models.Swagger swagger25 = null;
        springMvcApiReader16.swagger = swagger25;
        java.lang.annotation.Annotation[] annotationArray27 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList28 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList28, annotationArray27);
        boolean boolean30 = springMvcApiReader16.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList28);
        java.lang.Class<?> wildcardClass31 = annotationList28.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass31);
        java.util.Map<java.lang.String, java.lang.String> strMap34 = null;
        java.lang.String str35 = springMvcApiReader2.parseOperationPath("hi!", strMap34);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter36 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger37 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter38 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader39 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger37, logAdapter38);
        java.lang.reflect.Type[] typeArray40 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet41 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet41, typeArray40);
        springMvcApiReader39.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet41);
        java.lang.annotation.Annotation[] annotationArray44 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList45 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList45, annotationArray44);
        boolean boolean47 = springMvcApiReader39.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList45);
        boolean boolean48 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList45);
        io.swagger.models.Swagger swagger49 = null;
        springMvcApiReader2.swagger = swagger49;
        org.junit.Assert.assertNotNull(typeSet5);
        org.junit.Assert.assertNotNull(typeSet6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNull(logAdapter13);
        org.junit.Assert.assertNotNull(typeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(annotationArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(annotationArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "/hi!" + "'", str35, "/hi!");
        org.junit.Assert.assertNull(logAdapter36);
        org.junit.Assert.assertNotNull(typeArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(annotationArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
    }

    @Test
    public void test02809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02809");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.util.Map<java.lang.String, java.lang.String> strMap4 = null;
        java.lang.String str5 = springMvcApiReader2.parseOperationPath("/hi!", strMap4);
        java.util.Set<java.lang.reflect.Type> typeSet6 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter14 = springMvcApiReader9.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap16 = null;
        java.lang.String str17 = springMvcApiReader9.parseOperationPath("", strMap16);
        io.swagger.models.Swagger swagger18 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter19 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader20 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger18, logAdapter19);
        java.lang.Class<?> wildcardClass21 = springMvcApiReader20.getClass();
        java.lang.reflect.Type[] typeArray22 = new java.lang.reflect.Type[] { wildcardClass21 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet23 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet23, typeArray22);
        springMvcApiReader9.typesToSkip = typeSet23;
        io.swagger.models.Operation operation26 = null;
        io.swagger.annotations.ApiOperation apiOperation27 = null;
        springMvcApiReader9.updateTagsForOperation(operation26, apiOperation27);
        io.swagger.models.Swagger swagger29 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter30 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader31 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger29, logAdapter30);
        java.lang.reflect.Type[] typeArray32 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet33 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet33, typeArray32);
        springMvcApiReader31.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet33);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter36 = springMvcApiReader31.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap38 = null;
        java.lang.String str39 = springMvcApiReader31.parseOperationPath("", strMap38);
        io.swagger.annotations.Api api41 = null;
        boolean boolean42 = springMvcApiReader31.canReadApi(false, api41);
        java.util.Map<java.lang.String, java.lang.String> strMap44 = null;
        java.lang.String str45 = springMvcApiReader31.parseOperationPath("hi!", strMap44);
        io.swagger.models.Swagger swagger46 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter47 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader48 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger46, logAdapter47);
        java.lang.reflect.Type[] typeArray49 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet50 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet50, typeArray49);
        springMvcApiReader48.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet50);
        io.swagger.models.Swagger swagger53 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter54 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader55 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger53, logAdapter54);
        java.lang.reflect.Type[] typeArray56 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet57 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet57, typeArray56);
        springMvcApiReader55.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet57);
        springMvcApiReader48.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet57);
        io.swagger.models.Swagger swagger61 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter62 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader63 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger61, logAdapter62);
        java.lang.reflect.Type[] typeArray64 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet65 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet65, typeArray64);
        springMvcApiReader63.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet65);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter68 = springMvcApiReader63.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap70 = null;
        java.lang.String str71 = springMvcApiReader63.parseOperationPath("", strMap70);
        io.swagger.annotations.Api api73 = null;
        boolean boolean74 = springMvcApiReader63.canReadApi(false, api73);
        java.util.Map<java.lang.String, java.lang.String> strMap76 = null;
        java.lang.String str77 = springMvcApiReader63.parseOperationPath("hi!", strMap76);
        io.swagger.models.Swagger swagger78 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter79 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader80 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger78, logAdapter79);
        java.lang.Class<?> wildcardClass81 = springMvcApiReader80.getClass();
        springMvcApiReader63.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass81);
        springMvcApiReader48.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass81);
        springMvcApiReader31.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass81);
        java.lang.annotation.Annotation[] annotationArray85 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList86 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList86, annotationArray85);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList88 = springMvcApiReader9.getParameters((java.lang.reflect.Type) wildcardClass81, (java.util.List<java.lang.annotation.Annotation>) annotationList86);
        boolean boolean89 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList86);
        springMvcApiReader2.updateExtensionChain();
        springMvcApiReader2.updateExtensionChain();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter92 = springMvcApiReader2.LOG;
        io.swagger.models.Operation operation95 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updatePath("hi!", "", operation95);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "/hi!" + "'", str5, "/hi!");
        org.junit.Assert.assertNotNull(typeSet6);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(logAdapter14);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(typeArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(typeArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(logAdapter36);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "/hi!" + "'", str45, "/hi!");
        org.junit.Assert.assertNotNull(typeArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(typeArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(typeArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNull(logAdapter68);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "" + "'", str71, "");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "/hi!" + "'", str77, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertNotNull(annotationArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(parameterList88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNull(logAdapter92);
    }

    @Test
    public void test02810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02810");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type type18 = null;
        springMvcApiReader17.addTypeToSkippedTypes(type18);
        java.util.Set<java.lang.reflect.Type> typeSet20 = springMvcApiReader17.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet20);
        io.swagger.models.Swagger swagger22 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader24 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger22, logAdapter23);
        java.lang.reflect.Type[] typeArray25 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet26 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet26, typeArray25);
        springMvcApiReader24.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet26);
        io.swagger.models.Swagger swagger29 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter30 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader31 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger29, logAdapter30);
        java.lang.reflect.Type[] typeArray32 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet33 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet33, typeArray32);
        springMvcApiReader31.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet33);
        springMvcApiReader24.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet33);
        io.swagger.models.Swagger swagger37 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter38 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader39 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger37, logAdapter38);
        java.lang.reflect.Type[] typeArray40 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet41 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet41, typeArray40);
        springMvcApiReader39.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet41);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter44 = springMvcApiReader39.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap46 = null;
        java.lang.String str47 = springMvcApiReader39.parseOperationPath("", strMap46);
        io.swagger.annotations.Api api49 = null;
        boolean boolean50 = springMvcApiReader39.canReadApi(false, api49);
        java.util.Map<java.lang.String, java.lang.String> strMap52 = null;
        java.lang.String str53 = springMvcApiReader39.parseOperationPath("hi!", strMap52);
        io.swagger.models.Swagger swagger54 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter55 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader56 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger54, logAdapter55);
        java.lang.Class<?> wildcardClass57 = springMvcApiReader56.getClass();
        springMvcApiReader39.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass57);
        springMvcApiReader24.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass57);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter60 = springMvcApiReader24.LOG;
        io.swagger.models.Swagger swagger61 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter62 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader63 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger61, logAdapter62);
        java.lang.reflect.Type[] typeArray64 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet65 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet65, typeArray64);
        springMvcApiReader63.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet65);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter68 = springMvcApiReader63.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap70 = null;
        java.lang.String str71 = springMvcApiReader63.parseOperationPath("", strMap70);
        java.lang.reflect.Type[] typeArray72 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList73 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList73, typeArray72);
        springMvcApiReader63.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList73);
        springMvcApiReader24.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList73);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList73);
        io.swagger.models.Swagger swagger78 = springMvcApiReader2.swagger;
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap79 = null;
        io.swagger.annotations.Api api80 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, io.swagger.models.Tag> strMap81 = springMvcApiReader2.updateTagsForApi(strMap79, api80);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeSet20);
        org.junit.Assert.assertNotNull(typeArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(typeArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(typeArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(logAdapter44);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "/hi!" + "'", str53, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNull(logAdapter60);
        org.junit.Assert.assertNotNull(typeArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNull(logAdapter68);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "" + "'", str71, "");
        org.junit.Assert.assertNotNull(typeArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNull(swagger78);
    }

    @Test
    public void test02811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02811");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader2.parseOperationPath("hi!", strMap15);
        io.swagger.models.Operation operation17 = null;
        io.swagger.annotations.ApiOperation apiOperation18 = null;
        springMvcApiReader2.updateTagsForOperation(operation17, apiOperation18);
        springMvcApiReader2.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet21 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger22 = springMvcApiReader2.swagger;
        com.github.kongchen.swagger.docgen.spring.SpringResource springResource23 = null;
        // The following exception was thrown during execution in test generation
        try {
            io.swagger.models.Swagger swagger24 = springMvcApiReader2.read(springResource23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/hi!" + "'", str16, "/hi!");
        org.junit.Assert.assertNotNull(typeSet21);
        org.junit.Assert.assertNull(swagger22);
    }

    @Test
    public void test02812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02812");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type[] typeArray18 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet19 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet19, typeArray18);
        springMvcApiReader17.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet19);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = springMvcApiReader17.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap24 = null;
        java.lang.String str25 = springMvcApiReader17.parseOperationPath("", strMap24);
        io.swagger.annotations.Api api27 = null;
        boolean boolean28 = springMvcApiReader17.canReadApi(false, api27);
        java.util.Map<java.lang.String, java.lang.String> strMap30 = null;
        java.lang.String str31 = springMvcApiReader17.parseOperationPath("hi!", strMap30);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.Class<?> wildcardClass35 = springMvcApiReader34.getClass();
        springMvcApiReader17.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger39 = null;
        springMvcApiReader2.swagger = swagger39;
        java.util.Set<java.lang.reflect.Type> typeSet41 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger42 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter43 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader44 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger42, logAdapter43);
        java.lang.reflect.Type[] typeArray45 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet46 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet46, typeArray45);
        springMvcApiReader44.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet46);
        java.lang.annotation.Annotation[] annotationArray49 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList50 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList50, annotationArray49);
        boolean boolean52 = springMvcApiReader44.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList50);
        java.util.Set<java.lang.reflect.Type> typeSet53 = springMvcApiReader44.typesToSkip;
        springMvcApiReader44.updateExtensionChain();
        io.swagger.models.Operation operation55 = null;
        io.swagger.annotations.ApiOperation apiOperation56 = null;
        springMvcApiReader44.updateTagsForOperation(operation55, apiOperation56);
        io.swagger.annotations.Api api59 = null;
        boolean boolean60 = springMvcApiReader44.canReadApi(true, api59);
        io.swagger.models.Swagger swagger61 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter62 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader63 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger61, logAdapter62);
        java.lang.reflect.Type[] typeArray64 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet65 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet65, typeArray64);
        springMvcApiReader63.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet65);
        java.lang.annotation.Annotation[] annotationArray68 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList69 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList69, annotationArray68);
        boolean boolean71 = springMvcApiReader63.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList69);
        io.swagger.models.Swagger swagger72 = null;
        springMvcApiReader63.swagger = swagger72;
        java.util.Set<java.lang.reflect.Type> typeSet74 = springMvcApiReader63.getTypesToSkip();
        java.lang.Class<?> wildcardClass75 = springMvcApiReader63.getClass();
        java.lang.annotation.Annotation[] annotationArray76 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList77 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList77, annotationArray76);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList79 = springMvcApiReader44.getParameters((java.lang.reflect.Type) wildcardClass75, (java.util.List<java.lang.annotation.Annotation>) annotationList77);
        java.util.Map<java.lang.String, java.lang.String> strMap80 = null;
        io.swagger.models.Operation operation81 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateOperationParameters(parameterList79, strMap80, operation81);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(logAdapter22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "/hi!" + "'", str31, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(typeSet41);
        org.junit.Assert.assertNotNull(typeArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(annotationArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(typeSet53);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(typeArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(annotationArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(typeSet74);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(annotationArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(parameterList79);
    }

    @Test
    public void test02813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02813");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        io.swagger.models.Swagger swagger14 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter15 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader16 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger14, logAdapter15);
        java.lang.reflect.Type type17 = null;
        springMvcApiReader16.addTypeToSkippedTypes(type17);
        java.util.Set<java.lang.reflect.Type> typeSet19 = springMvcApiReader16.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet20 = springMvcApiReader16.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet20);
        io.swagger.annotations.Api api23 = null;
        boolean boolean24 = springMvcApiReader2.canReadApi(false, api23);
        io.swagger.models.Swagger swagger25 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter26 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader27 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger25, logAdapter26);
        java.lang.reflect.Type[] typeArray28 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet29 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet29, typeArray28);
        springMvcApiReader27.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet29);
        java.lang.annotation.Annotation[] annotationArray32 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList33 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList33, annotationArray32);
        boolean boolean35 = springMvcApiReader27.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList33);
        io.swagger.models.Swagger swagger36 = null;
        springMvcApiReader27.swagger = swagger36;
        io.swagger.annotations.ResponseHeader[] responseHeaderArray38 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap39 = springMvcApiReader27.parseResponseHeaders(responseHeaderArray38);
        io.swagger.models.Swagger swagger40 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter41 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader42 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger40, logAdapter41);
        java.lang.reflect.Type[] typeArray43 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet44 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet44, typeArray43);
        springMvcApiReader42.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet44);
        io.swagger.models.Swagger swagger47 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter48 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader49 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger47, logAdapter48);
        java.lang.reflect.Type[] typeArray50 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet51 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet51, typeArray50);
        springMvcApiReader49.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet51);
        springMvcApiReader42.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet51);
        io.swagger.models.Swagger swagger55 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter56 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader57 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger55, logAdapter56);
        java.lang.reflect.Type[] typeArray58 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet59 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet59, typeArray58);
        springMvcApiReader57.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet59);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter62 = springMvcApiReader57.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap64 = null;
        java.lang.String str65 = springMvcApiReader57.parseOperationPath("", strMap64);
        io.swagger.annotations.Api api67 = null;
        boolean boolean68 = springMvcApiReader57.canReadApi(false, api67);
        java.util.Map<java.lang.String, java.lang.String> strMap70 = null;
        java.lang.String str71 = springMvcApiReader57.parseOperationPath("hi!", strMap70);
        io.swagger.models.Swagger swagger72 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter73 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader74 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger72, logAdapter73);
        java.lang.Class<?> wildcardClass75 = springMvcApiReader74.getClass();
        springMvcApiReader57.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass75);
        springMvcApiReader42.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass75);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter78 = springMvcApiReader42.LOG;
        io.swagger.models.Swagger swagger79 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter80 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader81 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger79, logAdapter80);
        java.lang.reflect.Type[] typeArray82 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet83 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet83, typeArray82);
        springMvcApiReader81.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet83);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter86 = springMvcApiReader81.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap88 = null;
        java.lang.String str89 = springMvcApiReader81.parseOperationPath("", strMap88);
        java.lang.reflect.Type[] typeArray90 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList91 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean92 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList91, typeArray90);
        springMvcApiReader81.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList91);
        springMvcApiReader42.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList91);
        springMvcApiReader27.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList91);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList91);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter97 = springMvcApiReader2.LOG;
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(typeSet19);
        org.junit.Assert.assertNotNull(typeSet20);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(typeArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(annotationArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(responseHeaderArray38);
        org.junit.Assert.assertNull(strMap39);
        org.junit.Assert.assertNotNull(typeArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(typeArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(typeArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNull(logAdapter62);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "" + "'", str65, "");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "/hi!" + "'", str71, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNull(logAdapter78);
        org.junit.Assert.assertNotNull(typeArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNull(logAdapter86);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "" + "'", str89, "");
        org.junit.Assert.assertNotNull(typeArray90);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNull(logAdapter97);
    }

    @Test
    public void test02814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02814");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        java.lang.reflect.Type[] typeArray11 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList12 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList12, typeArray11);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList12);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!", "", "hi!" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap20 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray21 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList22 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList22, securityRequirementArray21);
        io.swagger.models.Operation operation24 = null;
        springMvcApiReader2.updateOperation(strArray15, strArray19, strMap20, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList22, operation24);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger27 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter28 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader29 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger27, logAdapter28);
        java.lang.reflect.Type[] typeArray30 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet31 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet31, typeArray30);
        springMvcApiReader29.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet31);
        java.util.Set<java.lang.reflect.Type> typeSet34 = springMvcApiReader29.typesToSkip;
        springMvcApiReader29.updateExtensionChain();
        io.swagger.models.Swagger swagger36 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter37 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader38 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger36, logAdapter37);
        java.lang.Class<?> wildcardClass39 = springMvcApiReader38.getClass();
        springMvcApiReader29.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass39);
        io.swagger.models.Swagger swagger41 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter42 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader43 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger41, logAdapter42);
        java.lang.Class<?> wildcardClass44 = springMvcApiReader43.getClass();
        java.lang.annotation.Annotation[] annotationArray45 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList46 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList46, annotationArray45);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList48 = springMvcApiReader29.getParameters((java.lang.reflect.Type) wildcardClass44, (java.util.List<java.lang.annotation.Annotation>) annotationList46);
        boolean boolean49 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList46);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter50 = null;
        springMvcApiReader2.LOG = logAdapter50;
        io.swagger.models.Operation operation52 = null;
        io.swagger.annotations.ApiOperation apiOperation53 = null;
        springMvcApiReader2.updateTagsForOperation(operation52, apiOperation53);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter55 = null;
        springMvcApiReader2.LOG = logAdapter55;
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(typeArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(securityRequirementArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(typeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(typeSet34);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(annotationArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(parameterList48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    }

    @Test
    public void test02815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02815");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        io.swagger.models.Swagger swagger5 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger6 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader8 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger6, logAdapter7);
        java.lang.reflect.Type[] typeArray9 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet10 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet10, typeArray9);
        springMvcApiReader8.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet10);
        io.swagger.models.Swagger swagger13 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter14 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader15 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger13, logAdapter14);
        java.lang.reflect.Type[] typeArray16 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet17 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet17, typeArray16);
        springMvcApiReader15.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet17);
        springMvcApiReader8.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet17);
        io.swagger.models.Swagger swagger21 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader23 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger21, logAdapter22);
        java.lang.reflect.Type[] typeArray24 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet25 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet25, typeArray24);
        springMvcApiReader23.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet25);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter28 = springMvcApiReader23.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap30 = null;
        java.lang.String str31 = springMvcApiReader23.parseOperationPath("", strMap30);
        io.swagger.annotations.Api api33 = null;
        boolean boolean34 = springMvcApiReader23.canReadApi(false, api33);
        java.util.Map<java.lang.String, java.lang.String> strMap36 = null;
        java.lang.String str37 = springMvcApiReader23.parseOperationPath("hi!", strMap36);
        io.swagger.models.Swagger swagger38 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter39 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader40 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger38, logAdapter39);
        java.lang.Class<?> wildcardClass41 = springMvcApiReader40.getClass();
        springMvcApiReader23.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass41);
        springMvcApiReader8.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass41);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter44 = springMvcApiReader8.LOG;
        io.swagger.models.Swagger swagger45 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter46 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader47 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger45, logAdapter46);
        java.lang.reflect.Type[] typeArray48 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet49 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet49, typeArray48);
        springMvcApiReader47.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet49);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter52 = springMvcApiReader47.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap54 = null;
        java.lang.String str55 = springMvcApiReader47.parseOperationPath("", strMap54);
        java.lang.reflect.Type[] typeArray56 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList57 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList57, typeArray56);
        springMvcApiReader47.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList57);
        springMvcApiReader8.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList57);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList57);
        io.swagger.models.Swagger swagger62 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter63 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader64 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger62, logAdapter63);
        java.lang.reflect.Type[] typeArray65 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet66 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet66, typeArray65);
        springMvcApiReader64.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet66);
        java.util.Set<java.lang.reflect.Type> typeSet69 = springMvcApiReader64.typesToSkip;
        springMvcApiReader64.updateExtensionChain();
        io.swagger.models.Operation operation71 = null;
        io.swagger.annotations.ApiOperation apiOperation72 = null;
        springMvcApiReader64.updateTagsForOperation(operation71, apiOperation72);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter74 = springMvcApiReader64.LOG;
        java.util.Set<java.lang.reflect.Type> typeSet75 = springMvcApiReader64.getTypesToSkip();
        springMvcApiReader2.setTypesToSkip(typeSet75);
        io.swagger.models.Operation operation79 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updatePath("hi!", "hi!", operation79);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(swagger5);
        org.junit.Assert.assertNotNull(typeArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(typeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(typeArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(logAdapter28);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "/hi!" + "'", str37, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNull(logAdapter44);
        org.junit.Assert.assertNotNull(typeArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNull(logAdapter52);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertNotNull(typeArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(typeArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(typeSet69);
        org.junit.Assert.assertNull(logAdapter74);
        org.junit.Assert.assertNotNull(typeSet75);
    }

    @Test
    public void test02816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02816");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.models.Swagger swagger11 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter12 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader13 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger11, logAdapter12);
        java.lang.Class<?> wildcardClass14 = springMvcApiReader13.getClass();
        java.lang.reflect.Type[] typeArray15 = new java.lang.reflect.Type[] { wildcardClass14 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet16 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet16, typeArray15);
        springMvcApiReader2.typesToSkip = typeSet16;
        java.util.Set<java.lang.reflect.Type> typeSet19 = springMvcApiReader2.getTypesToSkip();
        io.swagger.annotations.Api api21 = null;
        boolean boolean22 = springMvcApiReader2.canReadApi(false, api21);
        io.swagger.models.Swagger swagger23 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter24 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader25 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger23, logAdapter24);
        java.lang.reflect.Type type26 = null;
        springMvcApiReader25.addTypeToSkippedTypes(type26);
        java.util.Set<java.lang.reflect.Type> typeSet28 = springMvcApiReader25.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet29 = springMvcApiReader25.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet30 = null;
        springMvcApiReader25.typesToSkip = typeSet30;
        java.lang.Class<?> wildcardClass32 = springMvcApiReader25.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass32);
        java.util.Set<java.lang.reflect.Type> typeSet34 = springMvcApiReader2.typesToSkip;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter35 = springMvcApiReader2.LOG;
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(typeArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(typeSet19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(typeSet28);
        org.junit.Assert.assertNotNull(typeSet29);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(typeSet34);
        org.junit.Assert.assertNull(logAdapter35);
    }

    @Test
    public void test02817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02817");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.models.Swagger swagger11 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger12 = springMvcApiReader2.swagger;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter13 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger14 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter15 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader16 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger14, logAdapter15);
        java.lang.reflect.Type[] typeArray17 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet18 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet18, typeArray17);
        springMvcApiReader16.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet18);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter21 = springMvcApiReader16.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap23 = null;
        java.lang.String str24 = springMvcApiReader16.parseOperationPath("", strMap23);
        io.swagger.annotations.Api api26 = null;
        boolean boolean27 = springMvcApiReader16.canReadApi(false, api26);
        java.util.Map<java.lang.String, java.lang.String> strMap29 = null;
        java.lang.String str30 = springMvcApiReader16.parseOperationPath("hi!", strMap29);
        io.swagger.models.Swagger swagger31 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter32 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader33 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger31, logAdapter32);
        java.lang.Class<?> wildcardClass34 = springMvcApiReader33.getClass();
        springMvcApiReader16.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass34);
        io.swagger.models.Swagger swagger36 = null;
        springMvcApiReader16.swagger = swagger36;
        io.swagger.models.Swagger swagger38 = springMvcApiReader16.swagger;
        io.swagger.models.Swagger swagger39 = springMvcApiReader16.swagger;
        io.swagger.models.Swagger swagger40 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter41 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader42 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger40, logAdapter41);
        java.lang.reflect.Type[] typeArray43 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet44 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet44, typeArray43);
        springMvcApiReader42.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet44);
        java.util.Set<java.lang.reflect.Type> typeSet47 = springMvcApiReader42.typesToSkip;
        springMvcApiReader42.updateExtensionChain();
        io.swagger.models.Swagger swagger49 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter50 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader51 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger49, logAdapter50);
        java.lang.Class<?> wildcardClass52 = springMvcApiReader51.getClass();
        springMvcApiReader42.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        springMvcApiReader16.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        io.swagger.models.Swagger swagger55 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter56 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader57 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger55, logAdapter56);
        java.lang.reflect.Type[] typeArray58 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet59 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet59, typeArray58);
        springMvcApiReader57.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet59);
        java.lang.annotation.Annotation[] annotationArray62 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList63 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList63, annotationArray62);
        boolean boolean65 = springMvcApiReader57.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList63);
        java.util.Set<java.lang.reflect.Type> typeSet66 = springMvcApiReader57.typesToSkip;
        springMvcApiReader57.updateExtensionChain();
        io.swagger.models.Operation operation68 = null;
        io.swagger.annotations.ApiOperation apiOperation69 = null;
        springMvcApiReader57.updateTagsForOperation(operation68, apiOperation69);
        io.swagger.annotations.Api api72 = null;
        boolean boolean73 = springMvcApiReader57.canReadApi(true, api72);
        io.swagger.models.Swagger swagger74 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter75 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader76 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger74, logAdapter75);
        java.lang.reflect.Type[] typeArray77 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet78 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet78, typeArray77);
        springMvcApiReader76.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet78);
        java.lang.annotation.Annotation[] annotationArray81 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList82 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList82, annotationArray81);
        boolean boolean84 = springMvcApiReader76.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList82);
        io.swagger.models.Swagger swagger85 = null;
        springMvcApiReader76.swagger = swagger85;
        java.util.Set<java.lang.reflect.Type> typeSet87 = springMvcApiReader76.getTypesToSkip();
        java.lang.Class<?> wildcardClass88 = springMvcApiReader76.getClass();
        java.lang.annotation.Annotation[] annotationArray89 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList90 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean91 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList90, annotationArray89);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList92 = springMvcApiReader57.getParameters((java.lang.reflect.Type) wildcardClass88, (java.util.List<java.lang.annotation.Annotation>) annotationList90);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList93 = springMvcApiReader2.getParameters((java.lang.reflect.Type) wildcardClass52, (java.util.List<java.lang.annotation.Annotation>) annotationList90);
        java.lang.Class<?> wildcardClass94 = springMvcApiReader2.getClass();
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(swagger11);
        org.junit.Assert.assertNull(swagger12);
        org.junit.Assert.assertNull(logAdapter13);
        org.junit.Assert.assertNotNull(typeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(logAdapter21);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "/hi!" + "'", str30, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNull(swagger38);
        org.junit.Assert.assertNull(swagger39);
        org.junit.Assert.assertNotNull(typeArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(typeSet47);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(typeArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(annotationArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(typeSet66);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(typeArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(annotationArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(typeSet87);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertNotNull(annotationArray89);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(parameterList92);
        org.junit.Assert.assertNotNull(parameterList93);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test02818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02818");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.util.Set<java.lang.reflect.Type> typeSet7 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger8 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader10 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger8, logAdapter9);
        java.lang.reflect.Type[] typeArray11 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet12 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet12, typeArray11);
        springMvcApiReader10.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet12);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter15 = springMvcApiReader10.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap17 = null;
        java.lang.String str18 = springMvcApiReader10.parseOperationPath("", strMap17);
        io.swagger.annotations.Api api20 = null;
        boolean boolean21 = springMvcApiReader10.canReadApi(false, api20);
        java.util.Map<java.lang.String, java.lang.String> strMap23 = null;
        java.lang.String str24 = springMvcApiReader10.parseOperationPath("hi!", strMap23);
        io.swagger.models.Swagger swagger25 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter26 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader27 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger25, logAdapter26);
        java.lang.reflect.Type[] typeArray28 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet29 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet29, typeArray28);
        springMvcApiReader27.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet29);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.reflect.Type[] typeArray35 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet36 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet36, typeArray35);
        springMvcApiReader34.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet36);
        springMvcApiReader27.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet36);
        io.swagger.models.Swagger swagger40 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter41 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader42 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger40, logAdapter41);
        java.lang.reflect.Type[] typeArray43 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet44 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet44, typeArray43);
        springMvcApiReader42.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet44);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter47 = springMvcApiReader42.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap49 = null;
        java.lang.String str50 = springMvcApiReader42.parseOperationPath("", strMap49);
        io.swagger.annotations.Api api52 = null;
        boolean boolean53 = springMvcApiReader42.canReadApi(false, api52);
        java.util.Map<java.lang.String, java.lang.String> strMap55 = null;
        java.lang.String str56 = springMvcApiReader42.parseOperationPath("hi!", strMap55);
        io.swagger.models.Swagger swagger57 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter58 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader59 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger57, logAdapter58);
        java.lang.Class<?> wildcardClass60 = springMvcApiReader59.getClass();
        springMvcApiReader42.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass60);
        springMvcApiReader27.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass60);
        springMvcApiReader10.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass60);
        io.swagger.models.Swagger swagger64 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter65 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader66 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger64, logAdapter65);
        java.lang.reflect.Type[] typeArray67 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet68 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet68, typeArray67);
        springMvcApiReader66.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet68);
        java.lang.annotation.Annotation[] annotationArray71 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList72 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList72, annotationArray71);
        boolean boolean74 = springMvcApiReader66.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList72);
        io.swagger.models.Swagger swagger75 = null;
        springMvcApiReader66.swagger = swagger75;
        java.lang.annotation.Annotation[] annotationArray77 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList78 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList78, annotationArray77);
        boolean boolean80 = springMvcApiReader66.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList78);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList81 = springMvcApiReader2.getParameters((java.lang.reflect.Type) wildcardClass60, (java.util.List<java.lang.annotation.Annotation>) annotationList78);
        java.util.Set<java.lang.reflect.Type> typeSet82 = springMvcApiReader2.getTypesToSkip();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter83 = springMvcApiReader2.LOG;
        java.util.Set<java.lang.reflect.Type> typeSet84 = springMvcApiReader2.getTypesToSkip();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter85 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger86 = springMvcApiReader2.swagger;
        java.util.Set<java.lang.reflect.Type> typeSet87 = springMvcApiReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet88 = springMvcApiReader2.typesToSkip;
        java.lang.Class<?> wildcardClass89 = springMvcApiReader2.getClass();
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeSet7);
        org.junit.Assert.assertNotNull(typeArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(logAdapter15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "/hi!" + "'", str24, "/hi!");
        org.junit.Assert.assertNotNull(typeArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(typeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(typeArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(logAdapter47);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "/hi!" + "'", str56, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(typeArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(annotationArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(annotationArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(parameterList81);
        org.junit.Assert.assertNotNull(typeSet82);
        org.junit.Assert.assertNull(logAdapter83);
        org.junit.Assert.assertNotNull(typeSet84);
        org.junit.Assert.assertNull(logAdapter85);
        org.junit.Assert.assertNull(swagger86);
        org.junit.Assert.assertNotNull(typeSet87);
        org.junit.Assert.assertNotNull(typeSet88);
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test02819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02819");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        java.util.Map<java.lang.String, java.lang.String> strMap16 = null;
        java.lang.String str17 = springMvcApiReader2.parseOperationPath("/hi!", strMap16);
        io.swagger.models.Swagger swagger18 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter19 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader20 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger18, logAdapter19);
        java.lang.reflect.Type[] typeArray21 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet22 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet22, typeArray21);
        springMvcApiReader20.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet22);
        java.lang.annotation.Annotation[] annotationArray25 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList26 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList26, annotationArray25);
        boolean boolean28 = springMvcApiReader20.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList26);
        io.swagger.models.Swagger swagger29 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter30 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader31 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger29, logAdapter30);
        java.lang.Class<?> wildcardClass32 = springMvcApiReader31.getClass();
        springMvcApiReader20.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass32);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass32);
        java.util.List<java.lang.annotation.Annotation> annotationList35 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean36 = springMvcApiReader2.hasValidAnnotations(annotationList35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "/hi!" + "'", str17, "/hi!");
        org.junit.Assert.assertNotNull(typeArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(annotationArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test02820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02820");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        java.util.Set<java.lang.reflect.Type> typeSet5 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet6 = springMvcApiReader2.getTypesToSkip();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = null;
        java.lang.String str9 = springMvcApiReader2.parseOperationPath("", strMap8);
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader12 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger10, logAdapter11);
        java.lang.reflect.Type[] typeArray13 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet14 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet14, typeArray13);
        springMvcApiReader12.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet14);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter17 = springMvcApiReader12.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap19 = null;
        java.lang.String str20 = springMvcApiReader12.parseOperationPath("", strMap19);
        io.swagger.annotations.Api api22 = null;
        boolean boolean23 = springMvcApiReader12.canReadApi(false, api22);
        java.util.Map<java.lang.String, java.lang.String> strMap25 = null;
        java.lang.String str26 = springMvcApiReader12.parseOperationPath("hi!", strMap25);
        io.swagger.models.Swagger swagger27 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter28 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader29 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger27, logAdapter28);
        java.lang.Class<?> wildcardClass30 = springMvcApiReader29.getClass();
        springMvcApiReader12.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass30);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.reflect.Type[] typeArray35 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet36 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet36, typeArray35);
        springMvcApiReader34.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet36);
        java.lang.annotation.Annotation[] annotationArray39 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList40 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList40, annotationArray39);
        boolean boolean42 = springMvcApiReader34.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList40);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList43 = springMvcApiReader2.getParameters((java.lang.reflect.Type) wildcardClass30, (java.util.List<java.lang.annotation.Annotation>) annotationList40);
        springMvcApiReader2.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet45 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger46 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter47 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader48 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger46, logAdapter47);
        java.lang.reflect.Type[] typeArray49 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet50 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet50, typeArray49);
        springMvcApiReader48.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet50);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter53 = springMvcApiReader48.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap55 = null;
        java.lang.String str56 = springMvcApiReader48.parseOperationPath("", strMap55);
        io.swagger.annotations.Api api58 = null;
        boolean boolean59 = springMvcApiReader48.canReadApi(false, api58);
        java.util.Map<java.lang.String, java.lang.String> strMap61 = null;
        java.lang.String str62 = springMvcApiReader48.parseOperationPath("", strMap61);
        java.util.Set<java.lang.reflect.Type> typeSet63 = springMvcApiReader48.getTypesToSkip();
        springMvcApiReader2.setTypesToSkip(typeSet63);
        io.swagger.models.Operation operation65 = null;
        io.swagger.annotations.ApiOperation apiOperation66 = null;
        springMvcApiReader2.updateTagsForOperation(operation65, apiOperation66);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter68 = null;
        springMvcApiReader2.LOG = logAdapter68;
        org.junit.Assert.assertNotNull(typeSet5);
        org.junit.Assert.assertNotNull(typeSet6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(typeArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(logAdapter17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "/hi!" + "'", str26, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(typeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(annotationArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(parameterList43);
        org.junit.Assert.assertNotNull(typeSet45);
        org.junit.Assert.assertNotNull(typeArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNull(logAdapter53);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "" + "'", str62, "");
        org.junit.Assert.assertNotNull(typeSet63);
    }

    @Test
    public void test02821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02821");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        io.swagger.models.Swagger swagger5 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger6 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader8 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger6, logAdapter7);
        java.lang.reflect.Type type9 = null;
        springMvcApiReader8.addTypeToSkippedTypes(type9);
        java.util.Set<java.lang.reflect.Type> typeSet11 = springMvcApiReader8.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet11);
        io.swagger.models.Swagger swagger13 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter14 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader15 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger13, logAdapter14);
        java.lang.reflect.Type[] typeArray16 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet17 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet17, typeArray16);
        springMvcApiReader15.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet17);
        io.swagger.models.Swagger swagger20 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter21 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader22 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger20, logAdapter21);
        java.lang.reflect.Type[] typeArray23 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet24 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet24, typeArray23);
        springMvcApiReader22.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet24);
        springMvcApiReader15.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet24);
        java.util.Map<java.lang.String, java.lang.String> strMap29 = null;
        java.lang.String str30 = springMvcApiReader15.parseOperationPath("/hi!", strMap29);
        io.swagger.models.Swagger swagger31 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter32 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader33 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger31, logAdapter32);
        java.lang.reflect.Type[] typeArray34 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet35 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet35, typeArray34);
        springMvcApiReader33.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet35);
        java.lang.annotation.Annotation[] annotationArray38 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList39 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList39, annotationArray38);
        boolean boolean41 = springMvcApiReader33.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList39);
        io.swagger.models.Swagger swagger42 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter43 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader44 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger42, logAdapter43);
        java.lang.Class<?> wildcardClass45 = springMvcApiReader44.getClass();
        springMvcApiReader33.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass45);
        springMvcApiReader15.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass45);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass45);
        java.util.Set<java.lang.reflect.Type> typeSet49 = springMvcApiReader2.getTypesToSkip();
        io.swagger.annotations.Api api50 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<io.swagger.models.SecurityRequirement> securityRequirementList51 = springMvcApiReader2.getSecurityRequirements(api50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(swagger5);
        org.junit.Assert.assertNotNull(typeSet11);
        org.junit.Assert.assertNotNull(typeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(typeArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "/hi!" + "'", str30, "/hi!");
        org.junit.Assert.assertNotNull(typeArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(annotationArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(typeSet49);
    }

    @Test
    public void test02822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02822");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        io.swagger.annotations.Api api9 = null;
        boolean boolean10 = springMvcApiReader2.canReadApi(true, api9);
        io.swagger.models.Swagger swagger11 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter12 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader13 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger11, logAdapter12);
        java.lang.reflect.Type[] typeArray14 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet15 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet15, typeArray14);
        springMvcApiReader13.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet15);
        io.swagger.models.Swagger swagger18 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter19 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader20 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger18, logAdapter19);
        java.lang.reflect.Type[] typeArray21 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet22 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet22, typeArray21);
        springMvcApiReader20.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet22);
        springMvcApiReader13.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet22);
        io.swagger.models.Swagger swagger26 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter27 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader28 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger26, logAdapter27);
        java.lang.reflect.Type type29 = null;
        springMvcApiReader28.addTypeToSkippedTypes(type29);
        java.util.Set<java.lang.reflect.Type> typeSet31 = springMvcApiReader28.typesToSkip;
        springMvcApiReader13.setTypesToSkip(typeSet31);
        springMvcApiReader2.typesToSkip = typeSet31;
        java.util.Set<java.lang.reflect.Type> typeSet34 = springMvcApiReader2.typesToSkip;
        io.swagger.annotations.Api api35 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<io.swagger.models.SecurityRequirement> securityRequirementList36 = springMvcApiReader2.getSecurityRequirements(api35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(typeArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(typeArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(typeSet31);
        org.junit.Assert.assertNotNull(typeSet34);
    }

    @Test
    public void test02823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02823");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader2.parseOperationPath("hi!", strMap15);
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.Class<?> wildcardClass20 = springMvcApiReader19.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass20);
        io.swagger.models.Swagger swagger22 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader24 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger22, logAdapter23);
        java.lang.reflect.Type[] typeArray25 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet26 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet26, typeArray25);
        springMvcApiReader24.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet26);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter29 = springMvcApiReader24.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap31 = null;
        java.lang.String str32 = springMvcApiReader24.parseOperationPath("", strMap31);
        java.lang.reflect.Type[] typeArray33 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList34 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList34, typeArray33);
        springMvcApiReader24.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList34);
        java.lang.String[] strArray37 = new java.lang.String[] {};
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!", "", "hi!" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap42 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray43 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList44 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList44, securityRequirementArray43);
        io.swagger.models.Operation operation46 = null;
        springMvcApiReader24.updateOperation(strArray37, strArray41, strMap42, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList44, operation46);
        java.lang.String[] strArray54 = new java.lang.String[] { "/hi!", "", "/hi!", "hi!", "hi!", "hi!" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap55 = null;
        io.swagger.models.Swagger swagger56 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter57 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader58 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger56, logAdapter57);
        java.lang.reflect.Type[] typeArray59 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet60 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet60, typeArray59);
        springMvcApiReader58.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet60);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter63 = springMvcApiReader58.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap65 = null;
        java.lang.String str66 = springMvcApiReader58.parseOperationPath("", strMap65);
        java.lang.reflect.Type[] typeArray67 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList68 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList68, typeArray67);
        springMvcApiReader58.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList68);
        java.lang.String[] strArray71 = new java.lang.String[] {};
        java.lang.String[] strArray75 = new java.lang.String[] { "hi!", "", "hi!" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap76 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray77 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList78 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList78, securityRequirementArray77);
        io.swagger.models.Operation operation80 = null;
        springMvcApiReader58.updateOperation(strArray71, strArray75, strMap76, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList78, operation80);
        io.swagger.models.Operation operation82 = null;
        springMvcApiReader2.updateOperation(strArray37, strArray54, strMap55, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList78, operation82);
        io.swagger.models.Swagger swagger84 = null;
        springMvcApiReader2.swagger = swagger84;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter86 = springMvcApiReader2.LOG;
        io.swagger.models.Operation operation87 = null;
        io.swagger.annotations.ApiOperation apiOperation88 = null;
        springMvcApiReader2.updateTagsForOperation(operation87, apiOperation88);
        io.swagger.models.Swagger swagger90 = springMvcApiReader2.swagger;
        java.util.Set<java.lang.reflect.Type> typeSet91 = springMvcApiReader2.getTypesToSkip();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter92 = null;
        springMvcApiReader2.LOG = logAdapter92;
        io.swagger.models.Operation operation94 = null;
        io.swagger.annotations.ApiOperation apiOperation95 = null;
        springMvcApiReader2.updateTagsForOperation(operation94, apiOperation95);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter97 = springMvcApiReader2.LOG;
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/hi!" + "'", str16, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(typeArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(logAdapter29);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertNotNull(typeArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(securityRequirementArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(typeArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNull(logAdapter63);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "" + "'", str66, "");
        org.junit.Assert.assertNotNull(typeArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertNotNull(securityRequirementArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNull(logAdapter86);
        org.junit.Assert.assertNull(swagger90);
        org.junit.Assert.assertNotNull(typeSet91);
        org.junit.Assert.assertNull(logAdapter97);
    }

    @Test
    public void test02824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02824");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        java.util.Set<java.lang.reflect.Type> typeSet5 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger6 = springMvcApiReader2.swagger;
        springMvcApiReader2.updateExtensionChain();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = springMvcApiReader2.LOG;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Operation operation10 = null;
        io.swagger.annotations.ApiOperation apiOperation11 = null;
        springMvcApiReader2.updateTagsForOperation(operation10, apiOperation11);
        java.util.Set<java.lang.reflect.Type> typeSet13 = springMvcApiReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet14 = springMvcApiReader2.getTypesToSkip();
        io.swagger.annotations.Api api15 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<io.swagger.models.SecurityRequirement> securityRequirementList16 = springMvcApiReader2.getSecurityRequirements(api15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeSet5);
        org.junit.Assert.assertNull(swagger6);
        org.junit.Assert.assertNull(logAdapter8);
        org.junit.Assert.assertNotNull(typeSet13);
        org.junit.Assert.assertNotNull(typeSet14);
    }

    @Test
    public void test02825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02825");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type[] typeArray18 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet19 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet19, typeArray18);
        springMvcApiReader17.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet19);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = springMvcApiReader17.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap24 = null;
        java.lang.String str25 = springMvcApiReader17.parseOperationPath("", strMap24);
        io.swagger.annotations.Api api27 = null;
        boolean boolean28 = springMvcApiReader17.canReadApi(false, api27);
        java.util.Map<java.lang.String, java.lang.String> strMap30 = null;
        java.lang.String str31 = springMvcApiReader17.parseOperationPath("hi!", strMap30);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.Class<?> wildcardClass35 = springMvcApiReader34.getClass();
        springMvcApiReader17.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger39 = null;
        springMvcApiReader2.swagger = swagger39;
        java.util.Set<java.lang.reflect.Type> typeSet41 = springMvcApiReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet42 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger43 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter44 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader45 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger43, logAdapter44);
        io.swagger.models.Swagger swagger46 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter47 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader48 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger46, logAdapter47);
        java.lang.reflect.Type[] typeArray49 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet50 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet50, typeArray49);
        springMvcApiReader48.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet50);
        java.lang.annotation.Annotation[] annotationArray53 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList54 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList54, annotationArray53);
        boolean boolean56 = springMvcApiReader48.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList54);
        boolean boolean57 = springMvcApiReader45.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList54);
        boolean boolean58 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList54);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter59 = springMvcApiReader2.LOG;
        io.swagger.annotations.Api api61 = null;
        boolean boolean62 = springMvcApiReader2.canReadApi(false, api61);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter63 = null;
        springMvcApiReader2.LOG = logAdapter63;
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(logAdapter22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "/hi!" + "'", str31, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(typeSet41);
        org.junit.Assert.assertNotNull(typeSet42);
        org.junit.Assert.assertNotNull(typeArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(annotationArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNull(logAdapter59);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
    }

    @Test
    public void test02826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02826");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.models.Swagger swagger3 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter4 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader5 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger3, logAdapter4);
        java.lang.reflect.Type[] typeArray6 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet7 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet7, typeArray6);
        springMvcApiReader5.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet7);
        java.lang.annotation.Annotation[] annotationArray10 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList11 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList11, annotationArray10);
        boolean boolean13 = springMvcApiReader5.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList11);
        boolean boolean14 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList11);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type[] typeArray18 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet19 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet19, typeArray18);
        springMvcApiReader17.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet19);
        java.lang.annotation.Annotation[] annotationArray22 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList23 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList23, annotationArray22);
        boolean boolean25 = springMvcApiReader17.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList23);
        boolean boolean26 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList23);
        java.util.Set<java.lang.reflect.Type> typeSet27 = null;
        springMvcApiReader2.typesToSkip = typeSet27;
        io.swagger.annotations.ApiOperation apiOperation29 = null;
        io.swagger.models.Operation operation30 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateOperationProtocols(apiOperation29, operation30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(annotationArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(typeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(annotationArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test02827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02827");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader2.parseOperationPath("hi!", strMap15);
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.Class<?> wildcardClass20 = springMvcApiReader19.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass20);
        io.swagger.models.Swagger swagger22 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader24 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger22, logAdapter23);
        java.lang.reflect.Type[] typeArray25 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet26 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet26, typeArray25);
        springMvcApiReader24.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet26);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter29 = springMvcApiReader24.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap31 = null;
        java.lang.String str32 = springMvcApiReader24.parseOperationPath("", strMap31);
        java.lang.reflect.Type[] typeArray33 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList34 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList34, typeArray33);
        springMvcApiReader24.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList34);
        java.lang.String[] strArray37 = new java.lang.String[] {};
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!", "", "hi!" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap42 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray43 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList44 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList44, securityRequirementArray43);
        io.swagger.models.Operation operation46 = null;
        springMvcApiReader24.updateOperation(strArray37, strArray41, strMap42, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList44, operation46);
        java.lang.String[] strArray54 = new java.lang.String[] { "/hi!", "", "/hi!", "hi!", "hi!", "hi!" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap55 = null;
        io.swagger.models.Swagger swagger56 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter57 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader58 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger56, logAdapter57);
        java.lang.reflect.Type[] typeArray59 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet60 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet60, typeArray59);
        springMvcApiReader58.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet60);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter63 = springMvcApiReader58.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap65 = null;
        java.lang.String str66 = springMvcApiReader58.parseOperationPath("", strMap65);
        java.lang.reflect.Type[] typeArray67 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList68 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList68, typeArray67);
        springMvcApiReader58.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList68);
        java.lang.String[] strArray71 = new java.lang.String[] {};
        java.lang.String[] strArray75 = new java.lang.String[] { "hi!", "", "hi!" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap76 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray77 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList78 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList78, securityRequirementArray77);
        io.swagger.models.Operation operation80 = null;
        springMvcApiReader58.updateOperation(strArray71, strArray75, strMap76, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList78, operation80);
        io.swagger.models.Operation operation82 = null;
        springMvcApiReader2.updateOperation(strArray37, strArray54, strMap55, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList78, operation82);
        io.swagger.models.Swagger swagger84 = null;
        springMvcApiReader2.swagger = swagger84;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter86 = springMvcApiReader2.LOG;
        io.swagger.models.Operation operation87 = null;
        io.swagger.annotations.ApiOperation apiOperation88 = null;
        springMvcApiReader2.updateTagsForOperation(operation87, apiOperation88);
        java.util.Map<java.lang.String, java.lang.String> strMap91 = null;
        java.lang.String str92 = springMvcApiReader2.parseOperationPath("/hi!", strMap91);
        springMvcApiReader2.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet94 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet95 = springMvcApiReader2.typesToSkip;
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap96 = null;
        io.swagger.annotations.Api api97 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, io.swagger.models.Tag> strMap98 = springMvcApiReader2.updateTagsForApi(strMap96, api97);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/hi!" + "'", str16, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(typeArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(logAdapter29);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertNotNull(typeArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(securityRequirementArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(typeArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNull(logAdapter63);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "" + "'", str66, "");
        org.junit.Assert.assertNotNull(typeArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertNotNull(securityRequirementArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNull(logAdapter86);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "/hi!" + "'", str92, "/hi!");
        org.junit.Assert.assertNotNull(typeSet94);
        org.junit.Assert.assertNotNull(typeSet95);
    }

    @Test
    public void test02828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02828");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type type18 = null;
        springMvcApiReader17.addTypeToSkippedTypes(type18);
        java.util.Set<java.lang.reflect.Type> typeSet20 = springMvcApiReader17.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet20);
        java.util.Set<java.lang.reflect.Type> typeSet22 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger23 = null;
        springMvcApiReader2.swagger = swagger23;
        io.swagger.models.Swagger swagger25 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter26 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader27 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger25, logAdapter26);
        java.lang.reflect.Type[] typeArray28 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet29 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet29, typeArray28);
        springMvcApiReader27.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet29);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter32 = springMvcApiReader27.LOG;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        springMvcApiReader27.LOG = logAdapter33;
        io.swagger.models.Swagger swagger35 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter36 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader37 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger35, logAdapter36);
        java.lang.reflect.Type type38 = null;
        springMvcApiReader37.addTypeToSkippedTypes(type38);
        java.util.Set<java.lang.reflect.Type> typeSet40 = springMvcApiReader37.typesToSkip;
        io.swagger.models.Swagger swagger41 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter42 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader43 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger41, logAdapter42);
        java.lang.reflect.Type[] typeArray44 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet45 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet45, typeArray44);
        springMvcApiReader43.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet45);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter48 = springMvcApiReader43.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap50 = null;
        java.lang.String str51 = springMvcApiReader43.parseOperationPath("", strMap50);
        io.swagger.annotations.Api api53 = null;
        boolean boolean54 = springMvcApiReader43.canReadApi(false, api53);
        java.util.Map<java.lang.String, java.lang.String> strMap56 = null;
        java.lang.String str57 = springMvcApiReader43.parseOperationPath("hi!", strMap56);
        io.swagger.models.Swagger swagger58 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter59 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader60 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger58, logAdapter59);
        java.lang.Class<?> wildcardClass61 = springMvcApiReader60.getClass();
        springMvcApiReader43.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass61);
        java.util.Map<java.lang.String, java.lang.String> strMap64 = null;
        java.lang.String str65 = springMvcApiReader43.parseOperationPath("/hi!", strMap64);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray66 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap67 = springMvcApiReader43.parseResponseHeaders(responseHeaderArray66);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap68 = springMvcApiReader37.parseResponseHeaders(responseHeaderArray66);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap69 = springMvcApiReader27.parseResponseHeaders(responseHeaderArray66);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap70 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray66);
        io.swagger.models.Swagger swagger71 = springMvcApiReader2.swagger;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter72 = null;
        springMvcApiReader2.LOG = logAdapter72;
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeSet20);
        org.junit.Assert.assertNotNull(typeSet22);
        org.junit.Assert.assertNotNull(typeArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(logAdapter32);
        org.junit.Assert.assertNotNull(typeSet40);
        org.junit.Assert.assertNotNull(typeArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(logAdapter48);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "/hi!" + "'", str57, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "/hi!" + "'", str65, "/hi!");
        org.junit.Assert.assertNotNull(responseHeaderArray66);
        org.junit.Assert.assertNull(strMap67);
        org.junit.Assert.assertNull(strMap68);
        org.junit.Assert.assertNull(strMap69);
        org.junit.Assert.assertNull(strMap70);
        org.junit.Assert.assertNull(swagger71);
    }

    @Test
    public void test02829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02829");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader2.parseOperationPath("hi!", strMap15);
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.Class<?> wildcardClass20 = springMvcApiReader19.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass20);
        io.swagger.models.Swagger swagger22 = null;
        springMvcApiReader2.swagger = swagger22;
        io.swagger.models.Swagger swagger24 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger25 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter26 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader27 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger25, logAdapter26);
        java.lang.reflect.Type[] typeArray28 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet29 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet29, typeArray28);
        springMvcApiReader27.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet29);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter32 = springMvcApiReader27.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap34 = null;
        java.lang.String str35 = springMvcApiReader27.parseOperationPath("", strMap34);
        io.swagger.annotations.Api api37 = null;
        boolean boolean38 = springMvcApiReader27.canReadApi(false, api37);
        java.util.Map<java.lang.String, java.lang.String> strMap40 = null;
        java.lang.String str41 = springMvcApiReader27.parseOperationPath("hi!", strMap40);
        io.swagger.models.Swagger swagger42 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter43 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader44 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger42, logAdapter43);
        java.lang.reflect.Type[] typeArray45 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet46 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet46, typeArray45);
        springMvcApiReader44.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet46);
        io.swagger.models.Swagger swagger49 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter50 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader51 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger49, logAdapter50);
        java.lang.reflect.Type[] typeArray52 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet53 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet53, typeArray52);
        springMvcApiReader51.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet53);
        springMvcApiReader44.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet53);
        io.swagger.models.Swagger swagger57 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter58 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader59 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger57, logAdapter58);
        java.lang.reflect.Type[] typeArray60 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet61 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet61, typeArray60);
        springMvcApiReader59.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet61);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter64 = springMvcApiReader59.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap66 = null;
        java.lang.String str67 = springMvcApiReader59.parseOperationPath("", strMap66);
        io.swagger.annotations.Api api69 = null;
        boolean boolean70 = springMvcApiReader59.canReadApi(false, api69);
        java.util.Map<java.lang.String, java.lang.String> strMap72 = null;
        java.lang.String str73 = springMvcApiReader59.parseOperationPath("hi!", strMap72);
        io.swagger.models.Swagger swagger74 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter75 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader76 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger74, logAdapter75);
        java.lang.Class<?> wildcardClass77 = springMvcApiReader76.getClass();
        springMvcApiReader59.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass77);
        springMvcApiReader44.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass77);
        springMvcApiReader27.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass77);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass77);
        io.swagger.annotations.Api api82 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.lang.String> strSet83 = springMvcApiReader2.extractTags(api82);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/hi!" + "'", str16, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNull(swagger24);
        org.junit.Assert.assertNotNull(typeArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(logAdapter32);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "/hi!" + "'", str41, "/hi!");
        org.junit.Assert.assertNotNull(typeArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(typeArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(typeArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNull(logAdapter64);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "" + "'", str67, "");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "/hi!" + "'", str73, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test02830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02830");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.lang.annotation.Annotation[] annotationArray7 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList8 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList8, annotationArray7);
        boolean boolean10 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList8);
        java.util.Set<java.lang.reflect.Type> typeSet11 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger12 = null;
        springMvcApiReader2.swagger = swagger12;
        io.swagger.models.Swagger swagger14 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter15 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader16 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger14, logAdapter15);
        java.lang.reflect.Type[] typeArray17 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet18 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet18, typeArray17);
        springMvcApiReader16.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet18);
        io.swagger.models.Swagger swagger21 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader23 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger21, logAdapter22);
        java.lang.reflect.Type[] typeArray24 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet25 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet25, typeArray24);
        springMvcApiReader23.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet25);
        springMvcApiReader16.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet25);
        io.swagger.models.Swagger swagger29 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter30 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader31 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger29, logAdapter30);
        java.lang.reflect.Type[] typeArray32 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet33 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet33, typeArray32);
        springMvcApiReader31.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet33);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter36 = springMvcApiReader31.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap38 = null;
        java.lang.String str39 = springMvcApiReader31.parseOperationPath("", strMap38);
        io.swagger.annotations.Api api41 = null;
        boolean boolean42 = springMvcApiReader31.canReadApi(false, api41);
        java.util.Map<java.lang.String, java.lang.String> strMap44 = null;
        java.lang.String str45 = springMvcApiReader31.parseOperationPath("hi!", strMap44);
        io.swagger.models.Swagger swagger46 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter47 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader48 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger46, logAdapter47);
        java.lang.Class<?> wildcardClass49 = springMvcApiReader48.getClass();
        springMvcApiReader31.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass49);
        springMvcApiReader16.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass49);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter52 = springMvcApiReader16.LOG;
        springMvcApiReader16.updateExtensionChain();
        io.swagger.models.Swagger swagger54 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter55 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader56 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger54, logAdapter55);
        java.lang.reflect.Type[] typeArray57 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet58 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet58, typeArray57);
        springMvcApiReader56.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet58);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter61 = springMvcApiReader56.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap63 = null;
        java.lang.String str64 = springMvcApiReader56.parseOperationPath("", strMap63);
        java.lang.reflect.Type[] typeArray65 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList66 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList66, typeArray65);
        springMvcApiReader56.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList66);
        springMvcApiReader16.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList66);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList66);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter71 = null;
        springMvcApiReader2.LOG = logAdapter71;
        springMvcApiReader2.updateExtensionChain();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter74 = null;
        springMvcApiReader2.LOG = logAdapter74;
        io.swagger.models.Operation operation76 = null;
        io.swagger.annotations.ApiResponses apiResponses77 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateApiResponse(operation76, apiResponses77);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(annotationArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(typeSet11);
        org.junit.Assert.assertNotNull(typeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(typeArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(typeArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(logAdapter36);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "/hi!" + "'", str45, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNull(logAdapter52);
        org.junit.Assert.assertNotNull(typeArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(logAdapter61);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "" + "'", str64, "");
        org.junit.Assert.assertNotNull(typeArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
    }

    @Test
    public void test02831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02831");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader2.parseOperationPath("hi!", strMap15);
        io.swagger.models.Operation operation17 = null;
        io.swagger.annotations.ApiOperation apiOperation18 = null;
        springMvcApiReader2.updateTagsForOperation(operation17, apiOperation18);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.annotations.Api api22 = null;
        boolean boolean23 = springMvcApiReader2.canReadApi(false, api22);
        io.swagger.models.Operation operation24 = null;
        io.swagger.annotations.ApiOperation apiOperation25 = null;
        springMvcApiReader2.updateTagsForOperation(operation24, apiOperation25);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter27 = springMvcApiReader2.LOG;
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/hi!" + "'", str16, "/hi!");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(logAdapter27);
    }

    @Test
    public void test02832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02832");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader2.parseOperationPath("hi!", strMap15);
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.reflect.Type[] typeArray20 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet21 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet21, typeArray20);
        springMvcApiReader19.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet21);
        io.swagger.models.Swagger swagger24 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter25 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader26 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger24, logAdapter25);
        java.lang.reflect.Type[] typeArray27 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet28 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet28, typeArray27);
        springMvcApiReader26.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet28);
        springMvcApiReader19.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet28);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.reflect.Type[] typeArray35 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet36 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet36, typeArray35);
        springMvcApiReader34.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet36);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter39 = springMvcApiReader34.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap41 = null;
        java.lang.String str42 = springMvcApiReader34.parseOperationPath("", strMap41);
        io.swagger.annotations.Api api44 = null;
        boolean boolean45 = springMvcApiReader34.canReadApi(false, api44);
        java.util.Map<java.lang.String, java.lang.String> strMap47 = null;
        java.lang.String str48 = springMvcApiReader34.parseOperationPath("hi!", strMap47);
        io.swagger.models.Swagger swagger49 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter50 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader51 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger49, logAdapter50);
        java.lang.Class<?> wildcardClass52 = springMvcApiReader51.getClass();
        springMvcApiReader34.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        springMvcApiReader19.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        io.swagger.models.Swagger swagger56 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter57 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader58 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger56, logAdapter57);
        java.lang.reflect.Type[] typeArray59 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet60 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet60, typeArray59);
        springMvcApiReader58.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet60);
        java.util.Set<java.lang.reflect.Type> typeSet63 = springMvcApiReader58.typesToSkip;
        springMvcApiReader2.typesToSkip = typeSet63;
        java.lang.reflect.Method method65 = null;
        io.swagger.models.Operation operation66 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.readImplicitParameters(method65, operation66);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/hi!" + "'", str16, "/hi!");
        org.junit.Assert.assertNotNull(typeArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(typeArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(typeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(logAdapter39);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "/hi!" + "'", str48, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(typeArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(typeSet63);
    }

    @Test
    public void test02833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02833");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.util.Set<java.lang.reflect.Type> typeSet7 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger8 = null;
        springMvcApiReader2.swagger = swagger8;
        java.util.Set<java.lang.reflect.Type> typeSet10 = springMvcApiReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet11 = springMvcApiReader2.typesToSkip;
        springMvcApiReader2.updateExtensionChain();
        com.github.kongchen.swagger.docgen.spring.SpringResource springResource13 = null;
        // The following exception was thrown during execution in test generation
        try {
            io.swagger.models.Swagger swagger14 = springMvcApiReader2.read(springResource13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeSet7);
        org.junit.Assert.assertNotNull(typeSet10);
        org.junit.Assert.assertNotNull(typeSet11);
    }

    @Test
    public void test02834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02834");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.util.Set<java.lang.reflect.Type> typeSet7 = springMvcApiReader2.typesToSkip;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger9 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter10 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader11 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger9, logAdapter10);
        java.lang.Class<?> wildcardClass12 = springMvcApiReader11.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass12);
        io.swagger.models.Swagger swagger14 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter15 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader16 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger14, logAdapter15);
        java.lang.reflect.Type[] typeArray17 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet18 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet18, typeArray17);
        springMvcApiReader16.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet18);
        io.swagger.models.Swagger swagger21 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader23 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger21, logAdapter22);
        java.lang.reflect.Type[] typeArray24 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet25 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet25, typeArray24);
        springMvcApiReader23.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet25);
        springMvcApiReader16.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet25);
        io.swagger.models.Swagger swagger29 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter30 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader31 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger29, logAdapter30);
        java.lang.reflect.Type[] typeArray32 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet33 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet33, typeArray32);
        springMvcApiReader31.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet33);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter36 = springMvcApiReader31.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap38 = null;
        java.lang.String str39 = springMvcApiReader31.parseOperationPath("", strMap38);
        io.swagger.annotations.Api api41 = null;
        boolean boolean42 = springMvcApiReader31.canReadApi(false, api41);
        java.util.Map<java.lang.String, java.lang.String> strMap44 = null;
        java.lang.String str45 = springMvcApiReader31.parseOperationPath("hi!", strMap44);
        io.swagger.models.Swagger swagger46 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter47 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader48 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger46, logAdapter47);
        java.lang.Class<?> wildcardClass49 = springMvcApiReader48.getClass();
        springMvcApiReader31.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass49);
        springMvcApiReader16.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass49);
        springMvcApiReader16.updateExtensionChain();
        io.swagger.models.Swagger swagger53 = null;
        springMvcApiReader16.swagger = swagger53;
        java.util.Set<java.lang.reflect.Type> typeSet55 = springMvcApiReader16.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet55);
        java.lang.Class<?> wildcardClass57 = springMvcApiReader2.getClass();
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeSet7);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(typeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(typeArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(typeArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(logAdapter36);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "/hi!" + "'", str45, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(typeSet55);
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test02835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02835");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader2.parseOperationPath("hi!", strMap15);
        io.swagger.models.Operation operation17 = null;
        io.swagger.annotations.ApiOperation apiOperation18 = null;
        springMvcApiReader2.updateTagsForOperation(operation17, apiOperation18);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.annotations.Api api22 = null;
        boolean boolean23 = springMvcApiReader2.canReadApi(false, api22);
        io.swagger.models.Swagger swagger24 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter25 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader26 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger24, logAdapter25);
        java.lang.reflect.Type[] typeArray27 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet28 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet28, typeArray27);
        springMvcApiReader26.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet28);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter31 = springMvcApiReader26.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap33 = null;
        java.lang.String str34 = springMvcApiReader26.parseOperationPath("", strMap33);
        java.lang.reflect.Type[] typeArray35 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList36 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList36, typeArray35);
        springMvcApiReader26.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList36);
        java.lang.String[] strArray39 = new java.lang.String[] {};
        java.lang.String[] strArray43 = new java.lang.String[] { "hi!", "", "hi!" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap44 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray45 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList46 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList46, securityRequirementArray45);
        io.swagger.models.Operation operation48 = null;
        springMvcApiReader26.updateOperation(strArray39, strArray43, strMap44, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList46, operation48);
        java.util.Map<java.lang.String, java.lang.String> strMap51 = null;
        java.lang.String str52 = springMvcApiReader26.parseOperationPath("", strMap51);
        springMvcApiReader26.updateExtensionChain();
        io.swagger.models.Swagger swagger54 = null;
        springMvcApiReader26.swagger = swagger54;
        io.swagger.models.Operation operation56 = null;
        io.swagger.annotations.ApiOperation apiOperation57 = null;
        springMvcApiReader26.updateTagsForOperation(operation56, apiOperation57);
        io.swagger.models.Swagger swagger59 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter60 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader61 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger59, logAdapter60);
        java.lang.reflect.Type[] typeArray62 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet63 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet63, typeArray62);
        springMvcApiReader61.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet63);
        java.util.Set<java.lang.reflect.Type> typeSet66 = springMvcApiReader61.typesToSkip;
        io.swagger.models.Swagger swagger67 = springMvcApiReader61.swagger;
        io.swagger.models.Swagger swagger68 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter69 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader70 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger68, logAdapter69);
        java.lang.reflect.Type[] typeArray71 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet72 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet72, typeArray71);
        springMvcApiReader70.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet72);
        java.lang.annotation.Annotation[] annotationArray75 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList76 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList76, annotationArray75);
        boolean boolean78 = springMvcApiReader70.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList76);
        io.swagger.models.Swagger swagger79 = null;
        springMvcApiReader70.swagger = swagger79;
        java.lang.annotation.Annotation[] annotationArray81 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList82 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList82, annotationArray81);
        boolean boolean84 = springMvcApiReader70.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList82);
        boolean boolean85 = springMvcApiReader61.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList82);
        boolean boolean86 = springMvcApiReader26.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList82);
        boolean boolean87 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList82);
        io.swagger.annotations.Api api88 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<io.swagger.models.SecurityRequirement> securityRequirementList89 = springMvcApiReader2.getSecurityRequirements(api88);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/hi!" + "'", str16, "/hi!");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(typeArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(logAdapter31);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertNotNull(typeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(securityRequirementArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertNotNull(typeArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(typeSet66);
        org.junit.Assert.assertNull(swagger67);
        org.junit.Assert.assertNotNull(typeArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(annotationArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(annotationArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
    }

    @Test
    public void test02836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02836");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        io.swagger.models.Swagger swagger5 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter6 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader7 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger5, logAdapter6);
        java.lang.reflect.Type[] typeArray8 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet9 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet9, typeArray8);
        springMvcApiReader7.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet9);
        io.swagger.models.Swagger swagger12 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter13 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader14 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger12, logAdapter13);
        java.lang.reflect.Type[] typeArray15 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet16 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet16, typeArray15);
        springMvcApiReader14.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet16);
        springMvcApiReader7.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet16);
        io.swagger.models.Swagger swagger20 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter21 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader22 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger20, logAdapter21);
        java.lang.reflect.Type[] typeArray23 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet24 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet24, typeArray23);
        springMvcApiReader22.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet24);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter27 = springMvcApiReader22.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap29 = null;
        java.lang.String str30 = springMvcApiReader22.parseOperationPath("", strMap29);
        io.swagger.annotations.Api api32 = null;
        boolean boolean33 = springMvcApiReader22.canReadApi(false, api32);
        java.util.Map<java.lang.String, java.lang.String> strMap35 = null;
        java.lang.String str36 = springMvcApiReader22.parseOperationPath("hi!", strMap35);
        io.swagger.models.Swagger swagger37 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter38 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader39 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger37, logAdapter38);
        java.lang.Class<?> wildcardClass40 = springMvcApiReader39.getClass();
        springMvcApiReader22.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass40);
        springMvcApiReader7.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass40);
        java.util.Set<java.lang.reflect.Type> typeSet43 = springMvcApiReader7.getTypesToSkip();
        springMvcApiReader2.typesToSkip = typeSet43;
        java.util.Set<java.lang.reflect.Type> typeSet45 = springMvcApiReader2.getTypesToSkip();
        io.swagger.annotations.Api api47 = null;
        boolean boolean48 = springMvcApiReader2.canReadApi(false, api47);
        io.swagger.models.Swagger swagger49 = springMvcApiReader2.swagger;
        io.swagger.models.Operation operation50 = null;
        io.swagger.annotations.ApiOperation apiOperation51 = null;
        springMvcApiReader2.updateTagsForOperation(operation50, apiOperation51);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Operation operation54 = null;
        io.swagger.annotations.ApiOperation apiOperation55 = null;
        springMvcApiReader2.updateTagsForOperation(operation54, apiOperation55);
        java.util.Map<java.lang.String, java.lang.String> strMap58 = null;
        java.lang.String str59 = springMvcApiReader2.parseOperationPath("", strMap58);
        com.github.kongchen.swagger.docgen.spring.SpringResource springResource60 = null;
        // The following exception was thrown during execution in test generation
        try {
            io.swagger.models.Swagger swagger61 = springMvcApiReader2.read(springResource60);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(typeArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(typeArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(logAdapter27);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "/hi!" + "'", str36, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(typeSet43);
        org.junit.Assert.assertNotNull(typeSet45);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(swagger49);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "" + "'", str59, "");
    }

    @Test
    public void test02837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02837");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        java.util.Set<java.lang.reflect.Type> typeSet5 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger6 = null;
        springMvcApiReader2.swagger = swagger6;
        io.swagger.models.Swagger swagger8 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader10 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger8, logAdapter9);
        java.lang.reflect.Type type11 = null;
        springMvcApiReader10.addTypeToSkippedTypes(type11);
        java.util.Set<java.lang.reflect.Type> typeSet13 = springMvcApiReader10.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet14 = springMvcApiReader10.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet15 = null;
        springMvcApiReader10.typesToSkip = typeSet15;
        java.util.Set<java.lang.reflect.Type> typeSet17 = springMvcApiReader10.getTypesToSkip();
        io.swagger.models.Swagger swagger18 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter19 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader20 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger18, logAdapter19);
        java.lang.reflect.Type type21 = null;
        springMvcApiReader20.addTypeToSkippedTypes(type21);
        java.util.Set<java.lang.reflect.Type> typeSet23 = springMvcApiReader20.typesToSkip;
        springMvcApiReader10.typesToSkip = typeSet23;
        java.util.Set<java.lang.reflect.Type> typeSet25 = springMvcApiReader10.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet25);
        io.swagger.models.Swagger swagger27 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter28 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader29 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger27, logAdapter28);
        java.lang.reflect.Type type30 = null;
        springMvcApiReader29.addTypeToSkippedTypes(type30);
        java.util.Set<java.lang.reflect.Type> typeSet32 = springMvcApiReader29.typesToSkip;
        io.swagger.models.Swagger swagger33 = null;
        springMvcApiReader29.swagger = swagger33;
        io.swagger.models.Swagger swagger35 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter36 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader37 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger35, logAdapter36);
        java.lang.reflect.Type type38 = null;
        springMvcApiReader37.addTypeToSkippedTypes(type38);
        java.util.Set<java.lang.reflect.Type> typeSet40 = springMvcApiReader37.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet41 = springMvcApiReader37.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet42 = null;
        springMvcApiReader37.typesToSkip = typeSet42;
        java.util.Set<java.lang.reflect.Type> typeSet44 = springMvcApiReader37.getTypesToSkip();
        io.swagger.models.Swagger swagger45 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter46 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader47 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger45, logAdapter46);
        java.lang.reflect.Type type48 = null;
        springMvcApiReader47.addTypeToSkippedTypes(type48);
        java.util.Set<java.lang.reflect.Type> typeSet50 = springMvcApiReader47.typesToSkip;
        springMvcApiReader37.typesToSkip = typeSet50;
        java.util.Set<java.lang.reflect.Type> typeSet52 = springMvcApiReader37.typesToSkip;
        springMvcApiReader29.setTypesToSkip(typeSet52);
        springMvcApiReader2.setTypesToSkip(typeSet52);
        io.swagger.models.Swagger swagger55 = springMvcApiReader2.swagger;
        io.swagger.annotations.Api api56 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.lang.String> strSet57 = springMvcApiReader2.extractTags(api56);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeSet5);
        org.junit.Assert.assertNotNull(typeSet13);
        org.junit.Assert.assertNotNull(typeSet14);
        org.junit.Assert.assertNull(typeSet17);
        org.junit.Assert.assertNotNull(typeSet23);
        org.junit.Assert.assertNotNull(typeSet25);
        org.junit.Assert.assertNotNull(typeSet32);
        org.junit.Assert.assertNotNull(typeSet40);
        org.junit.Assert.assertNotNull(typeSet41);
        org.junit.Assert.assertNull(typeSet44);
        org.junit.Assert.assertNotNull(typeSet50);
        org.junit.Assert.assertNotNull(typeSet52);
        org.junit.Assert.assertNull(swagger55);
    }

    @Test
    public void test02838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02838");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.util.Set<java.lang.reflect.Type> typeSet7 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger8 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger9 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter10 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader11 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger9, logAdapter10);
        java.lang.reflect.Type[] typeArray12 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet13 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet13, typeArray12);
        springMvcApiReader11.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet13);
        java.lang.annotation.Annotation[] annotationArray16 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList17 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList17, annotationArray16);
        boolean boolean19 = springMvcApiReader11.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList17);
        io.swagger.models.Swagger swagger20 = null;
        springMvcApiReader11.swagger = swagger20;
        java.lang.annotation.Annotation[] annotationArray22 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList23 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList23, annotationArray22);
        boolean boolean25 = springMvcApiReader11.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList23);
        boolean boolean26 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList23);
        io.swagger.models.Swagger swagger27 = null;
        springMvcApiReader2.swagger = swagger27;
        java.util.Set<java.lang.reflect.Type> typeSet29 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger30 = null;
        springMvcApiReader2.swagger = swagger30;
        java.lang.annotation.Annotation[] annotationArray32 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList33 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList33, annotationArray32);
        boolean boolean35 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList33);
        java.lang.reflect.Method method36 = null;
        io.swagger.models.Operation operation37 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.readImplicitParameters(method36, operation37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeSet7);
        org.junit.Assert.assertNull(swagger8);
        org.junit.Assert.assertNotNull(typeArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(annotationArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(annotationArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(typeSet29);
        org.junit.Assert.assertNotNull(annotationArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    }

    @Test
    public void test02839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02839");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.models.Swagger swagger11 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter12 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader13 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger11, logAdapter12);
        java.lang.Class<?> wildcardClass14 = springMvcApiReader13.getClass();
        java.lang.reflect.Type[] typeArray15 = new java.lang.reflect.Type[] { wildcardClass14 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet16 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet16, typeArray15);
        springMvcApiReader2.typesToSkip = typeSet16;
        io.swagger.annotations.Api api20 = null;
        boolean boolean21 = springMvcApiReader2.canReadApi(false, api20);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = springMvcApiReader2.LOG;
        java.util.Set<java.lang.reflect.Type> typeSet23 = springMvcApiReader2.getTypesToSkip();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter24 = springMvcApiReader2.LOG;
        io.swagger.annotations.Api api26 = null;
        boolean boolean27 = springMvcApiReader2.canReadApi(true, api26);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter28 = springMvcApiReader2.LOG;
        java.lang.reflect.Method method29 = null;
        io.swagger.models.Operation operation30 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.readImplicitParameters(method29, operation30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(typeArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(logAdapter22);
        org.junit.Assert.assertNotNull(typeSet23);
        org.junit.Assert.assertNull(logAdapter24);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(logAdapter28);
    }

    @Test
    public void test02840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02840");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter3 = springMvcApiReader2.LOG;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter4 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger5 = null;
        springMvcApiReader2.swagger = swagger5;
        io.swagger.models.Swagger swagger7 = null;
        springMvcApiReader2.swagger = swagger7;
        java.lang.String[] strArray9 = null;
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader12 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger10, logAdapter11);
        java.lang.reflect.Type[] typeArray13 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet14 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet14, typeArray13);
        springMvcApiReader12.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet14);
        java.lang.annotation.Annotation[] annotationArray17 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList18 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList18, annotationArray17);
        boolean boolean20 = springMvcApiReader12.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList18);
        io.swagger.models.Swagger swagger21 = null;
        springMvcApiReader12.swagger = swagger21;
        java.lang.annotation.Annotation[] annotationArray23 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList24 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList24, annotationArray23);
        boolean boolean26 = springMvcApiReader12.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList24);
        java.lang.String[] strArray27 = null;
        io.swagger.models.Swagger swagger28 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter29 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader30 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger28, logAdapter29);
        java.lang.reflect.Type[] typeArray31 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet32 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet32, typeArray31);
        springMvcApiReader30.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet32);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter35 = springMvcApiReader30.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap37 = null;
        java.lang.String str38 = springMvcApiReader30.parseOperationPath("", strMap37);
        java.lang.reflect.Type[] typeArray39 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList40 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList40, typeArray39);
        springMvcApiReader30.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList40);
        java.lang.String[] strArray43 = new java.lang.String[] {};
        java.lang.String[] strArray47 = new java.lang.String[] { "hi!", "", "hi!" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap48 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray49 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList50 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList50, securityRequirementArray49);
        io.swagger.models.Operation operation52 = null;
        springMvcApiReader30.updateOperation(strArray43, strArray47, strMap48, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList50, operation52);
        io.swagger.models.Operation operation54 = null;
        java.lang.String[] strArray55 = springMvcApiReader12.updateOperationProduces(strArray27, strArray47, operation54);
        io.swagger.models.Operation operation56 = null;
        java.lang.String[] strArray57 = springMvcApiReader2.updateOperationConsumes(strArray9, strArray55, operation56);
        io.swagger.annotations.Api api58 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<io.swagger.models.SecurityRequirement> securityRequirementList59 = springMvcApiReader2.getSecurityRequirements(api58);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(logAdapter3);
        org.junit.Assert.assertNull(logAdapter4);
        org.junit.Assert.assertNotNull(typeArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(annotationArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(annotationArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(typeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(logAdapter35);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertNotNull(typeArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNotNull(securityRequirementArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertNotNull(strArray57);
    }

    @Test
    public void test02841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02841");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader2.parseOperationPath("hi!", strMap15);
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.Class<?> wildcardClass20 = springMvcApiReader19.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass20);
        io.swagger.models.Swagger swagger22 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader24 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger22, logAdapter23);
        java.lang.reflect.Type[] typeArray25 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet26 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet26, typeArray25);
        springMvcApiReader24.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet26);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter29 = springMvcApiReader24.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap31 = null;
        java.lang.String str32 = springMvcApiReader24.parseOperationPath("", strMap31);
        java.lang.reflect.Type[] typeArray33 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList34 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList34, typeArray33);
        springMvcApiReader24.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList34);
        java.lang.String[] strArray37 = new java.lang.String[] {};
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!", "", "hi!" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap42 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray43 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList44 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList44, securityRequirementArray43);
        io.swagger.models.Operation operation46 = null;
        springMvcApiReader24.updateOperation(strArray37, strArray41, strMap42, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList44, operation46);
        java.lang.String[] strArray54 = new java.lang.String[] { "/hi!", "", "/hi!", "hi!", "hi!", "hi!" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap55 = null;
        io.swagger.models.Swagger swagger56 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter57 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader58 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger56, logAdapter57);
        java.lang.reflect.Type[] typeArray59 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet60 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet60, typeArray59);
        springMvcApiReader58.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet60);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter63 = springMvcApiReader58.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap65 = null;
        java.lang.String str66 = springMvcApiReader58.parseOperationPath("", strMap65);
        java.lang.reflect.Type[] typeArray67 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList68 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList68, typeArray67);
        springMvcApiReader58.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList68);
        java.lang.String[] strArray71 = new java.lang.String[] {};
        java.lang.String[] strArray75 = new java.lang.String[] { "hi!", "", "hi!" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap76 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray77 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList78 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList78, securityRequirementArray77);
        io.swagger.models.Operation operation80 = null;
        springMvcApiReader58.updateOperation(strArray71, strArray75, strMap76, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList78, operation80);
        io.swagger.models.Operation operation82 = null;
        springMvcApiReader2.updateOperation(strArray37, strArray54, strMap55, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList78, operation82);
        java.util.Map<java.lang.String, java.lang.String> strMap85 = null;
        java.lang.String str86 = springMvcApiReader2.parseOperationPath("hi!", strMap85);
        io.swagger.annotations.Api api88 = null;
        boolean boolean89 = springMvcApiReader2.canReadApi(false, api88);
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/hi!" + "'", str16, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(typeArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(logAdapter29);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertNotNull(typeArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(securityRequirementArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(typeArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNull(logAdapter63);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "" + "'", str66, "");
        org.junit.Assert.assertNotNull(typeArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertNotNull(securityRequirementArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "/hi!" + "'", str86, "/hi!");
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
    }

    @Test
    public void test02842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02842");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        io.swagger.models.Swagger swagger5 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger6 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader8 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger6, logAdapter7);
        java.lang.reflect.Type type9 = null;
        springMvcApiReader8.addTypeToSkippedTypes(type9);
        java.util.Set<java.lang.reflect.Type> typeSet11 = springMvcApiReader8.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet11);
        io.swagger.models.Swagger swagger13 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter14 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader15 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger13, logAdapter14);
        java.lang.reflect.Type[] typeArray16 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet17 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet17, typeArray16);
        springMvcApiReader15.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet17);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter20 = springMvcApiReader15.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap22 = null;
        java.lang.String str23 = springMvcApiReader15.parseOperationPath("", strMap22);
        io.swagger.models.Swagger swagger24 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter25 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader26 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger24, logAdapter25);
        java.lang.Class<?> wildcardClass27 = springMvcApiReader26.getClass();
        java.lang.reflect.Type[] typeArray28 = new java.lang.reflect.Type[] { wildcardClass27 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet29 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet29, typeArray28);
        springMvcApiReader15.typesToSkip = typeSet29;
        io.swagger.models.Operation operation32 = null;
        io.swagger.annotations.ApiOperation apiOperation33 = null;
        springMvcApiReader15.updateTagsForOperation(operation32, apiOperation33);
        io.swagger.models.Swagger swagger35 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter36 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader37 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger35, logAdapter36);
        java.lang.reflect.Type[] typeArray38 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet39 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet39, typeArray38);
        springMvcApiReader37.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet39);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter42 = springMvcApiReader37.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap44 = null;
        java.lang.String str45 = springMvcApiReader37.parseOperationPath("", strMap44);
        io.swagger.annotations.Api api47 = null;
        boolean boolean48 = springMvcApiReader37.canReadApi(false, api47);
        java.util.Map<java.lang.String, java.lang.String> strMap50 = null;
        java.lang.String str51 = springMvcApiReader37.parseOperationPath("hi!", strMap50);
        io.swagger.models.Swagger swagger52 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter53 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader54 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger52, logAdapter53);
        java.lang.reflect.Type[] typeArray55 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet56 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet56, typeArray55);
        springMvcApiReader54.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet56);
        io.swagger.models.Swagger swagger59 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter60 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader61 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger59, logAdapter60);
        java.lang.reflect.Type[] typeArray62 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet63 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet63, typeArray62);
        springMvcApiReader61.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet63);
        springMvcApiReader54.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet63);
        io.swagger.models.Swagger swagger67 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter68 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader69 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger67, logAdapter68);
        java.lang.reflect.Type[] typeArray70 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet71 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet71, typeArray70);
        springMvcApiReader69.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet71);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter74 = springMvcApiReader69.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap76 = null;
        java.lang.String str77 = springMvcApiReader69.parseOperationPath("", strMap76);
        io.swagger.annotations.Api api79 = null;
        boolean boolean80 = springMvcApiReader69.canReadApi(false, api79);
        java.util.Map<java.lang.String, java.lang.String> strMap82 = null;
        java.lang.String str83 = springMvcApiReader69.parseOperationPath("hi!", strMap82);
        io.swagger.models.Swagger swagger84 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter85 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader86 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger84, logAdapter85);
        java.lang.Class<?> wildcardClass87 = springMvcApiReader86.getClass();
        springMvcApiReader69.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass87);
        springMvcApiReader54.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass87);
        springMvcApiReader37.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass87);
        java.lang.annotation.Annotation[] annotationArray91 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList92 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean93 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList92, annotationArray91);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList94 = springMvcApiReader15.getParameters((java.lang.reflect.Type) wildcardClass87, (java.util.List<java.lang.annotation.Annotation>) annotationList92);
        boolean boolean95 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList92);
        io.swagger.models.Operation operation96 = null;
        io.swagger.annotations.ApiOperation apiOperation97 = null;
        springMvcApiReader2.updateTagsForOperation(operation96, apiOperation97);
        java.lang.Class<?> wildcardClass99 = springMvcApiReader2.getClass();
        org.junit.Assert.assertNull(swagger5);
        org.junit.Assert.assertNotNull(typeSet11);
        org.junit.Assert.assertNotNull(typeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(logAdapter20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(typeArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(typeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(logAdapter42);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "/hi!" + "'", str51, "/hi!");
        org.junit.Assert.assertNotNull(typeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(typeArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(typeArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNull(logAdapter74);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "" + "'", str77, "");
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "/hi!" + "'", str83, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertNotNull(annotationArray91);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNotNull(parameterList94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test02843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02843");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.lang.annotation.Annotation[] annotationArray7 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList8 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList8, annotationArray7);
        boolean boolean10 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList8);
        io.swagger.models.Swagger swagger11 = null;
        springMvcApiReader2.swagger = swagger11;
        io.swagger.models.Swagger swagger13 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter14 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader15 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger13, logAdapter14);
        java.lang.reflect.Type[] typeArray16 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet17 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet17, typeArray16);
        springMvcApiReader15.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet17);
        java.lang.annotation.Annotation[] annotationArray20 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList21 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList21, annotationArray20);
        boolean boolean23 = springMvcApiReader15.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList21);
        io.swagger.models.Swagger swagger24 = null;
        springMvcApiReader15.swagger = swagger24;
        java.lang.annotation.Annotation[] annotationArray26 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList27 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList27, annotationArray26);
        boolean boolean29 = springMvcApiReader15.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList27);
        boolean boolean30 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList27);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter31 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger32 = springMvcApiReader2.swagger;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger34 = null;
        springMvcApiReader2.swagger = swagger34;
        io.swagger.annotations.Api api37 = null;
        boolean boolean38 = springMvcApiReader2.canReadApi(false, api37);
        io.swagger.models.Operation operation39 = null;
        io.swagger.annotations.ApiOperation apiOperation40 = null;
        springMvcApiReader2.updateTagsForOperation(operation39, apiOperation40);
        java.lang.reflect.Method method42 = null;
        io.swagger.models.Operation operation43 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.readImplicitParameters(method42, operation43);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(annotationArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(typeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(annotationArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(annotationArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(logAdapter31);
        org.junit.Assert.assertNull(swagger32);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test02844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02844");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.lang.annotation.Annotation[] annotationArray7 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList8 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList8, annotationArray7);
        boolean boolean10 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList8);
        io.swagger.models.Swagger swagger11 = null;
        springMvcApiReader2.swagger = swagger11;
        java.util.Set<java.lang.reflect.Type> typeSet13 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger14 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter15 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader16 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger14, logAdapter15);
        java.lang.reflect.Type type17 = null;
        springMvcApiReader16.addTypeToSkippedTypes(type17);
        java.util.Set<java.lang.reflect.Type> typeSet19 = springMvcApiReader16.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet20 = springMvcApiReader16.getTypesToSkip();
        springMvcApiReader2.setTypesToSkip(typeSet20);
        java.util.Set<java.lang.reflect.Type> typeSet22 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger23 = null;
        springMvcApiReader2.swagger = swagger23;
        java.lang.reflect.Type type25 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type25);
        io.swagger.models.Swagger swagger27 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter28 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader29 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger27, logAdapter28);
        java.lang.reflect.Type[] typeArray30 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet31 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet31, typeArray30);
        springMvcApiReader29.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet31);
        java.lang.annotation.Annotation[] annotationArray34 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList35 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList35, annotationArray34);
        boolean boolean37 = springMvcApiReader29.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList35);
        java.util.Set<java.lang.reflect.Type> typeSet38 = springMvcApiReader29.typesToSkip;
        springMvcApiReader29.updateExtensionChain();
        io.swagger.models.Operation operation40 = null;
        io.swagger.annotations.ApiOperation apiOperation41 = null;
        springMvcApiReader29.updateTagsForOperation(operation40, apiOperation41);
        io.swagger.annotations.Api api44 = null;
        boolean boolean45 = springMvcApiReader29.canReadApi(true, api44);
        io.swagger.models.Swagger swagger46 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter47 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader48 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger46, logAdapter47);
        java.lang.reflect.Type[] typeArray49 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet50 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet50, typeArray49);
        springMvcApiReader48.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet50);
        java.lang.annotation.Annotation[] annotationArray53 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList54 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList54, annotationArray53);
        boolean boolean56 = springMvcApiReader48.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList54);
        io.swagger.models.Swagger swagger57 = null;
        springMvcApiReader48.swagger = swagger57;
        java.util.Set<java.lang.reflect.Type> typeSet59 = springMvcApiReader48.getTypesToSkip();
        java.lang.Class<?> wildcardClass60 = springMvcApiReader48.getClass();
        java.lang.annotation.Annotation[] annotationArray61 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList62 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList62, annotationArray61);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList64 = springMvcApiReader29.getParameters((java.lang.reflect.Type) wildcardClass60, (java.util.List<java.lang.annotation.Annotation>) annotationList62);
        java.util.Map<java.lang.String, java.lang.String> strMap65 = null;
        io.swagger.models.Operation operation66 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateOperationParameters(parameterList64, strMap65, operation66);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(annotationArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(typeSet13);
        org.junit.Assert.assertNotNull(typeSet19);
        org.junit.Assert.assertNotNull(typeSet20);
        org.junit.Assert.assertNotNull(typeSet22);
        org.junit.Assert.assertNotNull(typeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(annotationArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(typeSet38);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(typeArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(annotationArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(typeSet59);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(annotationArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(parameterList64);
    }

    @Test
    public void test02845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02845");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        java.util.Set<java.lang.reflect.Type> typeSet5 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet6 = springMvcApiReader2.getTypesToSkip();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = null;
        java.lang.String str9 = springMvcApiReader2.parseOperationPath("", strMap8);
        io.swagger.models.Operation operation10 = null;
        io.swagger.annotations.ApiOperation apiOperation11 = null;
        springMvcApiReader2.updateTagsForOperation(operation10, apiOperation11);
        io.swagger.annotations.Api api14 = null;
        boolean boolean15 = springMvcApiReader2.canReadApi(false, api14);
        io.swagger.models.Swagger swagger16 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter17 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader18 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger16, logAdapter17);
        java.lang.reflect.Type[] typeArray19 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet20 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet20, typeArray19);
        springMvcApiReader18.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet20);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = springMvcApiReader18.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap25 = null;
        java.lang.String str26 = springMvcApiReader18.parseOperationPath("", strMap25);
        io.swagger.annotations.Api api28 = null;
        boolean boolean29 = springMvcApiReader18.canReadApi(false, api28);
        java.util.Map<java.lang.String, java.lang.String> strMap31 = null;
        java.lang.String str32 = springMvcApiReader18.parseOperationPath("hi!", strMap31);
        java.util.Map<java.lang.String, java.lang.String> strMap34 = null;
        java.lang.String str35 = springMvcApiReader18.parseOperationPath("hi!", strMap34);
        io.swagger.models.Operation operation36 = null;
        io.swagger.annotations.ApiOperation apiOperation37 = null;
        springMvcApiReader18.updateTagsForOperation(operation36, apiOperation37);
        java.lang.Class<?> wildcardClass39 = springMvcApiReader18.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass39);
        java.util.List<java.lang.reflect.Type> typeList41 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.setTypesToSkip(typeList41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeSet5);
        org.junit.Assert.assertNotNull(typeSet6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(typeArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(logAdapter23);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "/hi!" + "'", str32, "/hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "/hi!" + "'", str35, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test02846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02846");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader2.parseOperationPath("hi!", strMap15);
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.reflect.Type[] typeArray20 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet21 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet21, typeArray20);
        springMvcApiReader19.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet21);
        io.swagger.models.Swagger swagger24 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter25 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader26 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger24, logAdapter25);
        java.lang.reflect.Type[] typeArray27 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet28 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet28, typeArray27);
        springMvcApiReader26.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet28);
        springMvcApiReader19.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet28);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.reflect.Type[] typeArray35 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet36 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet36, typeArray35);
        springMvcApiReader34.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet36);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter39 = springMvcApiReader34.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap41 = null;
        java.lang.String str42 = springMvcApiReader34.parseOperationPath("", strMap41);
        io.swagger.annotations.Api api44 = null;
        boolean boolean45 = springMvcApiReader34.canReadApi(false, api44);
        java.util.Map<java.lang.String, java.lang.String> strMap47 = null;
        java.lang.String str48 = springMvcApiReader34.parseOperationPath("hi!", strMap47);
        io.swagger.models.Swagger swagger49 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter50 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader51 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger49, logAdapter50);
        java.lang.Class<?> wildcardClass52 = springMvcApiReader51.getClass();
        springMvcApiReader34.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        springMvcApiReader19.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        java.util.Set<java.lang.reflect.Type> typeSet56 = springMvcApiReader2.getTypesToSkip();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter57 = springMvcApiReader2.LOG;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Operation operation59 = null;
        io.swagger.annotations.ApiOperation apiOperation60 = null;
        springMvcApiReader2.updateTagsForOperation(operation59, apiOperation60);
        java.util.Set<java.lang.reflect.Type> typeSet62 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger63 = null;
        springMvcApiReader2.swagger = swagger63;
        java.lang.Class<?> wildcardClass65 = springMvcApiReader2.getClass();
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/hi!" + "'", str16, "/hi!");
        org.junit.Assert.assertNotNull(typeArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(typeArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(typeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(logAdapter39);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "/hi!" + "'", str48, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(typeSet56);
        org.junit.Assert.assertNull(logAdapter57);
        org.junit.Assert.assertNotNull(typeSet62);
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test02847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02847");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.lang.annotation.Annotation[] annotationArray7 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList8 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList8, annotationArray7);
        boolean boolean10 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList8);
        io.swagger.models.Swagger swagger11 = null;
        springMvcApiReader2.swagger = swagger11;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter13 = null;
        springMvcApiReader2.LOG = logAdapter13;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Operation operation16 = null;
        io.swagger.annotations.ApiOperation apiOperation17 = null;
        springMvcApiReader2.updateTagsForOperation(operation16, apiOperation17);
        springMvcApiReader2.updateExtensionChain();
        java.util.Map<java.lang.String, java.lang.String> strMap21 = null;
        java.lang.String str22 = springMvcApiReader2.parseOperationPath("/hi!", strMap21);
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(annotationArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "/hi!" + "'", str22, "/hi!");
    }

    @Test
    public void test02848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02848");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        java.util.Map<java.lang.String, java.lang.String> strMap16 = null;
        java.lang.String str17 = springMvcApiReader2.parseOperationPath("/hi!", strMap16);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = springMvcApiReader2.LOG;
        java.util.Set<java.lang.reflect.Type> typeSet19 = springMvcApiReader2.getTypesToSkip();
        springMvcApiReader2.updateExtensionChain();
        io.swagger.annotations.Api api21 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<io.swagger.models.SecurityRequirement> securityRequirementList22 = springMvcApiReader2.getSecurityRequirements(api21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "/hi!" + "'", str17, "/hi!");
        org.junit.Assert.assertNull(logAdapter18);
        org.junit.Assert.assertNotNull(typeSet19);
    }

    @Test
    public void test02849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02849");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        io.swagger.models.Swagger swagger5 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger6 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader8 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger6, logAdapter7);
        java.lang.reflect.Type type9 = null;
        springMvcApiReader8.addTypeToSkippedTypes(type9);
        java.util.Set<java.lang.reflect.Type> typeSet11 = springMvcApiReader8.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet11);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter13 = springMvcApiReader2.LOG;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter14 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap15 = null;
        io.swagger.annotations.Api api16 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, io.swagger.models.Tag> strMap17 = springMvcApiReader2.updateTagsForApi(strMap15, api16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(swagger5);
        org.junit.Assert.assertNotNull(typeSet11);
        org.junit.Assert.assertNull(logAdapter13);
        org.junit.Assert.assertNull(logAdapter14);
    }

    @Test
    public void test02850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02850");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader2.parseOperationPath("hi!", strMap15);
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.reflect.Type[] typeArray20 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet21 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet21, typeArray20);
        springMvcApiReader19.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet21);
        io.swagger.models.Swagger swagger24 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter25 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader26 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger24, logAdapter25);
        java.lang.reflect.Type[] typeArray27 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet28 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet28, typeArray27);
        springMvcApiReader26.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet28);
        springMvcApiReader19.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet28);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.reflect.Type[] typeArray35 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet36 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet36, typeArray35);
        springMvcApiReader34.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet36);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter39 = springMvcApiReader34.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap41 = null;
        java.lang.String str42 = springMvcApiReader34.parseOperationPath("", strMap41);
        io.swagger.annotations.Api api44 = null;
        boolean boolean45 = springMvcApiReader34.canReadApi(false, api44);
        java.util.Map<java.lang.String, java.lang.String> strMap47 = null;
        java.lang.String str48 = springMvcApiReader34.parseOperationPath("hi!", strMap47);
        io.swagger.models.Swagger swagger49 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter50 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader51 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger49, logAdapter50);
        java.lang.Class<?> wildcardClass52 = springMvcApiReader51.getClass();
        springMvcApiReader34.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        springMvcApiReader19.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        io.swagger.models.Swagger swagger56 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter57 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader58 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger56, logAdapter57);
        java.lang.reflect.Type[] typeArray59 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet60 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet60, typeArray59);
        springMvcApiReader58.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet60);
        java.util.Set<java.lang.reflect.Type> typeSet63 = springMvcApiReader58.typesToSkip;
        springMvcApiReader2.typesToSkip = typeSet63;
        io.swagger.models.Swagger swagger65 = null;
        springMvcApiReader2.swagger = swagger65;
        java.util.Map<java.lang.String, java.lang.String> strMap68 = null;
        java.lang.String str69 = springMvcApiReader2.parseOperationPath("hi!", strMap68);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Operation operation71 = null;
        io.swagger.annotations.ApiOperation apiOperation72 = null;
        springMvcApiReader2.updateTagsForOperation(operation71, apiOperation72);
        io.swagger.models.Swagger swagger74 = springMvcApiReader2.swagger;
        com.github.kongchen.swagger.docgen.spring.SpringResource springResource75 = null;
        // The following exception was thrown during execution in test generation
        try {
            io.swagger.models.Swagger swagger76 = springMvcApiReader2.read(springResource75);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/hi!" + "'", str16, "/hi!");
        org.junit.Assert.assertNotNull(typeArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(typeArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(typeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(logAdapter39);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "/hi!" + "'", str48, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(typeArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(typeSet63);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "/hi!" + "'", str69, "/hi!");
        org.junit.Assert.assertNull(swagger74);
    }

    @Test
    public void test02851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02851");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader2.parseOperationPath("hi!", strMap15);
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.Class<?> wildcardClass20 = springMvcApiReader19.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass20);
        io.swagger.models.Swagger swagger22 = null;
        springMvcApiReader2.swagger = swagger22;
        io.swagger.models.Swagger swagger24 = springMvcApiReader2.swagger;
        java.util.Set<java.lang.reflect.Type> typeSet25 = springMvcApiReader2.typesToSkip;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.annotations.Api api28 = null;
        boolean boolean29 = springMvcApiReader2.canReadApi(true, api28);
        io.swagger.models.Swagger swagger30 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter31 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader32 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger30, logAdapter31);
        java.lang.reflect.Type[] typeArray33 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet34 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet34, typeArray33);
        springMvcApiReader32.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet34);
        java.lang.annotation.Annotation[] annotationArray37 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList38 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList38, annotationArray37);
        boolean boolean40 = springMvcApiReader32.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList38);
        java.util.Set<java.lang.reflect.Type> typeSet41 = springMvcApiReader32.typesToSkip;
        springMvcApiReader32.updateExtensionChain();
        io.swagger.models.Operation operation43 = null;
        io.swagger.annotations.ApiOperation apiOperation44 = null;
        springMvcApiReader32.updateTagsForOperation(operation43, apiOperation44);
        io.swagger.annotations.Api api47 = null;
        boolean boolean48 = springMvcApiReader32.canReadApi(true, api47);
        io.swagger.models.Swagger swagger49 = springMvcApiReader32.swagger;
        io.swagger.models.Operation operation50 = null;
        io.swagger.annotations.ApiOperation apiOperation51 = null;
        springMvcApiReader32.updateTagsForOperation(operation50, apiOperation51);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter53 = springMvcApiReader32.LOG;
        java.util.Set<java.lang.reflect.Type> typeSet54 = springMvcApiReader32.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet54);
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap56 = null;
        io.swagger.annotations.Api api57 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, io.swagger.models.Tag> strMap58 = springMvcApiReader2.updateTagsForApi(strMap56, api57);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/hi!" + "'", str16, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNull(swagger24);
        org.junit.Assert.assertNotNull(typeSet25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(typeArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(annotationArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(typeSet41);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(swagger49);
        org.junit.Assert.assertNull(logAdapter53);
        org.junit.Assert.assertNotNull(typeSet54);
    }

    @Test
    public void test02852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02852");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.models.Swagger swagger11 = springMvcApiReader2.swagger;
        io.swagger.annotations.Api api13 = null;
        boolean boolean14 = springMvcApiReader2.canReadApi(false, api13);
        java.util.Set<java.lang.reflect.Type> typeSet15 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet16 = springMvcApiReader2.getTypesToSkip();
        java.util.Map<java.lang.String, java.lang.String> strMap18 = null;
        java.lang.String str19 = springMvcApiReader2.parseOperationPath("hi!", strMap18);
        io.swagger.models.Operation operation20 = null;
        io.swagger.annotations.ApiOperation apiOperation21 = null;
        springMvcApiReader2.updateTagsForOperation(operation20, apiOperation21);
        springMvcApiReader2.updateExtensionChain();
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(swagger11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(typeSet15);
        org.junit.Assert.assertNotNull(typeSet16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "/hi!" + "'", str19, "/hi!");
    }

    @Test
    public void test02853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02853");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader2.parseOperationPath("hi!", strMap15);
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.Class<?> wildcardClass20 = springMvcApiReader19.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass20);
        java.util.Map<java.lang.String, java.lang.String> strMap23 = null;
        java.lang.String str24 = springMvcApiReader2.parseOperationPath("/hi!", strMap23);
        io.swagger.models.Swagger swagger25 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter26 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader27 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger25, logAdapter26);
        java.lang.reflect.Type[] typeArray28 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet29 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet29, typeArray28);
        springMvcApiReader27.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet29);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet29);
        io.swagger.models.Swagger swagger33 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter34 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader35 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger33, logAdapter34);
        java.lang.reflect.Type[] typeArray36 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet37 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet37, typeArray36);
        springMvcApiReader35.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet37);
        java.lang.annotation.Annotation[] annotationArray40 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList41 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList41, annotationArray40);
        boolean boolean43 = springMvcApiReader35.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList41);
        io.swagger.models.Swagger swagger44 = null;
        springMvcApiReader35.swagger = swagger44;
        io.swagger.models.Swagger swagger46 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter47 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader48 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger46, logAdapter47);
        java.lang.reflect.Type[] typeArray49 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet50 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet50, typeArray49);
        springMvcApiReader48.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet50);
        java.lang.annotation.Annotation[] annotationArray53 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList54 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList54, annotationArray53);
        boolean boolean56 = springMvcApiReader48.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList54);
        io.swagger.models.Swagger swagger57 = null;
        springMvcApiReader48.swagger = swagger57;
        java.lang.annotation.Annotation[] annotationArray59 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList60 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList60, annotationArray59);
        boolean boolean62 = springMvcApiReader48.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList60);
        boolean boolean63 = springMvcApiReader35.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList60);
        boolean boolean64 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList60);
        java.util.Set<java.lang.reflect.Type> typeSet65 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger66 = null;
        springMvcApiReader2.swagger = swagger66;
        io.swagger.models.Swagger swagger68 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger69 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter70 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader71 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger69, logAdapter70);
        java.lang.reflect.Type[] typeArray72 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet73 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet73, typeArray72);
        springMvcApiReader71.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet73);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter76 = springMvcApiReader71.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap78 = null;
        java.lang.String str79 = springMvcApiReader71.parseOperationPath("", strMap78);
        io.swagger.models.Swagger swagger80 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter81 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader82 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger80, logAdapter81);
        java.lang.Class<?> wildcardClass83 = springMvcApiReader82.getClass();
        java.lang.reflect.Type[] typeArray84 = new java.lang.reflect.Type[] { wildcardClass83 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet85 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet85, typeArray84);
        springMvcApiReader71.typesToSkip = typeSet85;
        java.util.Set<java.lang.reflect.Type> typeSet88 = springMvcApiReader71.getTypesToSkip();
        java.util.Map<java.lang.String, java.lang.String> strMap90 = null;
        java.lang.String str91 = springMvcApiReader71.parseOperationPath("/hi!", strMap90);
        java.util.Set<java.lang.reflect.Type> typeSet92 = null;
        springMvcApiReader71.typesToSkip = typeSet92;
        java.lang.Class<?> wildcardClass94 = springMvcApiReader71.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass94);
        io.swagger.annotations.ApiOperation apiOperation96 = null;
        io.swagger.models.Operation operation97 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateOperationProtocols(apiOperation96, operation97);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/hi!" + "'", str16, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "/hi!" + "'", str24, "/hi!");
        org.junit.Assert.assertNotNull(typeArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(annotationArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(typeArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(annotationArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(annotationArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(typeSet65);
        org.junit.Assert.assertNull(swagger68);
        org.junit.Assert.assertNotNull(typeArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNull(logAdapter76);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "" + "'", str79, "");
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertNotNull(typeArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(typeSet88);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "/hi!" + "'", str91, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test02854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02854");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.models.Swagger swagger3 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter4 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader5 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger3, logAdapter4);
        java.lang.reflect.Type[] typeArray6 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet7 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet7, typeArray6);
        springMvcApiReader5.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet7);
        java.lang.annotation.Annotation[] annotationArray10 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList11 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList11, annotationArray10);
        boolean boolean13 = springMvcApiReader5.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList11);
        boolean boolean14 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList11);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type[] typeArray18 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet19 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet19, typeArray18);
        springMvcApiReader17.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet19);
        java.lang.annotation.Annotation[] annotationArray22 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList23 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList23, annotationArray22);
        boolean boolean25 = springMvcApiReader17.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList23);
        boolean boolean26 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList23);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter27 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger28 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter29 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader30 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger28, logAdapter29);
        java.lang.reflect.Type[] typeArray31 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet32 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet32, typeArray31);
        springMvcApiReader30.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet32);
        io.swagger.models.Swagger swagger35 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter36 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader37 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger35, logAdapter36);
        java.lang.reflect.Type[] typeArray38 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet39 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet39, typeArray38);
        springMvcApiReader37.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet39);
        springMvcApiReader30.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet39);
        java.util.Map<java.lang.String, java.lang.String> strMap44 = null;
        java.lang.String str45 = springMvcApiReader30.parseOperationPath("/hi!", strMap44);
        io.swagger.models.Swagger swagger46 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter47 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader48 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger46, logAdapter47);
        java.lang.reflect.Type[] typeArray49 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet50 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet50, typeArray49);
        springMvcApiReader48.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet50);
        java.lang.annotation.Annotation[] annotationArray53 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList54 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList54, annotationArray53);
        boolean boolean56 = springMvcApiReader48.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList54);
        io.swagger.models.Swagger swagger57 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter58 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader59 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger57, logAdapter58);
        java.lang.Class<?> wildcardClass60 = springMvcApiReader59.getClass();
        springMvcApiReader48.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass60);
        springMvcApiReader30.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass60);
        io.swagger.models.Swagger swagger63 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter64 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader65 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger63, logAdapter64);
        java.lang.reflect.Type[] typeArray66 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet67 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet67, typeArray66);
        springMvcApiReader65.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet67);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter70 = springMvcApiReader65.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap72 = null;
        java.lang.String str73 = springMvcApiReader65.parseOperationPath("", strMap72);
        io.swagger.annotations.Api api75 = null;
        boolean boolean76 = springMvcApiReader65.canReadApi(false, api75);
        java.util.Map<java.lang.String, java.lang.String> strMap78 = null;
        java.lang.String str79 = springMvcApiReader65.parseOperationPath("hi!", strMap78);
        io.swagger.models.Swagger swagger80 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter81 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader82 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger80, logAdapter81);
        java.lang.Class<?> wildcardClass83 = springMvcApiReader82.getClass();
        springMvcApiReader65.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass83);
        java.util.Map<java.lang.String, java.lang.String> strMap86 = null;
        java.lang.String str87 = springMvcApiReader65.parseOperationPath("/hi!", strMap86);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray88 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap89 = springMvcApiReader65.parseResponseHeaders(responseHeaderArray88);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap90 = springMvcApiReader30.parseResponseHeaders(responseHeaderArray88);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap91 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray88);
        io.swagger.annotations.Api api93 = null;
        boolean boolean94 = springMvcApiReader2.canReadApi(false, api93);
        com.github.kongchen.swagger.docgen.spring.SpringResource springResource95 = null;
        // The following exception was thrown during execution in test generation
        try {
            io.swagger.models.Swagger swagger96 = springMvcApiReader2.read(springResource95);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(annotationArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(typeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(annotationArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(logAdapter27);
        org.junit.Assert.assertNotNull(typeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(typeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "/hi!" + "'", str45, "/hi!");
        org.junit.Assert.assertNotNull(typeArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(annotationArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(typeArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNull(logAdapter70);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "" + "'", str73, "");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "/hi!" + "'", str79, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "/hi!" + "'", str87, "/hi!");
        org.junit.Assert.assertNotNull(responseHeaderArray88);
        org.junit.Assert.assertNull(strMap89);
        org.junit.Assert.assertNull(strMap90);
        org.junit.Assert.assertNull(strMap91);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
    }

    @Test
    public void test02855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02855");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type[] typeArray18 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet19 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet19, typeArray18);
        springMvcApiReader17.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet19);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = springMvcApiReader17.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap24 = null;
        java.lang.String str25 = springMvcApiReader17.parseOperationPath("", strMap24);
        io.swagger.annotations.Api api27 = null;
        boolean boolean28 = springMvcApiReader17.canReadApi(false, api27);
        java.util.Map<java.lang.String, java.lang.String> strMap30 = null;
        java.lang.String str31 = springMvcApiReader17.parseOperationPath("hi!", strMap30);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.Class<?> wildcardClass35 = springMvcApiReader34.getClass();
        springMvcApiReader17.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger39 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter40 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader41 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger39, logAdapter40);
        java.lang.reflect.Type[] typeArray42 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet43 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet43, typeArray42);
        springMvcApiReader41.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet43);
        io.swagger.models.Swagger swagger46 = springMvcApiReader41.swagger;
        io.swagger.models.Swagger swagger47 = springMvcApiReader41.swagger;
        io.swagger.models.Swagger swagger48 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter49 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader50 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger48, logAdapter49);
        java.lang.reflect.Type[] typeArray51 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet52 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet52, typeArray51);
        springMvcApiReader50.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet52);
        java.lang.annotation.Annotation[] annotationArray55 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList56 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList56, annotationArray55);
        boolean boolean58 = springMvcApiReader50.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList56);
        boolean boolean59 = springMvcApiReader41.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList56);
        java.lang.Class<?> wildcardClass60 = springMvcApiReader41.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass60);
        java.util.Set<java.lang.reflect.Type> typeSet62 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Operation operation63 = null;
        io.swagger.annotations.ApiOperation apiOperation64 = null;
        springMvcApiReader2.updateTagsForOperation(operation63, apiOperation64);
        io.swagger.models.Swagger swagger66 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter67 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader68 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger66, logAdapter67);
        java.lang.reflect.Type type69 = null;
        springMvcApiReader68.addTypeToSkippedTypes(type69);
        java.util.Set<java.lang.reflect.Type> typeSet71 = springMvcApiReader68.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet72 = springMvcApiReader68.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet73 = springMvcApiReader68.typesToSkip;
        springMvcApiReader2.typesToSkip = typeSet73;
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap75 = null;
        io.swagger.annotations.Api api76 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, io.swagger.models.Tag> strMap77 = springMvcApiReader2.updateTagsForApi(strMap75, api76);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(logAdapter22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "/hi!" + "'", str31, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(typeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNull(swagger46);
        org.junit.Assert.assertNull(swagger47);
        org.junit.Assert.assertNotNull(typeArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(annotationArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(typeSet62);
        org.junit.Assert.assertNotNull(typeSet71);
        org.junit.Assert.assertNotNull(typeSet72);
        org.junit.Assert.assertNotNull(typeSet73);
    }

    @Test
    public void test02856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02856");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type[] typeArray18 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet19 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet19, typeArray18);
        springMvcApiReader17.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet19);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = springMvcApiReader17.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap24 = null;
        java.lang.String str25 = springMvcApiReader17.parseOperationPath("", strMap24);
        io.swagger.annotations.Api api27 = null;
        boolean boolean28 = springMvcApiReader17.canReadApi(false, api27);
        java.util.Map<java.lang.String, java.lang.String> strMap30 = null;
        java.lang.String str31 = springMvcApiReader17.parseOperationPath("hi!", strMap30);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.Class<?> wildcardClass35 = springMvcApiReader34.getClass();
        springMvcApiReader17.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger39 = null;
        springMvcApiReader2.swagger = swagger39;
        java.util.Set<java.lang.reflect.Type> typeSet41 = springMvcApiReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet42 = springMvcApiReader2.typesToSkip;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter43 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger44 = null;
        springMvcApiReader2.swagger = swagger44;
        com.github.kongchen.swagger.docgen.spring.SpringResource springResource46 = null;
        // The following exception was thrown during execution in test generation
        try {
            io.swagger.models.Swagger swagger47 = springMvcApiReader2.read(springResource46);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(logAdapter22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "/hi!" + "'", str31, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(typeSet41);
        org.junit.Assert.assertNotNull(typeSet42);
        org.junit.Assert.assertNull(logAdapter43);
    }

    @Test
    public void test02857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02857");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        java.util.Set<java.lang.reflect.Type> typeSet5 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet6 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger14 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter15 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader16 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger14, logAdapter15);
        java.lang.reflect.Type[] typeArray17 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet18 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet18, typeArray17);
        springMvcApiReader16.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet18);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet18);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet18);
        springMvcApiReader2.updateExtensionChain();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter24 = springMvcApiReader2.LOG;
        io.swagger.annotations.Api api26 = null;
        boolean boolean27 = springMvcApiReader2.canReadApi(false, api26);
        java.util.Map<java.lang.String, java.lang.String> strMap29 = null;
        java.lang.String str30 = springMvcApiReader2.parseOperationPath("", strMap29);
        io.swagger.models.Swagger swagger31 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter32 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader33 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger31, logAdapter32);
        java.lang.reflect.Type[] typeArray34 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet35 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet35, typeArray34);
        springMvcApiReader33.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet35);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter38 = springMvcApiReader33.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap40 = null;
        java.lang.String str41 = springMvcApiReader33.parseOperationPath("", strMap40);
        java.lang.reflect.Type[] typeArray42 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList43 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList43, typeArray42);
        springMvcApiReader33.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList43);
        io.swagger.models.Swagger swagger46 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter47 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader48 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger46, logAdapter47);
        java.lang.reflect.Type[] typeArray49 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet50 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet50, typeArray49);
        springMvcApiReader48.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet50);
        java.lang.annotation.Annotation[] annotationArray53 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList54 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList54, annotationArray53);
        boolean boolean56 = springMvcApiReader48.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList54);
        boolean boolean57 = springMvcApiReader33.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList54);
        java.util.Set<java.lang.reflect.Type> typeSet58 = springMvcApiReader33.typesToSkip;
        springMvcApiReader2.typesToSkip = typeSet58;
        springMvcApiReader2.updateExtensionChain();
        org.junit.Assert.assertNotNull(typeSet5);
        org.junit.Assert.assertNotNull(typeSet6);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(logAdapter24);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNotNull(typeArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(logAdapter38);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertNotNull(typeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(typeArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(annotationArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(typeSet58);
    }

    @Test
    public void test02858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02858");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type[] typeArray18 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet19 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet19, typeArray18);
        springMvcApiReader17.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet19);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = springMvcApiReader17.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap24 = null;
        java.lang.String str25 = springMvcApiReader17.parseOperationPath("", strMap24);
        io.swagger.annotations.Api api27 = null;
        boolean boolean28 = springMvcApiReader17.canReadApi(false, api27);
        java.util.Map<java.lang.String, java.lang.String> strMap30 = null;
        java.lang.String str31 = springMvcApiReader17.parseOperationPath("hi!", strMap30);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.Class<?> wildcardClass35 = springMvcApiReader34.getClass();
        springMvcApiReader17.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger39 = null;
        springMvcApiReader2.swagger = swagger39;
        java.util.Set<java.lang.reflect.Type> typeSet41 = springMvcApiReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet42 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger43 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter44 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader45 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger43, logAdapter44);
        io.swagger.models.Swagger swagger46 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter47 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader48 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger46, logAdapter47);
        java.lang.reflect.Type[] typeArray49 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet50 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet50, typeArray49);
        springMvcApiReader48.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet50);
        java.lang.annotation.Annotation[] annotationArray53 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList54 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList54, annotationArray53);
        boolean boolean56 = springMvcApiReader48.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList54);
        boolean boolean57 = springMvcApiReader45.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList54);
        boolean boolean58 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList54);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter59 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger60 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter61 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader62 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger60, logAdapter61);
        java.lang.reflect.Type[] typeArray63 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet64 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet64, typeArray63);
        springMvcApiReader62.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet64);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter67 = springMvcApiReader62.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap69 = null;
        java.lang.String str70 = springMvcApiReader62.parseOperationPath("", strMap69);
        io.swagger.models.Swagger swagger71 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter72 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader73 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger71, logAdapter72);
        java.lang.Class<?> wildcardClass74 = springMvcApiReader73.getClass();
        java.lang.reflect.Type[] typeArray75 = new java.lang.reflect.Type[] { wildcardClass74 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet76 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet76, typeArray75);
        springMvcApiReader62.typesToSkip = typeSet76;
        java.util.Set<java.lang.reflect.Type> typeSet79 = springMvcApiReader62.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet80 = springMvcApiReader62.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet80);
        io.swagger.annotations.Api api82 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<io.swagger.models.SecurityRequirement> securityRequirementList83 = springMvcApiReader2.getSecurityRequirements(api82);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(logAdapter22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "/hi!" + "'", str31, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(typeSet41);
        org.junit.Assert.assertNotNull(typeSet42);
        org.junit.Assert.assertNotNull(typeArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(annotationArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNull(logAdapter59);
        org.junit.Assert.assertNotNull(typeArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNull(logAdapter67);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "" + "'", str70, "");
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(typeArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(typeSet79);
        org.junit.Assert.assertNotNull(typeSet80);
    }

    @Test
    public void test02859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02859");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.models.Swagger swagger11 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter12 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader13 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger11, logAdapter12);
        java.lang.Class<?> wildcardClass14 = springMvcApiReader13.getClass();
        java.lang.reflect.Type[] typeArray15 = new java.lang.reflect.Type[] { wildcardClass14 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet16 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet16, typeArray15);
        springMvcApiReader2.typesToSkip = typeSet16;
        java.util.Set<java.lang.reflect.Type> typeSet19 = springMvcApiReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet20 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Operation operation21 = null;
        io.swagger.annotations.ApiOperation apiOperation22 = null;
        springMvcApiReader2.updateTagsForOperation(operation21, apiOperation22);
        com.github.kongchen.swagger.docgen.spring.SpringResource springResource24 = null;
        // The following exception was thrown during execution in test generation
        try {
            io.swagger.models.Swagger swagger25 = springMvcApiReader2.read(springResource24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(typeArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(typeSet19);
        org.junit.Assert.assertNotNull(typeSet20);
    }

    @Test
    public void test02860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02860");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        java.util.Set<java.lang.reflect.Type> typeSet5 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet6 = springMvcApiReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet7 = null;
        springMvcApiReader2.typesToSkip = typeSet7;
        java.util.Set<java.lang.reflect.Type> typeSet9 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader12 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger10, logAdapter11);
        java.lang.reflect.Type[] typeArray13 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet14 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet14, typeArray13);
        springMvcApiReader12.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet14);
        java.lang.annotation.Annotation[] annotationArray17 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList18 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList18, annotationArray17);
        boolean boolean20 = springMvcApiReader12.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList18);
        io.swagger.models.Swagger swagger21 = null;
        springMvcApiReader12.swagger = swagger21;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = null;
        springMvcApiReader12.LOG = logAdapter23;
        springMvcApiReader12.updateExtensionChain();
        io.swagger.models.Operation operation26 = null;
        io.swagger.annotations.ApiOperation apiOperation27 = null;
        springMvcApiReader12.updateTagsForOperation(operation26, apiOperation27);
        io.swagger.models.Swagger swagger29 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter30 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader31 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger29, logAdapter30);
        java.lang.reflect.Type[] typeArray32 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet33 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet33, typeArray32);
        springMvcApiReader31.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet33);
        java.lang.annotation.Annotation[] annotationArray36 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList37 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList37, annotationArray36);
        boolean boolean39 = springMvcApiReader31.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList37);
        io.swagger.models.Swagger swagger40 = null;
        springMvcApiReader31.swagger = swagger40;
        io.swagger.models.Swagger swagger42 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter43 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader44 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger42, logAdapter43);
        java.lang.reflect.Type[] typeArray45 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet46 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet46, typeArray45);
        springMvcApiReader44.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet46);
        java.lang.annotation.Annotation[] annotationArray49 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList50 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList50, annotationArray49);
        boolean boolean52 = springMvcApiReader44.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList50);
        io.swagger.models.Swagger swagger53 = null;
        springMvcApiReader44.swagger = swagger53;
        java.lang.annotation.Annotation[] annotationArray55 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList56 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList56, annotationArray55);
        boolean boolean58 = springMvcApiReader44.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList56);
        boolean boolean59 = springMvcApiReader31.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList56);
        boolean boolean60 = springMvcApiReader12.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList56);
        boolean boolean61 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList56);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter62 = null;
        springMvcApiReader2.LOG = logAdapter62;
        io.swagger.models.Swagger swagger64 = springMvcApiReader2.swagger;
        io.swagger.annotations.Api api66 = null;
        boolean boolean67 = springMvcApiReader2.canReadApi(false, api66);
        java.lang.String[] strArray70 = new java.lang.String[] { "", "/hi!" };
        java.lang.String[] strArray71 = null;
        io.swagger.models.Operation operation72 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String[] strArray73 = springMvcApiReader2.updateOperationConsumes(strArray70, strArray71, operation72);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeSet5);
        org.junit.Assert.assertNotNull(typeSet6);
        org.junit.Assert.assertNull(typeSet9);
        org.junit.Assert.assertNotNull(typeArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(annotationArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(typeArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(annotationArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(typeArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(annotationArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(annotationArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNull(swagger64);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(strArray70);
    }

    @Test
    public void test02861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02861");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        java.util.Set<java.lang.reflect.Type> typeSet5 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet6 = springMvcApiReader2.getTypesToSkip();
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger8 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader10 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger8, logAdapter9);
        java.lang.reflect.Type[] typeArray11 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet12 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet12, typeArray11);
        springMvcApiReader10.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet12);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter15 = springMvcApiReader10.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap17 = null;
        java.lang.String str18 = springMvcApiReader10.parseOperationPath("", strMap17);
        io.swagger.annotations.Api api20 = null;
        boolean boolean21 = springMvcApiReader10.canReadApi(false, api20);
        java.util.Map<java.lang.String, java.lang.String> strMap23 = null;
        java.lang.String str24 = springMvcApiReader10.parseOperationPath("", strMap23);
        java.util.Set<java.lang.reflect.Type> typeSet25 = springMvcApiReader10.getTypesToSkip();
        springMvcApiReader2.setTypesToSkip(typeSet25);
        io.swagger.models.Swagger swagger27 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter28 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader29 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger27, logAdapter28);
        java.lang.reflect.Type[] typeArray30 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet31 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet31, typeArray30);
        springMvcApiReader29.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet31);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter34 = springMvcApiReader29.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap36 = null;
        java.lang.String str37 = springMvcApiReader29.parseOperationPath("", strMap36);
        java.lang.reflect.Type[] typeArray38 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList39 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList39, typeArray38);
        springMvcApiReader29.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList39);
        io.swagger.models.Swagger swagger42 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter43 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader44 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger42, logAdapter43);
        java.lang.reflect.Type[] typeArray45 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet46 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet46, typeArray45);
        springMvcApiReader44.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet46);
        java.lang.annotation.Annotation[] annotationArray49 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList50 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList50, annotationArray49);
        boolean boolean52 = springMvcApiReader44.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList50);
        boolean boolean53 = springMvcApiReader29.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList50);
        io.swagger.models.Swagger swagger54 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter55 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader56 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger54, logAdapter55);
        java.lang.reflect.Type[] typeArray57 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet58 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet58, typeArray57);
        springMvcApiReader56.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet58);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter61 = springMvcApiReader56.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap63 = null;
        java.lang.String str64 = springMvcApiReader56.parseOperationPath("", strMap63);
        java.lang.reflect.Type[] typeArray65 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList66 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList66, typeArray65);
        springMvcApiReader56.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList66);
        java.lang.String[] strArray69 = new java.lang.String[] {};
        java.lang.String[] strArray73 = new java.lang.String[] { "hi!", "", "hi!" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap74 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray75 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList76 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList76, securityRequirementArray75);
        io.swagger.models.Operation operation78 = null;
        springMvcApiReader56.updateOperation(strArray69, strArray73, strMap74, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList76, operation78);
        java.util.Set<java.lang.reflect.Type> typeSet80 = springMvcApiReader56.typesToSkip;
        springMvcApiReader29.typesToSkip = typeSet80;
        springMvcApiReader2.typesToSkip = typeSet80;
        io.swagger.models.Operation operation85 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updatePath("/hi!", "/hi!", operation85);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeSet5);
        org.junit.Assert.assertNotNull(typeSet6);
        org.junit.Assert.assertNotNull(typeArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(logAdapter15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(typeSet25);
        org.junit.Assert.assertNotNull(typeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(logAdapter34);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertNotNull(typeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(typeArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(annotationArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(typeArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(logAdapter61);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "" + "'", str64, "");
        org.junit.Assert.assertNotNull(typeArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertNotNull(securityRequirementArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(typeSet80);
    }

    @Test
    public void test02862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02862");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        java.lang.reflect.Type[] typeArray11 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList12 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList12, typeArray11);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList12);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!", "", "hi!" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap20 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray21 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList22 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList22, securityRequirementArray21);
        io.swagger.models.Operation operation24 = null;
        springMvcApiReader2.updateOperation(strArray15, strArray19, strMap20, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList22, operation24);
        io.swagger.models.Swagger swagger26 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter27 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader28 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger26, logAdapter27);
        java.lang.reflect.Type[] typeArray29 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet30 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet30, typeArray29);
        springMvcApiReader28.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet30);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = springMvcApiReader28.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap35 = null;
        java.lang.String str36 = springMvcApiReader28.parseOperationPath("", strMap35);
        io.swagger.annotations.Api api38 = null;
        boolean boolean39 = springMvcApiReader28.canReadApi(false, api38);
        java.util.Map<java.lang.String, java.lang.String> strMap41 = null;
        java.lang.String str42 = springMvcApiReader28.parseOperationPath("hi!", strMap41);
        io.swagger.models.Swagger swagger43 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter44 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader45 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger43, logAdapter44);
        java.lang.Class<?> wildcardClass46 = springMvcApiReader45.getClass();
        springMvcApiReader28.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass46);
        io.swagger.models.Swagger swagger48 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter49 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader50 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger48, logAdapter49);
        java.lang.reflect.Type[] typeArray51 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet52 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet52, typeArray51);
        springMvcApiReader50.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet52);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter55 = springMvcApiReader50.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap57 = null;
        java.lang.String str58 = springMvcApiReader50.parseOperationPath("", strMap57);
        io.swagger.annotations.Api api60 = null;
        boolean boolean61 = springMvcApiReader50.canReadApi(false, api60);
        java.util.Map<java.lang.String, java.lang.String> strMap63 = null;
        java.lang.String str64 = springMvcApiReader50.parseOperationPath("hi!", strMap63);
        io.swagger.models.Swagger swagger65 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter66 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader67 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger65, logAdapter66);
        java.lang.Class<?> wildcardClass68 = springMvcApiReader67.getClass();
        springMvcApiReader50.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass68);
        java.util.Map<java.lang.String, java.lang.String> strMap71 = null;
        java.lang.String str72 = springMvcApiReader50.parseOperationPath("/hi!", strMap71);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray73 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap74 = springMvcApiReader50.parseResponseHeaders(responseHeaderArray73);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap75 = springMvcApiReader28.parseResponseHeaders(responseHeaderArray73);
        java.util.Set<java.lang.reflect.Type> typeSet76 = springMvcApiReader28.getTypesToSkip();
        springMvcApiReader2.setTypesToSkip(typeSet76);
        com.github.kongchen.swagger.docgen.spring.SpringResource springResource78 = null;
        // The following exception was thrown during execution in test generation
        try {
            io.swagger.models.Swagger swagger79 = springMvcApiReader2.read(springResource78);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(typeArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(securityRequirementArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(typeArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(logAdapter33);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "/hi!" + "'", str42, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(typeArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNull(logAdapter55);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "" + "'", str58, "");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "/hi!" + "'", str64, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "/hi!" + "'", str72, "/hi!");
        org.junit.Assert.assertNotNull(responseHeaderArray73);
        org.junit.Assert.assertNull(strMap74);
        org.junit.Assert.assertNull(strMap75);
        org.junit.Assert.assertNotNull(typeSet76);
    }

    @Test
    public void test02863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02863");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type[] typeArray18 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet19 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet19, typeArray18);
        springMvcApiReader17.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet19);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = springMvcApiReader17.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap24 = null;
        java.lang.String str25 = springMvcApiReader17.parseOperationPath("", strMap24);
        io.swagger.annotations.Api api27 = null;
        boolean boolean28 = springMvcApiReader17.canReadApi(false, api27);
        java.util.Map<java.lang.String, java.lang.String> strMap30 = null;
        java.lang.String str31 = springMvcApiReader17.parseOperationPath("hi!", strMap30);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.Class<?> wildcardClass35 = springMvcApiReader34.getClass();
        springMvcApiReader17.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        java.util.Map<java.lang.String, java.lang.String> strMap39 = null;
        java.lang.String str40 = springMvcApiReader2.parseOperationPath("hi!", strMap39);
        io.swagger.models.Swagger swagger41 = null;
        springMvcApiReader2.swagger = swagger41;
        io.swagger.models.Operation operation43 = null;
        io.swagger.annotations.ApiOperation apiOperation44 = null;
        springMvcApiReader2.updateTagsForOperation(operation43, apiOperation44);
        java.lang.Class<?> wildcardClass46 = springMvcApiReader2.getClass();
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(logAdapter22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "/hi!" + "'", str31, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "/hi!" + "'", str40, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test02864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02864");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.util.Set<java.lang.reflect.Type> typeSet7 = springMvcApiReader2.typesToSkip;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger9 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter10 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader11 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger9, logAdapter10);
        java.lang.Class<?> wildcardClass12 = springMvcApiReader11.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass12);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter14 = null;
        springMvcApiReader2.LOG = logAdapter14;
        io.swagger.models.Swagger swagger16 = null;
        springMvcApiReader2.swagger = swagger16;
        io.swagger.models.Swagger swagger18 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter19 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader20 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger18, logAdapter19);
        java.lang.reflect.Type[] typeArray21 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet22 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet22, typeArray21);
        springMvcApiReader20.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet22);
        java.util.Set<java.lang.reflect.Type> typeSet25 = springMvcApiReader20.typesToSkip;
        springMvcApiReader20.updateExtensionChain();
        io.swagger.models.Swagger swagger27 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter28 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader29 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger27, logAdapter28);
        java.lang.reflect.Type[] typeArray30 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet31 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet31, typeArray30);
        springMvcApiReader29.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet31);
        java.lang.annotation.Annotation[] annotationArray34 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList35 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList35, annotationArray34);
        boolean boolean37 = springMvcApiReader29.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList35);
        io.swagger.models.Swagger swagger38 = null;
        springMvcApiReader29.swagger = swagger38;
        io.swagger.models.Swagger swagger40 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter41 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader42 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger40, logAdapter41);
        java.lang.reflect.Type[] typeArray43 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet44 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet44, typeArray43);
        springMvcApiReader42.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet44);
        java.lang.annotation.Annotation[] annotationArray47 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList48 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList48, annotationArray47);
        boolean boolean50 = springMvcApiReader42.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList48);
        io.swagger.models.Swagger swagger51 = null;
        springMvcApiReader42.swagger = swagger51;
        java.lang.annotation.Annotation[] annotationArray53 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList54 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList54, annotationArray53);
        boolean boolean56 = springMvcApiReader42.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList54);
        boolean boolean57 = springMvcApiReader29.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList54);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter58 = springMvcApiReader29.LOG;
        io.swagger.models.Swagger swagger59 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter60 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader61 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger59, logAdapter60);
        java.util.Map<java.lang.String, java.lang.String> strMap63 = null;
        java.lang.String str64 = springMvcApiReader61.parseOperationPath("/hi!", strMap63);
        java.util.Set<java.lang.reflect.Type> typeSet65 = springMvcApiReader61.getTypesToSkip();
        springMvcApiReader29.setTypesToSkip(typeSet65);
        springMvcApiReader20.typesToSkip = typeSet65;
        io.swagger.models.Operation operation68 = null;
        io.swagger.annotations.ApiOperation apiOperation69 = null;
        springMvcApiReader20.updateTagsForOperation(operation68, apiOperation69);
        java.util.Set<java.lang.reflect.Type> typeSet71 = springMvcApiReader20.getTypesToSkip();
        springMvcApiReader2.typesToSkip = typeSet71;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter73 = null;
        springMvcApiReader2.LOG = logAdapter73;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter75 = springMvcApiReader2.LOG;
        com.github.kongchen.swagger.docgen.spring.SpringResource springResource76 = null;
        // The following exception was thrown during execution in test generation
        try {
            io.swagger.models.Swagger swagger77 = springMvcApiReader2.read(springResource76);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeSet7);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(typeArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(typeSet25);
        org.junit.Assert.assertNotNull(typeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(annotationArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(typeArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(annotationArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(annotationArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNull(logAdapter58);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "/hi!" + "'", str64, "/hi!");
        org.junit.Assert.assertNotNull(typeSet65);
        org.junit.Assert.assertNotNull(typeSet71);
        org.junit.Assert.assertNull(logAdapter75);
    }

    @Test
    public void test02865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02865");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader2.parseOperationPath("hi!", strMap15);
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.reflect.Type[] typeArray20 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet21 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet21, typeArray20);
        springMvcApiReader19.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet21);
        io.swagger.models.Swagger swagger24 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter25 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader26 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger24, logAdapter25);
        java.lang.reflect.Type[] typeArray27 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet28 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet28, typeArray27);
        springMvcApiReader26.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet28);
        springMvcApiReader19.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet28);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.reflect.Type[] typeArray35 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet36 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet36, typeArray35);
        springMvcApiReader34.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet36);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter39 = springMvcApiReader34.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap41 = null;
        java.lang.String str42 = springMvcApiReader34.parseOperationPath("", strMap41);
        io.swagger.annotations.Api api44 = null;
        boolean boolean45 = springMvcApiReader34.canReadApi(false, api44);
        java.util.Map<java.lang.String, java.lang.String> strMap47 = null;
        java.lang.String str48 = springMvcApiReader34.parseOperationPath("hi!", strMap47);
        io.swagger.models.Swagger swagger49 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter50 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader51 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger49, logAdapter50);
        java.lang.Class<?> wildcardClass52 = springMvcApiReader51.getClass();
        springMvcApiReader34.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        springMvcApiReader19.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        io.swagger.models.Operation operation56 = null;
        io.swagger.annotations.ApiOperation apiOperation57 = null;
        springMvcApiReader2.updateTagsForOperation(operation56, apiOperation57);
        io.swagger.models.Swagger swagger59 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter60 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader61 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger59, logAdapter60);
        java.lang.reflect.Type[] typeArray62 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet63 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet63, typeArray62);
        springMvcApiReader61.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet63);
        java.util.Set<java.lang.reflect.Type> typeSet66 = springMvcApiReader61.typesToSkip;
        springMvcApiReader61.updateExtensionChain();
        io.swagger.models.Swagger swagger68 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter69 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader70 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger68, logAdapter69);
        java.lang.Class<?> wildcardClass71 = springMvcApiReader70.getClass();
        springMvcApiReader61.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass71);
        io.swagger.models.Swagger swagger73 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter74 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader75 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger73, logAdapter74);
        java.lang.Class<?> wildcardClass76 = springMvcApiReader75.getClass();
        java.lang.annotation.Annotation[] annotationArray77 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList78 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList78, annotationArray77);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList80 = springMvcApiReader61.getParameters((java.lang.reflect.Type) wildcardClass76, (java.util.List<java.lang.annotation.Annotation>) annotationList78);
        boolean boolean81 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList78);
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap82 = null;
        io.swagger.annotations.Api api83 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, io.swagger.models.Tag> strMap84 = springMvcApiReader2.updateTagsForApi(strMap82, api83);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/hi!" + "'", str16, "/hi!");
        org.junit.Assert.assertNotNull(typeArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(typeArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(typeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(logAdapter39);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "/hi!" + "'", str48, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(typeArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(typeSet66);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(annotationArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(parameterList80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
    }

    @Test
    public void test02866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02866");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        java.lang.reflect.Type[] typeArray11 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList12 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList12, typeArray11);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList12);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!", "", "hi!" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap20 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray21 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList22 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList22, securityRequirementArray21);
        io.swagger.models.Operation operation24 = null;
        springMvcApiReader2.updateOperation(strArray15, strArray19, strMap20, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList22, operation24);
        java.util.Map<java.lang.String, java.lang.String> strMap27 = null;
        java.lang.String str28 = springMvcApiReader2.parseOperationPath("", strMap27);
        io.swagger.models.Operation operation29 = null;
        io.swagger.annotations.ApiOperation apiOperation30 = null;
        springMvcApiReader2.updateTagsForOperation(operation29, apiOperation30);
        io.swagger.models.Swagger swagger32 = springMvcApiReader2.swagger;
        java.util.Map<java.lang.String, java.lang.String> strMap34 = null;
        java.lang.String str35 = springMvcApiReader2.parseOperationPath("/hi!", strMap34);
        java.util.Map<java.lang.String, java.lang.String> strMap37 = null;
        java.lang.String str38 = springMvcApiReader2.parseOperationPath("", strMap37);
        io.swagger.models.Swagger swagger39 = null;
        springMvcApiReader2.swagger = swagger39;
        io.swagger.models.Operation operation41 = null;
        io.swagger.annotations.ApiOperation apiOperation42 = null;
        springMvcApiReader2.updateTagsForOperation(operation41, apiOperation42);
        java.util.Map<java.lang.String, java.lang.String> strMap45 = null;
        java.lang.String str46 = springMvcApiReader2.parseOperationPath("/hi!", strMap45);
        io.swagger.models.Swagger swagger47 = null;
        springMvcApiReader2.swagger = swagger47;
        io.swagger.annotations.Api api49 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.lang.String> strSet50 = springMvcApiReader2.extractTags(api49);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(typeArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(securityRequirementArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNull(swagger32);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "/hi!" + "'", str35, "/hi!");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "/hi!" + "'", str46, "/hi!");
    }

    @Test
    public void test02867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02867");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        springMvcApiReader2.LOG = logAdapter8;
        springMvcApiReader2.updateExtensionChain();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        springMvcApiReader2.LOG = logAdapter11;
        io.swagger.models.Swagger swagger13 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter14 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader15 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger13, logAdapter14);
        java.lang.reflect.Type[] typeArray16 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet17 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet17, typeArray16);
        springMvcApiReader15.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet17);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter20 = springMvcApiReader15.LOG;
        io.swagger.annotations.Api api22 = null;
        boolean boolean23 = springMvcApiReader15.canReadApi(true, api22);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter24 = null;
        springMvcApiReader15.LOG = logAdapter24;
        java.util.Set<java.lang.reflect.Type> typeSet26 = springMvcApiReader15.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet27 = springMvcApiReader15.typesToSkip;
        io.swagger.models.Swagger swagger28 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter29 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader30 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger28, logAdapter29);
        java.lang.reflect.Type[] typeArray31 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet32 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet32, typeArray31);
        springMvcApiReader30.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet32);
        java.lang.annotation.Annotation[] annotationArray35 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList36 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList36, annotationArray35);
        boolean boolean38 = springMvcApiReader30.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList36);
        java.util.Set<java.lang.reflect.Type> typeSet39 = springMvcApiReader30.typesToSkip;
        springMvcApiReader30.updateExtensionChain();
        io.swagger.models.Operation operation41 = null;
        io.swagger.annotations.ApiOperation apiOperation42 = null;
        springMvcApiReader30.updateTagsForOperation(operation41, apiOperation42);
        io.swagger.annotations.Api api45 = null;
        boolean boolean46 = springMvcApiReader30.canReadApi(true, api45);
        io.swagger.models.Swagger swagger47 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter48 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader49 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger47, logAdapter48);
        java.lang.reflect.Type[] typeArray50 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet51 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet51, typeArray50);
        springMvcApiReader49.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet51);
        java.lang.annotation.Annotation[] annotationArray54 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList55 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList55, annotationArray54);
        boolean boolean57 = springMvcApiReader49.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList55);
        boolean boolean58 = springMvcApiReader30.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList55);
        boolean boolean59 = springMvcApiReader15.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList55);
        boolean boolean60 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList55);
        io.swagger.models.Swagger swagger61 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter62 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader63 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger61, logAdapter62);
        java.lang.reflect.Type[] typeArray64 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet65 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet65, typeArray64);
        springMvcApiReader63.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet65);
        java.util.Set<java.lang.reflect.Type> typeSet68 = springMvcApiReader63.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet69 = springMvcApiReader63.getTypesToSkip();
        springMvcApiReader2.setTypesToSkip(typeSet69);
        io.swagger.annotations.Api api71 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<io.swagger.models.SecurityRequirement> securityRequirementList72 = springMvcApiReader2.getSecurityRequirements(api71);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertNotNull(typeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(logAdapter20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(typeSet26);
        org.junit.Assert.assertNotNull(typeSet27);
        org.junit.Assert.assertNotNull(typeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(annotationArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(typeSet39);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(typeArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(annotationArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(typeArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(typeSet68);
        org.junit.Assert.assertNotNull(typeSet69);
    }

    @Test
    public void test02868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02868");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.util.Map<java.lang.String, java.lang.String> strMap4 = null;
        java.lang.String str5 = springMvcApiReader2.parseOperationPath("/hi!", strMap4);
        java.util.Set<java.lang.reflect.Type> typeSet6 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger7 = springMvcApiReader2.swagger;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        springMvcApiReader2.LOG = logAdapter8;
        io.swagger.annotations.ResponseHeader[] responseHeaderArray10 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap11 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray10);
        io.swagger.annotations.Api api12 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.lang.String> strSet13 = springMvcApiReader2.extractTags(api12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "/hi!" + "'", str5, "/hi!");
        org.junit.Assert.assertNotNull(typeSet6);
        org.junit.Assert.assertNull(swagger7);
        org.junit.Assert.assertNull(strMap11);
    }

    @Test
    public void test02869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02869");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader2.parseOperationPath("hi!", strMap15);
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.reflect.Type[] typeArray20 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet21 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet21, typeArray20);
        springMvcApiReader19.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet21);
        io.swagger.models.Swagger swagger24 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter25 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader26 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger24, logAdapter25);
        java.lang.reflect.Type[] typeArray27 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet28 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet28, typeArray27);
        springMvcApiReader26.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet28);
        springMvcApiReader19.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet28);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.reflect.Type[] typeArray35 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet36 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet36, typeArray35);
        springMvcApiReader34.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet36);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter39 = springMvcApiReader34.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap41 = null;
        java.lang.String str42 = springMvcApiReader34.parseOperationPath("", strMap41);
        io.swagger.annotations.Api api44 = null;
        boolean boolean45 = springMvcApiReader34.canReadApi(false, api44);
        java.util.Map<java.lang.String, java.lang.String> strMap47 = null;
        java.lang.String str48 = springMvcApiReader34.parseOperationPath("hi!", strMap47);
        io.swagger.models.Swagger swagger49 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter50 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader51 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger49, logAdapter50);
        java.lang.Class<?> wildcardClass52 = springMvcApiReader51.getClass();
        springMvcApiReader34.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        springMvcApiReader19.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        java.util.Set<java.lang.reflect.Type> typeSet56 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger57 = springMvcApiReader2.swagger;
        io.swagger.models.Operation operation58 = null;
        io.swagger.annotations.ApiOperation apiOperation59 = null;
        springMvcApiReader2.updateTagsForOperation(operation58, apiOperation59);
        io.swagger.models.Swagger swagger61 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter62 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader63 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger61, logAdapter62);
        java.lang.reflect.Type[] typeArray64 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet65 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet65, typeArray64);
        springMvcApiReader63.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet65);
        java.lang.Class<?> wildcardClass68 = springMvcApiReader63.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass68);
        io.swagger.annotations.Api api71 = null;
        boolean boolean72 = springMvcApiReader2.canReadApi(true, api71);
        java.util.Map<java.lang.String, java.lang.String> strMap74 = null;
        java.lang.String str75 = springMvcApiReader2.parseOperationPath("", strMap74);
        io.swagger.models.Swagger swagger76 = null;
        springMvcApiReader2.swagger = swagger76;
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/hi!" + "'", str16, "/hi!");
        org.junit.Assert.assertNotNull(typeArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(typeArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(typeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(logAdapter39);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "/hi!" + "'", str48, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(typeSet56);
        org.junit.Assert.assertNull(swagger57);
        org.junit.Assert.assertNotNull(typeArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "" + "'", str75, "");
    }

    @Test
    public void test02870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02870");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type type18 = null;
        springMvcApiReader17.addTypeToSkippedTypes(type18);
        java.util.Set<java.lang.reflect.Type> typeSet20 = springMvcApiReader17.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet20);
        io.swagger.models.Swagger swagger22 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader24 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger22, logAdapter23);
        java.lang.reflect.Type[] typeArray25 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet26 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet26, typeArray25);
        springMvcApiReader24.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet26);
        java.lang.annotation.Annotation[] annotationArray29 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList30 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList30, annotationArray29);
        boolean boolean32 = springMvcApiReader24.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList30);
        io.swagger.models.Swagger swagger33 = null;
        springMvcApiReader24.swagger = swagger33;
        java.util.Set<java.lang.reflect.Type> typeSet35 = springMvcApiReader24.getTypesToSkip();
        springMvcApiReader2.setTypesToSkip(typeSet35);
        java.util.Set<java.lang.reflect.Type> typeSet37 = springMvcApiReader2.typesToSkip;
        springMvcApiReader2.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet39 = springMvcApiReader2.typesToSkip;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter40 = null;
        springMvcApiReader2.LOG = logAdapter40;
        java.lang.Class<?> wildcardClass42 = springMvcApiReader2.getClass();
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeSet20);
        org.junit.Assert.assertNotNull(typeArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(annotationArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(typeSet35);
        org.junit.Assert.assertNotNull(typeSet37);
        org.junit.Assert.assertNotNull(typeSet39);
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test02871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02871");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.models.Swagger swagger3 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter4 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader5 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger3, logAdapter4);
        java.lang.reflect.Type[] typeArray6 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet7 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet7, typeArray6);
        springMvcApiReader5.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet7);
        java.lang.annotation.Annotation[] annotationArray10 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList11 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList11, annotationArray10);
        boolean boolean13 = springMvcApiReader5.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList11);
        boolean boolean14 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList11);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type[] typeArray18 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet19 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet19, typeArray18);
        springMvcApiReader17.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet19);
        java.lang.annotation.Annotation[] annotationArray22 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList23 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList23, annotationArray22);
        boolean boolean25 = springMvcApiReader17.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList23);
        boolean boolean26 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList23);
        java.util.Set<java.lang.reflect.Type> typeSet27 = null;
        springMvcApiReader2.typesToSkip = typeSet27;
        io.swagger.models.Swagger swagger29 = null;
        springMvcApiReader2.swagger = swagger29;
        java.util.Set<java.lang.reflect.Type> typeSet31 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.reflect.Type[] typeArray35 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet36 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet36, typeArray35);
        springMvcApiReader34.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet36);
        java.util.Set<java.lang.reflect.Type> typeSet39 = springMvcApiReader34.typesToSkip;
        springMvcApiReader34.updateExtensionChain();
        io.swagger.models.Swagger swagger41 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter42 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader43 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger41, logAdapter42);
        java.lang.Class<?> wildcardClass44 = springMvcApiReader43.getClass();
        springMvcApiReader34.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass44);
        io.swagger.models.Swagger swagger46 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter47 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader48 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger46, logAdapter47);
        java.lang.reflect.Type[] typeArray49 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet50 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet50, typeArray49);
        springMvcApiReader48.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet50);
        io.swagger.models.Swagger swagger53 = springMvcApiReader48.swagger;
        io.swagger.models.Swagger swagger54 = springMvcApiReader48.swagger;
        io.swagger.models.Swagger swagger55 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter56 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader57 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger55, logAdapter56);
        java.lang.reflect.Type[] typeArray58 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet59 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet59, typeArray58);
        springMvcApiReader57.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet59);
        java.lang.annotation.Annotation[] annotationArray62 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList63 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList63, annotationArray62);
        boolean boolean65 = springMvcApiReader57.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList63);
        boolean boolean66 = springMvcApiReader48.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList63);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList67 = springMvcApiReader2.getParameters((java.lang.reflect.Type) wildcardClass44, (java.util.List<java.lang.annotation.Annotation>) annotationList63);
        springMvcApiReader2.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet69 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet70 = springMvcApiReader2.typesToSkip;
        java.lang.reflect.Method method71 = null;
        io.swagger.models.Operation operation72 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.readImplicitParameters(method71, operation72);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(annotationArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(typeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(annotationArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(typeSet31);
        org.junit.Assert.assertNotNull(typeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(typeSet39);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(typeArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNull(swagger53);
        org.junit.Assert.assertNull(swagger54);
        org.junit.Assert.assertNotNull(typeArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(annotationArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(parameterList67);
        org.junit.Assert.assertNull(typeSet69);
        org.junit.Assert.assertNull(typeSet70);
    }

    @Test
    public void test02872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02872");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        java.util.Set<java.lang.reflect.Type> typeSet5 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet6 = springMvcApiReader2.getTypesToSkip();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        springMvcApiReader2.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet9 = springMvcApiReader2.getTypesToSkip();
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger11 = null;
        springMvcApiReader2.swagger = swagger11;
        java.lang.reflect.Method method13 = null;
        io.swagger.models.Operation operation14 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.readImplicitParameters(method13, operation14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeSet5);
        org.junit.Assert.assertNotNull(typeSet6);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertNotNull(typeSet9);
    }

    @Test
    public void test02873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02873");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        java.util.Set<java.lang.reflect.Type> typeSet5 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger6 = springMvcApiReader2.swagger;
        springMvcApiReader2.updateExtensionChain();
        springMvcApiReader2.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet9 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader12 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger10, logAdapter11);
        java.lang.reflect.Type[] typeArray13 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet14 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet14, typeArray13);
        springMvcApiReader12.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet14);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter17 = springMvcApiReader12.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap19 = null;
        java.lang.String str20 = springMvcApiReader12.parseOperationPath("", strMap19);
        java.lang.reflect.Type[] typeArray21 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList22 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList22, typeArray21);
        springMvcApiReader12.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList22);
        io.swagger.models.Swagger swagger25 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter26 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader27 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger25, logAdapter26);
        java.util.Map<java.lang.String, java.lang.String> strMap29 = null;
        java.lang.String str30 = springMvcApiReader27.parseOperationPath("/hi!", strMap29);
        java.util.Set<java.lang.reflect.Type> typeSet31 = springMvcApiReader27.getTypesToSkip();
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.reflect.Type type35 = null;
        springMvcApiReader34.addTypeToSkippedTypes(type35);
        java.util.Set<java.lang.reflect.Type> typeSet37 = springMvcApiReader34.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet38 = springMvcApiReader34.getTypesToSkip();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter39 = springMvcApiReader34.LOG;
        io.swagger.models.Swagger swagger40 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter41 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader42 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger40, logAdapter41);
        java.lang.reflect.Type[] typeArray43 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet44 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet44, typeArray43);
        springMvcApiReader42.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet44);
        io.swagger.models.Swagger swagger47 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter48 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader49 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger47, logAdapter48);
        java.lang.reflect.Type[] typeArray50 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet51 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet51, typeArray50);
        springMvcApiReader49.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet51);
        springMvcApiReader42.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet51);
        io.swagger.models.Swagger swagger55 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter56 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader57 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger55, logAdapter56);
        java.lang.reflect.Type[] typeArray58 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet59 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet59, typeArray58);
        springMvcApiReader57.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet59);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter62 = springMvcApiReader57.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap64 = null;
        java.lang.String str65 = springMvcApiReader57.parseOperationPath("", strMap64);
        io.swagger.annotations.Api api67 = null;
        boolean boolean68 = springMvcApiReader57.canReadApi(false, api67);
        java.util.Map<java.lang.String, java.lang.String> strMap70 = null;
        java.lang.String str71 = springMvcApiReader57.parseOperationPath("hi!", strMap70);
        io.swagger.models.Swagger swagger72 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter73 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader74 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger72, logAdapter73);
        java.lang.Class<?> wildcardClass75 = springMvcApiReader74.getClass();
        springMvcApiReader57.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass75);
        springMvcApiReader42.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass75);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter78 = springMvcApiReader42.LOG;
        io.swagger.models.Swagger swagger79 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter80 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader81 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger79, logAdapter80);
        java.lang.reflect.Type[] typeArray82 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet83 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet83, typeArray82);
        springMvcApiReader81.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet83);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter86 = springMvcApiReader81.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap88 = null;
        java.lang.String str89 = springMvcApiReader81.parseOperationPath("", strMap88);
        java.lang.reflect.Type[] typeArray90 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList91 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean92 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList91, typeArray90);
        springMvcApiReader81.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList91);
        springMvcApiReader42.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList91);
        springMvcApiReader34.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList91);
        springMvcApiReader27.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList91);
        springMvcApiReader12.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList91);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList91);
        org.junit.Assert.assertNotNull(typeSet5);
        org.junit.Assert.assertNull(swagger6);
        org.junit.Assert.assertNotNull(typeSet9);
        org.junit.Assert.assertNotNull(typeArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(logAdapter17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertNotNull(typeArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "/hi!" + "'", str30, "/hi!");
        org.junit.Assert.assertNotNull(typeSet31);
        org.junit.Assert.assertNotNull(typeSet37);
        org.junit.Assert.assertNotNull(typeSet38);
        org.junit.Assert.assertNull(logAdapter39);
        org.junit.Assert.assertNotNull(typeArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(typeArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(typeArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNull(logAdapter62);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "" + "'", str65, "");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "/hi!" + "'", str71, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNull(logAdapter78);
        org.junit.Assert.assertNotNull(typeArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNull(logAdapter86);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "" + "'", str89, "");
        org.junit.Assert.assertNotNull(typeArray90);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
    }

    @Test
    public void test02874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02874");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.util.Set<java.lang.reflect.Type> typeSet7 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger8 = springMvcApiReader2.swagger;
        io.swagger.models.Operation operation9 = null;
        io.swagger.annotations.ApiOperation apiOperation10 = null;
        springMvcApiReader2.updateTagsForOperation(operation9, apiOperation10);
        io.swagger.models.Swagger swagger12 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter13 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader14 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger12, logAdapter13);
        java.lang.reflect.Type[] typeArray15 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet16 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet16, typeArray15);
        springMvcApiReader14.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet16);
        io.swagger.models.Swagger swagger19 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter20 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader21 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger19, logAdapter20);
        java.lang.reflect.Type[] typeArray22 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet23 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet23, typeArray22);
        springMvcApiReader21.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet23);
        springMvcApiReader14.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet23);
        io.swagger.models.Swagger swagger27 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter28 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader29 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger27, logAdapter28);
        java.lang.reflect.Type[] typeArray30 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet31 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet31, typeArray30);
        springMvcApiReader29.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet31);
        io.swagger.models.Swagger swagger34 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter35 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader36 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger34, logAdapter35);
        java.lang.reflect.Type[] typeArray37 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet38 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet38, typeArray37);
        springMvcApiReader36.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet38);
        springMvcApiReader29.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet38);
        io.swagger.models.Swagger swagger42 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter43 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader44 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger42, logAdapter43);
        java.lang.reflect.Type type45 = null;
        springMvcApiReader44.addTypeToSkippedTypes(type45);
        java.util.Set<java.lang.reflect.Type> typeSet47 = springMvcApiReader44.typesToSkip;
        springMvcApiReader29.setTypesToSkip(typeSet47);
        java.util.Set<java.lang.reflect.Type> typeSet49 = springMvcApiReader29.getTypesToSkip();
        io.swagger.annotations.Api api51 = null;
        boolean boolean52 = springMvcApiReader29.canReadApi(true, api51);
        io.swagger.models.Swagger swagger53 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter54 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader55 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger53, logAdapter54);
        java.lang.reflect.Type type56 = null;
        springMvcApiReader55.addTypeToSkippedTypes(type56);
        java.util.Set<java.lang.reflect.Type> typeSet58 = springMvcApiReader55.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet59 = springMvcApiReader55.getTypesToSkip();
        springMvcApiReader29.typesToSkip = typeSet59;
        springMvcApiReader14.typesToSkip = typeSet59;
        io.swagger.models.Operation operation62 = null;
        io.swagger.annotations.ApiOperation apiOperation63 = null;
        springMvcApiReader14.updateTagsForOperation(operation62, apiOperation63);
        io.swagger.models.Swagger swagger65 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter66 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader67 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger65, logAdapter66);
        java.lang.reflect.Type[] typeArray68 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet69 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet69, typeArray68);
        springMvcApiReader67.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet69);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter72 = springMvcApiReader67.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap74 = null;
        java.lang.String str75 = springMvcApiReader67.parseOperationPath("", strMap74);
        java.lang.reflect.Type[] typeArray76 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList77 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList77, typeArray76);
        springMvcApiReader67.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList77);
        springMvcApiReader14.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList77);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList77);
        io.swagger.annotations.Api api82 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.lang.String> strSet83 = springMvcApiReader2.extractTags(api82);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeSet7);
        org.junit.Assert.assertNull(swagger8);
        org.junit.Assert.assertNotNull(typeArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(typeArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(typeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(typeArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(typeSet47);
        org.junit.Assert.assertNotNull(typeSet49);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(typeSet58);
        org.junit.Assert.assertNotNull(typeSet59);
        org.junit.Assert.assertNotNull(typeArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNull(logAdapter72);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "" + "'", str75, "");
        org.junit.Assert.assertNotNull(typeArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
    }

    @Test
    public void test02875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02875");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        java.util.Set<java.lang.reflect.Type> typeSet5 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet6 = springMvcApiReader2.getTypesToSkip();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger8 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger9 = null;
        springMvcApiReader2.swagger = swagger9;
        io.swagger.models.Swagger swagger11 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter12 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader13 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger11, logAdapter12);
        java.lang.reflect.Type[] typeArray14 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet15 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet15, typeArray14);
        springMvcApiReader13.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet15);
        java.lang.annotation.Annotation[] annotationArray18 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList19 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList19, annotationArray18);
        boolean boolean21 = springMvcApiReader13.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList19);
        io.swagger.models.Swagger swagger22 = null;
        springMvcApiReader13.swagger = swagger22;
        io.swagger.models.Swagger swagger24 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter25 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader26 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger24, logAdapter25);
        java.lang.reflect.Type[] typeArray27 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet28 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet28, typeArray27);
        springMvcApiReader26.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet28);
        java.lang.annotation.Annotation[] annotationArray31 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList32 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList32, annotationArray31);
        boolean boolean34 = springMvcApiReader26.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList32);
        io.swagger.models.Swagger swagger35 = null;
        springMvcApiReader26.swagger = swagger35;
        java.lang.annotation.Annotation[] annotationArray37 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList38 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList38, annotationArray37);
        boolean boolean40 = springMvcApiReader26.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList38);
        boolean boolean41 = springMvcApiReader13.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList38);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter42 = springMvcApiReader13.LOG;
        io.swagger.models.Swagger swagger43 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter44 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader45 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger43, logAdapter44);
        java.lang.reflect.Type[] typeArray46 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet47 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet47, typeArray46);
        springMvcApiReader45.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet47);
        java.lang.annotation.Annotation[] annotationArray50 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList51 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList51, annotationArray50);
        boolean boolean53 = springMvcApiReader45.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList51);
        io.swagger.models.Swagger swagger54 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter55 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader56 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger54, logAdapter55);
        java.lang.reflect.Type[] typeArray57 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet58 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet58, typeArray57);
        springMvcApiReader56.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet58);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter61 = springMvcApiReader56.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap63 = null;
        java.lang.String str64 = springMvcApiReader56.parseOperationPath("", strMap63);
        io.swagger.annotations.Api api66 = null;
        boolean boolean67 = springMvcApiReader56.canReadApi(false, api66);
        java.util.Map<java.lang.String, java.lang.String> strMap69 = null;
        java.lang.String str70 = springMvcApiReader56.parseOperationPath("hi!", strMap69);
        io.swagger.models.Swagger swagger71 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter72 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader73 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger71, logAdapter72);
        java.lang.Class<?> wildcardClass74 = springMvcApiReader73.getClass();
        springMvcApiReader56.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass74);
        java.util.Map<java.lang.String, java.lang.String> strMap77 = null;
        java.lang.String str78 = springMvcApiReader56.parseOperationPath("/hi!", strMap77);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray79 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap80 = springMvcApiReader56.parseResponseHeaders(responseHeaderArray79);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap81 = springMvcApiReader45.parseResponseHeaders(responseHeaderArray79);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap82 = springMvcApiReader13.parseResponseHeaders(responseHeaderArray79);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap83 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray79);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter84 = null;
        springMvcApiReader2.LOG = logAdapter84;
        springMvcApiReader2.updateExtensionChain();
        org.junit.Assert.assertNotNull(typeSet5);
        org.junit.Assert.assertNotNull(typeSet6);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertNull(swagger8);
        org.junit.Assert.assertNotNull(typeArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(annotationArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(typeArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(annotationArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(annotationArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(logAdapter42);
        org.junit.Assert.assertNotNull(typeArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(annotationArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(typeArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(logAdapter61);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "" + "'", str64, "");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "/hi!" + "'", str70, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "/hi!" + "'", str78, "/hi!");
        org.junit.Assert.assertNotNull(responseHeaderArray79);
        org.junit.Assert.assertNull(strMap80);
        org.junit.Assert.assertNull(strMap81);
        org.junit.Assert.assertNull(strMap82);
        org.junit.Assert.assertNull(strMap83);
    }

    @Test
    public void test02876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02876");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type type18 = null;
        springMvcApiReader17.addTypeToSkippedTypes(type18);
        java.util.Set<java.lang.reflect.Type> typeSet20 = springMvcApiReader17.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet20);
        io.swagger.models.Swagger swagger22 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader24 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger22, logAdapter23);
        java.lang.reflect.Type[] typeArray25 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet26 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet26, typeArray25);
        springMvcApiReader24.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet26);
        java.lang.annotation.Annotation[] annotationArray29 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList30 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList30, annotationArray29);
        boolean boolean32 = springMvcApiReader24.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList30);
        io.swagger.models.Swagger swagger33 = null;
        springMvcApiReader24.swagger = swagger33;
        java.util.Set<java.lang.reflect.Type> typeSet35 = springMvcApiReader24.getTypesToSkip();
        springMvcApiReader2.setTypesToSkip(typeSet35);
        io.swagger.models.Swagger swagger37 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger38 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter39 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader40 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger38, logAdapter39);
        java.lang.reflect.Type type41 = null;
        springMvcApiReader40.addTypeToSkippedTypes(type41);
        java.util.Set<java.lang.reflect.Type> typeSet43 = springMvcApiReader40.typesToSkip;
        io.swagger.models.Swagger swagger44 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter45 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader46 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger44, logAdapter45);
        java.lang.reflect.Type[] typeArray47 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet48 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet48, typeArray47);
        springMvcApiReader46.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet48);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter51 = springMvcApiReader46.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap53 = null;
        java.lang.String str54 = springMvcApiReader46.parseOperationPath("", strMap53);
        io.swagger.annotations.Api api56 = null;
        boolean boolean57 = springMvcApiReader46.canReadApi(false, api56);
        java.util.Map<java.lang.String, java.lang.String> strMap59 = null;
        java.lang.String str60 = springMvcApiReader46.parseOperationPath("hi!", strMap59);
        io.swagger.models.Swagger swagger61 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter62 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader63 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger61, logAdapter62);
        java.lang.Class<?> wildcardClass64 = springMvcApiReader63.getClass();
        springMvcApiReader46.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass64);
        java.util.Map<java.lang.String, java.lang.String> strMap67 = null;
        java.lang.String str68 = springMvcApiReader46.parseOperationPath("/hi!", strMap67);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray69 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap70 = springMvcApiReader46.parseResponseHeaders(responseHeaderArray69);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap71 = springMvcApiReader40.parseResponseHeaders(responseHeaderArray69);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap72 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray69);
        springMvcApiReader2.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet74 = springMvcApiReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet75 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger76 = springMvcApiReader2.swagger;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter77 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap79 = null;
        java.lang.String str80 = springMvcApiReader2.parseOperationPath("", strMap79);
        io.swagger.annotations.Api api81 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.lang.String> strSet82 = springMvcApiReader2.extractTags(api81);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeSet20);
        org.junit.Assert.assertNotNull(typeArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(annotationArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(typeSet35);
        org.junit.Assert.assertNull(swagger37);
        org.junit.Assert.assertNotNull(typeSet43);
        org.junit.Assert.assertNotNull(typeArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(logAdapter51);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "/hi!" + "'", str60, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "/hi!" + "'", str68, "/hi!");
        org.junit.Assert.assertNotNull(responseHeaderArray69);
        org.junit.Assert.assertNull(strMap70);
        org.junit.Assert.assertNull(strMap71);
        org.junit.Assert.assertNull(strMap72);
        org.junit.Assert.assertNotNull(typeSet74);
        org.junit.Assert.assertNotNull(typeSet75);
        org.junit.Assert.assertNull(swagger76);
        org.junit.Assert.assertNull(logAdapter77);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "" + "'", str80, "");
    }

    @Test
    public void test02877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02877");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.lang.annotation.Annotation[] annotationArray7 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList8 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList8, annotationArray7);
        boolean boolean10 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList8);
        io.swagger.models.Swagger swagger11 = null;
        springMvcApiReader2.swagger = swagger11;
        io.swagger.models.Swagger swagger13 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter14 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader15 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger13, logAdapter14);
        java.lang.reflect.Type[] typeArray16 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet17 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet17, typeArray16);
        springMvcApiReader15.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet17);
        java.lang.annotation.Annotation[] annotationArray20 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList21 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList21, annotationArray20);
        boolean boolean23 = springMvcApiReader15.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList21);
        io.swagger.models.Swagger swagger24 = null;
        springMvcApiReader15.swagger = swagger24;
        java.lang.annotation.Annotation[] annotationArray26 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList27 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList27, annotationArray26);
        boolean boolean29 = springMvcApiReader15.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList27);
        boolean boolean30 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList27);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.reflect.Type[] typeArray35 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet36 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet36, typeArray35);
        springMvcApiReader34.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet36);
        java.util.Set<java.lang.reflect.Type> typeSet39 = springMvcApiReader34.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet40 = springMvcApiReader34.getTypesToSkip();
        io.swagger.models.Swagger swagger41 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter42 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader43 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger41, logAdapter42);
        java.lang.reflect.Type[] typeArray44 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet45 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet45, typeArray44);
        springMvcApiReader43.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet45);
        java.lang.annotation.Annotation[] annotationArray48 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList49 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList49, annotationArray48);
        boolean boolean51 = springMvcApiReader43.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList49);
        io.swagger.models.Swagger swagger52 = null;
        springMvcApiReader43.swagger = swagger52;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter54 = null;
        springMvcApiReader43.LOG = logAdapter54;
        springMvcApiReader43.updateExtensionChain();
        io.swagger.models.Operation operation57 = null;
        io.swagger.annotations.ApiOperation apiOperation58 = null;
        springMvcApiReader43.updateTagsForOperation(operation57, apiOperation58);
        io.swagger.models.Swagger swagger60 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter61 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader62 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger60, logAdapter61);
        java.lang.reflect.Type[] typeArray63 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet64 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet64, typeArray63);
        springMvcApiReader62.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet64);
        java.lang.annotation.Annotation[] annotationArray67 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList68 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList68, annotationArray67);
        boolean boolean70 = springMvcApiReader62.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList68);
        io.swagger.models.Swagger swagger71 = null;
        springMvcApiReader62.swagger = swagger71;
        io.swagger.models.Swagger swagger73 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter74 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader75 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger73, logAdapter74);
        java.lang.reflect.Type[] typeArray76 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet77 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet77, typeArray76);
        springMvcApiReader75.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet77);
        java.lang.annotation.Annotation[] annotationArray80 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList81 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList81, annotationArray80);
        boolean boolean83 = springMvcApiReader75.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList81);
        io.swagger.models.Swagger swagger84 = null;
        springMvcApiReader75.swagger = swagger84;
        java.lang.annotation.Annotation[] annotationArray86 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList87 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList87, annotationArray86);
        boolean boolean89 = springMvcApiReader75.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList87);
        boolean boolean90 = springMvcApiReader62.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList87);
        boolean boolean91 = springMvcApiReader43.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList87);
        boolean boolean92 = springMvcApiReader34.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList87);
        boolean boolean93 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList87);
        java.util.Set<java.lang.reflect.Type> typeSet94 = springMvcApiReader2.getTypesToSkip();
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Operation operation96 = null;
        io.swagger.annotations.ApiResponses apiResponses97 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateApiResponse(operation96, apiResponses97);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(annotationArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(typeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(annotationArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(annotationArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(typeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(typeSet39);
        org.junit.Assert.assertNotNull(typeSet40);
        org.junit.Assert.assertNotNull(typeArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(annotationArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(typeArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(annotationArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(typeArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(annotationArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(annotationArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNotNull(typeSet94);
    }

    @Test
    public void test02878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02878");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type type18 = null;
        springMvcApiReader17.addTypeToSkippedTypes(type18);
        java.util.Set<java.lang.reflect.Type> typeSet20 = springMvcApiReader17.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet20);
        io.swagger.models.Swagger swagger22 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader24 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger22, logAdapter23);
        java.lang.reflect.Type[] typeArray25 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet26 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet26, typeArray25);
        springMvcApiReader24.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet26);
        java.lang.annotation.Annotation[] annotationArray29 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList30 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList30, annotationArray29);
        boolean boolean32 = springMvcApiReader24.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList30);
        io.swagger.models.Swagger swagger33 = null;
        springMvcApiReader24.swagger = swagger33;
        java.util.Set<java.lang.reflect.Type> typeSet35 = springMvcApiReader24.getTypesToSkip();
        springMvcApiReader2.setTypesToSkip(typeSet35);
        io.swagger.models.Swagger swagger37 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger38 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter39 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader40 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger38, logAdapter39);
        java.lang.reflect.Type type41 = null;
        springMvcApiReader40.addTypeToSkippedTypes(type41);
        java.util.Set<java.lang.reflect.Type> typeSet43 = springMvcApiReader40.typesToSkip;
        io.swagger.models.Swagger swagger44 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter45 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader46 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger44, logAdapter45);
        java.lang.reflect.Type[] typeArray47 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet48 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet48, typeArray47);
        springMvcApiReader46.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet48);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter51 = springMvcApiReader46.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap53 = null;
        java.lang.String str54 = springMvcApiReader46.parseOperationPath("", strMap53);
        io.swagger.annotations.Api api56 = null;
        boolean boolean57 = springMvcApiReader46.canReadApi(false, api56);
        java.util.Map<java.lang.String, java.lang.String> strMap59 = null;
        java.lang.String str60 = springMvcApiReader46.parseOperationPath("hi!", strMap59);
        io.swagger.models.Swagger swagger61 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter62 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader63 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger61, logAdapter62);
        java.lang.Class<?> wildcardClass64 = springMvcApiReader63.getClass();
        springMvcApiReader46.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass64);
        java.util.Map<java.lang.String, java.lang.String> strMap67 = null;
        java.lang.String str68 = springMvcApiReader46.parseOperationPath("/hi!", strMap67);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray69 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap70 = springMvcApiReader46.parseResponseHeaders(responseHeaderArray69);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap71 = springMvcApiReader40.parseResponseHeaders(responseHeaderArray69);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap72 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray69);
        springMvcApiReader2.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet74 = springMvcApiReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet75 = springMvcApiReader2.typesToSkip;
        io.swagger.annotations.Api api76 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.lang.String> strSet77 = springMvcApiReader2.extractTags(api76);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeSet20);
        org.junit.Assert.assertNotNull(typeArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(annotationArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(typeSet35);
        org.junit.Assert.assertNull(swagger37);
        org.junit.Assert.assertNotNull(typeSet43);
        org.junit.Assert.assertNotNull(typeArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(logAdapter51);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "/hi!" + "'", str60, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "/hi!" + "'", str68, "/hi!");
        org.junit.Assert.assertNotNull(responseHeaderArray69);
        org.junit.Assert.assertNull(strMap70);
        org.junit.Assert.assertNull(strMap71);
        org.junit.Assert.assertNull(strMap72);
        org.junit.Assert.assertNotNull(typeSet74);
        org.junit.Assert.assertNotNull(typeSet75);
    }

    @Test
    public void test02879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02879");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.util.Set<java.lang.reflect.Type> typeSet7 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger8 = null;
        springMvcApiReader2.swagger = swagger8;
        io.swagger.models.Swagger swagger10 = null;
        springMvcApiReader2.swagger = swagger10;
        com.github.kongchen.swagger.docgen.spring.SpringResource springResource12 = null;
        // The following exception was thrown during execution in test generation
        try {
            io.swagger.models.Swagger swagger13 = springMvcApiReader2.read(springResource12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeSet7);
    }

    @Test
    public void test02880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02880");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.util.Set<java.lang.reflect.Type> typeSet7 = springMvcApiReader2.typesToSkip;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger9 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter10 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader11 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger9, logAdapter10);
        java.lang.Class<?> wildcardClass12 = springMvcApiReader11.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass12);
        io.swagger.models.Swagger swagger14 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter15 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader16 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger14, logAdapter15);
        java.lang.Class<?> wildcardClass17 = springMvcApiReader16.getClass();
        java.lang.annotation.Annotation[] annotationArray18 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList19 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList19, annotationArray18);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList21 = springMvcApiReader2.getParameters((java.lang.reflect.Type) wildcardClass17, (java.util.List<java.lang.annotation.Annotation>) annotationList19);
        io.swagger.models.Swagger swagger22 = null;
        springMvcApiReader2.swagger = swagger22;
        io.swagger.models.Swagger swagger24 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter25 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader26 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger24, logAdapter25);
        java.lang.reflect.Type[] typeArray27 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet28 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet28, typeArray27);
        springMvcApiReader26.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet28);
        java.util.Set<java.lang.reflect.Type> typeSet31 = springMvcApiReader26.typesToSkip;
        io.swagger.models.Swagger swagger32 = springMvcApiReader26.swagger;
        io.swagger.models.Operation operation33 = null;
        io.swagger.annotations.ApiOperation apiOperation34 = null;
        springMvcApiReader26.updateTagsForOperation(operation33, apiOperation34);
        java.util.Set<java.lang.reflect.Type> typeSet36 = springMvcApiReader26.getTypesToSkip();
        io.swagger.models.Swagger swagger37 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter38 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader39 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger37, logAdapter38);
        java.lang.reflect.Type[] typeArray40 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet41 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet41, typeArray40);
        springMvcApiReader39.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet41);
        java.lang.annotation.Annotation[] annotationArray44 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList45 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList45, annotationArray44);
        boolean boolean47 = springMvcApiReader39.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList45);
        io.swagger.models.Swagger swagger48 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter49 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader50 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger48, logAdapter49);
        java.lang.reflect.Type[] typeArray51 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet52 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet52, typeArray51);
        springMvcApiReader50.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet52);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter55 = springMvcApiReader50.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap57 = null;
        java.lang.String str58 = springMvcApiReader50.parseOperationPath("", strMap57);
        io.swagger.annotations.Api api60 = null;
        boolean boolean61 = springMvcApiReader50.canReadApi(false, api60);
        java.util.Map<java.lang.String, java.lang.String> strMap63 = null;
        java.lang.String str64 = springMvcApiReader50.parseOperationPath("hi!", strMap63);
        io.swagger.models.Swagger swagger65 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter66 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader67 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger65, logAdapter66);
        java.lang.Class<?> wildcardClass68 = springMvcApiReader67.getClass();
        springMvcApiReader50.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass68);
        java.util.Map<java.lang.String, java.lang.String> strMap71 = null;
        java.lang.String str72 = springMvcApiReader50.parseOperationPath("/hi!", strMap71);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray73 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap74 = springMvcApiReader50.parseResponseHeaders(responseHeaderArray73);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap75 = springMvcApiReader39.parseResponseHeaders(responseHeaderArray73);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap76 = springMvcApiReader26.parseResponseHeaders(responseHeaderArray73);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap77 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray73);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter78 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger79 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger80 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger81 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter82 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader83 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger81, logAdapter82);
        java.lang.reflect.Type type84 = null;
        springMvcApiReader83.addTypeToSkippedTypes(type84);
        java.util.Set<java.lang.reflect.Type> typeSet86 = springMvcApiReader83.typesToSkip;
        io.swagger.models.Swagger swagger87 = springMvcApiReader83.swagger;
        springMvcApiReader83.updateExtensionChain();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter89 = springMvcApiReader83.LOG;
        springMvcApiReader83.updateExtensionChain();
        io.swagger.models.Operation operation91 = null;
        io.swagger.annotations.ApiOperation apiOperation92 = null;
        springMvcApiReader83.updateTagsForOperation(operation91, apiOperation92);
        java.util.Set<java.lang.reflect.Type> typeSet94 = springMvcApiReader83.getTypesToSkip();
        springMvcApiReader2.setTypesToSkip(typeSet94);
        java.util.Set<java.lang.reflect.Type> typeSet96 = springMvcApiReader2.getTypesToSkip();
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeSet7);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(annotationArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(parameterList21);
        org.junit.Assert.assertNotNull(typeArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(typeSet31);
        org.junit.Assert.assertNull(swagger32);
        org.junit.Assert.assertNotNull(typeSet36);
        org.junit.Assert.assertNotNull(typeArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(annotationArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(typeArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNull(logAdapter55);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "" + "'", str58, "");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "/hi!" + "'", str64, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "/hi!" + "'", str72, "/hi!");
        org.junit.Assert.assertNotNull(responseHeaderArray73);
        org.junit.Assert.assertNull(strMap74);
        org.junit.Assert.assertNull(strMap75);
        org.junit.Assert.assertNull(strMap76);
        org.junit.Assert.assertNull(strMap77);
        org.junit.Assert.assertNull(logAdapter78);
        org.junit.Assert.assertNull(swagger79);
        org.junit.Assert.assertNull(swagger80);
        org.junit.Assert.assertNotNull(typeSet86);
        org.junit.Assert.assertNull(swagger87);
        org.junit.Assert.assertNull(logAdapter89);
        org.junit.Assert.assertNotNull(typeSet94);
        org.junit.Assert.assertNotNull(typeSet96);
    }

    @Test
    public void test02881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02881");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        java.util.Map<java.lang.String, java.lang.String> strMap16 = null;
        java.lang.String str17 = springMvcApiReader2.parseOperationPath("/hi!", strMap16);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = springMvcApiReader2.LOG;
        java.util.Set<java.lang.reflect.Type> typeSet19 = springMvcApiReader2.getTypesToSkip();
        io.swagger.annotations.ApiOperation apiOperation20 = null;
        io.swagger.models.Operation operation21 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateOperationProtocols(apiOperation20, operation21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "/hi!" + "'", str17, "/hi!");
        org.junit.Assert.assertNull(logAdapter18);
        org.junit.Assert.assertNotNull(typeSet19);
    }

    @Test
    public void test02882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02882");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        java.lang.reflect.Type[] typeArray11 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList12 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList12, typeArray11);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList12);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!", "", "hi!" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap20 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray21 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList22 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList22, securityRequirementArray21);
        io.swagger.models.Operation operation24 = null;
        springMvcApiReader2.updateOperation(strArray15, strArray19, strMap20, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList22, operation24);
        java.util.Map<java.lang.String, java.lang.String> strMap27 = null;
        java.lang.String str28 = springMvcApiReader2.parseOperationPath("", strMap27);
        io.swagger.models.Operation operation29 = null;
        io.swagger.annotations.ApiOperation apiOperation30 = null;
        springMvcApiReader2.updateTagsForOperation(operation29, apiOperation30);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray32 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap33 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray32);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter34 = null;
        springMvcApiReader2.LOG = logAdapter34;
        io.swagger.models.Swagger swagger36 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter37 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader38 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger36, logAdapter37);
        java.lang.reflect.Type[] typeArray39 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet40 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet40, typeArray39);
        springMvcApiReader38.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet40);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter43 = springMvcApiReader38.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap45 = null;
        java.lang.String str46 = springMvcApiReader38.parseOperationPath("", strMap45);
        java.lang.reflect.Type[] typeArray47 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList48 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList48, typeArray47);
        springMvcApiReader38.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList48);
        java.lang.String[] strArray51 = new java.lang.String[] {};
        java.lang.String[] strArray55 = new java.lang.String[] { "hi!", "", "hi!" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap56 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray57 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList58 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList58, securityRequirementArray57);
        io.swagger.models.Operation operation60 = null;
        springMvcApiReader38.updateOperation(strArray51, strArray55, strMap56, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList58, operation60);
        java.util.Map<java.lang.String, java.lang.String> strMap63 = null;
        java.lang.String str64 = springMvcApiReader38.parseOperationPath("", strMap63);
        springMvcApiReader38.updateExtensionChain();
        io.swagger.models.Swagger swagger66 = null;
        springMvcApiReader38.swagger = swagger66;
        io.swagger.annotations.Api api69 = null;
        boolean boolean70 = springMvcApiReader38.canReadApi(false, api69);
        java.util.Set<java.lang.reflect.Type> typeSet71 = springMvcApiReader38.getTypesToSkip();
        io.swagger.models.Swagger swagger72 = springMvcApiReader38.swagger;
        java.util.Set<java.lang.reflect.Type> typeSet73 = springMvcApiReader38.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet73);
        io.swagger.models.Operation operation75 = null;
        io.swagger.annotations.ApiResponses apiResponses76 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateApiResponse(operation75, apiResponses76);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(typeArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(securityRequirementArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNull(strMap33);
        org.junit.Assert.assertNotNull(typeArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(logAdapter43);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
        org.junit.Assert.assertNotNull(typeArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertNotNull(securityRequirementArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "" + "'", str64, "");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(typeSet71);
        org.junit.Assert.assertNull(swagger72);
        org.junit.Assert.assertNotNull(typeSet73);
    }

    @Test
    public void test02883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02883");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.models.Swagger swagger11 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter12 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader13 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger11, logAdapter12);
        java.lang.Class<?> wildcardClass14 = springMvcApiReader13.getClass();
        java.lang.reflect.Type[] typeArray15 = new java.lang.reflect.Type[] { wildcardClass14 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet16 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet16, typeArray15);
        springMvcApiReader2.typesToSkip = typeSet16;
        java.util.Set<java.lang.reflect.Type> typeSet19 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger20 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter21 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader22 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger20, logAdapter21);
        java.lang.reflect.Type type23 = null;
        springMvcApiReader22.addTypeToSkippedTypes(type23);
        java.util.Set<java.lang.reflect.Type> typeSet25 = springMvcApiReader22.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet26 = springMvcApiReader22.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet26);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Operation operation29 = null;
        io.swagger.annotations.ApiResponses apiResponses30 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateApiResponse(operation29, apiResponses30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(typeArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(typeSet19);
        org.junit.Assert.assertNotNull(typeSet25);
        org.junit.Assert.assertNotNull(typeSet26);
    }

    @Test
    public void test02884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02884");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader2.parseOperationPath("hi!", strMap15);
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.Class<?> wildcardClass20 = springMvcApiReader19.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass20);
        io.swagger.models.Swagger swagger22 = null;
        springMvcApiReader2.swagger = swagger22;
        io.swagger.models.Swagger swagger24 = springMvcApiReader2.swagger;
        java.util.Set<java.lang.reflect.Type> typeSet25 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger26 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter27 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader28 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger26, logAdapter27);
        java.lang.reflect.Type[] typeArray29 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet30 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet30, typeArray29);
        springMvcApiReader28.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet30);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = springMvcApiReader28.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap35 = null;
        java.lang.String str36 = springMvcApiReader28.parseOperationPath("", strMap35);
        io.swagger.models.Swagger swagger37 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter38 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader39 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger37, logAdapter38);
        java.lang.Class<?> wildcardClass40 = springMvcApiReader39.getClass();
        java.lang.reflect.Type[] typeArray41 = new java.lang.reflect.Type[] { wildcardClass40 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet42 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet42, typeArray41);
        springMvcApiReader28.typesToSkip = typeSet42;
        io.swagger.models.Swagger swagger45 = springMvcApiReader28.swagger;
        java.lang.Class<?> wildcardClass46 = springMvcApiReader28.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass46);
        io.swagger.models.Swagger swagger48 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter49 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader50 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger48, logAdapter49);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter51 = springMvcApiReader50.LOG;
        java.util.Set<java.lang.reflect.Type> typeSet52 = springMvcApiReader50.typesToSkip;
        springMvcApiReader2.typesToSkip = typeSet52;
        java.util.Set<java.lang.reflect.Type> typeSet54 = springMvcApiReader2.typesToSkip;
        io.swagger.annotations.ApiOperation apiOperation55 = null;
        io.swagger.models.Operation operation56 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateOperationProtocols(apiOperation55, operation56);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/hi!" + "'", str16, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNull(swagger24);
        org.junit.Assert.assertNotNull(typeSet25);
        org.junit.Assert.assertNotNull(typeArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(logAdapter33);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(typeArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(swagger45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNull(logAdapter51);
        org.junit.Assert.assertNotNull(typeSet52);
        org.junit.Assert.assertNotNull(typeSet54);
    }

    @Test
    public void test02885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02885");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader2.parseOperationPath("hi!", strMap15);
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.reflect.Type[] typeArray20 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet21 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet21, typeArray20);
        springMvcApiReader19.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet21);
        io.swagger.models.Swagger swagger24 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter25 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader26 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger24, logAdapter25);
        java.lang.reflect.Type[] typeArray27 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet28 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet28, typeArray27);
        springMvcApiReader26.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet28);
        springMvcApiReader19.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet28);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.reflect.Type[] typeArray35 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet36 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet36, typeArray35);
        springMvcApiReader34.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet36);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter39 = springMvcApiReader34.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap41 = null;
        java.lang.String str42 = springMvcApiReader34.parseOperationPath("", strMap41);
        io.swagger.annotations.Api api44 = null;
        boolean boolean45 = springMvcApiReader34.canReadApi(false, api44);
        java.util.Map<java.lang.String, java.lang.String> strMap47 = null;
        java.lang.String str48 = springMvcApiReader34.parseOperationPath("hi!", strMap47);
        io.swagger.models.Swagger swagger49 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter50 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader51 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger49, logAdapter50);
        java.lang.Class<?> wildcardClass52 = springMvcApiReader51.getClass();
        springMvcApiReader34.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        springMvcApiReader19.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        io.swagger.models.Operation operation56 = null;
        io.swagger.annotations.ApiOperation apiOperation57 = null;
        springMvcApiReader2.updateTagsForOperation(operation56, apiOperation57);
        io.swagger.models.Swagger swagger59 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter60 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader61 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger59, logAdapter60);
        java.lang.reflect.Type[] typeArray62 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet63 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet63, typeArray62);
        springMvcApiReader61.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet63);
        io.swagger.models.Swagger swagger66 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter67 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader68 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger66, logAdapter67);
        java.lang.reflect.Type[] typeArray69 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet70 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet70, typeArray69);
        springMvcApiReader68.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet70);
        springMvcApiReader61.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet70);
        io.swagger.models.Swagger swagger74 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter75 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader76 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger74, logAdapter75);
        java.lang.reflect.Type type77 = null;
        springMvcApiReader76.addTypeToSkippedTypes(type77);
        java.util.Set<java.lang.reflect.Type> typeSet79 = springMvcApiReader76.typesToSkip;
        springMvcApiReader61.setTypesToSkip(typeSet79);
        java.util.Set<java.lang.reflect.Type> typeSet81 = springMvcApiReader61.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet81);
        java.lang.Class<?> wildcardClass83 = springMvcApiReader2.getClass();
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/hi!" + "'", str16, "/hi!");
        org.junit.Assert.assertNotNull(typeArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(typeArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(typeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(logAdapter39);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "/hi!" + "'", str48, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(typeArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(typeArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(typeSet79);
        org.junit.Assert.assertNotNull(typeSet81);
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test02886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02886");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        java.util.Set<java.lang.reflect.Type> typeSet5 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet6 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger14 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter15 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader16 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger14, logAdapter15);
        java.lang.reflect.Type[] typeArray17 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet18 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet18, typeArray17);
        springMvcApiReader16.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet18);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet18);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet18);
        io.swagger.models.Operation operation23 = null;
        io.swagger.annotations.ApiOperation apiOperation24 = null;
        springMvcApiReader2.updateTagsForOperation(operation23, apiOperation24);
        io.swagger.annotations.Api api27 = null;
        boolean boolean28 = springMvcApiReader2.canReadApi(false, api27);
        io.swagger.models.Swagger swagger29 = null;
        springMvcApiReader2.swagger = swagger29;
        java.util.Set<java.lang.reflect.Type> typeSet31 = springMvcApiReader2.typesToSkip;
        com.github.kongchen.swagger.docgen.spring.SpringResource springResource32 = null;
        // The following exception was thrown during execution in test generation
        try {
            io.swagger.models.Swagger swagger33 = springMvcApiReader2.read(springResource32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeSet5);
        org.junit.Assert.assertNotNull(typeSet6);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(typeSet31);
    }

    @Test
    public void test02887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02887");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter3 = springMvcApiReader2.LOG;
        java.util.Set<java.lang.reflect.Type> typeSet4 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Operation operation5 = null;
        io.swagger.annotations.ApiOperation apiOperation6 = null;
        springMvcApiReader2.updateTagsForOperation(operation5, apiOperation6);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger9 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter10 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader11 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger9, logAdapter10);
        java.lang.reflect.Type[] typeArray12 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet13 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet13, typeArray12);
        springMvcApiReader11.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet13);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = springMvcApiReader11.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap18 = null;
        java.lang.String str19 = springMvcApiReader11.parseOperationPath("", strMap18);
        io.swagger.annotations.Api api21 = null;
        boolean boolean22 = springMvcApiReader11.canReadApi(false, api21);
        java.util.Map<java.lang.String, java.lang.String> strMap24 = null;
        java.lang.String str25 = springMvcApiReader11.parseOperationPath("hi!", strMap24);
        io.swagger.models.Swagger swagger26 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter27 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader28 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger26, logAdapter27);
        java.lang.reflect.Type[] typeArray29 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet30 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet30, typeArray29);
        springMvcApiReader28.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet30);
        io.swagger.models.Swagger swagger33 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter34 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader35 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger33, logAdapter34);
        java.lang.reflect.Type[] typeArray36 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet37 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet37, typeArray36);
        springMvcApiReader35.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet37);
        springMvcApiReader28.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet37);
        io.swagger.models.Swagger swagger41 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter42 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader43 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger41, logAdapter42);
        java.lang.reflect.Type[] typeArray44 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet45 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet45, typeArray44);
        springMvcApiReader43.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet45);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter48 = springMvcApiReader43.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap50 = null;
        java.lang.String str51 = springMvcApiReader43.parseOperationPath("", strMap50);
        io.swagger.annotations.Api api53 = null;
        boolean boolean54 = springMvcApiReader43.canReadApi(false, api53);
        java.util.Map<java.lang.String, java.lang.String> strMap56 = null;
        java.lang.String str57 = springMvcApiReader43.parseOperationPath("hi!", strMap56);
        io.swagger.models.Swagger swagger58 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter59 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader60 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger58, logAdapter59);
        java.lang.Class<?> wildcardClass61 = springMvcApiReader60.getClass();
        springMvcApiReader43.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass61);
        springMvcApiReader28.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass61);
        springMvcApiReader11.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass61);
        io.swagger.models.Operation operation65 = null;
        io.swagger.annotations.ApiOperation apiOperation66 = null;
        springMvcApiReader11.updateTagsForOperation(operation65, apiOperation66);
        io.swagger.models.Swagger swagger68 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter69 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader70 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger68, logAdapter69);
        java.lang.reflect.Type[] typeArray71 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet72 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet72, typeArray71);
        springMvcApiReader70.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet72);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter75 = springMvcApiReader70.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap77 = null;
        java.lang.String str78 = springMvcApiReader70.parseOperationPath("", strMap77);
        io.swagger.annotations.Api api80 = null;
        boolean boolean81 = springMvcApiReader70.canReadApi(false, api80);
        java.util.Map<java.lang.String, java.lang.String> strMap83 = null;
        java.lang.String str84 = springMvcApiReader70.parseOperationPath("hi!", strMap83);
        io.swagger.models.Swagger swagger85 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter86 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader87 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger85, logAdapter86);
        java.lang.Class<?> wildcardClass88 = springMvcApiReader87.getClass();
        springMvcApiReader70.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass88);
        springMvcApiReader11.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass88);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass88);
        java.util.Map<java.lang.String, java.lang.String> strMap93 = null;
        java.lang.String str94 = springMvcApiReader2.parseOperationPath("hi!", strMap93);
        io.swagger.annotations.Api api96 = null;
        boolean boolean97 = springMvcApiReader2.canReadApi(true, api96);
        java.lang.Class<?> wildcardClass98 = springMvcApiReader2.getClass();
        org.junit.Assert.assertNull(logAdapter3);
        org.junit.Assert.assertNotNull(typeSet4);
        org.junit.Assert.assertNull(logAdapter8);
        org.junit.Assert.assertNotNull(typeArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(logAdapter16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "/hi!" + "'", str25, "/hi!");
        org.junit.Assert.assertNotNull(typeArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(typeArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(logAdapter48);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "/hi!" + "'", str57, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(typeArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNull(logAdapter75);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "" + "'", str78, "");
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "/hi!" + "'", str84, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "/hi!" + "'", str94, "/hi!");
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test02888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02888");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        java.util.Set<java.lang.reflect.Type> typeSet5 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger6 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader8 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger6, logAdapter7);
        java.lang.reflect.Type[] typeArray9 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet10 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet10, typeArray9);
        springMvcApiReader8.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet10);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter13 = springMvcApiReader8.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader8.parseOperationPath("", strMap15);
        io.swagger.annotations.Api api18 = null;
        boolean boolean19 = springMvcApiReader8.canReadApi(false, api18);
        java.util.Map<java.lang.String, java.lang.String> strMap21 = null;
        java.lang.String str22 = springMvcApiReader8.parseOperationPath("hi!", strMap21);
        io.swagger.models.Swagger swagger23 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter24 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader25 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger23, logAdapter24);
        java.lang.Class<?> wildcardClass26 = springMvcApiReader25.getClass();
        springMvcApiReader8.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass26);
        java.util.Map<java.lang.String, java.lang.String> strMap29 = null;
        java.lang.String str30 = springMvcApiReader8.parseOperationPath("/hi!", strMap29);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray31 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap32 = springMvcApiReader8.parseResponseHeaders(responseHeaderArray31);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap33 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray31);
        java.util.Set<java.lang.reflect.Type> typeSet34 = springMvcApiReader2.typesToSkip;
        com.github.kongchen.swagger.docgen.spring.SpringResource springResource35 = null;
        // The following exception was thrown during execution in test generation
        try {
            io.swagger.models.Swagger swagger36 = springMvcApiReader2.read(springResource35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeSet5);
        org.junit.Assert.assertNotNull(typeArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(logAdapter13);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "/hi!" + "'", str22, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "/hi!" + "'", str30, "/hi!");
        org.junit.Assert.assertNotNull(responseHeaderArray31);
        org.junit.Assert.assertNull(strMap32);
        org.junit.Assert.assertNull(strMap33);
        org.junit.Assert.assertNotNull(typeSet34);
    }

    @Test
    public void test02889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02889");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        java.util.Set<java.lang.reflect.Type> typeSet5 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger6 = springMvcApiReader2.swagger;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.annotations.Api api9 = null;
        boolean boolean10 = springMvcApiReader2.canReadApi(false, api9);
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap11 = null;
        io.swagger.annotations.Api api12 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, io.swagger.models.Tag> strMap13 = springMvcApiReader2.updateTagsForApi(strMap11, api12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeSet5);
        org.junit.Assert.assertNull(swagger6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test02890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02890");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.models.Swagger swagger3 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter4 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader5 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger3, logAdapter4);
        java.lang.reflect.Type[] typeArray6 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet7 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet7, typeArray6);
        springMvcApiReader5.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet7);
        java.lang.annotation.Annotation[] annotationArray10 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList11 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList11, annotationArray10);
        boolean boolean13 = springMvcApiReader5.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList11);
        boolean boolean14 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList11);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type[] typeArray18 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet19 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet19, typeArray18);
        springMvcApiReader17.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet19);
        java.lang.annotation.Annotation[] annotationArray22 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList23 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList23, annotationArray22);
        boolean boolean25 = springMvcApiReader17.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList23);
        boolean boolean26 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList23);
        java.util.Set<java.lang.reflect.Type> typeSet27 = null;
        springMvcApiReader2.typesToSkip = typeSet27;
        io.swagger.models.Swagger swagger29 = null;
        springMvcApiReader2.swagger = swagger29;
        java.util.Set<java.lang.reflect.Type> typeSet31 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Operation operation34 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updatePath("/hi!", "", operation34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(annotationArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(typeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(annotationArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(typeSet31);
    }

    @Test
    public void test02891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02891");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        java.util.Set<java.lang.reflect.Type> typeSet5 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet6 = springMvcApiReader2.getTypesToSkip();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = null;
        java.lang.String str9 = springMvcApiReader2.parseOperationPath("", strMap8);
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader12 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger10, logAdapter11);
        java.lang.reflect.Type[] typeArray13 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet14 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet14, typeArray13);
        springMvcApiReader12.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet14);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter17 = springMvcApiReader12.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap19 = null;
        java.lang.String str20 = springMvcApiReader12.parseOperationPath("", strMap19);
        io.swagger.annotations.Api api22 = null;
        boolean boolean23 = springMvcApiReader12.canReadApi(false, api22);
        java.util.Map<java.lang.String, java.lang.String> strMap25 = null;
        java.lang.String str26 = springMvcApiReader12.parseOperationPath("hi!", strMap25);
        io.swagger.models.Swagger swagger27 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter28 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader29 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger27, logAdapter28);
        java.lang.Class<?> wildcardClass30 = springMvcApiReader29.getClass();
        springMvcApiReader12.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass30);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.reflect.Type[] typeArray35 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet36 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet36, typeArray35);
        springMvcApiReader34.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet36);
        java.lang.annotation.Annotation[] annotationArray39 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList40 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList40, annotationArray39);
        boolean boolean42 = springMvcApiReader34.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList40);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList43 = springMvcApiReader2.getParameters((java.lang.reflect.Type) wildcardClass30, (java.util.List<java.lang.annotation.Annotation>) annotationList40);
        springMvcApiReader2.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet45 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger46 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter47 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader48 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger46, logAdapter47);
        java.lang.reflect.Type[] typeArray49 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet50 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet50, typeArray49);
        springMvcApiReader48.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet50);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter53 = springMvcApiReader48.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap55 = null;
        java.lang.String str56 = springMvcApiReader48.parseOperationPath("", strMap55);
        io.swagger.annotations.Api api58 = null;
        boolean boolean59 = springMvcApiReader48.canReadApi(false, api58);
        java.util.Map<java.lang.String, java.lang.String> strMap61 = null;
        java.lang.String str62 = springMvcApiReader48.parseOperationPath("", strMap61);
        java.util.Set<java.lang.reflect.Type> typeSet63 = springMvcApiReader48.getTypesToSkip();
        springMvcApiReader2.setTypesToSkip(typeSet63);
        io.swagger.models.Operation operation65 = null;
        io.swagger.annotations.ApiOperation apiOperation66 = null;
        springMvcApiReader2.updateTagsForOperation(operation65, apiOperation66);
        io.swagger.models.Operation operation70 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updatePath("hi!", "/hi!", operation70);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeSet5);
        org.junit.Assert.assertNotNull(typeSet6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(typeArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(logAdapter17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "/hi!" + "'", str26, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(typeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(annotationArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(parameterList43);
        org.junit.Assert.assertNotNull(typeSet45);
        org.junit.Assert.assertNotNull(typeArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNull(logAdapter53);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "" + "'", str62, "");
        org.junit.Assert.assertNotNull(typeSet63);
    }

    @Test
    public void test02892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02892");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.lang.annotation.Annotation[] annotationArray7 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList8 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList8, annotationArray7);
        boolean boolean10 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList8);
        java.util.Set<java.lang.reflect.Type> typeSet11 = springMvcApiReader2.typesToSkip;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Operation operation13 = null;
        io.swagger.annotations.ApiOperation apiOperation14 = null;
        springMvcApiReader2.updateTagsForOperation(operation13, apiOperation14);
        io.swagger.models.Swagger swagger16 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter17 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader18 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger16, logAdapter17);
        java.lang.reflect.Type[] typeArray19 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet20 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet20, typeArray19);
        springMvcApiReader18.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet20);
        io.swagger.models.Swagger swagger23 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter24 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader25 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger23, logAdapter24);
        java.lang.reflect.Type[] typeArray26 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet27 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet27, typeArray26);
        springMvcApiReader25.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet27);
        springMvcApiReader18.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet27);
        io.swagger.models.Swagger swagger31 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter32 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader33 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger31, logAdapter32);
        java.lang.reflect.Type type34 = null;
        springMvcApiReader33.addTypeToSkippedTypes(type34);
        java.util.Set<java.lang.reflect.Type> typeSet36 = springMvcApiReader33.typesToSkip;
        springMvcApiReader18.setTypesToSkip(typeSet36);
        io.swagger.models.Swagger swagger38 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter39 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader40 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger38, logAdapter39);
        java.lang.reflect.Type[] typeArray41 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet42 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet42, typeArray41);
        springMvcApiReader40.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet42);
        io.swagger.models.Swagger swagger45 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter46 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader47 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger45, logAdapter46);
        java.lang.reflect.Type[] typeArray48 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet49 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet49, typeArray48);
        springMvcApiReader47.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet49);
        springMvcApiReader40.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet49);
        io.swagger.models.Swagger swagger53 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter54 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader55 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger53, logAdapter54);
        java.lang.reflect.Type[] typeArray56 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet57 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet57, typeArray56);
        springMvcApiReader55.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet57);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter60 = springMvcApiReader55.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap62 = null;
        java.lang.String str63 = springMvcApiReader55.parseOperationPath("", strMap62);
        io.swagger.annotations.Api api65 = null;
        boolean boolean66 = springMvcApiReader55.canReadApi(false, api65);
        java.util.Map<java.lang.String, java.lang.String> strMap68 = null;
        java.lang.String str69 = springMvcApiReader55.parseOperationPath("hi!", strMap68);
        io.swagger.models.Swagger swagger70 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter71 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader72 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger70, logAdapter71);
        java.lang.Class<?> wildcardClass73 = springMvcApiReader72.getClass();
        springMvcApiReader55.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass73);
        springMvcApiReader40.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass73);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter76 = springMvcApiReader40.LOG;
        io.swagger.models.Swagger swagger77 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter78 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader79 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger77, logAdapter78);
        java.lang.reflect.Type[] typeArray80 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet81 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet81, typeArray80);
        springMvcApiReader79.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet81);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter84 = springMvcApiReader79.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap86 = null;
        java.lang.String str87 = springMvcApiReader79.parseOperationPath("", strMap86);
        java.lang.reflect.Type[] typeArray88 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList89 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList89, typeArray88);
        springMvcApiReader79.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList89);
        springMvcApiReader40.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList89);
        springMvcApiReader18.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList89);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList89);
        java.util.Set<java.lang.reflect.Type> typeSet95 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger96 = null;
        springMvcApiReader2.swagger = swagger96;
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(annotationArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(typeSet11);
        org.junit.Assert.assertNotNull(typeArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(typeArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(typeSet36);
        org.junit.Assert.assertNotNull(typeArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(typeArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(typeArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNull(logAdapter60);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "" + "'", str63, "");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "/hi!" + "'", str69, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNull(logAdapter76);
        org.junit.Assert.assertNotNull(typeArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNull(logAdapter84);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "" + "'", str87, "");
        org.junit.Assert.assertNotNull(typeArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(typeSet95);
    }

    @Test
    public void test02893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02893");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        java.util.Set<java.lang.reflect.Type> typeSet5 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger6 = null;
        springMvcApiReader2.swagger = swagger6;
        io.swagger.models.Swagger swagger8 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader10 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger8, logAdapter9);
        java.lang.reflect.Type[] typeArray11 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet12 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet12, typeArray11);
        springMvcApiReader10.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet12);
        java.util.Set<java.lang.reflect.Type> typeSet15 = springMvcApiReader10.typesToSkip;
        io.swagger.models.Swagger swagger16 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter17 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader18 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger16, logAdapter17);
        java.lang.reflect.Type[] typeArray19 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet20 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet20, typeArray19);
        springMvcApiReader18.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet20);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = springMvcApiReader18.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap25 = null;
        java.lang.String str26 = springMvcApiReader18.parseOperationPath("", strMap25);
        io.swagger.annotations.Api api28 = null;
        boolean boolean29 = springMvcApiReader18.canReadApi(false, api28);
        java.util.Map<java.lang.String, java.lang.String> strMap31 = null;
        java.lang.String str32 = springMvcApiReader18.parseOperationPath("hi!", strMap31);
        io.swagger.models.Swagger swagger33 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter34 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader35 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger33, logAdapter34);
        java.lang.reflect.Type[] typeArray36 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet37 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet37, typeArray36);
        springMvcApiReader35.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet37);
        io.swagger.models.Swagger swagger40 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter41 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader42 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger40, logAdapter41);
        java.lang.reflect.Type[] typeArray43 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet44 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet44, typeArray43);
        springMvcApiReader42.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet44);
        springMvcApiReader35.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet44);
        io.swagger.models.Swagger swagger48 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter49 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader50 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger48, logAdapter49);
        java.lang.reflect.Type[] typeArray51 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet52 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet52, typeArray51);
        springMvcApiReader50.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet52);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter55 = springMvcApiReader50.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap57 = null;
        java.lang.String str58 = springMvcApiReader50.parseOperationPath("", strMap57);
        io.swagger.annotations.Api api60 = null;
        boolean boolean61 = springMvcApiReader50.canReadApi(false, api60);
        java.util.Map<java.lang.String, java.lang.String> strMap63 = null;
        java.lang.String str64 = springMvcApiReader50.parseOperationPath("hi!", strMap63);
        io.swagger.models.Swagger swagger65 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter66 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader67 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger65, logAdapter66);
        java.lang.Class<?> wildcardClass68 = springMvcApiReader67.getClass();
        springMvcApiReader50.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass68);
        springMvcApiReader35.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass68);
        springMvcApiReader18.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass68);
        io.swagger.models.Swagger swagger72 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter73 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader74 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger72, logAdapter73);
        java.lang.reflect.Type[] typeArray75 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet76 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet76, typeArray75);
        springMvcApiReader74.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet76);
        java.lang.annotation.Annotation[] annotationArray79 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList80 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList80, annotationArray79);
        boolean boolean82 = springMvcApiReader74.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList80);
        io.swagger.models.Swagger swagger83 = null;
        springMvcApiReader74.swagger = swagger83;
        java.lang.annotation.Annotation[] annotationArray85 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList86 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList86, annotationArray85);
        boolean boolean88 = springMvcApiReader74.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList86);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList89 = springMvcApiReader10.getParameters((java.lang.reflect.Type) wildcardClass68, (java.util.List<java.lang.annotation.Annotation>) annotationList86);
        boolean boolean90 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList86);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter91 = null;
        springMvcApiReader2.LOG = logAdapter91;
        org.junit.Assert.assertNotNull(typeSet5);
        org.junit.Assert.assertNotNull(typeArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(typeSet15);
        org.junit.Assert.assertNotNull(typeArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(logAdapter23);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "/hi!" + "'", str32, "/hi!");
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(typeArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(typeArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNull(logAdapter55);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "" + "'", str58, "");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "/hi!" + "'", str64, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(typeArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(annotationArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(annotationArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(parameterList89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
    }

    @Test
    public void test02894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02894");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        io.swagger.annotations.Api api9 = null;
        boolean boolean10 = springMvcApiReader2.canReadApi(true, api9);
        io.swagger.models.Swagger swagger11 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter12 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader13 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger11, logAdapter12);
        java.lang.reflect.Type[] typeArray14 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet15 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet15, typeArray14);
        springMvcApiReader13.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet15);
        io.swagger.models.Swagger swagger18 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter19 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader20 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger18, logAdapter19);
        java.lang.reflect.Type[] typeArray21 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet22 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet22, typeArray21);
        springMvcApiReader20.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet22);
        springMvcApiReader13.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet22);
        io.swagger.models.Swagger swagger26 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter27 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader28 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger26, logAdapter27);
        java.lang.reflect.Type type29 = null;
        springMvcApiReader28.addTypeToSkippedTypes(type29);
        java.util.Set<java.lang.reflect.Type> typeSet31 = springMvcApiReader28.typesToSkip;
        springMvcApiReader13.setTypesToSkip(typeSet31);
        springMvcApiReader2.typesToSkip = typeSet31;
        java.util.Map<java.lang.String, java.lang.String> strMap35 = null;
        java.lang.String str36 = springMvcApiReader2.parseOperationPath("hi!", strMap35);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter37 = null;
        springMvcApiReader2.LOG = logAdapter37;
        io.swagger.models.Operation operation39 = null;
        io.swagger.annotations.ApiResponses apiResponses40 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateApiResponse(operation39, apiResponses40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(typeArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(typeArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(typeSet31);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "/hi!" + "'", str36, "/hi!");
    }

    @Test
    public void test02895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02895");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.annotations.Api api8 = null;
        boolean boolean9 = springMvcApiReader2.canReadApi(false, api8);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter10 = springMvcApiReader2.LOG;
        io.swagger.models.Operation operation11 = null;
        io.swagger.annotations.ApiResponses apiResponses12 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateApiResponse(operation11, apiResponses12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(logAdapter10);
    }

    @Test
    public void test02896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02896");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        java.util.Set<java.lang.reflect.Type> typeSet5 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger6 = springMvcApiReader2.swagger;
        springMvcApiReader2.updateExtensionChain();
        springMvcApiReader2.updateExtensionChain();
        io.swagger.annotations.Api api9 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<io.swagger.models.SecurityRequirement> securityRequirementList10 = springMvcApiReader2.getSecurityRequirements(api9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeSet5);
        org.junit.Assert.assertNull(swagger6);
    }

    @Test
    public void test02897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02897");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        java.util.Set<java.lang.reflect.Type> typeSet5 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet6 = springMvcApiReader2.getTypesToSkip();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.lang.String[] strArray8 = null;
        java.lang.String[] strArray12 = new java.lang.String[] { "/hi!", "hi!", "/hi!" };
        io.swagger.models.Operation operation13 = null;
        java.lang.String[] strArray14 = springMvcApiReader2.updateOperationProduces(strArray8, strArray12, operation13);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type[] typeArray18 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet19 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet19, typeArray18);
        springMvcApiReader17.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet19);
        io.swagger.models.Swagger swagger22 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader24 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger22, logAdapter23);
        java.lang.reflect.Type[] typeArray25 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet26 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet26, typeArray25);
        springMvcApiReader24.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet26);
        springMvcApiReader17.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet26);
        io.swagger.models.Swagger swagger30 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter31 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader32 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger30, logAdapter31);
        java.lang.reflect.Type type33 = null;
        springMvcApiReader32.addTypeToSkippedTypes(type33);
        java.util.Set<java.lang.reflect.Type> typeSet35 = springMvcApiReader32.typesToSkip;
        springMvcApiReader17.setTypesToSkip(typeSet35);
        java.util.Set<java.lang.reflect.Type> typeSet37 = springMvcApiReader17.getTypesToSkip();
        io.swagger.annotations.Api api39 = null;
        boolean boolean40 = springMvcApiReader17.canReadApi(true, api39);
        java.util.Set<java.lang.reflect.Type> typeSet41 = springMvcApiReader17.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet41);
        io.swagger.models.Swagger swagger43 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter44 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader45 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger43, logAdapter44);
        java.lang.reflect.Type[] typeArray46 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet47 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet47, typeArray46);
        springMvcApiReader45.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet47);
        java.lang.annotation.Annotation[] annotationArray50 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList51 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList51, annotationArray50);
        boolean boolean53 = springMvcApiReader45.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList51);
        io.swagger.models.Swagger swagger54 = null;
        springMvcApiReader45.swagger = swagger54;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter56 = null;
        springMvcApiReader45.LOG = logAdapter56;
        io.swagger.models.Swagger swagger58 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter59 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader60 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger58, logAdapter59);
        java.lang.reflect.Type[] typeArray61 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet62 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet62, typeArray61);
        springMvcApiReader60.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet62);
        java.util.Set<java.lang.reflect.Type> typeSet65 = springMvcApiReader60.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet66 = springMvcApiReader60.getTypesToSkip();
        springMvcApiReader45.typesToSkip = typeSet66;
        java.util.Map<java.lang.String, java.lang.String> strMap69 = null;
        java.lang.String str70 = springMvcApiReader45.parseOperationPath("", strMap69);
        java.util.Set<java.lang.reflect.Type> typeSet71 = springMvcApiReader45.getTypesToSkip();
        springMvcApiReader2.setTypesToSkip(typeSet71);
        io.swagger.annotations.ApiOperation apiOperation73 = null;
        io.swagger.models.Operation operation74 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateOperationProtocols(apiOperation73, operation74);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeSet5);
        org.junit.Assert.assertNotNull(typeSet6);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(typeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(typeArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(typeSet35);
        org.junit.Assert.assertNotNull(typeSet37);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(typeSet41);
        org.junit.Assert.assertNotNull(typeArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(annotationArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(typeArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(typeSet65);
        org.junit.Assert.assertNotNull(typeSet66);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "" + "'", str70, "");
        org.junit.Assert.assertNotNull(typeSet71);
    }

    @Test
    public void test02898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02898");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        java.util.Set<java.lang.reflect.Type> typeSet5 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet6 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger14 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter15 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader16 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger14, logAdapter15);
        java.lang.reflect.Type[] typeArray17 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet18 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet18, typeArray17);
        springMvcApiReader16.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet18);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet18);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet18);
        io.swagger.models.Operation operation23 = null;
        io.swagger.annotations.ApiOperation apiOperation24 = null;
        springMvcApiReader2.updateTagsForOperation(operation23, apiOperation24);
        io.swagger.annotations.Api api27 = null;
        boolean boolean28 = springMvcApiReader2.canReadApi(false, api27);
        io.swagger.models.Swagger swagger29 = null;
        springMvcApiReader2.swagger = swagger29;
        java.util.Set<java.lang.reflect.Type> typeSet31 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.reflect.Type[] typeArray35 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet36 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet36, typeArray35);
        springMvcApiReader34.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet36);
        java.lang.annotation.Annotation[] annotationArray39 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList40 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList40, annotationArray39);
        boolean boolean42 = springMvcApiReader34.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList40);
        io.swagger.models.Swagger swagger43 = null;
        springMvcApiReader34.swagger = swagger43;
        io.swagger.models.Swagger swagger45 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter46 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader47 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger45, logAdapter46);
        java.lang.reflect.Type[] typeArray48 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet49 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet49, typeArray48);
        springMvcApiReader47.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet49);
        java.lang.annotation.Annotation[] annotationArray52 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList53 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList53, annotationArray52);
        boolean boolean55 = springMvcApiReader47.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList53);
        io.swagger.models.Swagger swagger56 = null;
        springMvcApiReader47.swagger = swagger56;
        java.lang.annotation.Annotation[] annotationArray58 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList59 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList59, annotationArray58);
        boolean boolean61 = springMvcApiReader47.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList59);
        boolean boolean62 = springMvcApiReader34.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList59);
        springMvcApiReader34.updateExtensionChain();
        io.swagger.models.Swagger swagger64 = springMvcApiReader34.swagger;
        io.swagger.models.Swagger swagger65 = null;
        springMvcApiReader34.swagger = swagger65;
        io.swagger.annotations.Api api68 = null;
        boolean boolean69 = springMvcApiReader34.canReadApi(false, api68);
        io.swagger.models.Swagger swagger70 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter71 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader72 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger70, logAdapter71);
        java.lang.reflect.Type[] typeArray73 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet74 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet74, typeArray73);
        springMvcApiReader72.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet74);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter77 = springMvcApiReader72.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap79 = null;
        java.lang.String str80 = springMvcApiReader72.parseOperationPath("", strMap79);
        io.swagger.models.Swagger swagger81 = springMvcApiReader72.swagger;
        io.swagger.annotations.Api api83 = null;
        boolean boolean84 = springMvcApiReader72.canReadApi(false, api83);
        java.util.Set<java.lang.reflect.Type> typeSet85 = springMvcApiReader72.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet86 = springMvcApiReader72.getTypesToSkip();
        springMvcApiReader34.setTypesToSkip(typeSet86);
        springMvcApiReader2.typesToSkip = typeSet86;
        org.junit.Assert.assertNotNull(typeSet5);
        org.junit.Assert.assertNotNull(typeSet6);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(typeSet31);
        org.junit.Assert.assertNotNull(typeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(annotationArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(typeArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(annotationArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(annotationArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNull(swagger64);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(typeArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNull(logAdapter77);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "" + "'", str80, "");
        org.junit.Assert.assertNull(swagger81);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(typeSet85);
        org.junit.Assert.assertNotNull(typeSet86);
    }

    @Test
    public void test02899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02899");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        java.util.Set<java.lang.reflect.Type> typeSet5 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet6 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger14 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter15 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader16 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger14, logAdapter15);
        java.lang.reflect.Type[] typeArray17 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet18 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet18, typeArray17);
        springMvcApiReader16.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet18);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet18);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet18);
        springMvcApiReader2.updateExtensionChain();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter24 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger25 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger26 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter27 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader28 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger26, logAdapter27);
        java.lang.reflect.Type type29 = null;
        springMvcApiReader28.addTypeToSkippedTypes(type29);
        java.util.Set<java.lang.reflect.Type> typeSet31 = springMvcApiReader28.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet32 = springMvcApiReader28.getTypesToSkip();
        springMvcApiReader2.typesToSkip = typeSet32;
        io.swagger.models.Swagger swagger34 = null;
        springMvcApiReader2.swagger = swagger34;
        io.swagger.models.Swagger swagger36 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter37 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader38 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger36, logAdapter37);
        java.lang.reflect.Type[] typeArray39 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet40 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet40, typeArray39);
        springMvcApiReader38.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet40);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter43 = springMvcApiReader38.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap45 = null;
        java.lang.String str46 = springMvcApiReader38.parseOperationPath("", strMap45);
        io.swagger.annotations.Api api48 = null;
        boolean boolean49 = springMvcApiReader38.canReadApi(false, api48);
        java.util.Map<java.lang.String, java.lang.String> strMap51 = null;
        java.lang.String str52 = springMvcApiReader38.parseOperationPath("hi!", strMap51);
        io.swagger.models.Swagger swagger53 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter54 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader55 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger53, logAdapter54);
        java.lang.Class<?> wildcardClass56 = springMvcApiReader55.getClass();
        springMvcApiReader38.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass56);
        io.swagger.models.Swagger swagger58 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter59 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader60 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger58, logAdapter59);
        java.lang.reflect.Type[] typeArray61 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet62 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet62, typeArray61);
        springMvcApiReader60.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet62);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter65 = springMvcApiReader60.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap67 = null;
        java.lang.String str68 = springMvcApiReader60.parseOperationPath("", strMap67);
        io.swagger.annotations.Api api70 = null;
        boolean boolean71 = springMvcApiReader60.canReadApi(false, api70);
        java.util.Map<java.lang.String, java.lang.String> strMap73 = null;
        java.lang.String str74 = springMvcApiReader60.parseOperationPath("hi!", strMap73);
        io.swagger.models.Swagger swagger75 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter76 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader77 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger75, logAdapter76);
        java.lang.Class<?> wildcardClass78 = springMvcApiReader77.getClass();
        springMvcApiReader60.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass78);
        java.util.Map<java.lang.String, java.lang.String> strMap81 = null;
        java.lang.String str82 = springMvcApiReader60.parseOperationPath("/hi!", strMap81);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray83 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap84 = springMvcApiReader60.parseResponseHeaders(responseHeaderArray83);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap85 = springMvcApiReader38.parseResponseHeaders(responseHeaderArray83);
        java.util.Set<java.lang.reflect.Type> typeSet86 = springMvcApiReader38.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet87 = springMvcApiReader38.typesToSkip;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter88 = springMvcApiReader38.LOG;
        java.util.Set<java.lang.reflect.Type> typeSet89 = springMvcApiReader38.getTypesToSkip();
        springMvcApiReader2.typesToSkip = typeSet89;
        io.swagger.annotations.Api api91 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.lang.String> strSet92 = springMvcApiReader2.extractTags(api91);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeSet5);
        org.junit.Assert.assertNotNull(typeSet6);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(logAdapter24);
        org.junit.Assert.assertNull(swagger25);
        org.junit.Assert.assertNotNull(typeSet31);
        org.junit.Assert.assertNotNull(typeSet32);
        org.junit.Assert.assertNotNull(typeArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(logAdapter43);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "/hi!" + "'", str52, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(typeArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNull(logAdapter65);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "" + "'", str68, "");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "/hi!" + "'", str74, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "/hi!" + "'", str82, "/hi!");
        org.junit.Assert.assertNotNull(responseHeaderArray83);
        org.junit.Assert.assertNull(strMap84);
        org.junit.Assert.assertNull(strMap85);
        org.junit.Assert.assertNotNull(typeSet86);
        org.junit.Assert.assertNotNull(typeSet87);
        org.junit.Assert.assertNull(logAdapter88);
        org.junit.Assert.assertNotNull(typeSet89);
    }

    @Test
    public void test02900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02900");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.models.Swagger swagger11 = springMvcApiReader2.swagger;
        io.swagger.annotations.Api api13 = null;
        boolean boolean14 = springMvcApiReader2.canReadApi(false, api13);
        java.util.Set<java.lang.reflect.Type> typeSet15 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet16 = springMvcApiReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet17 = springMvcApiReader2.getTypesToSkip();
        com.github.kongchen.swagger.docgen.spring.SpringResource springResource18 = null;
        // The following exception was thrown during execution in test generation
        try {
            io.swagger.models.Swagger swagger19 = springMvcApiReader2.read(springResource18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(swagger11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(typeSet15);
        org.junit.Assert.assertNotNull(typeSet16);
        org.junit.Assert.assertNotNull(typeSet17);
    }

    @Test
    public void test02901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02901");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.lang.annotation.Annotation[] annotationArray7 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList8 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList8, annotationArray7);
        boolean boolean10 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList8);
        java.util.Set<java.lang.reflect.Type> typeSet11 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger12 = null;
        springMvcApiReader2.swagger = swagger12;
        io.swagger.annotations.ApiOperation apiOperation14 = null;
        io.swagger.models.Operation operation15 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateOperationProtocols(apiOperation14, operation15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(annotationArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(typeSet11);
    }

    @Test
    public void test02902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02902");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        java.lang.reflect.Type[] typeArray11 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList12 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList12, typeArray11);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList12);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!", "", "hi!" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap20 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray21 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList22 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList22, securityRequirementArray21);
        io.swagger.models.Operation operation24 = null;
        springMvcApiReader2.updateOperation(strArray15, strArray19, strMap20, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList22, operation24);
        java.util.Map<java.lang.String, java.lang.String> strMap27 = null;
        java.lang.String str28 = springMvcApiReader2.parseOperationPath("", strMap27);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger30 = null;
        springMvcApiReader2.swagger = swagger30;
        io.swagger.annotations.Api api33 = null;
        boolean boolean34 = springMvcApiReader2.canReadApi(false, api33);
        io.swagger.models.Swagger swagger35 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger36 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter37 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader38 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger36, logAdapter37);
        java.lang.reflect.Type type39 = null;
        springMvcApiReader38.addTypeToSkippedTypes(type39);
        java.util.Set<java.lang.reflect.Type> typeSet41 = springMvcApiReader38.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet42 = springMvcApiReader38.getTypesToSkip();
        springMvcApiReader38.updateExtensionChain();
        io.swagger.models.Swagger swagger44 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter45 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader46 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger44, logAdapter45);
        java.lang.reflect.Type[] typeArray47 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet48 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet48, typeArray47);
        springMvcApiReader46.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet48);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter51 = springMvcApiReader46.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap53 = null;
        java.lang.String str54 = springMvcApiReader46.parseOperationPath("", strMap53);
        io.swagger.annotations.Api api56 = null;
        boolean boolean57 = springMvcApiReader46.canReadApi(false, api56);
        java.util.Map<java.lang.String, java.lang.String> strMap59 = null;
        java.lang.String str60 = springMvcApiReader46.parseOperationPath("", strMap59);
        java.util.Set<java.lang.reflect.Type> typeSet61 = springMvcApiReader46.getTypesToSkip();
        springMvcApiReader38.setTypesToSkip(typeSet61);
        springMvcApiReader2.typesToSkip = typeSet61;
        io.swagger.models.Swagger swagger64 = springMvcApiReader2.swagger;
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(typeArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(securityRequirementArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(swagger35);
        org.junit.Assert.assertNotNull(typeSet41);
        org.junit.Assert.assertNotNull(typeSet42);
        org.junit.Assert.assertNotNull(typeArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(logAdapter51);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "" + "'", str60, "");
        org.junit.Assert.assertNotNull(typeSet61);
        org.junit.Assert.assertNull(swagger64);
    }

    @Test
    public void test02903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02903");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        java.util.Set<java.lang.reflect.Type> typeSet5 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger6 = springMvcApiReader2.swagger;
        springMvcApiReader2.updateExtensionChain();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = springMvcApiReader2.LOG;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Operation operation10 = null;
        io.swagger.annotations.ApiOperation apiOperation11 = null;
        springMvcApiReader2.updateTagsForOperation(operation10, apiOperation11);
        java.util.Set<java.lang.reflect.Type> typeSet13 = springMvcApiReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet14 = springMvcApiReader2.getTypesToSkip();
        io.swagger.annotations.Api api15 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.lang.String> strSet16 = springMvcApiReader2.extractTags(api15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeSet5);
        org.junit.Assert.assertNull(swagger6);
        org.junit.Assert.assertNull(logAdapter8);
        org.junit.Assert.assertNotNull(typeSet13);
        org.junit.Assert.assertNotNull(typeSet14);
    }

    @Test
    public void test02904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02904");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.models.Swagger swagger3 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter4 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader5 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger3, logAdapter4);
        java.lang.reflect.Type[] typeArray6 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet7 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet7, typeArray6);
        springMvcApiReader5.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet7);
        java.lang.annotation.Annotation[] annotationArray10 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList11 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList11, annotationArray10);
        boolean boolean13 = springMvcApiReader5.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList11);
        boolean boolean14 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList11);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type[] typeArray18 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet19 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet19, typeArray18);
        springMvcApiReader17.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet19);
        java.lang.annotation.Annotation[] annotationArray22 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList23 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList23, annotationArray22);
        boolean boolean25 = springMvcApiReader17.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList23);
        boolean boolean26 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList23);
        java.util.Set<java.lang.reflect.Type> typeSet27 = null;
        springMvcApiReader2.typesToSkip = typeSet27;
        io.swagger.models.Swagger swagger29 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter30 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader31 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger29, logAdapter30);
        java.lang.reflect.Type[] typeArray32 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet33 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet33, typeArray32);
        springMvcApiReader31.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet33);
        java.lang.annotation.Annotation[] annotationArray36 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList37 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList37, annotationArray36);
        boolean boolean39 = springMvcApiReader31.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList37);
        io.swagger.models.Swagger swagger40 = null;
        springMvcApiReader31.swagger = swagger40;
        io.swagger.annotations.ResponseHeader[] responseHeaderArray42 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap43 = springMvcApiReader31.parseResponseHeaders(responseHeaderArray42);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap44 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray42);
        java.util.Map<java.lang.String, java.lang.String> strMap46 = null;
        java.lang.String str47 = springMvcApiReader2.parseOperationPath("/hi!", strMap46);
        io.swagger.models.Swagger swagger48 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter49 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader50 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger48, logAdapter49);
        java.lang.reflect.Type[] typeArray51 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet52 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet52, typeArray51);
        springMvcApiReader50.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet52);
        io.swagger.models.Swagger swagger55 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter56 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader57 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger55, logAdapter56);
        java.lang.reflect.Type[] typeArray58 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet59 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet59, typeArray58);
        springMvcApiReader57.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet59);
        springMvcApiReader50.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet59);
        java.util.Map<java.lang.String, java.lang.String> strMap64 = null;
        java.lang.String str65 = springMvcApiReader50.parseOperationPath("/hi!", strMap64);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter66 = springMvcApiReader50.LOG;
        io.swagger.annotations.Api api68 = null;
        boolean boolean69 = springMvcApiReader50.canReadApi(false, api68);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter70 = springMvcApiReader50.LOG;
        java.util.Set<java.lang.reflect.Type> typeSet71 = springMvcApiReader50.getTypesToSkip();
        springMvcApiReader2.typesToSkip = typeSet71;
        springMvcApiReader2.updateExtensionChain();
        org.junit.Assert.assertNotNull(typeArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(annotationArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(typeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(annotationArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(typeArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(annotationArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(responseHeaderArray42);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNull(strMap44);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "/hi!" + "'", str47, "/hi!");
        org.junit.Assert.assertNotNull(typeArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(typeArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "/hi!" + "'", str65, "/hi!");
        org.junit.Assert.assertNull(logAdapter66);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNull(logAdapter70);
        org.junit.Assert.assertNotNull(typeSet71);
    }

    @Test
    public void test02905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02905");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.lang.annotation.Annotation[] annotationArray7 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList8 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList8, annotationArray7);
        boolean boolean10 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList8);
        java.util.Set<java.lang.reflect.Type> typeSet11 = springMvcApiReader2.typesToSkip;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Operation operation13 = null;
        io.swagger.annotations.ApiOperation apiOperation14 = null;
        springMvcApiReader2.updateTagsForOperation(operation13, apiOperation14);
        io.swagger.annotations.Api api17 = null;
        boolean boolean18 = springMvcApiReader2.canReadApi(true, api17);
        io.swagger.models.Swagger swagger19 = springMvcApiReader2.swagger;
        io.swagger.models.Operation operation20 = null;
        io.swagger.annotations.ApiOperation apiOperation21 = null;
        springMvcApiReader2.updateTagsForOperation(operation20, apiOperation21);
        java.lang.reflect.Method method23 = null;
        io.swagger.models.Operation operation24 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.readImplicitParameters(method23, operation24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(annotationArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(typeSet11);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(swagger19);
    }

    @Test
    public void test02906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02906");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        java.util.Set<java.lang.reflect.Type> typeSet5 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet6 = springMvcApiReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet7 = null;
        springMvcApiReader2.typesToSkip = typeSet7;
        java.util.Set<java.lang.reflect.Type> typeSet9 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader12 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger10, logAdapter11);
        java.lang.reflect.Type type13 = null;
        springMvcApiReader12.addTypeToSkippedTypes(type13);
        java.util.Set<java.lang.reflect.Type> typeSet15 = springMvcApiReader12.typesToSkip;
        springMvcApiReader2.typesToSkip = typeSet15;
        java.util.Set<java.lang.reflect.Type> typeSet17 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger18 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter19 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader20 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger18, logAdapter19);
        java.lang.reflect.Type[] typeArray21 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet22 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet22, typeArray21);
        springMvcApiReader20.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet22);
        io.swagger.models.Swagger swagger25 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter26 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader27 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger25, logAdapter26);
        java.lang.reflect.Type[] typeArray28 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet29 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet29, typeArray28);
        springMvcApiReader27.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet29);
        springMvcApiReader20.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet29);
        io.swagger.models.Swagger swagger33 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter34 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader35 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger33, logAdapter34);
        java.lang.reflect.Type[] typeArray36 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet37 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet37, typeArray36);
        springMvcApiReader35.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet37);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter40 = springMvcApiReader35.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap42 = null;
        java.lang.String str43 = springMvcApiReader35.parseOperationPath("", strMap42);
        io.swagger.annotations.Api api45 = null;
        boolean boolean46 = springMvcApiReader35.canReadApi(false, api45);
        java.util.Map<java.lang.String, java.lang.String> strMap48 = null;
        java.lang.String str49 = springMvcApiReader35.parseOperationPath("hi!", strMap48);
        io.swagger.models.Swagger swagger50 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter51 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader52 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger50, logAdapter51);
        java.lang.Class<?> wildcardClass53 = springMvcApiReader52.getClass();
        springMvcApiReader35.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass53);
        springMvcApiReader20.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass53);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter56 = springMvcApiReader20.LOG;
        io.swagger.models.Swagger swagger57 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter58 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader59 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger57, logAdapter58);
        java.lang.reflect.Type[] typeArray60 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet61 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet61, typeArray60);
        springMvcApiReader59.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet61);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter64 = springMvcApiReader59.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap66 = null;
        java.lang.String str67 = springMvcApiReader59.parseOperationPath("", strMap66);
        java.lang.reflect.Type[] typeArray68 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList69 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList69, typeArray68);
        springMvcApiReader59.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList69);
        springMvcApiReader20.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList69);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList69);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter74 = null;
        springMvcApiReader2.LOG = logAdapter74;
        io.swagger.models.Swagger swagger76 = springMvcApiReader2.swagger;
        io.swagger.annotations.Api api78 = null;
        boolean boolean79 = springMvcApiReader2.canReadApi(true, api78);
        org.junit.Assert.assertNotNull(typeSet5);
        org.junit.Assert.assertNotNull(typeSet6);
        org.junit.Assert.assertNull(typeSet9);
        org.junit.Assert.assertNotNull(typeSet15);
        org.junit.Assert.assertNotNull(typeSet17);
        org.junit.Assert.assertNotNull(typeArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(typeArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(logAdapter40);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "/hi!" + "'", str49, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNull(logAdapter56);
        org.junit.Assert.assertNotNull(typeArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNull(logAdapter64);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "" + "'", str67, "");
        org.junit.Assert.assertNotNull(typeArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNull(swagger76);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
    }

    @Test
    public void test02907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02907");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type[] typeArray18 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet19 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet19, typeArray18);
        springMvcApiReader17.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet19);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = springMvcApiReader17.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap24 = null;
        java.lang.String str25 = springMvcApiReader17.parseOperationPath("", strMap24);
        io.swagger.annotations.Api api27 = null;
        boolean boolean28 = springMvcApiReader17.canReadApi(false, api27);
        java.util.Map<java.lang.String, java.lang.String> strMap30 = null;
        java.lang.String str31 = springMvcApiReader17.parseOperationPath("hi!", strMap30);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.Class<?> wildcardClass35 = springMvcApiReader34.getClass();
        springMvcApiReader17.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter38 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger39 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter40 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader41 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger39, logAdapter40);
        java.lang.reflect.Type[] typeArray42 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet43 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet43, typeArray42);
        springMvcApiReader41.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet43);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter46 = springMvcApiReader41.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap48 = null;
        java.lang.String str49 = springMvcApiReader41.parseOperationPath("", strMap48);
        java.lang.reflect.Type[] typeArray50 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList51 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList51, typeArray50);
        springMvcApiReader41.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList51);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList51);
        io.swagger.models.Swagger swagger55 = springMvcApiReader2.swagger;
        io.swagger.models.Operation operation56 = null;
        io.swagger.annotations.ApiOperation apiOperation57 = null;
        springMvcApiReader2.updateTagsForOperation(operation56, apiOperation57);
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap59 = null;
        io.swagger.annotations.Api api60 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, io.swagger.models.Tag> strMap61 = springMvcApiReader2.updateTagsForApi(strMap59, api60);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(logAdapter22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "/hi!" + "'", str31, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNull(logAdapter38);
        org.junit.Assert.assertNotNull(typeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNull(logAdapter46);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertNotNull(typeArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(swagger55);
    }

    @Test
    public void test02908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02908");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.models.Swagger swagger3 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter4 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader5 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger3, logAdapter4);
        java.lang.reflect.Type[] typeArray6 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet7 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet7, typeArray6);
        springMvcApiReader5.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet7);
        java.lang.annotation.Annotation[] annotationArray10 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList11 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList11, annotationArray10);
        boolean boolean13 = springMvcApiReader5.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList11);
        boolean boolean14 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList11);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type[] typeArray18 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet19 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet19, typeArray18);
        springMvcApiReader17.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet19);
        java.lang.annotation.Annotation[] annotationArray22 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList23 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList23, annotationArray22);
        boolean boolean25 = springMvcApiReader17.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList23);
        boolean boolean26 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList23);
        java.util.Set<java.lang.reflect.Type> typeSet27 = springMvcApiReader2.getTypesToSkip();
        io.swagger.annotations.Api api29 = null;
        boolean boolean30 = springMvcApiReader2.canReadApi(true, api29);
        io.swagger.models.Swagger swagger31 = null;
        springMvcApiReader2.swagger = swagger31;
        io.swagger.models.Operation operation33 = null;
        io.swagger.annotations.ApiResponses apiResponses34 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateApiResponse(operation33, apiResponses34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(annotationArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(typeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(annotationArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(typeSet27);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test02909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02909");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.util.Set<java.lang.reflect.Type> typeSet7 = springMvcApiReader2.typesToSkip;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Operation operation9 = null;
        io.swagger.annotations.ApiOperation apiOperation10 = null;
        springMvcApiReader2.updateTagsForOperation(operation9, apiOperation10);
        springMvcApiReader2.updateExtensionChain();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter13 = null;
        springMvcApiReader2.LOG = logAdapter13;
        java.util.Map<java.lang.String, java.lang.String> strMap16 = null;
        java.lang.String str17 = springMvcApiReader2.parseOperationPath("hi!", strMap16);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = springMvcApiReader2.LOG;
        io.swagger.annotations.Api api19 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<io.swagger.models.SecurityRequirement> securityRequirementList20 = springMvcApiReader2.getSecurityRequirements(api19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeSet7);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "/hi!" + "'", str17, "/hi!");
        org.junit.Assert.assertNull(logAdapter18);
    }

    @Test
    public void test02910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02910");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        java.util.Set<java.lang.reflect.Type> typeSet5 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet6 = springMvcApiReader2.getTypesToSkip();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = null;
        java.lang.String str9 = springMvcApiReader2.parseOperationPath("", strMap8);
        io.swagger.models.Operation operation10 = null;
        io.swagger.annotations.ApiOperation apiOperation11 = null;
        springMvcApiReader2.updateTagsForOperation(operation10, apiOperation11);
        io.swagger.annotations.Api api14 = null;
        boolean boolean15 = springMvcApiReader2.canReadApi(false, api14);
        java.util.Set<java.lang.reflect.Type> typeSet16 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.reflect.Type type20 = null;
        springMvcApiReader19.addTypeToSkippedTypes(type20);
        java.util.Set<java.lang.reflect.Type> typeSet22 = springMvcApiReader19.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet23 = springMvcApiReader19.getTypesToSkip();
        java.util.Map<java.lang.String, java.lang.String> strMap25 = null;
        java.lang.String str26 = springMvcApiReader19.parseOperationPath("", strMap25);
        io.swagger.models.Operation operation27 = null;
        io.swagger.annotations.ApiOperation apiOperation28 = null;
        springMvcApiReader19.updateTagsForOperation(operation27, apiOperation28);
        io.swagger.annotations.Api api31 = null;
        boolean boolean32 = springMvcApiReader19.canReadApi(false, api31);
        io.swagger.models.Swagger swagger33 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter34 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader35 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger33, logAdapter34);
        java.lang.reflect.Type[] typeArray36 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet37 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet37, typeArray36);
        springMvcApiReader35.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet37);
        java.lang.annotation.Annotation[] annotationArray40 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList41 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList41, annotationArray40);
        boolean boolean43 = springMvcApiReader35.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList41);
        io.swagger.models.Swagger swagger44 = null;
        springMvcApiReader35.swagger = swagger44;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter46 = null;
        springMvcApiReader35.LOG = logAdapter46;
        springMvcApiReader35.updateExtensionChain();
        io.swagger.models.Operation operation49 = null;
        io.swagger.annotations.ApiOperation apiOperation50 = null;
        springMvcApiReader35.updateTagsForOperation(operation49, apiOperation50);
        io.swagger.models.Swagger swagger52 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter53 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader54 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger52, logAdapter53);
        java.lang.reflect.Type[] typeArray55 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet56 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet56, typeArray55);
        springMvcApiReader54.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet56);
        java.lang.annotation.Annotation[] annotationArray59 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList60 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList60, annotationArray59);
        boolean boolean62 = springMvcApiReader54.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList60);
        io.swagger.models.Swagger swagger63 = null;
        springMvcApiReader54.swagger = swagger63;
        io.swagger.models.Swagger swagger65 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter66 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader67 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger65, logAdapter66);
        java.lang.reflect.Type[] typeArray68 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet69 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet69, typeArray68);
        springMvcApiReader67.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet69);
        java.lang.annotation.Annotation[] annotationArray72 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList73 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList73, annotationArray72);
        boolean boolean75 = springMvcApiReader67.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList73);
        io.swagger.models.Swagger swagger76 = null;
        springMvcApiReader67.swagger = swagger76;
        java.lang.annotation.Annotation[] annotationArray78 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList79 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList79, annotationArray78);
        boolean boolean81 = springMvcApiReader67.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList79);
        boolean boolean82 = springMvcApiReader54.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList79);
        boolean boolean83 = springMvcApiReader35.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList79);
        boolean boolean84 = springMvcApiReader19.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList79);
        boolean boolean85 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList79);
        java.lang.Class<?> wildcardClass86 = annotationList79.getClass();
        org.junit.Assert.assertNotNull(typeSet5);
        org.junit.Assert.assertNotNull(typeSet6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(typeSet16);
        org.junit.Assert.assertNotNull(typeSet22);
        org.junit.Assert.assertNotNull(typeSet23);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(annotationArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(typeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(annotationArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(typeArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(annotationArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(annotationArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test02911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02911");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        io.swagger.models.Swagger swagger14 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter15 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader16 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger14, logAdapter15);
        java.lang.reflect.Type type17 = null;
        springMvcApiReader16.addTypeToSkippedTypes(type17);
        java.util.Set<java.lang.reflect.Type> typeSet19 = springMvcApiReader16.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet20 = springMvcApiReader16.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet20);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = null;
        springMvcApiReader2.LOG = logAdapter22;
        java.util.Set<java.lang.reflect.Type> typeSet24 = springMvcApiReader2.typesToSkip;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter25 = null;
        springMvcApiReader2.LOG = logAdapter25;
        io.swagger.models.Operation operation27 = null;
        io.swagger.annotations.ApiOperation apiOperation28 = null;
        springMvcApiReader2.updateTagsForOperation(operation27, apiOperation28);
        io.swagger.models.Swagger swagger30 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter31 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader32 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger30, logAdapter31);
        java.lang.reflect.Type type33 = null;
        springMvcApiReader32.addTypeToSkippedTypes(type33);
        io.swagger.models.Swagger swagger35 = springMvcApiReader32.swagger;
        io.swagger.models.Swagger swagger36 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter37 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader38 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger36, logAdapter37);
        java.lang.reflect.Type[] typeArray39 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet40 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet40, typeArray39);
        springMvcApiReader38.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet40);
        io.swagger.models.Swagger swagger43 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter44 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader45 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger43, logAdapter44);
        java.lang.reflect.Type[] typeArray46 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet47 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet47, typeArray46);
        springMvcApiReader45.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet47);
        springMvcApiReader38.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet47);
        io.swagger.models.Swagger swagger51 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter52 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader53 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger51, logAdapter52);
        java.lang.reflect.Type[] typeArray54 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet55 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet55, typeArray54);
        springMvcApiReader53.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet55);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter58 = springMvcApiReader53.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap60 = null;
        java.lang.String str61 = springMvcApiReader53.parseOperationPath("", strMap60);
        io.swagger.annotations.Api api63 = null;
        boolean boolean64 = springMvcApiReader53.canReadApi(false, api63);
        java.util.Map<java.lang.String, java.lang.String> strMap66 = null;
        java.lang.String str67 = springMvcApiReader53.parseOperationPath("hi!", strMap66);
        io.swagger.models.Swagger swagger68 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter69 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader70 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger68, logAdapter69);
        java.lang.Class<?> wildcardClass71 = springMvcApiReader70.getClass();
        springMvcApiReader53.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass71);
        springMvcApiReader38.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass71);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter74 = springMvcApiReader38.LOG;
        io.swagger.models.Swagger swagger75 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter76 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader77 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger75, logAdapter76);
        java.lang.reflect.Type[] typeArray78 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet79 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet79, typeArray78);
        springMvcApiReader77.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet79);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter82 = springMvcApiReader77.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap84 = null;
        java.lang.String str85 = springMvcApiReader77.parseOperationPath("", strMap84);
        java.lang.reflect.Type[] typeArray86 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList87 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList87, typeArray86);
        springMvcApiReader77.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList87);
        springMvcApiReader38.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList87);
        springMvcApiReader32.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList87);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList87);
        io.swagger.annotations.Api api94 = null;
        boolean boolean95 = springMvcApiReader2.canReadApi(false, api94);
        java.util.Set<java.lang.reflect.Type> typeSet96 = springMvcApiReader2.getTypesToSkip();
        io.swagger.annotations.ApiOperation apiOperation97 = null;
        io.swagger.models.Operation operation98 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateOperationProtocols(apiOperation97, operation98);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(typeSet19);
        org.junit.Assert.assertNotNull(typeSet20);
        org.junit.Assert.assertNotNull(typeSet24);
        org.junit.Assert.assertNull(swagger35);
        org.junit.Assert.assertNotNull(typeArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(typeArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(typeArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(logAdapter58);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "" + "'", str61, "");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "/hi!" + "'", str67, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNull(logAdapter74);
        org.junit.Assert.assertNotNull(typeArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNull(logAdapter82);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "" + "'", str85, "");
        org.junit.Assert.assertNotNull(typeArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertNotNull(typeSet96);
    }

    @Test
    public void test02912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02912");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader2.parseOperationPath("hi!", strMap15);
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.reflect.Type[] typeArray20 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet21 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet21, typeArray20);
        springMvcApiReader19.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet21);
        io.swagger.models.Swagger swagger24 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter25 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader26 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger24, logAdapter25);
        java.lang.reflect.Type[] typeArray27 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet28 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet28, typeArray27);
        springMvcApiReader26.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet28);
        springMvcApiReader19.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet28);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.reflect.Type[] typeArray35 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet36 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet36, typeArray35);
        springMvcApiReader34.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet36);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter39 = springMvcApiReader34.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap41 = null;
        java.lang.String str42 = springMvcApiReader34.parseOperationPath("", strMap41);
        io.swagger.annotations.Api api44 = null;
        boolean boolean45 = springMvcApiReader34.canReadApi(false, api44);
        java.util.Map<java.lang.String, java.lang.String> strMap47 = null;
        java.lang.String str48 = springMvcApiReader34.parseOperationPath("hi!", strMap47);
        io.swagger.models.Swagger swagger49 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter50 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader51 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger49, logAdapter50);
        java.lang.Class<?> wildcardClass52 = springMvcApiReader51.getClass();
        springMvcApiReader34.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        springMvcApiReader19.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter56 = null;
        springMvcApiReader2.LOG = logAdapter56;
        java.lang.reflect.Method method58 = null;
        io.swagger.models.Operation operation59 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.readImplicitParameters(method58, operation59);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/hi!" + "'", str16, "/hi!");
        org.junit.Assert.assertNotNull(typeArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(typeArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(typeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(logAdapter39);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "/hi!" + "'", str48, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test02913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02913");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.lang.annotation.Annotation[] annotationArray7 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList8 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList8, annotationArray7);
        boolean boolean10 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList8);
        java.util.Set<java.lang.reflect.Type> typeSet11 = springMvcApiReader2.typesToSkip;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Operation operation13 = null;
        io.swagger.annotations.ApiOperation apiOperation14 = null;
        springMvcApiReader2.updateTagsForOperation(operation13, apiOperation14);
        io.swagger.models.Swagger swagger16 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter17 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader18 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger16, logAdapter17);
        java.lang.reflect.Type[] typeArray19 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet20 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet20, typeArray19);
        springMvcApiReader18.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet20);
        io.swagger.models.Swagger swagger23 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter24 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader25 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger23, logAdapter24);
        java.lang.reflect.Type[] typeArray26 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet27 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet27, typeArray26);
        springMvcApiReader25.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet27);
        springMvcApiReader18.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet27);
        io.swagger.models.Swagger swagger31 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter32 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader33 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger31, logAdapter32);
        java.lang.reflect.Type[] typeArray34 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet35 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet35, typeArray34);
        springMvcApiReader33.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet35);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter38 = springMvcApiReader33.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap40 = null;
        java.lang.String str41 = springMvcApiReader33.parseOperationPath("", strMap40);
        io.swagger.annotations.Api api43 = null;
        boolean boolean44 = springMvcApiReader33.canReadApi(false, api43);
        java.util.Map<java.lang.String, java.lang.String> strMap46 = null;
        java.lang.String str47 = springMvcApiReader33.parseOperationPath("hi!", strMap46);
        io.swagger.models.Swagger swagger48 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter49 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader50 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger48, logAdapter49);
        java.lang.Class<?> wildcardClass51 = springMvcApiReader50.getClass();
        springMvcApiReader33.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass51);
        springMvcApiReader18.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass51);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass51);
        java.util.Set<java.lang.reflect.Type> typeSet55 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger56 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter57 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader58 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger56, logAdapter57);
        java.lang.reflect.Type[] typeArray59 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet60 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet60, typeArray59);
        springMvcApiReader58.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet60);
        java.lang.annotation.Annotation[] annotationArray63 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList64 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList64, annotationArray63);
        boolean boolean66 = springMvcApiReader58.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList64);
        java.util.Map<java.lang.String, java.lang.String> strMap68 = null;
        java.lang.String str69 = springMvcApiReader58.parseOperationPath("hi!", strMap68);
        io.swagger.models.Swagger swagger70 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter71 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader72 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger70, logAdapter71);
        java.lang.reflect.Type[] typeArray73 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet74 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet74, typeArray73);
        springMvcApiReader72.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet74);
        io.swagger.models.Swagger swagger77 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter78 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader79 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger77, logAdapter78);
        java.lang.reflect.Type[] typeArray80 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet81 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet81, typeArray80);
        springMvcApiReader79.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet81);
        springMvcApiReader72.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet81);
        io.swagger.models.Swagger swagger85 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter86 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader87 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger85, logAdapter86);
        java.lang.reflect.Type type88 = null;
        springMvcApiReader87.addTypeToSkippedTypes(type88);
        java.util.Set<java.lang.reflect.Type> typeSet90 = springMvcApiReader87.typesToSkip;
        springMvcApiReader72.setTypesToSkip(typeSet90);
        java.util.Set<java.lang.reflect.Type> typeSet92 = springMvcApiReader72.typesToSkip;
        springMvcApiReader58.typesToSkip = typeSet92;
        springMvcApiReader2.typesToSkip = typeSet92;
        java.util.Map<java.lang.String, java.lang.String> strMap96 = null;
        java.lang.String str97 = springMvcApiReader2.parseOperationPath("hi!", strMap96);
        io.swagger.models.Swagger swagger98 = springMvcApiReader2.swagger;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass99 = swagger98.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(annotationArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(typeSet11);
        org.junit.Assert.assertNotNull(typeArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(typeArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(typeArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(logAdapter38);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "/hi!" + "'", str47, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(typeSet55);
        org.junit.Assert.assertNotNull(typeArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(annotationArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "/hi!" + "'", str69, "/hi!");
        org.junit.Assert.assertNotNull(typeArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(typeArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(typeSet90);
        org.junit.Assert.assertNotNull(typeSet92);
        org.junit.Assert.assertEquals("'" + str97 + "' != '" + "/hi!" + "'", str97, "/hi!");
        org.junit.Assert.assertNull(swagger98);
    }

    @Test
    public void test02914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02914");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.util.Set<java.lang.reflect.Type> typeSet7 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger8 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader10 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger8, logAdapter9);
        java.lang.reflect.Type[] typeArray11 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet12 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet12, typeArray11);
        springMvcApiReader10.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet12);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter15 = springMvcApiReader10.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap17 = null;
        java.lang.String str18 = springMvcApiReader10.parseOperationPath("", strMap17);
        io.swagger.annotations.Api api20 = null;
        boolean boolean21 = springMvcApiReader10.canReadApi(false, api20);
        java.util.Map<java.lang.String, java.lang.String> strMap23 = null;
        java.lang.String str24 = springMvcApiReader10.parseOperationPath("hi!", strMap23);
        io.swagger.models.Swagger swagger25 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter26 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader27 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger25, logAdapter26);
        java.lang.reflect.Type[] typeArray28 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet29 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet29, typeArray28);
        springMvcApiReader27.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet29);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.reflect.Type[] typeArray35 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet36 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet36, typeArray35);
        springMvcApiReader34.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet36);
        springMvcApiReader27.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet36);
        io.swagger.models.Swagger swagger40 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter41 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader42 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger40, logAdapter41);
        java.lang.reflect.Type[] typeArray43 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet44 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet44, typeArray43);
        springMvcApiReader42.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet44);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter47 = springMvcApiReader42.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap49 = null;
        java.lang.String str50 = springMvcApiReader42.parseOperationPath("", strMap49);
        io.swagger.annotations.Api api52 = null;
        boolean boolean53 = springMvcApiReader42.canReadApi(false, api52);
        java.util.Map<java.lang.String, java.lang.String> strMap55 = null;
        java.lang.String str56 = springMvcApiReader42.parseOperationPath("hi!", strMap55);
        io.swagger.models.Swagger swagger57 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter58 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader59 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger57, logAdapter58);
        java.lang.Class<?> wildcardClass60 = springMvcApiReader59.getClass();
        springMvcApiReader42.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass60);
        springMvcApiReader27.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass60);
        springMvcApiReader10.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass60);
        io.swagger.models.Swagger swagger64 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter65 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader66 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger64, logAdapter65);
        java.lang.reflect.Type[] typeArray67 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet68 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet68, typeArray67);
        springMvcApiReader66.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet68);
        java.lang.annotation.Annotation[] annotationArray71 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList72 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList72, annotationArray71);
        boolean boolean74 = springMvcApiReader66.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList72);
        io.swagger.models.Swagger swagger75 = null;
        springMvcApiReader66.swagger = swagger75;
        java.lang.annotation.Annotation[] annotationArray77 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList78 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList78, annotationArray77);
        boolean boolean80 = springMvcApiReader66.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList78);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList81 = springMvcApiReader2.getParameters((java.lang.reflect.Type) wildcardClass60, (java.util.List<java.lang.annotation.Annotation>) annotationList78);
        java.util.Set<java.lang.reflect.Type> typeSet82 = springMvcApiReader2.getTypesToSkip();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter83 = springMvcApiReader2.LOG;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter84 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger85 = null;
        springMvcApiReader2.swagger = swagger85;
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap87 = null;
        io.swagger.annotations.Api api88 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, io.swagger.models.Tag> strMap89 = springMvcApiReader2.updateTagsForApi(strMap87, api88);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeSet7);
        org.junit.Assert.assertNotNull(typeArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(logAdapter15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "/hi!" + "'", str24, "/hi!");
        org.junit.Assert.assertNotNull(typeArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(typeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(typeArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(logAdapter47);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "/hi!" + "'", str56, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(typeArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(annotationArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(annotationArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(parameterList81);
        org.junit.Assert.assertNotNull(typeSet82);
        org.junit.Assert.assertNull(logAdapter83);
        org.junit.Assert.assertNull(logAdapter84);
    }

    @Test
    public void test02915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02915");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        java.util.Set<java.lang.reflect.Type> typeSet5 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet6 = springMvcApiReader2.getTypesToSkip();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = null;
        java.lang.String str9 = springMvcApiReader2.parseOperationPath("", strMap8);
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader12 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger10, logAdapter11);
        java.lang.reflect.Type[] typeArray13 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet14 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet14, typeArray13);
        springMvcApiReader12.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet14);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter17 = springMvcApiReader12.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap19 = null;
        java.lang.String str20 = springMvcApiReader12.parseOperationPath("", strMap19);
        io.swagger.annotations.Api api22 = null;
        boolean boolean23 = springMvcApiReader12.canReadApi(false, api22);
        java.util.Map<java.lang.String, java.lang.String> strMap25 = null;
        java.lang.String str26 = springMvcApiReader12.parseOperationPath("hi!", strMap25);
        io.swagger.models.Swagger swagger27 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter28 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader29 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger27, logAdapter28);
        java.lang.Class<?> wildcardClass30 = springMvcApiReader29.getClass();
        springMvcApiReader12.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass30);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.reflect.Type[] typeArray35 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet36 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet36, typeArray35);
        springMvcApiReader34.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet36);
        java.lang.annotation.Annotation[] annotationArray39 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList40 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList40, annotationArray39);
        boolean boolean42 = springMvcApiReader34.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList40);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList43 = springMvcApiReader2.getParameters((java.lang.reflect.Type) wildcardClass30, (java.util.List<java.lang.annotation.Annotation>) annotationList40);
        springMvcApiReader2.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet45 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet46 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger47 = null;
        springMvcApiReader2.swagger = swagger47;
        io.swagger.annotations.Api api50 = null;
        boolean boolean51 = springMvcApiReader2.canReadApi(false, api50);
        io.swagger.models.Swagger swagger52 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter53 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader54 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger52, logAdapter53);
        java.lang.reflect.Type[] typeArray55 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet56 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet56, typeArray55);
        springMvcApiReader54.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet56);
        java.lang.annotation.Annotation[] annotationArray59 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList60 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList60, annotationArray59);
        boolean boolean62 = springMvcApiReader54.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList60);
        java.util.Set<java.lang.reflect.Type> typeSet63 = springMvcApiReader54.typesToSkip;
        springMvcApiReader54.updateExtensionChain();
        io.swagger.models.Operation operation65 = null;
        io.swagger.annotations.ApiOperation apiOperation66 = null;
        springMvcApiReader54.updateTagsForOperation(operation65, apiOperation66);
        io.swagger.annotations.Api api69 = null;
        boolean boolean70 = springMvcApiReader54.canReadApi(true, api69);
        io.swagger.models.Swagger swagger71 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter72 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader73 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger71, logAdapter72);
        java.lang.reflect.Type[] typeArray74 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet75 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet75, typeArray74);
        springMvcApiReader73.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet75);
        java.lang.annotation.Annotation[] annotationArray78 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList79 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList79, annotationArray78);
        boolean boolean81 = springMvcApiReader73.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList79);
        boolean boolean82 = springMvcApiReader54.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList79);
        boolean boolean83 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList79);
        org.junit.Assert.assertNotNull(typeSet5);
        org.junit.Assert.assertNotNull(typeSet6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(typeArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(logAdapter17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "/hi!" + "'", str26, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(typeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(annotationArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(parameterList43);
        org.junit.Assert.assertNotNull(typeSet45);
        org.junit.Assert.assertNotNull(typeSet46);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(typeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(annotationArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(typeSet63);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(typeArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(annotationArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
    }

    @Test
    public void test02916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02916");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type type18 = null;
        springMvcApiReader17.addTypeToSkippedTypes(type18);
        java.util.Set<java.lang.reflect.Type> typeSet20 = springMvcApiReader17.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet20);
        java.util.Set<java.lang.reflect.Type> typeSet22 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger23 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter24 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader25 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger23, logAdapter24);
        java.lang.reflect.Type[] typeArray26 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet27 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet27, typeArray26);
        springMvcApiReader25.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet27);
        java.lang.annotation.Annotation[] annotationArray30 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList31 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList31, annotationArray30);
        boolean boolean33 = springMvcApiReader25.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList31);
        io.swagger.models.Swagger swagger34 = null;
        springMvcApiReader25.swagger = swagger34;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter36 = null;
        springMvcApiReader25.LOG = logAdapter36;
        java.util.Set<java.lang.reflect.Type> typeSet38 = springMvcApiReader25.getTypesToSkip();
        java.lang.Class<?> wildcardClass39 = typeSet38.getClass();
        io.swagger.models.Swagger swagger40 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter41 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader42 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger40, logAdapter41);
        java.lang.reflect.Type[] typeArray43 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet44 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet44, typeArray43);
        springMvcApiReader42.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet44);
        java.util.Set<java.lang.reflect.Type> typeSet47 = springMvcApiReader42.typesToSkip;
        io.swagger.models.Swagger swagger48 = springMvcApiReader42.swagger;
        io.swagger.models.Swagger swagger49 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter50 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader51 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger49, logAdapter50);
        java.lang.reflect.Type[] typeArray52 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet53 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet53, typeArray52);
        springMvcApiReader51.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet53);
        java.lang.annotation.Annotation[] annotationArray56 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList57 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList57, annotationArray56);
        boolean boolean59 = springMvcApiReader51.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList57);
        io.swagger.models.Swagger swagger60 = null;
        springMvcApiReader51.swagger = swagger60;
        java.lang.annotation.Annotation[] annotationArray62 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList63 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList63, annotationArray62);
        boolean boolean65 = springMvcApiReader51.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList63);
        boolean boolean66 = springMvcApiReader42.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList63);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList67 = springMvcApiReader2.getParameters((java.lang.reflect.Type) wildcardClass39, (java.util.List<java.lang.annotation.Annotation>) annotationList63);
        io.swagger.models.Operation operation68 = null;
        io.swagger.annotations.ApiOperation apiOperation69 = null;
        springMvcApiReader2.updateTagsForOperation(operation68, apiOperation69);
        io.swagger.models.Swagger swagger71 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter72 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader73 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger71, logAdapter72);
        java.lang.reflect.Type[] typeArray74 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet75 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet75, typeArray74);
        springMvcApiReader73.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet75);
        java.util.Set<java.lang.reflect.Type> typeSet78 = springMvcApiReader73.typesToSkip;
        io.swagger.models.Swagger swagger79 = springMvcApiReader73.swagger;
        io.swagger.models.Swagger swagger80 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter81 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader82 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger80, logAdapter81);
        java.lang.reflect.Type[] typeArray83 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet84 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet84, typeArray83);
        springMvcApiReader82.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet84);
        java.lang.annotation.Annotation[] annotationArray87 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList88 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean89 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList88, annotationArray87);
        boolean boolean90 = springMvcApiReader82.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList88);
        io.swagger.models.Swagger swagger91 = null;
        springMvcApiReader82.swagger = swagger91;
        java.lang.annotation.Annotation[] annotationArray93 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList94 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean95 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList94, annotationArray93);
        boolean boolean96 = springMvcApiReader82.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList94);
        boolean boolean97 = springMvcApiReader73.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList94);
        boolean boolean98 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList94);
        java.lang.Class<?> wildcardClass99 = annotationList94.getClass();
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeSet20);
        org.junit.Assert.assertNotNull(typeSet22);
        org.junit.Assert.assertNotNull(typeArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(annotationArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(typeSet38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(typeArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(typeSet47);
        org.junit.Assert.assertNull(swagger48);
        org.junit.Assert.assertNotNull(typeArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(annotationArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(annotationArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(parameterList67);
        org.junit.Assert.assertNotNull(typeArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(typeSet78);
        org.junit.Assert.assertNull(swagger79);
        org.junit.Assert.assertNotNull(typeArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(annotationArray87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(annotationArray93);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test02917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02917");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger15 = null;
        springMvcApiReader2.swagger = swagger15;
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.reflect.Type[] typeArray20 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet21 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet21, typeArray20);
        springMvcApiReader19.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet21);
        java.lang.annotation.Annotation[] annotationArray24 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList25 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList25, annotationArray24);
        boolean boolean27 = springMvcApiReader19.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList25);
        io.swagger.models.Swagger swagger28 = null;
        springMvcApiReader19.swagger = swagger28;
        java.lang.annotation.Annotation[] annotationArray30 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList31 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList31, annotationArray30);
        boolean boolean33 = springMvcApiReader19.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList31);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter34 = null;
        springMvcApiReader19.LOG = logAdapter34;
        io.swagger.models.Swagger swagger36 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter37 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader38 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger36, logAdapter37);
        java.lang.reflect.Type type39 = null;
        springMvcApiReader38.addTypeToSkippedTypes(type39);
        java.util.Set<java.lang.reflect.Type> typeSet41 = springMvcApiReader38.typesToSkip;
        springMvcApiReader19.setTypesToSkip(typeSet41);
        io.swagger.models.Swagger swagger43 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter44 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader45 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger43, logAdapter44);
        java.lang.reflect.Type[] typeArray46 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet47 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet47, typeArray46);
        springMvcApiReader45.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet47);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter50 = springMvcApiReader45.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap52 = null;
        java.lang.String str53 = springMvcApiReader45.parseOperationPath("", strMap52);
        java.lang.reflect.Type[] typeArray54 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList55 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList55, typeArray54);
        springMvcApiReader45.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList55);
        io.swagger.models.Swagger swagger58 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter59 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader60 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger58, logAdapter59);
        java.lang.reflect.Type[] typeArray61 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet62 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet62, typeArray61);
        springMvcApiReader60.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet62);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter65 = springMvcApiReader60.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap67 = null;
        java.lang.String str68 = springMvcApiReader60.parseOperationPath("", strMap67);
        io.swagger.models.Swagger swagger69 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter70 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader71 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger69, logAdapter70);
        java.lang.Class<?> wildcardClass72 = springMvcApiReader71.getClass();
        java.lang.reflect.Type[] typeArray73 = new java.lang.reflect.Type[] { wildcardClass72 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet74 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet74, typeArray73);
        springMvcApiReader60.typesToSkip = typeSet74;
        java.util.Set<java.lang.reflect.Type> typeSet77 = springMvcApiReader60.getTypesToSkip();
        springMvcApiReader45.setTypesToSkip(typeSet77);
        springMvcApiReader19.setTypesToSkip(typeSet77);
        springMvcApiReader2.setTypesToSkip(typeSet77);
        io.swagger.annotations.ApiOperation apiOperation81 = null;
        io.swagger.models.Operation operation82 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateOperationProtocols(apiOperation81, operation82);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(annotationArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(annotationArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(typeSet41);
        org.junit.Assert.assertNotNull(typeArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(logAdapter50);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertNotNull(typeArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(typeArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNull(logAdapter65);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "" + "'", str68, "");
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(typeArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(typeSet77);
    }

    @Test
    public void test02918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02918");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type type18 = null;
        springMvcApiReader17.addTypeToSkippedTypes(type18);
        java.util.Set<java.lang.reflect.Type> typeSet20 = springMvcApiReader17.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet20);
        java.util.Set<java.lang.reflect.Type> typeSet22 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger23 = null;
        springMvcApiReader2.swagger = swagger23;
        springMvcApiReader2.updateExtensionChain();
        java.util.Map<java.lang.String, java.lang.String> strMap27 = null;
        java.lang.String str28 = springMvcApiReader2.parseOperationPath("", strMap27);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter29 = null;
        springMvcApiReader2.LOG = logAdapter29;
        java.lang.reflect.Method method31 = null;
        io.swagger.models.Operation operation32 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.readImplicitParameters(method31, operation32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeSet20);
        org.junit.Assert.assertNotNull(typeSet22);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
    }

    @Test
    public void test02919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02919");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        io.swagger.annotations.Api api9 = null;
        boolean boolean10 = springMvcApiReader2.canReadApi(true, api9);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        springMvcApiReader2.LOG = logAdapter11;
        java.util.Set<java.lang.reflect.Type> typeSet13 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet14 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type[] typeArray18 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet19 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet19, typeArray18);
        springMvcApiReader17.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet19);
        java.lang.annotation.Annotation[] annotationArray22 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList23 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList23, annotationArray22);
        boolean boolean25 = springMvcApiReader17.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList23);
        java.util.Set<java.lang.reflect.Type> typeSet26 = springMvcApiReader17.typesToSkip;
        springMvcApiReader17.updateExtensionChain();
        io.swagger.models.Operation operation28 = null;
        io.swagger.annotations.ApiOperation apiOperation29 = null;
        springMvcApiReader17.updateTagsForOperation(operation28, apiOperation29);
        io.swagger.annotations.Api api32 = null;
        boolean boolean33 = springMvcApiReader17.canReadApi(true, api32);
        io.swagger.models.Swagger swagger34 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter35 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader36 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger34, logAdapter35);
        java.lang.reflect.Type[] typeArray37 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet38 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet38, typeArray37);
        springMvcApiReader36.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet38);
        java.lang.annotation.Annotation[] annotationArray41 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList42 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList42, annotationArray41);
        boolean boolean44 = springMvcApiReader36.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList42);
        boolean boolean45 = springMvcApiReader17.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList42);
        boolean boolean46 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList42);
        java.lang.Class<?> wildcardClass47 = springMvcApiReader2.getClass();
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(typeSet13);
        org.junit.Assert.assertNotNull(typeSet14);
        org.junit.Assert.assertNotNull(typeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(annotationArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(typeSet26);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(typeArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(annotationArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test02920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02920");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type[] typeArray18 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet19 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet19, typeArray18);
        springMvcApiReader17.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet19);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = springMvcApiReader17.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap24 = null;
        java.lang.String str25 = springMvcApiReader17.parseOperationPath("", strMap24);
        io.swagger.annotations.Api api27 = null;
        boolean boolean28 = springMvcApiReader17.canReadApi(false, api27);
        java.util.Map<java.lang.String, java.lang.String> strMap30 = null;
        java.lang.String str31 = springMvcApiReader17.parseOperationPath("hi!", strMap30);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.Class<?> wildcardClass35 = springMvcApiReader34.getClass();
        springMvcApiReader17.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger39 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter40 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader41 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger39, logAdapter40);
        java.lang.reflect.Type[] typeArray42 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet43 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet43, typeArray42);
        springMvcApiReader41.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet43);
        io.swagger.models.Swagger swagger46 = springMvcApiReader41.swagger;
        io.swagger.models.Swagger swagger47 = springMvcApiReader41.swagger;
        io.swagger.models.Swagger swagger48 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter49 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader50 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger48, logAdapter49);
        java.lang.reflect.Type[] typeArray51 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet52 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet52, typeArray51);
        springMvcApiReader50.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet52);
        java.lang.annotation.Annotation[] annotationArray55 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList56 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList56, annotationArray55);
        boolean boolean58 = springMvcApiReader50.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList56);
        boolean boolean59 = springMvcApiReader41.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList56);
        java.lang.Class<?> wildcardClass60 = springMvcApiReader41.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass60);
        io.swagger.models.Operation operation64 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updatePath("", "", operation64);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(logAdapter22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "/hi!" + "'", str31, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(typeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNull(swagger46);
        org.junit.Assert.assertNull(swagger47);
        org.junit.Assert.assertNotNull(typeArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(annotationArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test02921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02921");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.models.Swagger swagger11 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter12 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader13 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger11, logAdapter12);
        java.lang.Class<?> wildcardClass14 = springMvcApiReader13.getClass();
        java.lang.reflect.Type[] typeArray15 = new java.lang.reflect.Type[] { wildcardClass14 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet16 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet16, typeArray15);
        springMvcApiReader2.typesToSkip = typeSet16;
        java.util.Set<java.lang.reflect.Type> typeSet19 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger20 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter21 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader22 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger20, logAdapter21);
        java.lang.reflect.Type[] typeArray23 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet24 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet24, typeArray23);
        springMvcApiReader22.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet24);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter27 = springMvcApiReader22.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap29 = null;
        java.lang.String str30 = springMvcApiReader22.parseOperationPath("", strMap29);
        java.lang.reflect.Type[] typeArray31 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList32 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList32, typeArray31);
        springMvcApiReader22.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList32);
        java.lang.String[] strArray35 = new java.lang.String[] {};
        java.lang.String[] strArray39 = new java.lang.String[] { "hi!", "", "hi!" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap40 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray41 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList42 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList42, securityRequirementArray41);
        io.swagger.models.Operation operation44 = null;
        springMvcApiReader22.updateOperation(strArray35, strArray39, strMap40, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList42, operation44);
        springMvcApiReader22.updateExtensionChain();
        java.lang.Class<?> wildcardClass47 = springMvcApiReader22.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass47);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter49 = null;
        springMvcApiReader2.LOG = logAdapter49;
        io.swagger.annotations.ApiOperation apiOperation51 = null;
        io.swagger.models.Operation operation52 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateOperationProtocols(apiOperation51, operation52);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(typeArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(typeSet19);
        org.junit.Assert.assertNotNull(typeArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(logAdapter27);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNotNull(typeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(securityRequirementArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test02922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02922");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        io.swagger.annotations.Api api9 = null;
        boolean boolean10 = springMvcApiReader2.canReadApi(true, api9);
        io.swagger.models.Swagger swagger11 = springMvcApiReader2.swagger;
        io.swagger.annotations.Api api12 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.lang.String> strSet13 = springMvcApiReader2.extractTags(api12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(swagger11);
    }

    @Test
    public void test02923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02923");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type type18 = null;
        springMvcApiReader17.addTypeToSkippedTypes(type18);
        java.util.Set<java.lang.reflect.Type> typeSet20 = springMvcApiReader17.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet20);
        java.util.Set<java.lang.reflect.Type> typeSet22 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger23 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter24 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader25 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger23, logAdapter24);
        java.lang.reflect.Type[] typeArray26 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet27 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet27, typeArray26);
        springMvcApiReader25.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet27);
        java.lang.annotation.Annotation[] annotationArray30 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList31 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList31, annotationArray30);
        boolean boolean33 = springMvcApiReader25.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList31);
        io.swagger.models.Swagger swagger34 = null;
        springMvcApiReader25.swagger = swagger34;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter36 = null;
        springMvcApiReader25.LOG = logAdapter36;
        java.util.Set<java.lang.reflect.Type> typeSet38 = springMvcApiReader25.getTypesToSkip();
        java.lang.Class<?> wildcardClass39 = typeSet38.getClass();
        io.swagger.models.Swagger swagger40 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter41 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader42 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger40, logAdapter41);
        java.lang.reflect.Type[] typeArray43 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet44 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet44, typeArray43);
        springMvcApiReader42.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet44);
        java.util.Set<java.lang.reflect.Type> typeSet47 = springMvcApiReader42.typesToSkip;
        io.swagger.models.Swagger swagger48 = springMvcApiReader42.swagger;
        io.swagger.models.Swagger swagger49 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter50 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader51 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger49, logAdapter50);
        java.lang.reflect.Type[] typeArray52 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet53 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet53, typeArray52);
        springMvcApiReader51.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet53);
        java.lang.annotation.Annotation[] annotationArray56 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList57 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList57, annotationArray56);
        boolean boolean59 = springMvcApiReader51.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList57);
        io.swagger.models.Swagger swagger60 = null;
        springMvcApiReader51.swagger = swagger60;
        java.lang.annotation.Annotation[] annotationArray62 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList63 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList63, annotationArray62);
        boolean boolean65 = springMvcApiReader51.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList63);
        boolean boolean66 = springMvcApiReader42.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList63);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList67 = springMvcApiReader2.getParameters((java.lang.reflect.Type) wildcardClass39, (java.util.List<java.lang.annotation.Annotation>) annotationList63);
        io.swagger.models.Swagger swagger68 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger69 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter70 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader71 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger69, logAdapter70);
        java.lang.reflect.Type[] typeArray72 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet73 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet73, typeArray72);
        springMvcApiReader71.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet73);
        io.swagger.models.Swagger swagger76 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter77 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader78 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger76, logAdapter77);
        java.lang.reflect.Type[] typeArray79 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet80 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet80, typeArray79);
        springMvcApiReader78.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet80);
        springMvcApiReader71.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet80);
        io.swagger.models.Swagger swagger84 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter85 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader86 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger84, logAdapter85);
        java.lang.reflect.Type type87 = null;
        springMvcApiReader86.addTypeToSkippedTypes(type87);
        java.util.Set<java.lang.reflect.Type> typeSet89 = springMvcApiReader86.typesToSkip;
        springMvcApiReader71.setTypesToSkip(typeSet89);
        java.util.Set<java.lang.reflect.Type> typeSet91 = springMvcApiReader71.getTypesToSkip();
        io.swagger.annotations.Api api93 = null;
        boolean boolean94 = springMvcApiReader71.canReadApi(true, api93);
        java.util.Set<java.lang.reflect.Type> typeSet95 = springMvcApiReader71.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet96 = springMvcApiReader71.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet96);
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeSet20);
        org.junit.Assert.assertNotNull(typeSet22);
        org.junit.Assert.assertNotNull(typeArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(annotationArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(typeSet38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(typeArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(typeSet47);
        org.junit.Assert.assertNull(swagger48);
        org.junit.Assert.assertNotNull(typeArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(annotationArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(annotationArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(parameterList67);
        org.junit.Assert.assertNull(swagger68);
        org.junit.Assert.assertNotNull(typeArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(typeArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(typeSet89);
        org.junit.Assert.assertNotNull(typeSet91);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertNotNull(typeSet95);
        org.junit.Assert.assertNotNull(typeSet96);
    }

    @Test
    public void test02924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02924");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.models.Swagger swagger11 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter12 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader13 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger11, logAdapter12);
        java.lang.Class<?> wildcardClass14 = springMvcApiReader13.getClass();
        java.lang.reflect.Type[] typeArray15 = new java.lang.reflect.Type[] { wildcardClass14 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet16 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet16, typeArray15);
        springMvcApiReader2.typesToSkip = typeSet16;
        java.util.Set<java.lang.reflect.Type> typeSet19 = springMvcApiReader2.getTypesToSkip();
        java.util.Map<java.lang.String, java.lang.String> strMap21 = null;
        java.lang.String str22 = springMvcApiReader2.parseOperationPath("/hi!", strMap21);
        java.util.Set<java.lang.reflect.Type> typeSet23 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger24 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter25 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader26 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger24, logAdapter25);
        java.lang.reflect.Type[] typeArray27 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet28 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet28, typeArray27);
        springMvcApiReader26.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet28);
        java.lang.annotation.Annotation[] annotationArray31 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList32 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList32, annotationArray31);
        boolean boolean34 = springMvcApiReader26.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList32);
        io.swagger.models.Swagger swagger35 = null;
        springMvcApiReader26.swagger = swagger35;
        io.swagger.annotations.ResponseHeader[] responseHeaderArray37 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap38 = springMvcApiReader26.parseResponseHeaders(responseHeaderArray37);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap39 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray37);
        io.swagger.models.Swagger swagger40 = null;
        springMvcApiReader2.swagger = swagger40;
        io.swagger.models.Operation operation44 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updatePath("/hi!", "/hi!", operation44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(typeArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(typeSet19);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "/hi!" + "'", str22, "/hi!");
        org.junit.Assert.assertNotNull(typeSet23);
        org.junit.Assert.assertNotNull(typeArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(annotationArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(responseHeaderArray37);
        org.junit.Assert.assertNull(strMap38);
        org.junit.Assert.assertNull(strMap39);
    }

    @Test
    public void test02925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02925");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        springMvcApiReader2.LOG = logAdapter8;
        springMvcApiReader2.updateExtensionChain();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = null;
        java.lang.String str13 = springMvcApiReader2.parseOperationPath("", strMap12);
        java.lang.reflect.Method method14 = null;
        io.swagger.models.Operation operation15 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.readImplicitParameters(method14, operation15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
    }

    @Test
    public void test02926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02926");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        java.util.Set<java.lang.reflect.Type> typeSet5 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet6 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet7 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger8 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader10 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger8, logAdapter9);
        java.lang.reflect.Type[] typeArray11 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet12 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet12, typeArray11);
        springMvcApiReader10.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet12);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter15 = springMvcApiReader10.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap17 = null;
        java.lang.String str18 = springMvcApiReader10.parseOperationPath("", strMap17);
        java.lang.reflect.Type[] typeArray19 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList20 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList20, typeArray19);
        springMvcApiReader10.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList20);
        io.swagger.models.Swagger swagger23 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter24 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader25 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger23, logAdapter24);
        java.lang.reflect.Type[] typeArray26 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet27 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet27, typeArray26);
        springMvcApiReader25.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet27);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter30 = springMvcApiReader25.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap32 = null;
        java.lang.String str33 = springMvcApiReader25.parseOperationPath("", strMap32);
        io.swagger.models.Swagger swagger34 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter35 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader36 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger34, logAdapter35);
        java.lang.Class<?> wildcardClass37 = springMvcApiReader36.getClass();
        java.lang.reflect.Type[] typeArray38 = new java.lang.reflect.Type[] { wildcardClass37 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet39 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet39, typeArray38);
        springMvcApiReader25.typesToSkip = typeSet39;
        java.util.Set<java.lang.reflect.Type> typeSet42 = springMvcApiReader25.getTypesToSkip();
        springMvcApiReader10.setTypesToSkip(typeSet42);
        springMvcApiReader2.setTypesToSkip(typeSet42);
        io.swagger.models.Swagger swagger45 = springMvcApiReader2.swagger;
        java.util.Set<java.lang.reflect.Type> typeSet46 = springMvcApiReader2.getTypesToSkip();
        org.junit.Assert.assertNotNull(typeSet5);
        org.junit.Assert.assertNotNull(typeSet6);
        org.junit.Assert.assertNotNull(typeSet7);
        org.junit.Assert.assertNotNull(typeArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(logAdapter15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNotNull(typeArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(typeArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(logAdapter30);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(typeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(typeSet42);
        org.junit.Assert.assertNull(swagger45);
        org.junit.Assert.assertNotNull(typeSet46);
    }

    @Test
    public void test02927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02927");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.models.Swagger swagger11 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger12 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter13 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader14 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger12, logAdapter13);
        java.lang.reflect.Type[] typeArray15 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet16 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet16, typeArray15);
        springMvcApiReader14.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet16);
        io.swagger.models.Swagger swagger19 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter20 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader21 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger19, logAdapter20);
        java.lang.reflect.Type[] typeArray22 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet23 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet23, typeArray22);
        springMvcApiReader21.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet23);
        springMvcApiReader14.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet23);
        io.swagger.models.Swagger swagger27 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter28 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader29 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger27, logAdapter28);
        java.lang.reflect.Type type30 = null;
        springMvcApiReader29.addTypeToSkippedTypes(type30);
        java.util.Set<java.lang.reflect.Type> typeSet32 = springMvcApiReader29.typesToSkip;
        springMvcApiReader14.setTypesToSkip(typeSet32);
        io.swagger.models.Swagger swagger34 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter35 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader36 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger34, logAdapter35);
        java.lang.reflect.Type[] typeArray37 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet38 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet38, typeArray37);
        springMvcApiReader36.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet38);
        java.lang.annotation.Annotation[] annotationArray41 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList42 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList42, annotationArray41);
        boolean boolean44 = springMvcApiReader36.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList42);
        io.swagger.models.Swagger swagger45 = null;
        springMvcApiReader36.swagger = swagger45;
        java.util.Set<java.lang.reflect.Type> typeSet47 = springMvcApiReader36.getTypesToSkip();
        springMvcApiReader14.setTypesToSkip(typeSet47);
        java.util.Set<java.lang.reflect.Type> typeSet49 = springMvcApiReader14.getTypesToSkip();
        springMvcApiReader2.setTypesToSkip(typeSet49);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter51 = null;
        springMvcApiReader2.LOG = logAdapter51;
        io.swagger.models.Operation operation53 = null;
        io.swagger.annotations.ApiResponses apiResponses54 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateApiResponse(operation53, apiResponses54);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(swagger11);
        org.junit.Assert.assertNotNull(typeArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(typeArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(typeSet32);
        org.junit.Assert.assertNotNull(typeArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(annotationArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(typeSet47);
        org.junit.Assert.assertNotNull(typeSet49);
    }

    @Test
    public void test02928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02928");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader2.parseOperationPath("hi!", strMap15);
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.Class<?> wildcardClass20 = springMvcApiReader19.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass20);
        io.swagger.models.Swagger swagger22 = null;
        springMvcApiReader2.swagger = swagger22;
        io.swagger.models.Swagger swagger24 = springMvcApiReader2.swagger;
        java.util.Set<java.lang.reflect.Type> typeSet25 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger26 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter27 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader28 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger26, logAdapter27);
        java.lang.reflect.Type[] typeArray29 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet30 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet30, typeArray29);
        springMvcApiReader28.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet30);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = springMvcApiReader28.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap35 = null;
        java.lang.String str36 = springMvcApiReader28.parseOperationPath("", strMap35);
        io.swagger.models.Swagger swagger37 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter38 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader39 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger37, logAdapter38);
        java.lang.Class<?> wildcardClass40 = springMvcApiReader39.getClass();
        java.lang.reflect.Type[] typeArray41 = new java.lang.reflect.Type[] { wildcardClass40 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet42 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet42, typeArray41);
        springMvcApiReader28.typesToSkip = typeSet42;
        io.swagger.models.Swagger swagger45 = springMvcApiReader28.swagger;
        java.lang.Class<?> wildcardClass46 = springMvcApiReader28.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass46);
        io.swagger.models.Swagger swagger48 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter49 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader50 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger48, logAdapter49);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter51 = springMvcApiReader50.LOG;
        java.util.Set<java.lang.reflect.Type> typeSet52 = springMvcApiReader50.typesToSkip;
        springMvcApiReader2.typesToSkip = typeSet52;
        io.swagger.models.Swagger swagger54 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter55 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader56 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger54, logAdapter55);
        java.lang.reflect.Type[] typeArray57 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet58 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet58, typeArray57);
        springMvcApiReader56.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet58);
        io.swagger.models.Swagger swagger61 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter62 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader63 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger61, logAdapter62);
        java.lang.reflect.Type[] typeArray64 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet65 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet65, typeArray64);
        springMvcApiReader63.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet65);
        springMvcApiReader56.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet65);
        io.swagger.models.Swagger swagger69 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter70 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader71 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger69, logAdapter70);
        java.lang.reflect.Type[] typeArray72 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet73 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet73, typeArray72);
        springMvcApiReader71.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet73);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter76 = springMvcApiReader71.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap78 = null;
        java.lang.String str79 = springMvcApiReader71.parseOperationPath("", strMap78);
        io.swagger.annotations.Api api81 = null;
        boolean boolean82 = springMvcApiReader71.canReadApi(false, api81);
        java.util.Map<java.lang.String, java.lang.String> strMap84 = null;
        java.lang.String str85 = springMvcApiReader71.parseOperationPath("hi!", strMap84);
        io.swagger.models.Swagger swagger86 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter87 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader88 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger86, logAdapter87);
        java.lang.Class<?> wildcardClass89 = springMvcApiReader88.getClass();
        springMvcApiReader71.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass89);
        springMvcApiReader56.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass89);
        java.util.Map<java.lang.String, java.lang.String> strMap93 = null;
        java.lang.String str94 = springMvcApiReader56.parseOperationPath("hi!", strMap93);
        io.swagger.models.Swagger swagger95 = springMvcApiReader56.swagger;
        java.util.Set<java.lang.reflect.Type> typeSet96 = springMvcApiReader56.typesToSkip;
        springMvcApiReader2.typesToSkip = typeSet96;
        io.swagger.annotations.Api api98 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<io.swagger.models.SecurityRequirement> securityRequirementList99 = springMvcApiReader2.getSecurityRequirements(api98);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/hi!" + "'", str16, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNull(swagger24);
        org.junit.Assert.assertNotNull(typeSet25);
        org.junit.Assert.assertNotNull(typeArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(logAdapter33);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(typeArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(swagger45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNull(logAdapter51);
        org.junit.Assert.assertNotNull(typeSet52);
        org.junit.Assert.assertNotNull(typeArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(typeArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(typeArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNull(logAdapter76);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "" + "'", str79, "");
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "/hi!" + "'", str85, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "/hi!" + "'", str94, "/hi!");
        org.junit.Assert.assertNull(swagger95);
        org.junit.Assert.assertNotNull(typeSet96);
    }

    @Test
    public void test02929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02929");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type[] typeArray18 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet19 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet19, typeArray18);
        springMvcApiReader17.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet19);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = springMvcApiReader17.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap24 = null;
        java.lang.String str25 = springMvcApiReader17.parseOperationPath("", strMap24);
        io.swagger.annotations.Api api27 = null;
        boolean boolean28 = springMvcApiReader17.canReadApi(false, api27);
        java.util.Map<java.lang.String, java.lang.String> strMap30 = null;
        java.lang.String str31 = springMvcApiReader17.parseOperationPath("hi!", strMap30);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.Class<?> wildcardClass35 = springMvcApiReader34.getClass();
        springMvcApiReader17.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger39 = null;
        springMvcApiReader2.swagger = swagger39;
        java.util.Map<java.lang.String, java.lang.String> strMap42 = null;
        java.lang.String str43 = springMvcApiReader2.parseOperationPath("hi!", strMap42);
        io.swagger.models.Swagger swagger44 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter45 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader46 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger44, logAdapter45);
        java.lang.reflect.Type[] typeArray47 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet48 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet48, typeArray47);
        springMvcApiReader46.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet48);
        io.swagger.models.Swagger swagger51 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter52 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader53 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger51, logAdapter52);
        java.lang.reflect.Type[] typeArray54 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet55 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet55, typeArray54);
        springMvcApiReader53.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet55);
        springMvcApiReader46.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet55);
        io.swagger.models.Swagger swagger59 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter60 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader61 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger59, logAdapter60);
        java.lang.reflect.Type type62 = null;
        springMvcApiReader61.addTypeToSkippedTypes(type62);
        java.util.Set<java.lang.reflect.Type> typeSet64 = springMvcApiReader61.typesToSkip;
        springMvcApiReader46.setTypesToSkip(typeSet64);
        java.util.Set<java.lang.reflect.Type> typeSet66 = springMvcApiReader46.getTypesToSkip();
        springMvcApiReader2.setTypesToSkip(typeSet66);
        java.util.Set<java.lang.reflect.Type> typeSet68 = springMvcApiReader2.getTypesToSkip();
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(logAdapter22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "/hi!" + "'", str31, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "/hi!" + "'", str43, "/hi!");
        org.junit.Assert.assertNotNull(typeArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(typeArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(typeSet64);
        org.junit.Assert.assertNotNull(typeSet66);
        org.junit.Assert.assertNotNull(typeSet68);
    }

    @Test
    public void test02930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02930");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.util.Set<java.lang.reflect.Type> typeSet7 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger8 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger9 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter10 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader11 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger9, logAdapter10);
        java.lang.reflect.Type[] typeArray12 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet13 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet13, typeArray12);
        springMvcApiReader11.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet13);
        java.lang.annotation.Annotation[] annotationArray16 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList17 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList17, annotationArray16);
        boolean boolean19 = springMvcApiReader11.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList17);
        io.swagger.models.Swagger swagger20 = null;
        springMvcApiReader11.swagger = swagger20;
        java.lang.annotation.Annotation[] annotationArray22 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList23 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList23, annotationArray22);
        boolean boolean25 = springMvcApiReader11.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList23);
        boolean boolean26 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList23);
        io.swagger.models.Swagger swagger27 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter28 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader29 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger27, logAdapter28);
        java.lang.reflect.Type[] typeArray30 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet31 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet31, typeArray30);
        springMvcApiReader29.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet31);
        java.lang.annotation.Annotation[] annotationArray34 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList35 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList35, annotationArray34);
        boolean boolean37 = springMvcApiReader29.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList35);
        io.swagger.models.Swagger swagger38 = null;
        springMvcApiReader29.swagger = swagger38;
        java.lang.annotation.Annotation[] annotationArray40 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList41 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList41, annotationArray40);
        boolean boolean43 = springMvcApiReader29.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList41);
        java.lang.Class<?> wildcardClass44 = annotationList41.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass44);
        io.swagger.models.Operation operation48 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updatePath("", "", operation48);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeSet7);
        org.junit.Assert.assertNull(swagger8);
        org.junit.Assert.assertNotNull(typeArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(annotationArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(annotationArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(typeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(annotationArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(annotationArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test02931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02931");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.lang.annotation.Annotation[] annotationArray7 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList8 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList8, annotationArray7);
        boolean boolean10 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList8);
        io.swagger.models.Swagger swagger11 = null;
        springMvcApiReader2.swagger = swagger11;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter13 = null;
        springMvcApiReader2.LOG = logAdapter13;
        springMvcApiReader2.updateExtensionChain();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.reflect.Type[] typeArray20 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet21 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet21, typeArray20);
        springMvcApiReader19.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet21);
        io.swagger.models.Swagger swagger24 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter25 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader26 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger24, logAdapter25);
        java.lang.reflect.Type[] typeArray27 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet28 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet28, typeArray27);
        springMvcApiReader26.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet28);
        springMvcApiReader19.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet28);
        java.util.Map<java.lang.String, java.lang.String> strMap33 = null;
        java.lang.String str34 = springMvcApiReader19.parseOperationPath("/hi!", strMap33);
        io.swagger.models.Swagger swagger35 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter36 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader37 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger35, logAdapter36);
        java.lang.reflect.Type[] typeArray38 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet39 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet39, typeArray38);
        springMvcApiReader37.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet39);
        java.lang.annotation.Annotation[] annotationArray42 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList43 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList43, annotationArray42);
        boolean boolean45 = springMvcApiReader37.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList43);
        io.swagger.models.Swagger swagger46 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter47 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader48 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger46, logAdapter47);
        java.lang.Class<?> wildcardClass49 = springMvcApiReader48.getClass();
        springMvcApiReader37.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass49);
        springMvcApiReader19.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass49);
        io.swagger.models.Swagger swagger52 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter53 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader54 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger52, logAdapter53);
        java.lang.reflect.Type[] typeArray55 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet56 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet56, typeArray55);
        springMvcApiReader54.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet56);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter59 = springMvcApiReader54.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap61 = null;
        java.lang.String str62 = springMvcApiReader54.parseOperationPath("", strMap61);
        io.swagger.annotations.Api api64 = null;
        boolean boolean65 = springMvcApiReader54.canReadApi(false, api64);
        java.util.Map<java.lang.String, java.lang.String> strMap67 = null;
        java.lang.String str68 = springMvcApiReader54.parseOperationPath("hi!", strMap67);
        io.swagger.models.Swagger swagger69 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter70 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader71 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger69, logAdapter70);
        java.lang.Class<?> wildcardClass72 = springMvcApiReader71.getClass();
        springMvcApiReader54.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass72);
        java.util.Map<java.lang.String, java.lang.String> strMap75 = null;
        java.lang.String str76 = springMvcApiReader54.parseOperationPath("/hi!", strMap75);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray77 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap78 = springMvcApiReader54.parseResponseHeaders(responseHeaderArray77);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap79 = springMvcApiReader19.parseResponseHeaders(responseHeaderArray77);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap80 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray77);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter81 = null;
        springMvcApiReader2.LOG = logAdapter81;
        io.swagger.models.Operation operation83 = null;
        io.swagger.annotations.ApiOperation apiOperation84 = null;
        springMvcApiReader2.updateTagsForOperation(operation83, apiOperation84);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter86 = null;
        springMvcApiReader2.LOG = logAdapter86;
        java.util.Map<java.lang.String, java.lang.String> strMap89 = null;
        java.lang.String str90 = springMvcApiReader2.parseOperationPath("/hi!", strMap89);
        springMvcApiReader2.updateExtensionChain();
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(annotationArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(logAdapter16);
        org.junit.Assert.assertNotNull(typeArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(typeArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "/hi!" + "'", str34, "/hi!");
        org.junit.Assert.assertNotNull(typeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(annotationArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(typeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNull(logAdapter59);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "" + "'", str62, "");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "/hi!" + "'", str68, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "/hi!" + "'", str76, "/hi!");
        org.junit.Assert.assertNotNull(responseHeaderArray77);
        org.junit.Assert.assertNull(strMap78);
        org.junit.Assert.assertNull(strMap79);
        org.junit.Assert.assertNull(strMap80);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "/hi!" + "'", str90, "/hi!");
    }

    @Test
    public void test02932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02932");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.lang.annotation.Annotation[] annotationArray7 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList8 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList8, annotationArray7);
        boolean boolean10 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList8);
        io.swagger.models.Swagger swagger11 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter12 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader13 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger11, logAdapter12);
        java.lang.reflect.Type[] typeArray14 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet15 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet15, typeArray14);
        springMvcApiReader13.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet15);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = springMvcApiReader13.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap20 = null;
        java.lang.String str21 = springMvcApiReader13.parseOperationPath("", strMap20);
        io.swagger.annotations.Api api23 = null;
        boolean boolean24 = springMvcApiReader13.canReadApi(false, api23);
        java.util.Map<java.lang.String, java.lang.String> strMap26 = null;
        java.lang.String str27 = springMvcApiReader13.parseOperationPath("hi!", strMap26);
        io.swagger.models.Swagger swagger28 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter29 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader30 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger28, logAdapter29);
        java.lang.Class<?> wildcardClass31 = springMvcApiReader30.getClass();
        springMvcApiReader13.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass31);
        java.util.Map<java.lang.String, java.lang.String> strMap34 = null;
        java.lang.String str35 = springMvcApiReader13.parseOperationPath("/hi!", strMap34);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray36 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap37 = springMvcApiReader13.parseResponseHeaders(responseHeaderArray36);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap38 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray36);
        io.swagger.models.Swagger swagger39 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter40 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader41 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger39, logAdapter40);
        java.lang.reflect.Type[] typeArray42 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet43 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet43, typeArray42);
        springMvcApiReader41.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet43);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter46 = springMvcApiReader41.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap48 = null;
        java.lang.String str49 = springMvcApiReader41.parseOperationPath("", strMap48);
        io.swagger.annotations.Api api51 = null;
        boolean boolean52 = springMvcApiReader41.canReadApi(false, api51);
        java.util.Map<java.lang.String, java.lang.String> strMap54 = null;
        java.lang.String str55 = springMvcApiReader41.parseOperationPath("hi!", strMap54);
        io.swagger.models.Swagger swagger56 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter57 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader58 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger56, logAdapter57);
        java.lang.reflect.Type[] typeArray59 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet60 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet60, typeArray59);
        springMvcApiReader58.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet60);
        io.swagger.models.Swagger swagger63 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter64 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader65 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger63, logAdapter64);
        java.lang.reflect.Type[] typeArray66 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet67 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet67, typeArray66);
        springMvcApiReader65.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet67);
        springMvcApiReader58.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet67);
        io.swagger.models.Swagger swagger71 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter72 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader73 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger71, logAdapter72);
        java.lang.reflect.Type[] typeArray74 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet75 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet75, typeArray74);
        springMvcApiReader73.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet75);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter78 = springMvcApiReader73.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap80 = null;
        java.lang.String str81 = springMvcApiReader73.parseOperationPath("", strMap80);
        io.swagger.annotations.Api api83 = null;
        boolean boolean84 = springMvcApiReader73.canReadApi(false, api83);
        java.util.Map<java.lang.String, java.lang.String> strMap86 = null;
        java.lang.String str87 = springMvcApiReader73.parseOperationPath("hi!", strMap86);
        io.swagger.models.Swagger swagger88 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter89 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader90 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger88, logAdapter89);
        java.lang.Class<?> wildcardClass91 = springMvcApiReader90.getClass();
        springMvcApiReader73.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass91);
        springMvcApiReader58.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass91);
        springMvcApiReader41.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass91);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass91);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.annotations.Api api97 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.lang.String> strSet98 = springMvcApiReader2.extractTags(api97);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(annotationArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(typeArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(logAdapter18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "/hi!" + "'", str27, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "/hi!" + "'", str35, "/hi!");
        org.junit.Assert.assertNotNull(responseHeaderArray36);
        org.junit.Assert.assertNull(strMap37);
        org.junit.Assert.assertNull(strMap38);
        org.junit.Assert.assertNotNull(typeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNull(logAdapter46);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "/hi!" + "'", str55, "/hi!");
        org.junit.Assert.assertNotNull(typeArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(typeArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(typeArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNull(logAdapter78);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "" + "'", str81, "");
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "/hi!" + "'", str87, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test02933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02933");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.models.Swagger swagger11 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter12 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader13 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger11, logAdapter12);
        java.lang.Class<?> wildcardClass14 = springMvcApiReader13.getClass();
        java.lang.reflect.Type[] typeArray15 = new java.lang.reflect.Type[] { wildcardClass14 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet16 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet16, typeArray15);
        springMvcApiReader2.typesToSkip = typeSet16;
        io.swagger.annotations.Api api20 = null;
        boolean boolean21 = springMvcApiReader2.canReadApi(false, api20);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = springMvcApiReader2.LOG;
        java.util.Set<java.lang.reflect.Type> typeSet23 = springMvcApiReader2.getTypesToSkip();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter24 = springMvcApiReader2.LOG;
        io.swagger.annotations.Api api26 = null;
        boolean boolean27 = springMvcApiReader2.canReadApi(true, api26);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter28 = springMvcApiReader2.LOG;
        io.swagger.annotations.Api api29 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<io.swagger.models.SecurityRequirement> securityRequirementList30 = springMvcApiReader2.getSecurityRequirements(api29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(typeArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(logAdapter22);
        org.junit.Assert.assertNotNull(typeSet23);
        org.junit.Assert.assertNull(logAdapter24);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(logAdapter28);
    }

    @Test
    public void test02934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02934");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        io.swagger.models.Swagger swagger5 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter6 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader7 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger5, logAdapter6);
        java.lang.reflect.Type[] typeArray8 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet9 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet9, typeArray8);
        springMvcApiReader7.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet9);
        io.swagger.models.Swagger swagger12 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter13 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader14 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger12, logAdapter13);
        java.lang.reflect.Type[] typeArray15 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet16 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet16, typeArray15);
        springMvcApiReader14.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet16);
        springMvcApiReader7.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet16);
        io.swagger.models.Swagger swagger20 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter21 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader22 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger20, logAdapter21);
        java.lang.reflect.Type[] typeArray23 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet24 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet24, typeArray23);
        springMvcApiReader22.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet24);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter27 = springMvcApiReader22.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap29 = null;
        java.lang.String str30 = springMvcApiReader22.parseOperationPath("", strMap29);
        io.swagger.annotations.Api api32 = null;
        boolean boolean33 = springMvcApiReader22.canReadApi(false, api32);
        java.util.Map<java.lang.String, java.lang.String> strMap35 = null;
        java.lang.String str36 = springMvcApiReader22.parseOperationPath("hi!", strMap35);
        io.swagger.models.Swagger swagger37 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter38 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader39 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger37, logAdapter38);
        java.lang.Class<?> wildcardClass40 = springMvcApiReader39.getClass();
        springMvcApiReader22.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass40);
        springMvcApiReader7.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass40);
        java.util.Set<java.lang.reflect.Type> typeSet43 = springMvcApiReader7.getTypesToSkip();
        springMvcApiReader2.typesToSkip = typeSet43;
        java.util.Set<java.lang.reflect.Type> typeSet45 = springMvcApiReader2.getTypesToSkip();
        io.swagger.annotations.Api api47 = null;
        boolean boolean48 = springMvcApiReader2.canReadApi(false, api47);
        io.swagger.models.Swagger swagger49 = springMvcApiReader2.swagger;
        io.swagger.models.Operation operation52 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updatePath("/hi!", "/hi!", operation52);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(typeArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(typeArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(logAdapter27);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "/hi!" + "'", str36, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(typeSet43);
        org.junit.Assert.assertNotNull(typeSet45);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(swagger49);
    }

    @Test
    public void test02935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02935");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type[] typeArray18 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet19 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet19, typeArray18);
        springMvcApiReader17.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet19);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = springMvcApiReader17.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap24 = null;
        java.lang.String str25 = springMvcApiReader17.parseOperationPath("", strMap24);
        io.swagger.annotations.Api api27 = null;
        boolean boolean28 = springMvcApiReader17.canReadApi(false, api27);
        java.util.Map<java.lang.String, java.lang.String> strMap30 = null;
        java.lang.String str31 = springMvcApiReader17.parseOperationPath("hi!", strMap30);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.Class<?> wildcardClass35 = springMvcApiReader34.getClass();
        springMvcApiReader17.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter38 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger39 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter40 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader41 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger39, logAdapter40);
        java.lang.reflect.Type[] typeArray42 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet43 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet43, typeArray42);
        springMvcApiReader41.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet43);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter46 = springMvcApiReader41.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap48 = null;
        java.lang.String str49 = springMvcApiReader41.parseOperationPath("", strMap48);
        java.lang.reflect.Type[] typeArray50 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList51 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList51, typeArray50);
        springMvcApiReader41.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList51);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList51);
        io.swagger.models.Swagger swagger55 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter56 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader57 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger55, logAdapter56);
        java.lang.reflect.Type[] typeArray58 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet59 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet59, typeArray58);
        springMvcApiReader57.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet59);
        java.util.Set<java.lang.reflect.Type> typeSet62 = springMvcApiReader57.typesToSkip;
        springMvcApiReader57.updateExtensionChain();
        io.swagger.models.Swagger swagger64 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter65 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader66 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger64, logAdapter65);
        java.lang.Class<?> wildcardClass67 = springMvcApiReader66.getClass();
        springMvcApiReader57.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass67);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass67);
        java.util.Map<java.lang.String, java.lang.String> strMap71 = null;
        java.lang.String str72 = springMvcApiReader2.parseOperationPath("", strMap71);
        java.util.Set<java.lang.reflect.Type> typeSet73 = springMvcApiReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet74 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger75 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter76 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader77 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger75, logAdapter76);
        java.lang.reflect.Type type78 = null;
        springMvcApiReader77.addTypeToSkippedTypes(type78);
        java.util.Set<java.lang.reflect.Type> typeSet80 = springMvcApiReader77.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet81 = springMvcApiReader77.getTypesToSkip();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter82 = springMvcApiReader77.LOG;
        io.swagger.models.Swagger swagger83 = springMvcApiReader77.swagger;
        io.swagger.annotations.Api api85 = null;
        boolean boolean86 = springMvcApiReader77.canReadApi(true, api85);
        java.util.Set<java.lang.reflect.Type> typeSet87 = springMvcApiReader77.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet87);
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(logAdapter22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "/hi!" + "'", str31, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNull(logAdapter38);
        org.junit.Assert.assertNotNull(typeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNull(logAdapter46);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertNotNull(typeArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(typeArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(typeSet62);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "" + "'", str72, "");
        org.junit.Assert.assertNotNull(typeSet73);
        org.junit.Assert.assertNotNull(typeSet74);
        org.junit.Assert.assertNotNull(typeSet80);
        org.junit.Assert.assertNotNull(typeSet81);
        org.junit.Assert.assertNull(logAdapter82);
        org.junit.Assert.assertNull(swagger83);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(typeSet87);
    }

    @Test
    public void test02936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02936");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        io.swagger.models.Swagger swagger14 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter15 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader16 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger14, logAdapter15);
        java.lang.reflect.Type type17 = null;
        springMvcApiReader16.addTypeToSkippedTypes(type17);
        java.util.Set<java.lang.reflect.Type> typeSet19 = springMvcApiReader16.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet20 = springMvcApiReader16.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet20);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = null;
        springMvcApiReader2.LOG = logAdapter22;
        java.util.Set<java.lang.reflect.Type> typeSet24 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Operation operation25 = null;
        io.swagger.annotations.ApiOperation apiOperation26 = null;
        springMvcApiReader2.updateTagsForOperation(operation25, apiOperation26);
        io.swagger.models.Swagger swagger28 = null;
        springMvcApiReader2.swagger = swagger28;
        io.swagger.models.Swagger swagger30 = springMvcApiReader2.swagger;
        io.swagger.annotations.Api api31 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.lang.String> strSet32 = springMvcApiReader2.extractTags(api31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(typeSet19);
        org.junit.Assert.assertNotNull(typeSet20);
        org.junit.Assert.assertNotNull(typeSet24);
        org.junit.Assert.assertNull(swagger30);
    }

    @Test
    public void test02937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02937");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.util.Set<java.lang.reflect.Type> typeSet7 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger8 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger9 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter10 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader11 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger9, logAdapter10);
        java.lang.reflect.Type[] typeArray12 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet13 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet13, typeArray12);
        springMvcApiReader11.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet13);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = springMvcApiReader11.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap18 = null;
        java.lang.String str19 = springMvcApiReader11.parseOperationPath("", strMap18);
        java.lang.reflect.Type[] typeArray20 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList21 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList21, typeArray20);
        springMvcApiReader11.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList21);
        java.lang.String[] strArray24 = new java.lang.String[] {};
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!", "", "hi!" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap29 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray30 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList31 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList31, securityRequirementArray30);
        io.swagger.models.Operation operation33 = null;
        springMvcApiReader11.updateOperation(strArray24, strArray28, strMap29, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList31, operation33);
        java.lang.String[] strArray35 = null;
        io.swagger.models.Operation operation36 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String[] strArray37 = springMvcApiReader2.updateOperationProduces(strArray24, strArray35, operation36);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeSet7);
        org.junit.Assert.assertNull(swagger8);
        org.junit.Assert.assertNotNull(typeArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(logAdapter16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertNotNull(typeArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(securityRequirementArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test02938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02938");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.models.Swagger swagger3 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter4 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader5 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger3, logAdapter4);
        java.lang.reflect.Type[] typeArray6 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet7 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet7, typeArray6);
        springMvcApiReader5.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet7);
        java.lang.annotation.Annotation[] annotationArray10 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList11 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList11, annotationArray10);
        boolean boolean13 = springMvcApiReader5.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList11);
        boolean boolean14 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList11);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type[] typeArray18 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet19 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet19, typeArray18);
        springMvcApiReader17.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet19);
        java.lang.annotation.Annotation[] annotationArray22 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList23 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList23, annotationArray22);
        boolean boolean25 = springMvcApiReader17.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList23);
        boolean boolean26 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList23);
        java.util.Set<java.lang.reflect.Type> typeSet27 = null;
        springMvcApiReader2.typesToSkip = typeSet27;
        io.swagger.models.Swagger swagger29 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter30 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader31 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger29, logAdapter30);
        java.lang.reflect.Type[] typeArray32 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet33 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet33, typeArray32);
        springMvcApiReader31.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet33);
        java.lang.annotation.Annotation[] annotationArray36 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList37 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList37, annotationArray36);
        boolean boolean39 = springMvcApiReader31.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList37);
        io.swagger.models.Swagger swagger40 = null;
        springMvcApiReader31.swagger = swagger40;
        io.swagger.annotations.ResponseHeader[] responseHeaderArray42 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap43 = springMvcApiReader31.parseResponseHeaders(responseHeaderArray42);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap44 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray42);
        java.util.Set<java.lang.reflect.Type> typeSet45 = springMvcApiReader2.getTypesToSkip();
        springMvcApiReader2.updateExtensionChain();
        io.swagger.annotations.Api api48 = null;
        boolean boolean49 = springMvcApiReader2.canReadApi(false, api48);
        java.lang.reflect.Method method50 = null;
        io.swagger.models.Operation operation51 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.readImplicitParameters(method50, operation51);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(annotationArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(typeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(annotationArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(typeArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(annotationArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(responseHeaderArray42);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNull(strMap44);
        org.junit.Assert.assertNull(typeSet45);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    }

    @Test
    public void test02939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02939");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type[] typeArray18 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet19 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet19, typeArray18);
        springMvcApiReader17.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet19);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = springMvcApiReader17.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap24 = null;
        java.lang.String str25 = springMvcApiReader17.parseOperationPath("", strMap24);
        io.swagger.annotations.Api api27 = null;
        boolean boolean28 = springMvcApiReader17.canReadApi(false, api27);
        java.util.Map<java.lang.String, java.lang.String> strMap30 = null;
        java.lang.String str31 = springMvcApiReader17.parseOperationPath("hi!", strMap30);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.Class<?> wildcardClass35 = springMvcApiReader34.getClass();
        springMvcApiReader17.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter38 = springMvcApiReader2.LOG;
        java.util.Set<java.lang.reflect.Type> typeSet39 = springMvcApiReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet40 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Operation operation41 = null;
        io.swagger.annotations.ApiOperation apiOperation42 = null;
        springMvcApiReader2.updateTagsForOperation(operation41, apiOperation42);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Operation operation47 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updatePath("hi!", "", operation47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(logAdapter22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "/hi!" + "'", str31, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNull(logAdapter38);
        org.junit.Assert.assertNotNull(typeSet39);
        org.junit.Assert.assertNotNull(typeSet40);
    }

    @Test
    public void test02940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02940");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader2.parseOperationPath("hi!", strMap15);
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.Class<?> wildcardClass20 = springMvcApiReader19.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass20);
        java.util.Map<java.lang.String, java.lang.String> strMap23 = null;
        java.lang.String str24 = springMvcApiReader2.parseOperationPath("/hi!", strMap23);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray25 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap26 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray25);
        java.util.Map<java.lang.String, java.lang.String> strMap28 = null;
        java.lang.String str29 = springMvcApiReader2.parseOperationPath("", strMap28);
        java.util.Map<java.lang.String, java.lang.String> strMap31 = null;
        java.lang.String str32 = springMvcApiReader2.parseOperationPath("/hi!", strMap31);
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/hi!" + "'", str16, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "/hi!" + "'", str24, "/hi!");
        org.junit.Assert.assertNotNull(responseHeaderArray25);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "/hi!" + "'", str32, "/hi!");
    }

    @Test
    public void test02941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02941");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.util.Set<java.lang.reflect.Type> typeSet7 = springMvcApiReader2.typesToSkip;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger9 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter10 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader11 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger9, logAdapter10);
        java.lang.reflect.Type[] typeArray12 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet13 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet13, typeArray12);
        springMvcApiReader11.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet13);
        java.lang.annotation.Annotation[] annotationArray16 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList17 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList17, annotationArray16);
        boolean boolean19 = springMvcApiReader11.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList17);
        io.swagger.models.Swagger swagger20 = null;
        springMvcApiReader11.swagger = swagger20;
        io.swagger.models.Swagger swagger22 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader24 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger22, logAdapter23);
        java.lang.reflect.Type[] typeArray25 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet26 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet26, typeArray25);
        springMvcApiReader24.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet26);
        java.lang.annotation.Annotation[] annotationArray29 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList30 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList30, annotationArray29);
        boolean boolean32 = springMvcApiReader24.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList30);
        io.swagger.models.Swagger swagger33 = null;
        springMvcApiReader24.swagger = swagger33;
        java.lang.annotation.Annotation[] annotationArray35 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList36 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList36, annotationArray35);
        boolean boolean38 = springMvcApiReader24.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList36);
        boolean boolean39 = springMvcApiReader11.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList36);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter40 = springMvcApiReader11.LOG;
        io.swagger.models.Swagger swagger41 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter42 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader43 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger41, logAdapter42);
        java.util.Map<java.lang.String, java.lang.String> strMap45 = null;
        java.lang.String str46 = springMvcApiReader43.parseOperationPath("/hi!", strMap45);
        java.util.Set<java.lang.reflect.Type> typeSet47 = springMvcApiReader43.getTypesToSkip();
        springMvcApiReader11.setTypesToSkip(typeSet47);
        springMvcApiReader2.typesToSkip = typeSet47;
        io.swagger.models.Operation operation50 = null;
        io.swagger.annotations.ApiOperation apiOperation51 = null;
        springMvcApiReader2.updateTagsForOperation(operation50, apiOperation51);
        java.util.Set<java.lang.reflect.Type> typeSet53 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger54 = springMvcApiReader2.swagger;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter55 = springMvcApiReader2.LOG;
        io.swagger.annotations.Api api56 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<io.swagger.models.SecurityRequirement> securityRequirementList57 = springMvcApiReader2.getSecurityRequirements(api56);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeSet7);
        org.junit.Assert.assertNotNull(typeArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(annotationArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(typeArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(annotationArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(annotationArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(logAdapter40);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "/hi!" + "'", str46, "/hi!");
        org.junit.Assert.assertNotNull(typeSet47);
        org.junit.Assert.assertNotNull(typeSet53);
        org.junit.Assert.assertNull(swagger54);
        org.junit.Assert.assertNull(logAdapter55);
    }

    @Test
    public void test02942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02942");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type[] typeArray18 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet19 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet19, typeArray18);
        springMvcApiReader17.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet19);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = springMvcApiReader17.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap24 = null;
        java.lang.String str25 = springMvcApiReader17.parseOperationPath("", strMap24);
        io.swagger.annotations.Api api27 = null;
        boolean boolean28 = springMvcApiReader17.canReadApi(false, api27);
        java.util.Map<java.lang.String, java.lang.String> strMap30 = null;
        java.lang.String str31 = springMvcApiReader17.parseOperationPath("hi!", strMap30);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.Class<?> wildcardClass35 = springMvcApiReader34.getClass();
        springMvcApiReader17.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        java.util.Set<java.lang.reflect.Type> typeSet38 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger39 = null;
        springMvcApiReader2.swagger = swagger39;
        io.swagger.annotations.Api api42 = null;
        boolean boolean43 = springMvcApiReader2.canReadApi(false, api42);
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(logAdapter22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "/hi!" + "'", str31, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(typeSet38);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    }

    @Test
    public void test02943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02943");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.util.Set<java.lang.reflect.Type> typeSet7 = springMvcApiReader2.typesToSkip;
        springMvcApiReader2.updateExtensionChain();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = springMvcApiReader2.LOG;
        io.swagger.models.Operation operation10 = null;
        io.swagger.annotations.ApiResponses apiResponses11 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateApiResponse(operation10, apiResponses11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeSet7);
        org.junit.Assert.assertNull(logAdapter9);
    }

    @Test
    public void test02944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02944");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.models.Swagger swagger3 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter4 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader5 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger3, logAdapter4);
        java.lang.reflect.Type[] typeArray6 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet7 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet7, typeArray6);
        springMvcApiReader5.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet7);
        java.lang.annotation.Annotation[] annotationArray10 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList11 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList11, annotationArray10);
        boolean boolean13 = springMvcApiReader5.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList11);
        boolean boolean14 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList11);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type[] typeArray18 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet19 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet19, typeArray18);
        springMvcApiReader17.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet19);
        java.lang.annotation.Annotation[] annotationArray22 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList23 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList23, annotationArray22);
        boolean boolean25 = springMvcApiReader17.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList23);
        boolean boolean26 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList23);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter27 = springMvcApiReader2.LOG;
        java.util.Set<java.lang.reflect.Type> typeSet28 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger29 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter30 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader31 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger29, logAdapter30);
        java.lang.reflect.Type[] typeArray32 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet33 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet33, typeArray32);
        springMvcApiReader31.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet33);
        java.lang.annotation.Annotation[] annotationArray36 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList37 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList37, annotationArray36);
        boolean boolean39 = springMvcApiReader31.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList37);
        io.swagger.models.Swagger swagger40 = null;
        springMvcApiReader31.swagger = swagger40;
        java.lang.annotation.Annotation[] annotationArray42 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList43 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList43, annotationArray42);
        boolean boolean45 = springMvcApiReader31.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList43);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter46 = null;
        springMvcApiReader31.LOG = logAdapter46;
        io.swagger.models.Swagger swagger48 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter49 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader50 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger48, logAdapter49);
        java.lang.reflect.Type type51 = null;
        springMvcApiReader50.addTypeToSkippedTypes(type51);
        java.util.Set<java.lang.reflect.Type> typeSet53 = springMvcApiReader50.typesToSkip;
        springMvcApiReader31.setTypesToSkip(typeSet53);
        io.swagger.models.Swagger swagger55 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter56 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader57 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger55, logAdapter56);
        java.lang.reflect.Type[] typeArray58 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet59 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet59, typeArray58);
        springMvcApiReader57.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet59);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter62 = springMvcApiReader57.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap64 = null;
        java.lang.String str65 = springMvcApiReader57.parseOperationPath("", strMap64);
        java.lang.reflect.Type[] typeArray66 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList67 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList67, typeArray66);
        springMvcApiReader57.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList67);
        io.swagger.models.Swagger swagger70 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter71 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader72 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger70, logAdapter71);
        java.lang.reflect.Type[] typeArray73 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet74 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet74, typeArray73);
        springMvcApiReader72.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet74);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter77 = springMvcApiReader72.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap79 = null;
        java.lang.String str80 = springMvcApiReader72.parseOperationPath("", strMap79);
        io.swagger.models.Swagger swagger81 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter82 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader83 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger81, logAdapter82);
        java.lang.Class<?> wildcardClass84 = springMvcApiReader83.getClass();
        java.lang.reflect.Type[] typeArray85 = new java.lang.reflect.Type[] { wildcardClass84 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet86 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet86, typeArray85);
        springMvcApiReader72.typesToSkip = typeSet86;
        java.util.Set<java.lang.reflect.Type> typeSet89 = springMvcApiReader72.getTypesToSkip();
        springMvcApiReader57.setTypesToSkip(typeSet89);
        springMvcApiReader31.setTypesToSkip(typeSet89);
        springMvcApiReader2.setTypesToSkip(typeSet89);
        java.util.Set<java.lang.reflect.Type> typeSet93 = springMvcApiReader2.typesToSkip;
        java.lang.reflect.Method method94 = null;
        io.swagger.models.Operation operation95 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.readImplicitParameters(method94, operation95);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(annotationArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(typeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(annotationArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(logAdapter27);
        org.junit.Assert.assertNotNull(typeSet28);
        org.junit.Assert.assertNotNull(typeArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(annotationArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(annotationArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(typeSet53);
        org.junit.Assert.assertNotNull(typeArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNull(logAdapter62);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "" + "'", str65, "");
        org.junit.Assert.assertNotNull(typeArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(typeArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNull(logAdapter77);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "" + "'", str80, "");
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertNotNull(typeArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(typeSet89);
        org.junit.Assert.assertNotNull(typeSet93);
    }

    @Test
    public void test02945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02945");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        io.swagger.models.Swagger swagger5 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter6 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader7 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger5, logAdapter6);
        java.lang.reflect.Type[] typeArray8 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet9 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet9, typeArray8);
        springMvcApiReader7.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet9);
        io.swagger.models.Swagger swagger12 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter13 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader14 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger12, logAdapter13);
        java.lang.reflect.Type[] typeArray15 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet16 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet16, typeArray15);
        springMvcApiReader14.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet16);
        springMvcApiReader7.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet16);
        io.swagger.models.Swagger swagger20 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter21 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader22 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger20, logAdapter21);
        java.lang.reflect.Type[] typeArray23 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet24 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet24, typeArray23);
        springMvcApiReader22.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet24);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter27 = springMvcApiReader22.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap29 = null;
        java.lang.String str30 = springMvcApiReader22.parseOperationPath("", strMap29);
        io.swagger.annotations.Api api32 = null;
        boolean boolean33 = springMvcApiReader22.canReadApi(false, api32);
        java.util.Map<java.lang.String, java.lang.String> strMap35 = null;
        java.lang.String str36 = springMvcApiReader22.parseOperationPath("hi!", strMap35);
        io.swagger.models.Swagger swagger37 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter38 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader39 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger37, logAdapter38);
        java.lang.Class<?> wildcardClass40 = springMvcApiReader39.getClass();
        springMvcApiReader22.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass40);
        springMvcApiReader7.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass40);
        java.util.Set<java.lang.reflect.Type> typeSet43 = springMvcApiReader7.getTypesToSkip();
        springMvcApiReader2.typesToSkip = typeSet43;
        java.util.Map<java.lang.String, java.lang.String> strMap46 = null;
        java.lang.String str47 = springMvcApiReader2.parseOperationPath("", strMap46);
        io.swagger.models.Swagger swagger48 = null;
        springMvcApiReader2.swagger = swagger48;
        io.swagger.models.Swagger swagger50 = springMvcApiReader2.swagger;
        java.util.Set<java.lang.reflect.Type> typeSet51 = springMvcApiReader2.typesToSkip;
        org.junit.Assert.assertNotNull(typeArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(typeArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(typeArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(logAdapter27);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "/hi!" + "'", str36, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(typeSet43);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertNull(swagger50);
        org.junit.Assert.assertNotNull(typeSet51);
    }

    @Test
    public void test02946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02946");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.util.Set<java.lang.reflect.Type> typeSet7 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger8 = springMvcApiReader2.swagger;
        java.util.Map<java.lang.String, java.lang.String> strMap10 = null;
        java.lang.String str11 = springMvcApiReader2.parseOperationPath("", strMap10);
        io.swagger.annotations.Api api12 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.lang.String> strSet13 = springMvcApiReader2.extractTags(api12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeSet7);
        org.junit.Assert.assertNull(swagger8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
    }

    @Test
    public void test02947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02947");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.annotations.Api api8 = null;
        boolean boolean9 = springMvcApiReader2.canReadApi(true, api8);
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap10 = null;
        io.swagger.annotations.Api api11 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, io.swagger.models.Tag> strMap12 = springMvcApiReader2.updateTagsForApi(strMap10, api11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test02948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02948");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger15 = null;
        springMvcApiReader2.swagger = swagger15;
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.reflect.Type[] typeArray20 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet21 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet21, typeArray20);
        springMvcApiReader19.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet21);
        java.lang.annotation.Annotation[] annotationArray24 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList25 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList25, annotationArray24);
        boolean boolean27 = springMvcApiReader19.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList25);
        io.swagger.models.Swagger swagger28 = null;
        springMvcApiReader19.swagger = swagger28;
        java.lang.annotation.Annotation[] annotationArray30 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList31 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList31, annotationArray30);
        boolean boolean33 = springMvcApiReader19.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList31);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter34 = null;
        springMvcApiReader19.LOG = logAdapter34;
        io.swagger.models.Swagger swagger36 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter37 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader38 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger36, logAdapter37);
        java.lang.reflect.Type type39 = null;
        springMvcApiReader38.addTypeToSkippedTypes(type39);
        java.util.Set<java.lang.reflect.Type> typeSet41 = springMvcApiReader38.typesToSkip;
        springMvcApiReader19.setTypesToSkip(typeSet41);
        io.swagger.models.Swagger swagger43 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter44 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader45 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger43, logAdapter44);
        java.lang.reflect.Type[] typeArray46 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet47 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet47, typeArray46);
        springMvcApiReader45.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet47);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter50 = springMvcApiReader45.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap52 = null;
        java.lang.String str53 = springMvcApiReader45.parseOperationPath("", strMap52);
        java.lang.reflect.Type[] typeArray54 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList55 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList55, typeArray54);
        springMvcApiReader45.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList55);
        io.swagger.models.Swagger swagger58 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter59 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader60 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger58, logAdapter59);
        java.lang.reflect.Type[] typeArray61 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet62 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet62, typeArray61);
        springMvcApiReader60.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet62);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter65 = springMvcApiReader60.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap67 = null;
        java.lang.String str68 = springMvcApiReader60.parseOperationPath("", strMap67);
        io.swagger.models.Swagger swagger69 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter70 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader71 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger69, logAdapter70);
        java.lang.Class<?> wildcardClass72 = springMvcApiReader71.getClass();
        java.lang.reflect.Type[] typeArray73 = new java.lang.reflect.Type[] { wildcardClass72 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet74 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet74, typeArray73);
        springMvcApiReader60.typesToSkip = typeSet74;
        java.util.Set<java.lang.reflect.Type> typeSet77 = springMvcApiReader60.getTypesToSkip();
        springMvcApiReader45.setTypesToSkip(typeSet77);
        springMvcApiReader19.setTypesToSkip(typeSet77);
        springMvcApiReader2.setTypesToSkip(typeSet77);
        io.swagger.models.Operation operation81 = null;
        io.swagger.annotations.ApiOperation apiOperation82 = null;
        springMvcApiReader2.updateTagsForOperation(operation81, apiOperation82);
        io.swagger.models.Operation operation86 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updatePath("hi!", "", operation86);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(annotationArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(annotationArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(typeSet41);
        org.junit.Assert.assertNotNull(typeArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(logAdapter50);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertNotNull(typeArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(typeArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNull(logAdapter65);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "" + "'", str68, "");
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(typeArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(typeSet77);
    }

    @Test
    public void test02949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02949");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.models.Swagger swagger11 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter12 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader13 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger11, logAdapter12);
        java.lang.Class<?> wildcardClass14 = springMvcApiReader13.getClass();
        java.lang.reflect.Type[] typeArray15 = new java.lang.reflect.Type[] { wildcardClass14 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet16 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet16, typeArray15);
        springMvcApiReader2.typesToSkip = typeSet16;
        io.swagger.models.Swagger swagger19 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger20 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter21 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader22 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger20, logAdapter21);
        java.lang.reflect.Type[] typeArray23 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet24 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet24, typeArray23);
        springMvcApiReader22.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet24);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter27 = springMvcApiReader22.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap29 = null;
        java.lang.String str30 = springMvcApiReader22.parseOperationPath("", strMap29);
        io.swagger.models.Swagger swagger31 = springMvcApiReader22.swagger;
        io.swagger.annotations.Api api33 = null;
        boolean boolean34 = springMvcApiReader22.canReadApi(false, api33);
        java.util.Set<java.lang.reflect.Type> typeSet35 = springMvcApiReader22.typesToSkip;
        java.lang.annotation.Annotation[] annotationArray36 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList37 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList37, annotationArray36);
        boolean boolean39 = springMvcApiReader22.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList37);
        boolean boolean40 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList37);
        java.lang.Class<?> wildcardClass41 = annotationList37.getClass();
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(typeArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(swagger19);
        org.junit.Assert.assertNotNull(typeArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(logAdapter27);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNull(swagger31);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(typeSet35);
        org.junit.Assert.assertNotNull(annotationArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test02950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02950");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.util.Set<java.lang.reflect.Type> typeSet7 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger8 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader10 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger8, logAdapter9);
        java.lang.reflect.Type[] typeArray11 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet12 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet12, typeArray11);
        springMvcApiReader10.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet12);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter15 = springMvcApiReader10.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap17 = null;
        java.lang.String str18 = springMvcApiReader10.parseOperationPath("", strMap17);
        io.swagger.annotations.Api api20 = null;
        boolean boolean21 = springMvcApiReader10.canReadApi(false, api20);
        java.util.Map<java.lang.String, java.lang.String> strMap23 = null;
        java.lang.String str24 = springMvcApiReader10.parseOperationPath("hi!", strMap23);
        io.swagger.models.Swagger swagger25 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter26 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader27 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger25, logAdapter26);
        java.lang.reflect.Type[] typeArray28 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet29 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet29, typeArray28);
        springMvcApiReader27.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet29);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.reflect.Type[] typeArray35 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet36 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet36, typeArray35);
        springMvcApiReader34.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet36);
        springMvcApiReader27.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet36);
        io.swagger.models.Swagger swagger40 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter41 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader42 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger40, logAdapter41);
        java.lang.reflect.Type[] typeArray43 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet44 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet44, typeArray43);
        springMvcApiReader42.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet44);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter47 = springMvcApiReader42.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap49 = null;
        java.lang.String str50 = springMvcApiReader42.parseOperationPath("", strMap49);
        io.swagger.annotations.Api api52 = null;
        boolean boolean53 = springMvcApiReader42.canReadApi(false, api52);
        java.util.Map<java.lang.String, java.lang.String> strMap55 = null;
        java.lang.String str56 = springMvcApiReader42.parseOperationPath("hi!", strMap55);
        io.swagger.models.Swagger swagger57 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter58 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader59 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger57, logAdapter58);
        java.lang.Class<?> wildcardClass60 = springMvcApiReader59.getClass();
        springMvcApiReader42.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass60);
        springMvcApiReader27.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass60);
        springMvcApiReader10.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass60);
        io.swagger.models.Swagger swagger64 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter65 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader66 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger64, logAdapter65);
        java.lang.reflect.Type[] typeArray67 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet68 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet68, typeArray67);
        springMvcApiReader66.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet68);
        java.lang.annotation.Annotation[] annotationArray71 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList72 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList72, annotationArray71);
        boolean boolean74 = springMvcApiReader66.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList72);
        io.swagger.models.Swagger swagger75 = null;
        springMvcApiReader66.swagger = swagger75;
        java.lang.annotation.Annotation[] annotationArray77 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList78 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList78, annotationArray77);
        boolean boolean80 = springMvcApiReader66.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList78);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList81 = springMvcApiReader2.getParameters((java.lang.reflect.Type) wildcardClass60, (java.util.List<java.lang.annotation.Annotation>) annotationList78);
        java.util.Map<java.lang.String, java.lang.String> strMap83 = null;
        java.lang.String str84 = springMvcApiReader2.parseOperationPath("hi!", strMap83);
        io.swagger.models.Swagger swagger85 = null;
        springMvcApiReader2.swagger = swagger85;
        java.util.Set<java.lang.reflect.Type> typeSet87 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Operation operation90 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updatePath("/hi!", "hi!", operation90);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeSet7);
        org.junit.Assert.assertNotNull(typeArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(logAdapter15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "/hi!" + "'", str24, "/hi!");
        org.junit.Assert.assertNotNull(typeArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(typeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(typeArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(logAdapter47);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "/hi!" + "'", str56, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(typeArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(annotationArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(annotationArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(parameterList81);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "/hi!" + "'", str84, "/hi!");
        org.junit.Assert.assertNotNull(typeSet87);
    }

    @Test
    public void test02951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02951");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.lang.annotation.Annotation[] annotationArray7 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList8 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList8, annotationArray7);
        boolean boolean10 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList8);
        io.swagger.models.Swagger swagger11 = null;
        springMvcApiReader2.swagger = swagger11;
        io.swagger.annotations.ResponseHeader[] responseHeaderArray13 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap14 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray13);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type[] typeArray18 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet19 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet19, typeArray18);
        springMvcApiReader17.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet19);
        io.swagger.models.Swagger swagger22 = springMvcApiReader17.swagger;
        io.swagger.models.Swagger swagger23 = springMvcApiReader17.swagger;
        io.swagger.models.Swagger swagger24 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter25 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader26 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger24, logAdapter25);
        java.lang.reflect.Type[] typeArray27 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet28 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet28, typeArray27);
        springMvcApiReader26.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet28);
        java.lang.annotation.Annotation[] annotationArray31 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList32 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList32, annotationArray31);
        boolean boolean34 = springMvcApiReader26.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList32);
        boolean boolean35 = springMvcApiReader17.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList32);
        boolean boolean36 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList32);
        java.lang.reflect.Method method37 = null;
        io.swagger.models.Operation operation38 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.readImplicitParameters(method37, operation38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(annotationArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(responseHeaderArray13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(typeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(swagger22);
        org.junit.Assert.assertNull(swagger23);
        org.junit.Assert.assertNotNull(typeArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(annotationArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test02952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02952");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader2.parseOperationPath("hi!", strMap15);
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.reflect.Type[] typeArray20 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet21 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet21, typeArray20);
        springMvcApiReader19.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet21);
        io.swagger.models.Swagger swagger24 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter25 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader26 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger24, logAdapter25);
        java.lang.reflect.Type[] typeArray27 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet28 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet28, typeArray27);
        springMvcApiReader26.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet28);
        springMvcApiReader19.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet28);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.reflect.Type[] typeArray35 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet36 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet36, typeArray35);
        springMvcApiReader34.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet36);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter39 = springMvcApiReader34.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap41 = null;
        java.lang.String str42 = springMvcApiReader34.parseOperationPath("", strMap41);
        io.swagger.annotations.Api api44 = null;
        boolean boolean45 = springMvcApiReader34.canReadApi(false, api44);
        java.util.Map<java.lang.String, java.lang.String> strMap47 = null;
        java.lang.String str48 = springMvcApiReader34.parseOperationPath("hi!", strMap47);
        io.swagger.models.Swagger swagger49 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter50 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader51 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger49, logAdapter50);
        java.lang.Class<?> wildcardClass52 = springMvcApiReader51.getClass();
        springMvcApiReader34.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        springMvcApiReader19.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        java.util.Set<java.lang.reflect.Type> typeSet56 = springMvcApiReader2.getTypesToSkip();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter57 = springMvcApiReader2.LOG;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Operation operation59 = null;
        io.swagger.annotations.ApiOperation apiOperation60 = null;
        springMvcApiReader2.updateTagsForOperation(operation59, apiOperation60);
        io.swagger.annotations.Api api62 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<io.swagger.models.SecurityRequirement> securityRequirementList63 = springMvcApiReader2.getSecurityRequirements(api62);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/hi!" + "'", str16, "/hi!");
        org.junit.Assert.assertNotNull(typeArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(typeArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(typeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(logAdapter39);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "/hi!" + "'", str48, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(typeSet56);
        org.junit.Assert.assertNull(logAdapter57);
    }

    @Test
    public void test02953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02953");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        io.swagger.models.Swagger swagger14 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter15 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader16 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger14, logAdapter15);
        java.lang.reflect.Type type17 = null;
        springMvcApiReader16.addTypeToSkippedTypes(type17);
        java.util.Set<java.lang.reflect.Type> typeSet19 = springMvcApiReader16.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet20 = springMvcApiReader16.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet20);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = null;
        springMvcApiReader2.LOG = logAdapter22;
        java.util.Set<java.lang.reflect.Type> typeSet24 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet25 = springMvcApiReader2.getTypesToSkip();
        io.swagger.annotations.Api api26 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.lang.String> strSet27 = springMvcApiReader2.extractTags(api26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(typeSet19);
        org.junit.Assert.assertNotNull(typeSet20);
        org.junit.Assert.assertNotNull(typeSet24);
        org.junit.Assert.assertNotNull(typeSet25);
    }

    @Test
    public void test02954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02954");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.lang.annotation.Annotation[] annotationArray7 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList8 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList8, annotationArray7);
        boolean boolean10 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList8);
        io.swagger.models.Swagger swagger11 = null;
        springMvcApiReader2.swagger = swagger11;
        io.swagger.models.Swagger swagger13 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter14 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader15 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger13, logAdapter14);
        java.lang.reflect.Type[] typeArray16 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet17 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet17, typeArray16);
        springMvcApiReader15.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet17);
        java.lang.annotation.Annotation[] annotationArray20 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList21 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList21, annotationArray20);
        boolean boolean23 = springMvcApiReader15.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList21);
        io.swagger.models.Swagger swagger24 = null;
        springMvcApiReader15.swagger = swagger24;
        java.lang.annotation.Annotation[] annotationArray26 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList27 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList27, annotationArray26);
        boolean boolean29 = springMvcApiReader15.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList27);
        boolean boolean30 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList27);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger32 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger33 = null;
        springMvcApiReader2.swagger = swagger33;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger36 = springMvcApiReader2.swagger;
        java.util.Map<java.lang.String, java.lang.String> strMap38 = null;
        java.lang.String str39 = springMvcApiReader2.parseOperationPath("hi!", strMap38);
        com.github.kongchen.swagger.docgen.spring.SpringResource springResource40 = null;
        // The following exception was thrown during execution in test generation
        try {
            io.swagger.models.Swagger swagger41 = springMvcApiReader2.read(springResource40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(annotationArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(typeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(annotationArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(annotationArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(swagger32);
        org.junit.Assert.assertNull(swagger36);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "/hi!" + "'", str39, "/hi!");
    }

    @Test
    public void test02955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02955");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.lang.annotation.Annotation[] annotationArray7 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList8 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList8, annotationArray7);
        boolean boolean10 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList8);
        io.swagger.models.Swagger swagger11 = null;
        springMvcApiReader2.swagger = swagger11;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter13 = null;
        springMvcApiReader2.LOG = logAdapter13;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Operation operation16 = null;
        io.swagger.annotations.ApiOperation apiOperation17 = null;
        springMvcApiReader2.updateTagsForOperation(operation16, apiOperation17);
        io.swagger.models.Swagger swagger19 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter20 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader21 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger19, logAdapter20);
        java.lang.reflect.Type[] typeArray22 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet23 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet23, typeArray22);
        springMvcApiReader21.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet23);
        java.lang.annotation.Annotation[] annotationArray26 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList27 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList27, annotationArray26);
        boolean boolean29 = springMvcApiReader21.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList27);
        io.swagger.models.Swagger swagger30 = null;
        springMvcApiReader21.swagger = swagger30;
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.reflect.Type[] typeArray35 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet36 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet36, typeArray35);
        springMvcApiReader34.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet36);
        java.lang.annotation.Annotation[] annotationArray39 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList40 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList40, annotationArray39);
        boolean boolean42 = springMvcApiReader34.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList40);
        io.swagger.models.Swagger swagger43 = null;
        springMvcApiReader34.swagger = swagger43;
        java.lang.annotation.Annotation[] annotationArray45 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList46 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList46, annotationArray45);
        boolean boolean48 = springMvcApiReader34.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList46);
        boolean boolean49 = springMvcApiReader21.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList46);
        boolean boolean50 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList46);
        java.util.Set<java.lang.reflect.Type> typeSet51 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Operation operation52 = null;
        io.swagger.annotations.ApiResponses apiResponses53 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateApiResponse(operation52, apiResponses53);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(annotationArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(typeArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(annotationArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(typeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(annotationArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(annotationArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(typeSet51);
    }

    @Test
    public void test02956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02956");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.models.Swagger swagger11 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter12 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader13 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger11, logAdapter12);
        java.lang.Class<?> wildcardClass14 = springMvcApiReader13.getClass();
        java.lang.reflect.Type[] typeArray15 = new java.lang.reflect.Type[] { wildcardClass14 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet16 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet16, typeArray15);
        springMvcApiReader2.typesToSkip = typeSet16;
        io.swagger.models.Swagger swagger19 = null;
        springMvcApiReader2.swagger = swagger19;
        java.util.Set<java.lang.reflect.Type> typeSet21 = springMvcApiReader2.getTypesToSkip();
        java.util.Map<java.lang.String, java.lang.String> strMap23 = null;
        java.lang.String str24 = springMvcApiReader2.parseOperationPath("", strMap23);
        io.swagger.models.Swagger swagger25 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter26 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader27 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger25, logAdapter26);
        java.lang.reflect.Type[] typeArray28 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet29 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet29, typeArray28);
        springMvcApiReader27.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet29);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter32 = springMvcApiReader27.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap34 = null;
        java.lang.String str35 = springMvcApiReader27.parseOperationPath("", strMap34);
        java.lang.reflect.Type[] typeArray36 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList37 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList37, typeArray36);
        springMvcApiReader27.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList37);
        java.lang.String[] strArray40 = new java.lang.String[] {};
        java.lang.String[] strArray44 = new java.lang.String[] { "hi!", "", "hi!" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap45 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray46 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList47 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList47, securityRequirementArray46);
        io.swagger.models.Operation operation49 = null;
        springMvcApiReader27.updateOperation(strArray40, strArray44, strMap45, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList47, operation49);
        springMvcApiReader27.updateExtensionChain();
        java.lang.Class<?> wildcardClass52 = springMvcApiReader27.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        java.util.Set<java.lang.reflect.Type> typeSet54 = springMvcApiReader2.getTypesToSkip();
        com.github.kongchen.swagger.docgen.spring.SpringResource springResource55 = null;
        // The following exception was thrown during execution in test generation
        try {
            io.swagger.models.Swagger swagger56 = springMvcApiReader2.read(springResource55);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(typeArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(typeSet21);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(typeArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(logAdapter32);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(securityRequirementArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(typeSet54);
    }

    @Test
    public void test02957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02957");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        java.util.Set<java.lang.reflect.Type> typeSet5 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet6 = springMvcApiReader2.getTypesToSkip();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = null;
        java.lang.String str9 = springMvcApiReader2.parseOperationPath("", strMap8);
        io.swagger.models.Operation operation10 = null;
        io.swagger.annotations.ApiOperation apiOperation11 = null;
        springMvcApiReader2.updateTagsForOperation(operation10, apiOperation11);
        io.swagger.annotations.Api api14 = null;
        boolean boolean15 = springMvcApiReader2.canReadApi(false, api14);
        io.swagger.models.Swagger swagger16 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter17 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader18 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger16, logAdapter17);
        java.lang.reflect.Type[] typeArray19 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet20 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet20, typeArray19);
        springMvcApiReader18.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet20);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = springMvcApiReader18.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap25 = null;
        java.lang.String str26 = springMvcApiReader18.parseOperationPath("", strMap25);
        io.swagger.annotations.Api api28 = null;
        boolean boolean29 = springMvcApiReader18.canReadApi(false, api28);
        java.util.Map<java.lang.String, java.lang.String> strMap31 = null;
        java.lang.String str32 = springMvcApiReader18.parseOperationPath("hi!", strMap31);
        java.util.Map<java.lang.String, java.lang.String> strMap34 = null;
        java.lang.String str35 = springMvcApiReader18.parseOperationPath("hi!", strMap34);
        io.swagger.models.Operation operation36 = null;
        io.swagger.annotations.ApiOperation apiOperation37 = null;
        springMvcApiReader18.updateTagsForOperation(operation36, apiOperation37);
        java.lang.Class<?> wildcardClass39 = springMvcApiReader18.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass39);
        java.util.Set<java.lang.reflect.Type> typeSet41 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger42 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter43 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader44 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger42, logAdapter43);
        java.lang.reflect.Type[] typeArray45 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet46 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet46, typeArray45);
        springMvcApiReader44.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet46);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter49 = springMvcApiReader44.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap51 = null;
        java.lang.String str52 = springMvcApiReader44.parseOperationPath("", strMap51);
        java.lang.reflect.Type[] typeArray53 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList54 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList54, typeArray53);
        springMvcApiReader44.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList54);
        io.swagger.models.Swagger swagger57 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter58 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader59 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger57, logAdapter58);
        java.lang.reflect.Type[] typeArray60 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet61 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet61, typeArray60);
        springMvcApiReader59.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet61);
        java.lang.annotation.Annotation[] annotationArray64 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList65 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList65, annotationArray64);
        boolean boolean67 = springMvcApiReader59.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList65);
        boolean boolean68 = springMvcApiReader44.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList65);
        boolean boolean69 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList65);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter70 = springMvcApiReader2.LOG;
        java.util.List<io.swagger.models.parameters.Parameter> parameterList71 = null;
        java.util.Map<java.lang.String, java.lang.String> strMap72 = null;
        io.swagger.models.Operation operation73 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateOperationParameters(parameterList71, strMap72, operation73);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeSet5);
        org.junit.Assert.assertNotNull(typeSet6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(typeArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(logAdapter23);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "/hi!" + "'", str32, "/hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "/hi!" + "'", str35, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(typeSet41);
        org.junit.Assert.assertNotNull(typeArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(logAdapter49);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertNotNull(typeArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(typeArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(annotationArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNull(logAdapter70);
    }

    @Test
    public void test02958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02958");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        java.util.Set<java.lang.reflect.Type> typeSet5 = springMvcApiReader2.typesToSkip;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter6 = null;
        springMvcApiReader2.LOG = logAdapter6;
        io.swagger.models.Swagger swagger8 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader10 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger8, logAdapter9);
        java.lang.reflect.Type[] typeArray11 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet12 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet12, typeArray11);
        springMvcApiReader10.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet12);
        java.lang.annotation.Annotation[] annotationArray15 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList16 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList16, annotationArray15);
        boolean boolean18 = springMvcApiReader10.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList16);
        io.swagger.models.Swagger swagger19 = null;
        springMvcApiReader10.swagger = swagger19;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter21 = null;
        springMvcApiReader10.LOG = logAdapter21;
        springMvcApiReader10.updateExtensionChain();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter24 = springMvcApiReader10.LOG;
        io.swagger.models.Swagger swagger25 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter26 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader27 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger25, logAdapter26);
        java.lang.reflect.Type[] typeArray28 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet29 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet29, typeArray28);
        springMvcApiReader27.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet29);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.reflect.Type[] typeArray35 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet36 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet36, typeArray35);
        springMvcApiReader34.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet36);
        springMvcApiReader27.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet36);
        java.util.Map<java.lang.String, java.lang.String> strMap41 = null;
        java.lang.String str42 = springMvcApiReader27.parseOperationPath("/hi!", strMap41);
        io.swagger.models.Swagger swagger43 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter44 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader45 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger43, logAdapter44);
        java.lang.reflect.Type[] typeArray46 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet47 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet47, typeArray46);
        springMvcApiReader45.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet47);
        java.lang.annotation.Annotation[] annotationArray50 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList51 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList51, annotationArray50);
        boolean boolean53 = springMvcApiReader45.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList51);
        io.swagger.models.Swagger swagger54 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter55 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader56 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger54, logAdapter55);
        java.lang.Class<?> wildcardClass57 = springMvcApiReader56.getClass();
        springMvcApiReader45.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass57);
        springMvcApiReader27.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass57);
        io.swagger.models.Swagger swagger60 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter61 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader62 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger60, logAdapter61);
        java.lang.reflect.Type[] typeArray63 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet64 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet64, typeArray63);
        springMvcApiReader62.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet64);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter67 = springMvcApiReader62.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap69 = null;
        java.lang.String str70 = springMvcApiReader62.parseOperationPath("", strMap69);
        io.swagger.annotations.Api api72 = null;
        boolean boolean73 = springMvcApiReader62.canReadApi(false, api72);
        java.util.Map<java.lang.String, java.lang.String> strMap75 = null;
        java.lang.String str76 = springMvcApiReader62.parseOperationPath("hi!", strMap75);
        io.swagger.models.Swagger swagger77 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter78 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader79 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger77, logAdapter78);
        java.lang.Class<?> wildcardClass80 = springMvcApiReader79.getClass();
        springMvcApiReader62.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass80);
        java.util.Map<java.lang.String, java.lang.String> strMap83 = null;
        java.lang.String str84 = springMvcApiReader62.parseOperationPath("/hi!", strMap83);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray85 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap86 = springMvcApiReader62.parseResponseHeaders(responseHeaderArray85);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap87 = springMvcApiReader27.parseResponseHeaders(responseHeaderArray85);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap88 = springMvcApiReader10.parseResponseHeaders(responseHeaderArray85);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap89 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray85);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass90 = strMap89.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeSet5);
        org.junit.Assert.assertNotNull(typeArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(annotationArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(logAdapter24);
        org.junit.Assert.assertNotNull(typeArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(typeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "/hi!" + "'", str42, "/hi!");
        org.junit.Assert.assertNotNull(typeArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(annotationArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(typeArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNull(logAdapter67);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "" + "'", str70, "");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "/hi!" + "'", str76, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "/hi!" + "'", str84, "/hi!");
        org.junit.Assert.assertNotNull(responseHeaderArray85);
        org.junit.Assert.assertNull(strMap86);
        org.junit.Assert.assertNull(strMap87);
        org.junit.Assert.assertNull(strMap88);
        org.junit.Assert.assertNull(strMap89);
    }

    @Test
    public void test02959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02959");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.models.Swagger swagger11 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter12 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader13 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger11, logAdapter12);
        java.lang.Class<?> wildcardClass14 = springMvcApiReader13.getClass();
        java.lang.reflect.Type[] typeArray15 = new java.lang.reflect.Type[] { wildcardClass14 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet16 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet16, typeArray15);
        springMvcApiReader2.typesToSkip = typeSet16;
        io.swagger.annotations.Api api20 = null;
        boolean boolean21 = springMvcApiReader2.canReadApi(false, api20);
        io.swagger.models.Operation operation22 = null;
        io.swagger.annotations.ApiOperation apiOperation23 = null;
        springMvcApiReader2.updateTagsForOperation(operation22, apiOperation23);
        io.swagger.models.Swagger swagger25 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter26 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader27 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger25, logAdapter26);
        java.lang.reflect.Type[] typeArray28 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet29 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet29, typeArray28);
        springMvcApiReader27.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet29);
        io.swagger.models.Swagger swagger32 = springMvcApiReader27.swagger;
        io.swagger.models.Swagger swagger33 = springMvcApiReader27.swagger;
        io.swagger.models.Swagger swagger34 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter35 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader36 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger34, logAdapter35);
        java.lang.reflect.Type[] typeArray37 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet38 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet38, typeArray37);
        springMvcApiReader36.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet38);
        java.lang.annotation.Annotation[] annotationArray41 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList42 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList42, annotationArray41);
        boolean boolean44 = springMvcApiReader36.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList42);
        boolean boolean45 = springMvcApiReader27.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList42);
        java.lang.Class<?> wildcardClass46 = springMvcApiReader27.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass46);
        io.swagger.models.Operation operation50 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updatePath("", "hi!", operation50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(typeArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(typeArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(swagger32);
        org.junit.Assert.assertNull(swagger33);
        org.junit.Assert.assertNotNull(typeArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(annotationArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test02960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02960");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.lang.annotation.Annotation[] annotationArray7 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList8 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList8, annotationArray7);
        boolean boolean10 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList8);
        java.util.Set<java.lang.reflect.Type> typeSet11 = springMvcApiReader2.typesToSkip;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Operation operation13 = null;
        io.swagger.annotations.ApiOperation apiOperation14 = null;
        springMvcApiReader2.updateTagsForOperation(operation13, apiOperation14);
        io.swagger.annotations.Api api17 = null;
        boolean boolean18 = springMvcApiReader2.canReadApi(true, api17);
        io.swagger.models.Swagger swagger19 = springMvcApiReader2.swagger;
        io.swagger.models.Operation operation20 = null;
        io.swagger.annotations.ApiOperation apiOperation21 = null;
        springMvcApiReader2.updateTagsForOperation(operation20, apiOperation21);
        io.swagger.models.Swagger swagger23 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter24 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader25 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger23, logAdapter24);
        io.swagger.models.Swagger swagger26 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter27 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader28 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger26, logAdapter27);
        java.lang.reflect.Type[] typeArray29 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet30 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet30, typeArray29);
        springMvcApiReader28.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet30);
        java.lang.annotation.Annotation[] annotationArray33 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList34 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList34, annotationArray33);
        boolean boolean36 = springMvcApiReader28.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList34);
        boolean boolean37 = springMvcApiReader25.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList34);
        io.swagger.models.Swagger swagger38 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter39 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader40 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger38, logAdapter39);
        java.lang.reflect.Type[] typeArray41 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet42 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet42, typeArray41);
        springMvcApiReader40.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet42);
        java.lang.annotation.Annotation[] annotationArray45 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList46 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList46, annotationArray45);
        boolean boolean48 = springMvcApiReader40.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList46);
        boolean boolean49 = springMvcApiReader25.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList46);
        java.util.Set<java.lang.reflect.Type> typeSet50 = springMvcApiReader25.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet51 = springMvcApiReader25.getTypesToSkip();
        io.swagger.models.Swagger swagger52 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter53 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader54 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger52, logAdapter53);
        io.swagger.models.Swagger swagger55 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter56 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader57 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger55, logAdapter56);
        java.lang.reflect.Type[] typeArray58 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet59 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet59, typeArray58);
        springMvcApiReader57.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet59);
        java.lang.annotation.Annotation[] annotationArray62 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList63 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList63, annotationArray62);
        boolean boolean65 = springMvcApiReader57.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList63);
        boolean boolean66 = springMvcApiReader54.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList63);
        io.swagger.models.Swagger swagger67 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter68 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader69 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger67, logAdapter68);
        java.lang.reflect.Type[] typeArray70 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet71 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet71, typeArray70);
        springMvcApiReader69.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet71);
        java.lang.annotation.Annotation[] annotationArray74 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList75 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList75, annotationArray74);
        boolean boolean77 = springMvcApiReader69.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList75);
        boolean boolean78 = springMvcApiReader54.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList75);
        java.util.Set<java.lang.reflect.Type> typeSet79 = null;
        springMvcApiReader54.typesToSkip = typeSet79;
        io.swagger.models.Swagger swagger81 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter82 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader83 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger81, logAdapter82);
        java.lang.reflect.Type[] typeArray84 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet85 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet85, typeArray84);
        springMvcApiReader83.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet85);
        java.lang.annotation.Annotation[] annotationArray88 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList89 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList89, annotationArray88);
        boolean boolean91 = springMvcApiReader83.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList89);
        io.swagger.models.Swagger swagger92 = null;
        springMvcApiReader83.swagger = swagger92;
        io.swagger.annotations.ResponseHeader[] responseHeaderArray94 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap95 = springMvcApiReader83.parseResponseHeaders(responseHeaderArray94);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap96 = springMvcApiReader54.parseResponseHeaders(responseHeaderArray94);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap97 = springMvcApiReader25.parseResponseHeaders(responseHeaderArray94);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap98 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray94);
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(annotationArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(typeSet11);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(swagger19);
        org.junit.Assert.assertNotNull(typeArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(annotationArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(typeArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(annotationArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(typeSet50);
        org.junit.Assert.assertNotNull(typeSet51);
        org.junit.Assert.assertNotNull(typeArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(annotationArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(typeArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(annotationArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(typeArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(annotationArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(responseHeaderArray94);
        org.junit.Assert.assertNull(strMap95);
        org.junit.Assert.assertNull(strMap96);
        org.junit.Assert.assertNull(strMap97);
        org.junit.Assert.assertNull(strMap98);
    }

    @Test
    public void test02961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02961");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.lang.annotation.Annotation[] annotationArray7 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList8 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList8, annotationArray7);
        boolean boolean10 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList8);
        java.util.Set<java.lang.reflect.Type> typeSet11 = springMvcApiReader2.typesToSkip;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Operation operation13 = null;
        io.swagger.annotations.ApiOperation apiOperation14 = null;
        springMvcApiReader2.updateTagsForOperation(operation13, apiOperation14);
        io.swagger.models.Swagger swagger16 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter17 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader18 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger16, logAdapter17);
        java.lang.reflect.Type[] typeArray19 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet20 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet20, typeArray19);
        springMvcApiReader18.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet20);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = springMvcApiReader18.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap25 = null;
        java.lang.String str26 = springMvcApiReader18.parseOperationPath("", strMap25);
        io.swagger.models.Swagger swagger27 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter28 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader29 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger27, logAdapter28);
        java.lang.Class<?> wildcardClass30 = springMvcApiReader29.getClass();
        java.lang.reflect.Type[] typeArray31 = new java.lang.reflect.Type[] { wildcardClass30 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet32 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet32, typeArray31);
        springMvcApiReader18.typesToSkip = typeSet32;
        io.swagger.models.Swagger swagger35 = null;
        springMvcApiReader18.swagger = swagger35;
        java.util.Set<java.lang.reflect.Type> typeSet37 = springMvcApiReader18.getTypesToSkip();
        java.util.Map<java.lang.String, java.lang.String> strMap39 = null;
        java.lang.String str40 = springMvcApiReader18.parseOperationPath("", strMap39);
        io.swagger.models.Swagger swagger41 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter42 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader43 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger41, logAdapter42);
        java.lang.reflect.Type[] typeArray44 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet45 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet45, typeArray44);
        springMvcApiReader43.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet45);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter48 = springMvcApiReader43.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap50 = null;
        java.lang.String str51 = springMvcApiReader43.parseOperationPath("", strMap50);
        java.lang.reflect.Type[] typeArray52 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList53 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList53, typeArray52);
        springMvcApiReader43.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList53);
        java.lang.String[] strArray56 = new java.lang.String[] {};
        java.lang.String[] strArray60 = new java.lang.String[] { "hi!", "", "hi!" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap61 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray62 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList63 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList63, securityRequirementArray62);
        io.swagger.models.Operation operation65 = null;
        springMvcApiReader43.updateOperation(strArray56, strArray60, strMap61, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList63, operation65);
        springMvcApiReader43.updateExtensionChain();
        java.lang.Class<?> wildcardClass68 = springMvcApiReader43.getClass();
        springMvcApiReader18.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass68);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass68);
        java.lang.Class<?> wildcardClass71 = springMvcApiReader2.getClass();
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(annotationArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(typeSet11);
        org.junit.Assert.assertNotNull(typeArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(logAdapter23);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(typeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(typeSet37);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertNotNull(typeArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(logAdapter48);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNotNull(typeArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertNotNull(securityRequirementArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test02962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02962");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.models.Swagger swagger11 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter12 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader13 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger11, logAdapter12);
        java.lang.Class<?> wildcardClass14 = springMvcApiReader13.getClass();
        java.lang.reflect.Type[] typeArray15 = new java.lang.reflect.Type[] { wildcardClass14 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet16 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet16, typeArray15);
        springMvcApiReader2.typesToSkip = typeSet16;
        io.swagger.models.Swagger swagger19 = null;
        springMvcApiReader2.swagger = swagger19;
        io.swagger.models.Swagger swagger21 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader23 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger21, logAdapter22);
        io.swagger.models.Swagger swagger24 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter25 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader26 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger24, logAdapter25);
        java.lang.reflect.Type[] typeArray27 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet28 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet28, typeArray27);
        springMvcApiReader26.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet28);
        java.lang.annotation.Annotation[] annotationArray31 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList32 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList32, annotationArray31);
        boolean boolean34 = springMvcApiReader26.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList32);
        boolean boolean35 = springMvcApiReader23.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList32);
        io.swagger.models.Swagger swagger36 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter37 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader38 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger36, logAdapter37);
        java.lang.reflect.Type[] typeArray39 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet40 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet40, typeArray39);
        springMvcApiReader38.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet40);
        java.lang.annotation.Annotation[] annotationArray43 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList44 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList44, annotationArray43);
        boolean boolean46 = springMvcApiReader38.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList44);
        boolean boolean47 = springMvcApiReader23.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList44);
        boolean boolean48 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList44);
        io.swagger.models.Swagger swagger49 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter50 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader51 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger49, logAdapter50);
        java.lang.reflect.Type[] typeArray52 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet53 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet53, typeArray52);
        springMvcApiReader51.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet53);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter56 = springMvcApiReader51.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap58 = null;
        java.lang.String str59 = springMvcApiReader51.parseOperationPath("", strMap58);
        java.lang.reflect.Type[] typeArray60 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList61 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList61, typeArray60);
        springMvcApiReader51.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList61);
        java.lang.String[] strArray64 = new java.lang.String[] {};
        java.lang.String[] strArray68 = new java.lang.String[] { "hi!", "", "hi!" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap69 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray70 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList71 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList71, securityRequirementArray70);
        io.swagger.models.Operation operation73 = null;
        springMvcApiReader51.updateOperation(strArray64, strArray68, strMap69, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList71, operation73);
        springMvcApiReader51.updateExtensionChain();
        io.swagger.models.Swagger swagger76 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter77 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader78 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger76, logAdapter77);
        java.lang.reflect.Type[] typeArray79 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet80 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet80, typeArray79);
        springMvcApiReader78.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet80);
        java.util.Set<java.lang.reflect.Type> typeSet83 = springMvcApiReader78.typesToSkip;
        springMvcApiReader78.updateExtensionChain();
        io.swagger.models.Swagger swagger85 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter86 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader87 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger85, logAdapter86);
        java.lang.Class<?> wildcardClass88 = springMvcApiReader87.getClass();
        springMvcApiReader78.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass88);
        io.swagger.models.Swagger swagger90 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter91 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader92 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger90, logAdapter91);
        java.lang.Class<?> wildcardClass93 = springMvcApiReader92.getClass();
        java.lang.annotation.Annotation[] annotationArray94 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList95 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean96 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList95, annotationArray94);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList97 = springMvcApiReader78.getParameters((java.lang.reflect.Type) wildcardClass93, (java.util.List<java.lang.annotation.Annotation>) annotationList95);
        boolean boolean98 = springMvcApiReader51.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList95);
        boolean boolean99 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList95);
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(typeArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(typeArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(annotationArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(typeArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(annotationArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(typeArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(logAdapter56);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "" + "'", str59, "");
        org.junit.Assert.assertNotNull(typeArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertNotNull(securityRequirementArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(typeArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(typeSet83);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertNotNull(wildcardClass93);
        org.junit.Assert.assertNotNull(annotationArray94);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertNotNull(parameterList97);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + false + "'", boolean99 == false);
    }

    @Test
    public void test02963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02963");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type[] typeArray18 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet19 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet19, typeArray18);
        springMvcApiReader17.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet19);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = springMvcApiReader17.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap24 = null;
        java.lang.String str25 = springMvcApiReader17.parseOperationPath("", strMap24);
        io.swagger.annotations.Api api27 = null;
        boolean boolean28 = springMvcApiReader17.canReadApi(false, api27);
        java.util.Map<java.lang.String, java.lang.String> strMap30 = null;
        java.lang.String str31 = springMvcApiReader17.parseOperationPath("hi!", strMap30);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.Class<?> wildcardClass35 = springMvcApiReader34.getClass();
        springMvcApiReader17.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter38 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger39 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter40 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader41 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger39, logAdapter40);
        java.lang.reflect.Type[] typeArray42 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet43 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet43, typeArray42);
        springMvcApiReader41.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet43);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter46 = springMvcApiReader41.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap48 = null;
        java.lang.String str49 = springMvcApiReader41.parseOperationPath("", strMap48);
        java.lang.reflect.Type[] typeArray50 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList51 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList51, typeArray50);
        springMvcApiReader41.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList51);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList51);
        io.swagger.models.Swagger swagger55 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter56 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader57 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger55, logAdapter56);
        java.lang.reflect.Type[] typeArray58 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet59 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet59, typeArray58);
        springMvcApiReader57.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet59);
        java.util.Set<java.lang.reflect.Type> typeSet62 = springMvcApiReader57.typesToSkip;
        springMvcApiReader57.updateExtensionChain();
        io.swagger.models.Swagger swagger64 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter65 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader66 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger64, logAdapter65);
        java.lang.Class<?> wildcardClass67 = springMvcApiReader66.getClass();
        springMvcApiReader57.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass67);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass67);
        java.util.Map<java.lang.String, java.lang.String> strMap71 = null;
        java.lang.String str72 = springMvcApiReader2.parseOperationPath("", strMap71);
        java.util.Set<java.lang.reflect.Type> typeSet73 = springMvcApiReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet74 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Operation operation75 = null;
        io.swagger.annotations.ApiOperation apiOperation76 = null;
        springMvcApiReader2.updateTagsForOperation(operation75, apiOperation76);
        io.swagger.models.Operation operation78 = null;
        io.swagger.annotations.ApiOperation apiOperation79 = null;
        springMvcApiReader2.updateTagsForOperation(operation78, apiOperation79);
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(logAdapter22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "/hi!" + "'", str31, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNull(logAdapter38);
        org.junit.Assert.assertNotNull(typeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNull(logAdapter46);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertNotNull(typeArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(typeArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(typeSet62);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "" + "'", str72, "");
        org.junit.Assert.assertNotNull(typeSet73);
        org.junit.Assert.assertNotNull(typeSet74);
    }

    @Test
    public void test02964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02964");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        java.util.Set<java.lang.reflect.Type> typeSet5 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger6 = springMvcApiReader2.swagger;
        springMvcApiReader2.updateExtensionChain();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = springMvcApiReader2.LOG;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Operation operation10 = null;
        io.swagger.annotations.ApiOperation apiOperation11 = null;
        springMvcApiReader2.updateTagsForOperation(operation10, apiOperation11);
        java.util.Set<java.lang.reflect.Type> typeSet13 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger14 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter15 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader16 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger14, logAdapter15);
        java.lang.reflect.Type[] typeArray17 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet18 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet18, typeArray17);
        springMvcApiReader16.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet18);
        io.swagger.models.Swagger swagger21 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader23 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger21, logAdapter22);
        java.lang.reflect.Type[] typeArray24 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet25 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet25, typeArray24);
        springMvcApiReader23.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet25);
        springMvcApiReader16.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet25);
        io.swagger.models.Swagger swagger29 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter30 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader31 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger29, logAdapter30);
        java.lang.reflect.Type[] typeArray32 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet33 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet33, typeArray32);
        springMvcApiReader31.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet33);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter36 = springMvcApiReader31.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap38 = null;
        java.lang.String str39 = springMvcApiReader31.parseOperationPath("", strMap38);
        io.swagger.annotations.Api api41 = null;
        boolean boolean42 = springMvcApiReader31.canReadApi(false, api41);
        java.util.Map<java.lang.String, java.lang.String> strMap44 = null;
        java.lang.String str45 = springMvcApiReader31.parseOperationPath("hi!", strMap44);
        io.swagger.models.Swagger swagger46 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter47 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader48 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger46, logAdapter47);
        java.lang.Class<?> wildcardClass49 = springMvcApiReader48.getClass();
        springMvcApiReader31.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass49);
        springMvcApiReader16.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass49);
        java.util.Map<java.lang.String, java.lang.String> strMap53 = null;
        java.lang.String str54 = springMvcApiReader16.parseOperationPath("hi!", strMap53);
        java.util.Set<java.lang.reflect.Type> typeSet55 = springMvcApiReader16.getTypesToSkip();
        io.swagger.models.Swagger swagger56 = springMvcApiReader16.swagger;
        springMvcApiReader16.updateExtensionChain();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter58 = null;
        springMvcApiReader16.LOG = logAdapter58;
        java.util.Set<java.lang.reflect.Type> typeSet60 = springMvcApiReader16.getTypesToSkip();
        springMvcApiReader2.setTypesToSkip(typeSet60);
        io.swagger.models.Operation operation64 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updatePath("/hi!", "/hi!", operation64);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeSet5);
        org.junit.Assert.assertNull(swagger6);
        org.junit.Assert.assertNull(logAdapter8);
        org.junit.Assert.assertNotNull(typeSet13);
        org.junit.Assert.assertNotNull(typeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(typeArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(typeArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(logAdapter36);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "/hi!" + "'", str45, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "/hi!" + "'", str54, "/hi!");
        org.junit.Assert.assertNotNull(typeSet55);
        org.junit.Assert.assertNull(swagger56);
        org.junit.Assert.assertNotNull(typeSet60);
    }

    @Test
    public void test02965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02965");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type type18 = null;
        springMvcApiReader17.addTypeToSkippedTypes(type18);
        java.util.Set<java.lang.reflect.Type> typeSet20 = springMvcApiReader17.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet20);
        java.util.Set<java.lang.reflect.Type> typeSet22 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger23 = null;
        springMvcApiReader2.swagger = swagger23;
        io.swagger.models.Swagger swagger25 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter26 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader27 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger25, logAdapter26);
        java.lang.reflect.Type[] typeArray28 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet29 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet29, typeArray28);
        springMvcApiReader27.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet29);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter32 = springMvcApiReader27.LOG;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        springMvcApiReader27.LOG = logAdapter33;
        io.swagger.models.Swagger swagger35 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter36 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader37 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger35, logAdapter36);
        java.lang.reflect.Type type38 = null;
        springMvcApiReader37.addTypeToSkippedTypes(type38);
        java.util.Set<java.lang.reflect.Type> typeSet40 = springMvcApiReader37.typesToSkip;
        io.swagger.models.Swagger swagger41 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter42 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader43 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger41, logAdapter42);
        java.lang.reflect.Type[] typeArray44 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet45 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet45, typeArray44);
        springMvcApiReader43.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet45);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter48 = springMvcApiReader43.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap50 = null;
        java.lang.String str51 = springMvcApiReader43.parseOperationPath("", strMap50);
        io.swagger.annotations.Api api53 = null;
        boolean boolean54 = springMvcApiReader43.canReadApi(false, api53);
        java.util.Map<java.lang.String, java.lang.String> strMap56 = null;
        java.lang.String str57 = springMvcApiReader43.parseOperationPath("hi!", strMap56);
        io.swagger.models.Swagger swagger58 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter59 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader60 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger58, logAdapter59);
        java.lang.Class<?> wildcardClass61 = springMvcApiReader60.getClass();
        springMvcApiReader43.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass61);
        java.util.Map<java.lang.String, java.lang.String> strMap64 = null;
        java.lang.String str65 = springMvcApiReader43.parseOperationPath("/hi!", strMap64);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray66 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap67 = springMvcApiReader43.parseResponseHeaders(responseHeaderArray66);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap68 = springMvcApiReader37.parseResponseHeaders(responseHeaderArray66);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap69 = springMvcApiReader27.parseResponseHeaders(responseHeaderArray66);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap70 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray66);
        io.swagger.models.Swagger swagger71 = springMvcApiReader2.swagger;
        java.util.Set<java.lang.reflect.Type> typeSet72 = springMvcApiReader2.typesToSkip;
        io.swagger.annotations.Api api73 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<io.swagger.models.SecurityRequirement> securityRequirementList74 = springMvcApiReader2.getSecurityRequirements(api73);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeSet20);
        org.junit.Assert.assertNotNull(typeSet22);
        org.junit.Assert.assertNotNull(typeArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(logAdapter32);
        org.junit.Assert.assertNotNull(typeSet40);
        org.junit.Assert.assertNotNull(typeArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(logAdapter48);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "/hi!" + "'", str57, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "/hi!" + "'", str65, "/hi!");
        org.junit.Assert.assertNotNull(responseHeaderArray66);
        org.junit.Assert.assertNull(strMap67);
        org.junit.Assert.assertNull(strMap68);
        org.junit.Assert.assertNull(strMap69);
        org.junit.Assert.assertNull(strMap70);
        org.junit.Assert.assertNull(swagger71);
        org.junit.Assert.assertNotNull(typeSet72);
    }

    @Test
    public void test02966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02966");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        io.swagger.models.Swagger swagger5 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter6 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader7 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger5, logAdapter6);
        java.lang.reflect.Type[] typeArray8 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet9 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet9, typeArray8);
        springMvcApiReader7.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet9);
        io.swagger.models.Swagger swagger12 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter13 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader14 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger12, logAdapter13);
        java.lang.reflect.Type[] typeArray15 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet16 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet16, typeArray15);
        springMvcApiReader14.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet16);
        springMvcApiReader7.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet16);
        io.swagger.models.Swagger swagger20 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter21 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader22 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger20, logAdapter21);
        java.lang.reflect.Type[] typeArray23 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet24 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet24, typeArray23);
        springMvcApiReader22.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet24);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter27 = springMvcApiReader22.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap29 = null;
        java.lang.String str30 = springMvcApiReader22.parseOperationPath("", strMap29);
        io.swagger.annotations.Api api32 = null;
        boolean boolean33 = springMvcApiReader22.canReadApi(false, api32);
        java.util.Map<java.lang.String, java.lang.String> strMap35 = null;
        java.lang.String str36 = springMvcApiReader22.parseOperationPath("hi!", strMap35);
        io.swagger.models.Swagger swagger37 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter38 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader39 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger37, logAdapter38);
        java.lang.Class<?> wildcardClass40 = springMvcApiReader39.getClass();
        springMvcApiReader22.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass40);
        springMvcApiReader7.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass40);
        java.util.Set<java.lang.reflect.Type> typeSet43 = springMvcApiReader7.getTypesToSkip();
        springMvcApiReader2.typesToSkip = typeSet43;
        java.util.Set<java.lang.reflect.Type> typeSet45 = springMvcApiReader2.getTypesToSkip();
        io.swagger.annotations.Api api47 = null;
        boolean boolean48 = springMvcApiReader2.canReadApi(false, api47);
        io.swagger.models.Swagger swagger49 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger50 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter51 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader52 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger50, logAdapter51);
        io.swagger.models.Swagger swagger53 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter54 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader55 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger53, logAdapter54);
        java.lang.reflect.Type[] typeArray56 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet57 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet57, typeArray56);
        springMvcApiReader55.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet57);
        java.lang.annotation.Annotation[] annotationArray60 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList61 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList61, annotationArray60);
        boolean boolean63 = springMvcApiReader55.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList61);
        boolean boolean64 = springMvcApiReader52.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList61);
        io.swagger.models.Swagger swagger65 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter66 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader67 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger65, logAdapter66);
        java.lang.reflect.Type[] typeArray68 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet69 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet69, typeArray68);
        springMvcApiReader67.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet69);
        java.lang.annotation.Annotation[] annotationArray72 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList73 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList73, annotationArray72);
        boolean boolean75 = springMvcApiReader67.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList73);
        boolean boolean76 = springMvcApiReader52.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList73);
        boolean boolean77 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList73);
        java.lang.reflect.Type type78 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type78);
        java.util.Set<java.lang.reflect.Type> typeSet80 = springMvcApiReader2.typesToSkip;
        org.junit.Assert.assertNotNull(typeArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(typeArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(typeArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(logAdapter27);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "/hi!" + "'", str36, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(typeSet43);
        org.junit.Assert.assertNotNull(typeSet45);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(swagger49);
        org.junit.Assert.assertNotNull(typeArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(annotationArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(typeArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(annotationArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(typeSet80);
    }

    @Test
    public void test02967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02967");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader2.parseOperationPath("hi!", strMap15);
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.Class<?> wildcardClass20 = springMvcApiReader19.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass20);
        java.util.Map<java.lang.String, java.lang.String> strMap23 = null;
        java.lang.String str24 = springMvcApiReader2.parseOperationPath("/hi!", strMap23);
        io.swagger.models.Swagger swagger25 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter26 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader27 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger25, logAdapter26);
        java.lang.reflect.Type[] typeArray28 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet29 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet29, typeArray28);
        springMvcApiReader27.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet29);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet29);
        io.swagger.models.Operation operation33 = null;
        io.swagger.annotations.ApiOperation apiOperation34 = null;
        springMvcApiReader2.updateTagsForOperation(operation33, apiOperation34);
        io.swagger.models.Swagger swagger36 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger37 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter38 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader39 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger37, logAdapter38);
        java.lang.reflect.Type[] typeArray40 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet41 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet41, typeArray40);
        springMvcApiReader39.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet41);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter44 = springMvcApiReader39.LOG;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter45 = null;
        springMvcApiReader39.LOG = logAdapter45;
        io.swagger.models.Swagger swagger47 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter48 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader49 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger47, logAdapter48);
        java.lang.reflect.Type type50 = null;
        springMvcApiReader49.addTypeToSkippedTypes(type50);
        java.util.Set<java.lang.reflect.Type> typeSet52 = springMvcApiReader49.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet53 = springMvcApiReader49.getTypesToSkip();
        java.util.Map<java.lang.String, java.lang.String> strMap55 = null;
        java.lang.String str56 = springMvcApiReader49.parseOperationPath("", strMap55);
        io.swagger.models.Swagger swagger57 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter58 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader59 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger57, logAdapter58);
        java.lang.reflect.Type[] typeArray60 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet61 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet61, typeArray60);
        springMvcApiReader59.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet61);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter64 = springMvcApiReader59.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap66 = null;
        java.lang.String str67 = springMvcApiReader59.parseOperationPath("", strMap66);
        io.swagger.annotations.Api api69 = null;
        boolean boolean70 = springMvcApiReader59.canReadApi(false, api69);
        java.util.Map<java.lang.String, java.lang.String> strMap72 = null;
        java.lang.String str73 = springMvcApiReader59.parseOperationPath("hi!", strMap72);
        io.swagger.models.Swagger swagger74 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter75 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader76 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger74, logAdapter75);
        java.lang.Class<?> wildcardClass77 = springMvcApiReader76.getClass();
        springMvcApiReader59.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass77);
        io.swagger.models.Swagger swagger79 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter80 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader81 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger79, logAdapter80);
        java.lang.reflect.Type[] typeArray82 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet83 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet83, typeArray82);
        springMvcApiReader81.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet83);
        java.lang.annotation.Annotation[] annotationArray86 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList87 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList87, annotationArray86);
        boolean boolean89 = springMvcApiReader81.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList87);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList90 = springMvcApiReader49.getParameters((java.lang.reflect.Type) wildcardClass77, (java.util.List<java.lang.annotation.Annotation>) annotationList87);
        springMvcApiReader39.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass77);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass77);
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/hi!" + "'", str16, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "/hi!" + "'", str24, "/hi!");
        org.junit.Assert.assertNotNull(typeArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(swagger36);
        org.junit.Assert.assertNotNull(typeArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(logAdapter44);
        org.junit.Assert.assertNotNull(typeSet52);
        org.junit.Assert.assertNotNull(typeSet53);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertNotNull(typeArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNull(logAdapter64);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "" + "'", str67, "");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "/hi!" + "'", str73, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(typeArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(annotationArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(parameterList90);
    }

    @Test
    public void test02968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02968");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.models.Swagger swagger3 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter4 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader5 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger3, logAdapter4);
        java.lang.reflect.Type[] typeArray6 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet7 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet7, typeArray6);
        springMvcApiReader5.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet7);
        java.lang.annotation.Annotation[] annotationArray10 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList11 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList11, annotationArray10);
        boolean boolean13 = springMvcApiReader5.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList11);
        boolean boolean14 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList11);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type[] typeArray18 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet19 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet19, typeArray18);
        springMvcApiReader17.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet19);
        java.lang.annotation.Annotation[] annotationArray22 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList23 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList23, annotationArray22);
        boolean boolean25 = springMvcApiReader17.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList23);
        boolean boolean26 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList23);
        java.util.Set<java.lang.reflect.Type> typeSet27 = springMvcApiReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet28 = springMvcApiReader2.getTypesToSkip();
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger30 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter31 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader32 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger30, logAdapter31);
        java.lang.reflect.Type type33 = null;
        springMvcApiReader32.addTypeToSkippedTypes(type33);
        io.swagger.models.Swagger swagger35 = springMvcApiReader32.swagger;
        io.swagger.models.Swagger swagger36 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter37 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader38 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger36, logAdapter37);
        java.lang.reflect.Type type39 = null;
        springMvcApiReader38.addTypeToSkippedTypes(type39);
        java.util.Set<java.lang.reflect.Type> typeSet41 = springMvcApiReader38.typesToSkip;
        springMvcApiReader32.setTypesToSkip(typeSet41);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter43 = springMvcApiReader32.LOG;
        io.swagger.models.Swagger swagger44 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter45 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader46 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger44, logAdapter45);
        java.lang.reflect.Type[] typeArray47 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet48 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet48, typeArray47);
        springMvcApiReader46.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet48);
        io.swagger.models.Swagger swagger51 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter52 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader53 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger51, logAdapter52);
        java.lang.reflect.Type[] typeArray54 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet55 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet55, typeArray54);
        springMvcApiReader53.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet55);
        springMvcApiReader46.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet55);
        io.swagger.models.Swagger swagger59 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter60 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader61 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger59, logAdapter60);
        java.lang.reflect.Type type62 = null;
        springMvcApiReader61.addTypeToSkippedTypes(type62);
        java.util.Set<java.lang.reflect.Type> typeSet64 = springMvcApiReader61.typesToSkip;
        springMvcApiReader46.setTypesToSkip(typeSet64);
        java.util.Set<java.lang.reflect.Type> typeSet66 = springMvcApiReader46.typesToSkip;
        io.swagger.models.Swagger swagger67 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter68 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader69 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger67, logAdapter68);
        java.lang.reflect.Type[] typeArray70 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet71 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet71, typeArray70);
        springMvcApiReader69.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet71);
        java.util.Set<java.lang.reflect.Type> typeSet74 = springMvcApiReader69.typesToSkip;
        io.swagger.models.Swagger swagger75 = springMvcApiReader69.swagger;
        io.swagger.models.Swagger swagger76 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter77 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader78 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger76, logAdapter77);
        java.lang.reflect.Type[] typeArray79 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet80 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet80, typeArray79);
        springMvcApiReader78.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet80);
        java.lang.annotation.Annotation[] annotationArray83 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList84 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList84, annotationArray83);
        boolean boolean86 = springMvcApiReader78.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList84);
        io.swagger.models.Swagger swagger87 = null;
        springMvcApiReader78.swagger = swagger87;
        java.lang.annotation.Annotation[] annotationArray89 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList90 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean91 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList90, annotationArray89);
        boolean boolean92 = springMvcApiReader78.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList90);
        boolean boolean93 = springMvcApiReader69.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList90);
        boolean boolean94 = springMvcApiReader46.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList90);
        boolean boolean95 = springMvcApiReader32.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList90);
        boolean boolean96 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList90);
        io.swagger.annotations.Api api97 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.lang.String> strSet98 = springMvcApiReader2.extractTags(api97);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(annotationArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(typeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(annotationArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(typeSet27);
        org.junit.Assert.assertNotNull(typeSet28);
        org.junit.Assert.assertNull(swagger35);
        org.junit.Assert.assertNotNull(typeSet41);
        org.junit.Assert.assertNull(logAdapter43);
        org.junit.Assert.assertNotNull(typeArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(typeArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(typeSet64);
        org.junit.Assert.assertNotNull(typeSet66);
        org.junit.Assert.assertNotNull(typeArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(typeSet74);
        org.junit.Assert.assertNull(swagger75);
        org.junit.Assert.assertNotNull(typeArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(annotationArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(annotationArray89);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
    }

    @Test
    public void test02969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02969");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader2.parseOperationPath("hi!", strMap15);
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.Class<?> wildcardClass20 = springMvcApiReader19.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass20);
        io.swagger.models.Swagger swagger22 = null;
        springMvcApiReader2.swagger = swagger22;
        io.swagger.models.Swagger swagger24 = springMvcApiReader2.swagger;
        java.util.Set<java.lang.reflect.Type> typeSet25 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger26 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter27 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader28 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger26, logAdapter27);
        java.lang.reflect.Type[] typeArray29 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet30 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet30, typeArray29);
        springMvcApiReader28.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet30);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = springMvcApiReader28.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap35 = null;
        java.lang.String str36 = springMvcApiReader28.parseOperationPath("", strMap35);
        io.swagger.models.Swagger swagger37 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter38 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader39 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger37, logAdapter38);
        java.lang.Class<?> wildcardClass40 = springMvcApiReader39.getClass();
        java.lang.reflect.Type[] typeArray41 = new java.lang.reflect.Type[] { wildcardClass40 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet42 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet42, typeArray41);
        springMvcApiReader28.typesToSkip = typeSet42;
        io.swagger.models.Swagger swagger45 = springMvcApiReader28.swagger;
        java.lang.Class<?> wildcardClass46 = springMvcApiReader28.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass46);
        io.swagger.models.Swagger swagger48 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter49 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader50 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger48, logAdapter49);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter51 = springMvcApiReader50.LOG;
        java.util.Set<java.lang.reflect.Type> typeSet52 = springMvcApiReader50.typesToSkip;
        springMvcApiReader2.typesToSkip = typeSet52;
        java.util.Map<java.lang.String, java.lang.String> strMap55 = null;
        java.lang.String str56 = springMvcApiReader2.parseOperationPath("/hi!", strMap55);
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap57 = null;
        io.swagger.annotations.Api api58 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, io.swagger.models.Tag> strMap59 = springMvcApiReader2.updateTagsForApi(strMap57, api58);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/hi!" + "'", str16, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNull(swagger24);
        org.junit.Assert.assertNotNull(typeSet25);
        org.junit.Assert.assertNotNull(typeArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(logAdapter33);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(typeArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(swagger45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNull(logAdapter51);
        org.junit.Assert.assertNotNull(typeSet52);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "/hi!" + "'", str56, "/hi!");
    }

    @Test
    public void test02970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02970");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader2.parseOperationPath("hi!", strMap15);
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.Class<?> wildcardClass20 = springMvcApiReader19.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass20);
        java.util.Map<java.lang.String, java.lang.String> strMap23 = null;
        java.lang.String str24 = springMvcApiReader2.parseOperationPath("/hi!", strMap23);
        io.swagger.models.Swagger swagger25 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter26 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader27 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger25, logAdapter26);
        java.lang.reflect.Type[] typeArray28 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet29 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet29, typeArray28);
        springMvcApiReader27.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet29);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet29);
        io.swagger.models.Operation operation33 = null;
        io.swagger.annotations.ApiOperation apiOperation34 = null;
        springMvcApiReader2.updateTagsForOperation(operation33, apiOperation34);
        io.swagger.models.Swagger swagger36 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter37 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader38 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger36, logAdapter37);
        java.lang.reflect.Type[] typeArray39 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet40 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet40, typeArray39);
        springMvcApiReader38.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet40);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter43 = springMvcApiReader38.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap45 = null;
        java.lang.String str46 = springMvcApiReader38.parseOperationPath("", strMap45);
        io.swagger.models.Swagger swagger47 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter48 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader49 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger47, logAdapter48);
        java.lang.Class<?> wildcardClass50 = springMvcApiReader49.getClass();
        java.lang.reflect.Type[] typeArray51 = new java.lang.reflect.Type[] { wildcardClass50 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet52 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet52, typeArray51);
        springMvcApiReader38.typesToSkip = typeSet52;
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet52);
        io.swagger.models.Swagger swagger56 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter57 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader58 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger56, logAdapter57);
        java.lang.reflect.Type[] typeArray59 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet60 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet60, typeArray59);
        springMvcApiReader58.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet60);
        java.util.Set<java.lang.reflect.Type> typeSet63 = springMvcApiReader58.typesToSkip;
        springMvcApiReader58.updateExtensionChain();
        io.swagger.models.Swagger swagger65 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter66 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader67 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger65, logAdapter66);
        java.lang.Class<?> wildcardClass68 = springMvcApiReader67.getClass();
        springMvcApiReader58.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass68);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass68);
        springMvcApiReader2.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet72 = springMvcApiReader2.getTypesToSkip();
        java.util.Map<java.lang.String, java.lang.String> strMap74 = null;
        java.lang.String str75 = springMvcApiReader2.parseOperationPath("hi!", strMap74);
        io.swagger.models.Operation operation78 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updatePath("/hi!", "/hi!", operation78);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/hi!" + "'", str16, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "/hi!" + "'", str24, "/hi!");
        org.junit.Assert.assertNotNull(typeArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(typeArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(logAdapter43);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(typeArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(typeArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(typeSet63);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(typeSet72);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "/hi!" + "'", str75, "/hi!");
    }

    @Test
    public void test02971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02971");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        java.lang.reflect.Type[] typeArray11 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList12 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList12, typeArray11);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList12);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!", "", "hi!" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap20 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray21 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList22 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList22, securityRequirementArray21);
        io.swagger.models.Operation operation24 = null;
        springMvcApiReader2.updateOperation(strArray15, strArray19, strMap20, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList22, operation24);
        java.util.Map<java.lang.String, java.lang.String> strMap27 = null;
        java.lang.String str28 = springMvcApiReader2.parseOperationPath("", strMap27);
        io.swagger.models.Operation operation29 = null;
        io.swagger.annotations.ApiOperation apiOperation30 = null;
        springMvcApiReader2.updateTagsForOperation(operation29, apiOperation30);
        io.swagger.models.Swagger swagger32 = springMvcApiReader2.swagger;
        java.util.Map<java.lang.String, java.lang.String> strMap34 = null;
        java.lang.String str35 = springMvcApiReader2.parseOperationPath("", strMap34);
        java.util.Map<java.lang.String, java.lang.String> strMap37 = null;
        java.lang.String str38 = springMvcApiReader2.parseOperationPath("", strMap37);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter39 = springMvcApiReader2.LOG;
        io.swagger.models.Operation operation42 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updatePath("", "hi!", operation42);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(typeArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(securityRequirementArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNull(swagger32);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertNull(logAdapter39);
    }

    @Test
    public void test02972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02972");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        java.util.Set<java.lang.reflect.Type> typeSet5 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet6 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger14 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter15 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader16 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger14, logAdapter15);
        java.lang.reflect.Type[] typeArray17 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet18 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet18, typeArray17);
        springMvcApiReader16.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet18);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet18);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet18);
        springMvcApiReader2.updateExtensionChain();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter24 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger25 = springMvcApiReader2.swagger;
        io.swagger.annotations.Api api27 = null;
        boolean boolean28 = springMvcApiReader2.canReadApi(true, api27);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.annotations.ApiOperation apiOperation30 = null;
        io.swagger.models.Operation operation31 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateOperationProtocols(apiOperation30, operation31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeSet5);
        org.junit.Assert.assertNotNull(typeSet6);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(logAdapter24);
        org.junit.Assert.assertNull(swagger25);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test02973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02973");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.lang.annotation.Annotation[] annotationArray7 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList8 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList8, annotationArray7);
        boolean boolean10 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList8);
        java.util.Set<java.lang.reflect.Type> typeSet11 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger12 = null;
        springMvcApiReader2.swagger = swagger12;
        io.swagger.models.Swagger swagger14 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter15 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader16 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger14, logAdapter15);
        java.lang.reflect.Type[] typeArray17 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet18 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet18, typeArray17);
        springMvcApiReader16.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet18);
        io.swagger.models.Swagger swagger21 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader23 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger21, logAdapter22);
        java.lang.reflect.Type[] typeArray24 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet25 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet25, typeArray24);
        springMvcApiReader23.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet25);
        springMvcApiReader16.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet25);
        io.swagger.models.Swagger swagger29 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter30 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader31 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger29, logAdapter30);
        java.lang.reflect.Type[] typeArray32 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet33 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet33, typeArray32);
        springMvcApiReader31.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet33);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter36 = springMvcApiReader31.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap38 = null;
        java.lang.String str39 = springMvcApiReader31.parseOperationPath("", strMap38);
        io.swagger.annotations.Api api41 = null;
        boolean boolean42 = springMvcApiReader31.canReadApi(false, api41);
        java.util.Map<java.lang.String, java.lang.String> strMap44 = null;
        java.lang.String str45 = springMvcApiReader31.parseOperationPath("hi!", strMap44);
        io.swagger.models.Swagger swagger46 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter47 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader48 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger46, logAdapter47);
        java.lang.Class<?> wildcardClass49 = springMvcApiReader48.getClass();
        springMvcApiReader31.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass49);
        springMvcApiReader16.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass49);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter52 = springMvcApiReader16.LOG;
        springMvcApiReader16.updateExtensionChain();
        io.swagger.models.Swagger swagger54 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter55 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader56 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger54, logAdapter55);
        java.lang.reflect.Type[] typeArray57 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet58 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet58, typeArray57);
        springMvcApiReader56.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet58);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter61 = springMvcApiReader56.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap63 = null;
        java.lang.String str64 = springMvcApiReader56.parseOperationPath("", strMap63);
        java.lang.reflect.Type[] typeArray65 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList66 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList66, typeArray65);
        springMvcApiReader56.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList66);
        springMvcApiReader16.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList66);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList66);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter71 = null;
        springMvcApiReader2.LOG = logAdapter71;
        springMvcApiReader2.updateExtensionChain();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter74 = null;
        springMvcApiReader2.LOG = logAdapter74;
        java.lang.reflect.Method method76 = null;
        io.swagger.models.Operation operation77 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.readImplicitParameters(method76, operation77);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(annotationArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(typeSet11);
        org.junit.Assert.assertNotNull(typeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(typeArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(typeArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(logAdapter36);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "/hi!" + "'", str45, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNull(logAdapter52);
        org.junit.Assert.assertNotNull(typeArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(logAdapter61);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "" + "'", str64, "");
        org.junit.Assert.assertNotNull(typeArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
    }

    @Test
    public void test02974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02974");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.util.Set<java.lang.reflect.Type> typeSet7 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger8 = springMvcApiReader2.swagger;
        java.util.Map<java.lang.String, java.lang.String> strMap10 = null;
        java.lang.String str11 = springMvcApiReader2.parseOperationPath("", strMap10);
        io.swagger.models.Swagger swagger12 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter13 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader14 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger12, logAdapter13);
        java.lang.reflect.Type[] typeArray15 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet16 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet16, typeArray15);
        springMvcApiReader14.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet16);
        java.lang.annotation.Annotation[] annotationArray19 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList20 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList20, annotationArray19);
        boolean boolean22 = springMvcApiReader14.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList20);
        java.util.Set<java.lang.reflect.Type> typeSet23 = springMvcApiReader14.typesToSkip;
        springMvcApiReader14.updateExtensionChain();
        io.swagger.models.Operation operation25 = null;
        io.swagger.annotations.ApiOperation apiOperation26 = null;
        springMvcApiReader14.updateTagsForOperation(operation25, apiOperation26);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter28 = null;
        springMvcApiReader14.LOG = logAdapter28;
        java.util.Set<java.lang.reflect.Type> typeSet30 = springMvcApiReader14.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet31 = springMvcApiReader14.getTypesToSkip();
        springMvcApiReader2.typesToSkip = typeSet31;
        com.github.kongchen.swagger.docgen.spring.SpringResource springResource33 = null;
        // The following exception was thrown during execution in test generation
        try {
            io.swagger.models.Swagger swagger34 = springMvcApiReader2.read(springResource33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeSet7);
        org.junit.Assert.assertNull(swagger8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(typeArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(annotationArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(typeSet23);
        org.junit.Assert.assertNotNull(typeSet30);
        org.junit.Assert.assertNotNull(typeSet31);
    }

    @Test
    public void test02975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02975");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader2.parseOperationPath("hi!", strMap15);
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.Class<?> wildcardClass20 = springMvcApiReader19.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass20);
        io.swagger.models.Swagger swagger22 = null;
        springMvcApiReader2.swagger = swagger22;
        io.swagger.models.Swagger swagger24 = springMvcApiReader2.swagger;
        java.util.Set<java.lang.reflect.Type> typeSet25 = springMvcApiReader2.typesToSkip;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.annotations.Api api28 = null;
        boolean boolean29 = springMvcApiReader2.canReadApi(true, api28);
        io.swagger.models.Swagger swagger30 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter31 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader32 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger30, logAdapter31);
        java.lang.reflect.Type[] typeArray33 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet34 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet34, typeArray33);
        springMvcApiReader32.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet34);
        java.lang.annotation.Annotation[] annotationArray37 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList38 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList38, annotationArray37);
        boolean boolean40 = springMvcApiReader32.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList38);
        java.util.Set<java.lang.reflect.Type> typeSet41 = springMvcApiReader32.typesToSkip;
        springMvcApiReader32.updateExtensionChain();
        io.swagger.models.Operation operation43 = null;
        io.swagger.annotations.ApiOperation apiOperation44 = null;
        springMvcApiReader32.updateTagsForOperation(operation43, apiOperation44);
        io.swagger.annotations.Api api47 = null;
        boolean boolean48 = springMvcApiReader32.canReadApi(true, api47);
        io.swagger.models.Swagger swagger49 = springMvcApiReader32.swagger;
        io.swagger.models.Operation operation50 = null;
        io.swagger.annotations.ApiOperation apiOperation51 = null;
        springMvcApiReader32.updateTagsForOperation(operation50, apiOperation51);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter53 = springMvcApiReader32.LOG;
        java.util.Set<java.lang.reflect.Type> typeSet54 = springMvcApiReader32.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet54);
        java.util.Set<java.lang.reflect.Type> typeSet56 = springMvcApiReader2.typesToSkip;
        io.swagger.annotations.Api api57 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<io.swagger.models.SecurityRequirement> securityRequirementList58 = springMvcApiReader2.getSecurityRequirements(api57);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/hi!" + "'", str16, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNull(swagger24);
        org.junit.Assert.assertNotNull(typeSet25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(typeArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(annotationArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(typeSet41);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(swagger49);
        org.junit.Assert.assertNull(logAdapter53);
        org.junit.Assert.assertNotNull(typeSet54);
        org.junit.Assert.assertNotNull(typeSet56);
    }

    @Test
    public void test02976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02976");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader2.parseOperationPath("hi!", strMap15);
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.reflect.Type[] typeArray20 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet21 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet21, typeArray20);
        springMvcApiReader19.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet21);
        io.swagger.models.Swagger swagger24 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter25 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader26 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger24, logAdapter25);
        java.lang.reflect.Type[] typeArray27 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet28 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet28, typeArray27);
        springMvcApiReader26.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet28);
        springMvcApiReader19.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet28);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.reflect.Type[] typeArray35 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet36 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet36, typeArray35);
        springMvcApiReader34.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet36);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter39 = springMvcApiReader34.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap41 = null;
        java.lang.String str42 = springMvcApiReader34.parseOperationPath("", strMap41);
        io.swagger.annotations.Api api44 = null;
        boolean boolean45 = springMvcApiReader34.canReadApi(false, api44);
        java.util.Map<java.lang.String, java.lang.String> strMap47 = null;
        java.lang.String str48 = springMvcApiReader34.parseOperationPath("hi!", strMap47);
        io.swagger.models.Swagger swagger49 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter50 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader51 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger49, logAdapter50);
        java.lang.Class<?> wildcardClass52 = springMvcApiReader51.getClass();
        springMvcApiReader34.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        springMvcApiReader19.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        io.swagger.models.Operation operation56 = null;
        io.swagger.annotations.ApiOperation apiOperation57 = null;
        springMvcApiReader2.updateTagsForOperation(operation56, apiOperation57);
        io.swagger.models.Swagger swagger59 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter60 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader61 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger59, logAdapter60);
        java.lang.reflect.Type[] typeArray62 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet63 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet63, typeArray62);
        springMvcApiReader61.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet63);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter66 = springMvcApiReader61.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap68 = null;
        java.lang.String str69 = springMvcApiReader61.parseOperationPath("", strMap68);
        io.swagger.annotations.Api api71 = null;
        boolean boolean72 = springMvcApiReader61.canReadApi(false, api71);
        java.util.Map<java.lang.String, java.lang.String> strMap74 = null;
        java.lang.String str75 = springMvcApiReader61.parseOperationPath("hi!", strMap74);
        io.swagger.models.Swagger swagger76 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter77 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader78 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger76, logAdapter77);
        java.lang.Class<?> wildcardClass79 = springMvcApiReader78.getClass();
        springMvcApiReader61.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass79);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass79);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter82 = null;
        springMvcApiReader2.LOG = logAdapter82;
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap84 = null;
        io.swagger.annotations.Api api85 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, io.swagger.models.Tag> strMap86 = springMvcApiReader2.updateTagsForApi(strMap84, api85);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/hi!" + "'", str16, "/hi!");
        org.junit.Assert.assertNotNull(typeArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(typeArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(typeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(logAdapter39);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "/hi!" + "'", str48, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(typeArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNull(logAdapter66);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "" + "'", str69, "");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "/hi!" + "'", str75, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test02977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02977");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.models.Swagger swagger3 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter4 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader5 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger3, logAdapter4);
        java.lang.reflect.Type[] typeArray6 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet7 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet7, typeArray6);
        springMvcApiReader5.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet7);
        java.lang.annotation.Annotation[] annotationArray10 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList11 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList11, annotationArray10);
        boolean boolean13 = springMvcApiReader5.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList11);
        boolean boolean14 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList11);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type[] typeArray18 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet19 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet19, typeArray18);
        springMvcApiReader17.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet19);
        java.lang.annotation.Annotation[] annotationArray22 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList23 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList23, annotationArray22);
        boolean boolean25 = springMvcApiReader17.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList23);
        boolean boolean26 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList23);
        io.swagger.models.Operation operation27 = null;
        io.swagger.annotations.ApiOperation apiOperation28 = null;
        springMvcApiReader2.updateTagsForOperation(operation27, apiOperation28);
        io.swagger.models.Swagger swagger30 = null;
        springMvcApiReader2.swagger = swagger30;
        io.swagger.models.Operation operation32 = null;
        io.swagger.annotations.ApiOperation apiOperation33 = null;
        springMvcApiReader2.updateTagsForOperation(operation32, apiOperation33);
        java.util.Set<java.lang.reflect.Type> typeSet35 = null;
        springMvcApiReader2.typesToSkip = typeSet35;
        org.junit.Assert.assertNotNull(typeArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(annotationArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(typeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(annotationArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test02978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02978");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        io.swagger.models.Swagger swagger14 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter15 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader16 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger14, logAdapter15);
        java.lang.reflect.Type type17 = null;
        springMvcApiReader16.addTypeToSkippedTypes(type17);
        java.util.Set<java.lang.reflect.Type> typeSet19 = springMvcApiReader16.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet20 = springMvcApiReader16.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet20);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = null;
        springMvcApiReader2.LOG = logAdapter22;
        java.util.Set<java.lang.reflect.Type> typeSet24 = springMvcApiReader2.typesToSkip;
        io.swagger.annotations.Api api26 = null;
        boolean boolean27 = springMvcApiReader2.canReadApi(false, api26);
        io.swagger.models.Swagger swagger28 = null;
        springMvcApiReader2.swagger = swagger28;
        java.util.Set<java.lang.reflect.Type> typeSet30 = springMvcApiReader2.getTypesToSkip();
        com.github.kongchen.swagger.docgen.spring.SpringResource springResource31 = null;
        // The following exception was thrown during execution in test generation
        try {
            io.swagger.models.Swagger swagger32 = springMvcApiReader2.read(springResource31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(typeSet19);
        org.junit.Assert.assertNotNull(typeSet20);
        org.junit.Assert.assertNotNull(typeSet24);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(typeSet30);
    }

    @Test
    public void test02979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02979");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.models.Swagger swagger11 = springMvcApiReader2.swagger;
        io.swagger.annotations.Api api13 = null;
        boolean boolean14 = springMvcApiReader2.canReadApi(false, api13);
        java.util.Set<java.lang.reflect.Type> typeSet15 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet16 = springMvcApiReader2.getTypesToSkip();
        java.util.Map<java.lang.String, java.lang.String> strMap18 = null;
        java.lang.String str19 = springMvcApiReader2.parseOperationPath("hi!", strMap18);
        io.swagger.models.Swagger swagger20 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter21 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader22 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger20, logAdapter21);
        java.lang.reflect.Type[] typeArray23 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet24 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet24, typeArray23);
        springMvcApiReader22.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet24);
        io.swagger.models.Swagger swagger27 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter28 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader29 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger27, logAdapter28);
        java.lang.reflect.Type[] typeArray30 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet31 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet31, typeArray30);
        springMvcApiReader29.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet31);
        springMvcApiReader22.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet31);
        io.swagger.models.Swagger swagger35 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter36 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader37 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger35, logAdapter36);
        java.lang.reflect.Type[] typeArray38 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet39 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet39, typeArray38);
        springMvcApiReader37.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet39);
        io.swagger.models.Swagger swagger42 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter43 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader44 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger42, logAdapter43);
        java.lang.reflect.Type[] typeArray45 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet46 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet46, typeArray45);
        springMvcApiReader44.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet46);
        springMvcApiReader37.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet46);
        io.swagger.models.Swagger swagger50 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter51 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader52 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger50, logAdapter51);
        java.lang.reflect.Type type53 = null;
        springMvcApiReader52.addTypeToSkippedTypes(type53);
        java.util.Set<java.lang.reflect.Type> typeSet55 = springMvcApiReader52.typesToSkip;
        springMvcApiReader37.setTypesToSkip(typeSet55);
        java.util.Set<java.lang.reflect.Type> typeSet57 = springMvcApiReader37.getTypesToSkip();
        io.swagger.annotations.Api api59 = null;
        boolean boolean60 = springMvcApiReader37.canReadApi(true, api59);
        io.swagger.models.Swagger swagger61 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter62 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader63 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger61, logAdapter62);
        java.lang.reflect.Type type64 = null;
        springMvcApiReader63.addTypeToSkippedTypes(type64);
        java.util.Set<java.lang.reflect.Type> typeSet66 = springMvcApiReader63.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet67 = springMvcApiReader63.getTypesToSkip();
        springMvcApiReader37.typesToSkip = typeSet67;
        springMvcApiReader22.typesToSkip = typeSet67;
        springMvcApiReader2.typesToSkip = typeSet67;
        io.swagger.models.Swagger swagger71 = null;
        springMvcApiReader2.swagger = swagger71;
        java.util.Map<java.lang.String, java.lang.String> strMap74 = null;
        java.lang.String str75 = springMvcApiReader2.parseOperationPath("/hi!", strMap74);
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(swagger11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(typeSet15);
        org.junit.Assert.assertNotNull(typeSet16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "/hi!" + "'", str19, "/hi!");
        org.junit.Assert.assertNotNull(typeArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(typeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(typeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(typeArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(typeSet55);
        org.junit.Assert.assertNotNull(typeSet57);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(typeSet66);
        org.junit.Assert.assertNotNull(typeSet67);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "/hi!" + "'", str75, "/hi!");
    }

    @Test
    public void test02980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02980");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.lang.annotation.Annotation[] annotationArray7 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList8 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList8, annotationArray7);
        boolean boolean10 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList8);
        io.swagger.models.Swagger swagger11 = null;
        springMvcApiReader2.swagger = swagger11;
        io.swagger.models.Swagger swagger13 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter14 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader15 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger13, logAdapter14);
        java.lang.reflect.Type[] typeArray16 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet17 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet17, typeArray16);
        springMvcApiReader15.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet17);
        java.lang.annotation.Annotation[] annotationArray20 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList21 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList21, annotationArray20);
        boolean boolean23 = springMvcApiReader15.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList21);
        io.swagger.models.Swagger swagger24 = null;
        springMvcApiReader15.swagger = swagger24;
        java.lang.annotation.Annotation[] annotationArray26 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList27 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList27, annotationArray26);
        boolean boolean29 = springMvcApiReader15.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList27);
        boolean boolean30 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList27);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger32 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger33 = null;
        springMvcApiReader2.swagger = swagger33;
        java.util.Set<java.lang.reflect.Type> typeSet35 = springMvcApiReader2.typesToSkip;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter36 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger37 = springMvcApiReader2.swagger;
        java.util.Map<java.lang.String, java.lang.String> strMap39 = null;
        java.lang.String str40 = springMvcApiReader2.parseOperationPath("hi!", strMap39);
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(annotationArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(typeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(annotationArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(annotationArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(swagger32);
        org.junit.Assert.assertNotNull(typeSet35);
        org.junit.Assert.assertNull(logAdapter36);
        org.junit.Assert.assertNull(swagger37);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "/hi!" + "'", str40, "/hi!");
    }

    @Test
    public void test02981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02981");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.models.Swagger swagger11 = springMvcApiReader2.swagger;
        io.swagger.annotations.Api api13 = null;
        boolean boolean14 = springMvcApiReader2.canReadApi(false, api13);
        java.util.Set<java.lang.reflect.Type> typeSet15 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet16 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.reflect.Type type20 = null;
        springMvcApiReader19.addTypeToSkippedTypes(type20);
        java.util.Set<java.lang.reflect.Type> typeSet22 = springMvcApiReader19.typesToSkip;
        io.swagger.models.Swagger swagger23 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter24 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader25 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger23, logAdapter24);
        java.lang.reflect.Type[] typeArray26 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet27 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet27, typeArray26);
        springMvcApiReader25.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet27);
        java.lang.annotation.Annotation[] annotationArray30 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList31 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList31, annotationArray30);
        boolean boolean33 = springMvcApiReader25.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList31);
        java.util.Set<java.lang.reflect.Type> typeSet34 = springMvcApiReader25.typesToSkip;
        springMvcApiReader25.updateExtensionChain();
        io.swagger.models.Operation operation36 = null;
        io.swagger.annotations.ApiOperation apiOperation37 = null;
        springMvcApiReader25.updateTagsForOperation(operation36, apiOperation37);
        io.swagger.models.Swagger swagger39 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter40 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader41 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger39, logAdapter40);
        java.lang.reflect.Type[] typeArray42 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet43 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet43, typeArray42);
        springMvcApiReader41.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet43);
        java.lang.annotation.Annotation[] annotationArray46 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList47 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList47, annotationArray46);
        boolean boolean49 = springMvcApiReader41.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList47);
        io.swagger.models.Swagger swagger50 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter51 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader52 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger50, logAdapter51);
        java.lang.reflect.Type[] typeArray53 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet54 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet54, typeArray53);
        springMvcApiReader52.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet54);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter57 = springMvcApiReader52.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap59 = null;
        java.lang.String str60 = springMvcApiReader52.parseOperationPath("", strMap59);
        io.swagger.annotations.Api api62 = null;
        boolean boolean63 = springMvcApiReader52.canReadApi(false, api62);
        java.util.Map<java.lang.String, java.lang.String> strMap65 = null;
        java.lang.String str66 = springMvcApiReader52.parseOperationPath("hi!", strMap65);
        io.swagger.models.Swagger swagger67 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter68 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader69 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger67, logAdapter68);
        java.lang.Class<?> wildcardClass70 = springMvcApiReader69.getClass();
        springMvcApiReader52.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass70);
        java.util.Map<java.lang.String, java.lang.String> strMap73 = null;
        java.lang.String str74 = springMvcApiReader52.parseOperationPath("/hi!", strMap73);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray75 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap76 = springMvcApiReader52.parseResponseHeaders(responseHeaderArray75);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap77 = springMvcApiReader41.parseResponseHeaders(responseHeaderArray75);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap78 = springMvcApiReader25.parseResponseHeaders(responseHeaderArray75);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap79 = springMvcApiReader19.parseResponseHeaders(responseHeaderArray75);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap80 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray75);
        io.swagger.models.Operation operation83 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updatePath("/hi!", "hi!", operation83);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(swagger11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(typeSet15);
        org.junit.Assert.assertNotNull(typeSet16);
        org.junit.Assert.assertNotNull(typeSet22);
        org.junit.Assert.assertNotNull(typeArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(annotationArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(typeSet34);
        org.junit.Assert.assertNotNull(typeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(annotationArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(typeArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNull(logAdapter57);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "" + "'", str60, "");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "/hi!" + "'", str66, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "/hi!" + "'", str74, "/hi!");
        org.junit.Assert.assertNotNull(responseHeaderArray75);
        org.junit.Assert.assertNull(strMap76);
        org.junit.Assert.assertNull(strMap77);
        org.junit.Assert.assertNull(strMap78);
        org.junit.Assert.assertNull(strMap79);
        org.junit.Assert.assertNull(strMap80);
    }

    @Test
    public void test02982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02982");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader2.parseOperationPath("hi!", strMap15);
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.Class<?> wildcardClass20 = springMvcApiReader19.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass20);
        java.util.Map<java.lang.String, java.lang.String> strMap23 = null;
        java.lang.String str24 = springMvcApiReader2.parseOperationPath("/hi!", strMap23);
        io.swagger.models.Swagger swagger25 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter26 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader27 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger25, logAdapter26);
        java.lang.reflect.Type[] typeArray28 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet29 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet29, typeArray28);
        springMvcApiReader27.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet29);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet29);
        io.swagger.models.Swagger swagger33 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter34 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader35 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger33, logAdapter34);
        java.lang.reflect.Type[] typeArray36 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet37 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet37, typeArray36);
        springMvcApiReader35.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet37);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter40 = springMvcApiReader35.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap42 = null;
        java.lang.String str43 = springMvcApiReader35.parseOperationPath("", strMap42);
        java.lang.reflect.Type[] typeArray44 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList45 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList45, typeArray44);
        springMvcApiReader35.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList45);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList45);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter49 = null;
        springMvcApiReader2.LOG = logAdapter49;
        io.swagger.annotations.Api api51 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<io.swagger.models.SecurityRequirement> securityRequirementList52 = springMvcApiReader2.getSecurityRequirements(api51);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/hi!" + "'", str16, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "/hi!" + "'", str24, "/hi!");
        org.junit.Assert.assertNotNull(typeArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(logAdapter40);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertNotNull(typeArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    }

    @Test
    public void test02983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02983");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader2.parseOperationPath("hi!", strMap15);
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.Class<?> wildcardClass20 = springMvcApiReader19.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass20);
        io.swagger.models.Swagger swagger22 = null;
        springMvcApiReader2.swagger = swagger22;
        io.swagger.models.Swagger swagger24 = springMvcApiReader2.swagger;
        java.util.Set<java.lang.reflect.Type> typeSet25 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger26 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter27 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader28 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger26, logAdapter27);
        java.lang.reflect.Type[] typeArray29 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet30 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet30, typeArray29);
        springMvcApiReader28.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet30);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = springMvcApiReader28.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap35 = null;
        java.lang.String str36 = springMvcApiReader28.parseOperationPath("", strMap35);
        io.swagger.models.Swagger swagger37 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter38 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader39 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger37, logAdapter38);
        java.lang.Class<?> wildcardClass40 = springMvcApiReader39.getClass();
        java.lang.reflect.Type[] typeArray41 = new java.lang.reflect.Type[] { wildcardClass40 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet42 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet42, typeArray41);
        springMvcApiReader28.typesToSkip = typeSet42;
        io.swagger.models.Swagger swagger45 = springMvcApiReader28.swagger;
        java.lang.Class<?> wildcardClass46 = springMvcApiReader28.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass46);
        io.swagger.models.Swagger swagger48 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter49 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader50 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger48, logAdapter49);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter51 = springMvcApiReader50.LOG;
        java.util.Set<java.lang.reflect.Type> typeSet52 = springMvcApiReader50.typesToSkip;
        springMvcApiReader2.typesToSkip = typeSet52;
        java.util.Map<java.lang.String, java.lang.String> strMap55 = null;
        java.lang.String str56 = springMvcApiReader2.parseOperationPath("/hi!", strMap55);
        io.swagger.models.Operation operation57 = null;
        io.swagger.annotations.ApiOperation apiOperation58 = null;
        springMvcApiReader2.updateTagsForOperation(operation57, apiOperation58);
        com.github.kongchen.swagger.docgen.spring.SpringResource springResource60 = null;
        // The following exception was thrown during execution in test generation
        try {
            io.swagger.models.Swagger swagger61 = springMvcApiReader2.read(springResource60);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/hi!" + "'", str16, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNull(swagger24);
        org.junit.Assert.assertNotNull(typeSet25);
        org.junit.Assert.assertNotNull(typeArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(logAdapter33);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(typeArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(swagger45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNull(logAdapter51);
        org.junit.Assert.assertNotNull(typeSet52);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "/hi!" + "'", str56, "/hi!");
    }

    @Test
    public void test02984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02984");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        io.swagger.models.Swagger swagger14 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter15 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader16 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger14, logAdapter15);
        java.lang.reflect.Type[] typeArray17 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet18 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet18, typeArray17);
        springMvcApiReader16.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet18);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter21 = springMvcApiReader16.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap23 = null;
        java.lang.String str24 = springMvcApiReader16.parseOperationPath("", strMap23);
        io.swagger.annotations.Api api26 = null;
        boolean boolean27 = springMvcApiReader16.canReadApi(false, api26);
        java.util.Map<java.lang.String, java.lang.String> strMap29 = null;
        java.lang.String str30 = springMvcApiReader16.parseOperationPath("hi!", strMap29);
        io.swagger.models.Swagger swagger31 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter32 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader33 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger31, logAdapter32);
        java.lang.Class<?> wildcardClass34 = springMvcApiReader33.getClass();
        springMvcApiReader16.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass34);
        java.util.Map<java.lang.String, java.lang.String> strMap37 = null;
        java.lang.String str38 = springMvcApiReader16.parseOperationPath("/hi!", strMap37);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray39 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap40 = springMvcApiReader16.parseResponseHeaders(responseHeaderArray39);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap41 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray39);
        io.swagger.annotations.Api api42 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.lang.String> strSet43 = springMvcApiReader2.extractTags(api42);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(typeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(logAdapter21);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "/hi!" + "'", str30, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "/hi!" + "'", str38, "/hi!");
        org.junit.Assert.assertNotNull(responseHeaderArray39);
        org.junit.Assert.assertNull(strMap40);
        org.junit.Assert.assertNull(strMap41);
    }

    @Test
    public void test02985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02985");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        java.util.Set<java.lang.reflect.Type> typeSet5 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet6 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger14 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter15 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader16 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger14, logAdapter15);
        java.lang.reflect.Type[] typeArray17 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet18 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet18, typeArray17);
        springMvcApiReader16.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet18);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet18);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet18);
        springMvcApiReader2.updateExtensionChain();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter24 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger25 = springMvcApiReader2.swagger;
        io.swagger.annotations.Api api27 = null;
        boolean boolean28 = springMvcApiReader2.canReadApi(true, api27);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger30 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter31 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader32 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger30, logAdapter31);
        java.lang.reflect.Type type33 = null;
        springMvcApiReader32.addTypeToSkippedTypes(type33);
        io.swagger.models.Swagger swagger35 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter36 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader37 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger35, logAdapter36);
        java.lang.reflect.Type[] typeArray38 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet39 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet39, typeArray38);
        springMvcApiReader37.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet39);
        io.swagger.models.Swagger swagger42 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter43 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader44 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger42, logAdapter43);
        java.lang.reflect.Type[] typeArray45 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet46 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet46, typeArray45);
        springMvcApiReader44.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet46);
        springMvcApiReader37.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet46);
        io.swagger.models.Swagger swagger50 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter51 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader52 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger50, logAdapter51);
        java.lang.reflect.Type[] typeArray53 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet54 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet54, typeArray53);
        springMvcApiReader52.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet54);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter57 = springMvcApiReader52.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap59 = null;
        java.lang.String str60 = springMvcApiReader52.parseOperationPath("", strMap59);
        io.swagger.annotations.Api api62 = null;
        boolean boolean63 = springMvcApiReader52.canReadApi(false, api62);
        java.util.Map<java.lang.String, java.lang.String> strMap65 = null;
        java.lang.String str66 = springMvcApiReader52.parseOperationPath("hi!", strMap65);
        io.swagger.models.Swagger swagger67 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter68 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader69 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger67, logAdapter68);
        java.lang.Class<?> wildcardClass70 = springMvcApiReader69.getClass();
        springMvcApiReader52.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass70);
        springMvcApiReader37.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass70);
        java.util.Set<java.lang.reflect.Type> typeSet73 = springMvcApiReader37.getTypesToSkip();
        springMvcApiReader32.typesToSkip = typeSet73;
        java.util.Set<java.lang.reflect.Type> typeSet75 = springMvcApiReader32.getTypesToSkip();
        io.swagger.annotations.Api api77 = null;
        boolean boolean78 = springMvcApiReader32.canReadApi(false, api77);
        java.lang.Class<?> wildcardClass79 = springMvcApiReader32.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass79);
        io.swagger.models.Operation operation83 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updatePath("", "/hi!", operation83);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeSet5);
        org.junit.Assert.assertNotNull(typeSet6);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(logAdapter24);
        org.junit.Assert.assertNull(swagger25);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(typeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(typeArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(typeArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNull(logAdapter57);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "" + "'", str60, "");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "/hi!" + "'", str66, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(typeSet73);
        org.junit.Assert.assertNotNull(typeSet75);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test02986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02986");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        java.util.Set<java.lang.reflect.Type> typeSet5 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet6 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger14 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter15 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader16 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger14, logAdapter15);
        java.lang.reflect.Type[] typeArray17 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet18 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet18, typeArray17);
        springMvcApiReader16.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet18);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet18);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet18);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = null;
        springMvcApiReader2.LOG = logAdapter23;
        com.github.kongchen.swagger.docgen.spring.SpringResource springResource25 = null;
        // The following exception was thrown during execution in test generation
        try {
            io.swagger.models.Swagger swagger26 = springMvcApiReader2.read(springResource25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeSet5);
        org.junit.Assert.assertNotNull(typeSet6);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test02987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02987");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.lang.annotation.Annotation[] annotationArray7 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList8 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList8, annotationArray7);
        boolean boolean10 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList8);
        io.swagger.models.Swagger swagger11 = null;
        springMvcApiReader2.swagger = swagger11;
        io.swagger.annotations.ResponseHeader[] responseHeaderArray13 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap14 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray13);
        io.swagger.annotations.Api api16 = null;
        boolean boolean17 = springMvcApiReader2.canReadApi(false, api16);
        io.swagger.models.Operation operation20 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updatePath("/hi!", "hi!", operation20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(annotationArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(responseHeaderArray13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test02988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02988");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader2.parseOperationPath("hi!", strMap15);
        io.swagger.models.Operation operation17 = null;
        io.swagger.annotations.ApiOperation apiOperation18 = null;
        springMvcApiReader2.updateTagsForOperation(operation17, apiOperation18);
        springMvcApiReader2.updateExtensionChain();
        java.util.Map<java.lang.String, java.lang.String> strMap22 = null;
        java.lang.String str23 = springMvcApiReader2.parseOperationPath("hi!", strMap22);
        io.swagger.models.Swagger swagger24 = null;
        springMvcApiReader2.swagger = swagger24;
        io.swagger.annotations.ApiOperation apiOperation26 = null;
        io.swagger.models.Operation operation27 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateOperationProtocols(apiOperation26, operation27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/hi!" + "'", str16, "/hi!");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "/hi!" + "'", str23, "/hi!");
    }

    @Test
    public void test02989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02989");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        springMvcApiReader2.updateExtensionChain();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = springMvcApiReader2.LOG;
        java.lang.reflect.Method method9 = null;
        io.swagger.models.Operation operation10 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.readImplicitParameters(method9, operation10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter8);
    }

    @Test
    public void test02990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02990");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        io.swagger.models.Swagger swagger5 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger6 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader8 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger6, logAdapter7);
        java.lang.reflect.Type type9 = null;
        springMvcApiReader8.addTypeToSkippedTypes(type9);
        java.util.Set<java.lang.reflect.Type> typeSet11 = springMvcApiReader8.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet11);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter13 = null;
        springMvcApiReader2.LOG = logAdapter13;
        io.swagger.models.Operation operation15 = null;
        io.swagger.annotations.ApiOperation apiOperation16 = null;
        springMvcApiReader2.updateTagsForOperation(operation15, apiOperation16);
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap18 = null;
        io.swagger.annotations.Api api19 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, io.swagger.models.Tag> strMap20 = springMvcApiReader2.updateTagsForApi(strMap18, api19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(swagger5);
        org.junit.Assert.assertNotNull(typeSet11);
    }

    @Test
    public void test02991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02991");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.lang.annotation.Annotation[] annotationArray7 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList8 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList8, annotationArray7);
        boolean boolean10 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList8);
        io.swagger.models.Swagger swagger11 = null;
        springMvcApiReader2.swagger = swagger11;
        io.swagger.models.Swagger swagger13 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter14 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader15 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger13, logAdapter14);
        java.lang.reflect.Type[] typeArray16 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet17 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet17, typeArray16);
        springMvcApiReader15.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet17);
        java.lang.annotation.Annotation[] annotationArray20 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList21 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList21, annotationArray20);
        boolean boolean23 = springMvcApiReader15.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList21);
        io.swagger.models.Swagger swagger24 = null;
        springMvcApiReader15.swagger = swagger24;
        java.lang.annotation.Annotation[] annotationArray26 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList27 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList27, annotationArray26);
        boolean boolean29 = springMvcApiReader15.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList27);
        boolean boolean30 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList27);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter31 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger32 = springMvcApiReader2.swagger;
        springMvcApiReader2.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet34 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Operation operation37 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updatePath("", "", operation37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(annotationArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(typeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(annotationArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(annotationArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(logAdapter31);
        org.junit.Assert.assertNull(swagger32);
        org.junit.Assert.assertNotNull(typeSet34);
    }

    @Test
    public void test02992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02992");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.lang.annotation.Annotation[] annotationArray7 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList8 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList8, annotationArray7);
        boolean boolean10 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList8);
        io.swagger.models.Swagger swagger11 = null;
        springMvcApiReader2.swagger = swagger11;
        io.swagger.models.Swagger swagger13 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter14 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader15 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger13, logAdapter14);
        java.lang.reflect.Type[] typeArray16 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet17 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet17, typeArray16);
        springMvcApiReader15.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet17);
        java.lang.annotation.Annotation[] annotationArray20 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList21 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList21, annotationArray20);
        boolean boolean23 = springMvcApiReader15.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList21);
        io.swagger.models.Swagger swagger24 = null;
        springMvcApiReader15.swagger = swagger24;
        java.lang.annotation.Annotation[] annotationArray26 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList27 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList27, annotationArray26);
        boolean boolean29 = springMvcApiReader15.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList27);
        boolean boolean30 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList27);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger32 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger33 = null;
        springMvcApiReader2.swagger = swagger33;
        io.swagger.annotations.Api api36 = null;
        boolean boolean37 = springMvcApiReader2.canReadApi(false, api36);
        io.swagger.models.Operation operation38 = null;
        io.swagger.annotations.ApiOperation apiOperation39 = null;
        springMvcApiReader2.updateTagsForOperation(operation38, apiOperation39);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter41 = springMvcApiReader2.LOG;
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(annotationArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(typeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(annotationArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(annotationArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(swagger32);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(logAdapter41);
    }

    @Test
    public void test02993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02993");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        java.util.Map<java.lang.String, java.lang.String> strMap16 = null;
        java.lang.String str17 = springMvcApiReader2.parseOperationPath("/hi!", strMap16);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = springMvcApiReader2.LOG;
        java.util.Set<java.lang.reflect.Type> typeSet19 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet20 = springMvcApiReader2.getTypesToSkip();
        io.swagger.annotations.Api api22 = null;
        boolean boolean23 = springMvcApiReader2.canReadApi(true, api22);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter24 = null;
        springMvcApiReader2.LOG = logAdapter24;
        java.lang.reflect.Method method26 = null;
        io.swagger.models.Operation operation27 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.readImplicitParameters(method26, operation27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "/hi!" + "'", str17, "/hi!");
        org.junit.Assert.assertNull(logAdapter18);
        org.junit.Assert.assertNotNull(typeSet19);
        org.junit.Assert.assertNotNull(typeSet20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test02994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02994");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.annotations.Api api8 = null;
        boolean boolean9 = springMvcApiReader2.canReadApi(false, api8);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter10 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger11 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger12 = null;
        springMvcApiReader2.swagger = swagger12;
        io.swagger.models.Swagger swagger14 = springMvcApiReader2.swagger;
        java.util.Set<java.lang.reflect.Type> typeSet15 = springMvcApiReader2.getTypesToSkip();
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(logAdapter10);
        org.junit.Assert.assertNull(swagger11);
        org.junit.Assert.assertNull(swagger14);
        org.junit.Assert.assertNotNull(typeSet15);
    }

    @Test
    public void test02995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02995");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter3 = springMvcApiReader2.LOG;
        java.util.Set<java.lang.reflect.Type> typeSet4 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Operation operation5 = null;
        io.swagger.annotations.ApiOperation apiOperation6 = null;
        springMvcApiReader2.updateTagsForOperation(operation5, apiOperation6);
        io.swagger.models.Swagger swagger8 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader10 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger8, logAdapter9);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = springMvcApiReader10.LOG;
        java.util.Set<java.lang.reflect.Type> typeSet12 = springMvcApiReader10.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet13 = springMvcApiReader10.typesToSkip;
        springMvcApiReader2.typesToSkip = typeSet13;
        io.swagger.models.Swagger swagger15 = springMvcApiReader2.swagger;
        io.swagger.annotations.Api api17 = null;
        boolean boolean18 = springMvcApiReader2.canReadApi(false, api17);
        java.util.Map<java.lang.String, java.lang.String> strMap20 = null;
        java.lang.String str21 = springMvcApiReader2.parseOperationPath("", strMap20);
        io.swagger.models.Swagger swagger22 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader24 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger22, logAdapter23);
        java.lang.reflect.Type[] typeArray25 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet26 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet26, typeArray25);
        springMvcApiReader24.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet26);
        java.lang.Class<?> wildcardClass29 = springMvcApiReader24.getClass();
        io.swagger.models.Swagger swagger30 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter31 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader32 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger30, logAdapter31);
        java.lang.reflect.Type[] typeArray33 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet34 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet34, typeArray33);
        springMvcApiReader32.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet34);
        io.swagger.models.Swagger swagger37 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter38 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader39 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger37, logAdapter38);
        java.lang.reflect.Type[] typeArray40 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet41 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet41, typeArray40);
        springMvcApiReader39.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet41);
        springMvcApiReader32.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet41);
        io.swagger.models.Swagger swagger45 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter46 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader47 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger45, logAdapter46);
        java.lang.reflect.Type type48 = null;
        springMvcApiReader47.addTypeToSkippedTypes(type48);
        java.util.Set<java.lang.reflect.Type> typeSet50 = springMvcApiReader47.typesToSkip;
        springMvcApiReader32.setTypesToSkip(typeSet50);
        java.util.Set<java.lang.reflect.Type> typeSet52 = springMvcApiReader32.typesToSkip;
        io.swagger.models.Swagger swagger53 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter54 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader55 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger53, logAdapter54);
        java.lang.reflect.Type[] typeArray56 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet57 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet57, typeArray56);
        springMvcApiReader55.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet57);
        java.util.Set<java.lang.reflect.Type> typeSet60 = springMvcApiReader55.typesToSkip;
        io.swagger.models.Swagger swagger61 = springMvcApiReader55.swagger;
        io.swagger.models.Swagger swagger62 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter63 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader64 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger62, logAdapter63);
        java.lang.reflect.Type[] typeArray65 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet66 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet66, typeArray65);
        springMvcApiReader64.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet66);
        java.lang.annotation.Annotation[] annotationArray69 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList70 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList70, annotationArray69);
        boolean boolean72 = springMvcApiReader64.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList70);
        io.swagger.models.Swagger swagger73 = null;
        springMvcApiReader64.swagger = swagger73;
        java.lang.annotation.Annotation[] annotationArray75 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList76 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList76, annotationArray75);
        boolean boolean78 = springMvcApiReader64.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList76);
        boolean boolean79 = springMvcApiReader55.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList76);
        boolean boolean80 = springMvcApiReader32.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList76);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList81 = springMvcApiReader2.getParameters((java.lang.reflect.Type) wildcardClass29, (java.util.List<java.lang.annotation.Annotation>) annotationList76);
        org.junit.Assert.assertNull(logAdapter3);
        org.junit.Assert.assertNotNull(typeSet4);
        org.junit.Assert.assertNull(logAdapter11);
        org.junit.Assert.assertNotNull(typeSet12);
        org.junit.Assert.assertNotNull(typeSet13);
        org.junit.Assert.assertNull(swagger15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNotNull(typeArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(typeArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(typeArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(typeSet50);
        org.junit.Assert.assertNotNull(typeSet52);
        org.junit.Assert.assertNotNull(typeArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(typeSet60);
        org.junit.Assert.assertNull(swagger61);
        org.junit.Assert.assertNotNull(typeArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(annotationArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(annotationArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(parameterList81);
    }

    @Test
    public void test02996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02996");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        io.swagger.models.Swagger swagger5 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter6 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader7 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger5, logAdapter6);
        java.lang.reflect.Type[] typeArray8 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet9 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet9, typeArray8);
        springMvcApiReader7.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet9);
        io.swagger.models.Swagger swagger12 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter13 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader14 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger12, logAdapter13);
        java.lang.reflect.Type[] typeArray15 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet16 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet16, typeArray15);
        springMvcApiReader14.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet16);
        springMvcApiReader7.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet16);
        io.swagger.models.Swagger swagger20 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter21 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader22 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger20, logAdapter21);
        java.lang.reflect.Type[] typeArray23 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet24 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet24, typeArray23);
        springMvcApiReader22.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet24);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter27 = springMvcApiReader22.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap29 = null;
        java.lang.String str30 = springMvcApiReader22.parseOperationPath("", strMap29);
        io.swagger.annotations.Api api32 = null;
        boolean boolean33 = springMvcApiReader22.canReadApi(false, api32);
        java.util.Map<java.lang.String, java.lang.String> strMap35 = null;
        java.lang.String str36 = springMvcApiReader22.parseOperationPath("hi!", strMap35);
        io.swagger.models.Swagger swagger37 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter38 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader39 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger37, logAdapter38);
        java.lang.Class<?> wildcardClass40 = springMvcApiReader39.getClass();
        springMvcApiReader22.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass40);
        springMvcApiReader7.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass40);
        java.util.Set<java.lang.reflect.Type> typeSet43 = springMvcApiReader7.getTypesToSkip();
        springMvcApiReader2.typesToSkip = typeSet43;
        java.util.Set<java.lang.reflect.Type> typeSet45 = springMvcApiReader2.getTypesToSkip();
        io.swagger.annotations.Api api47 = null;
        boolean boolean48 = springMvcApiReader2.canReadApi(false, api47);
        io.swagger.models.Swagger swagger49 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger50 = springMvcApiReader2.swagger;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger52 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter53 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader54 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger52, logAdapter53);
        java.lang.reflect.Type[] typeArray55 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet56 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet56, typeArray55);
        springMvcApiReader54.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet56);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter59 = springMvcApiReader54.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap61 = null;
        java.lang.String str62 = springMvcApiReader54.parseOperationPath("", strMap61);
        io.swagger.models.Swagger swagger63 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter64 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader65 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger63, logAdapter64);
        java.lang.Class<?> wildcardClass66 = springMvcApiReader65.getClass();
        java.lang.reflect.Type[] typeArray67 = new java.lang.reflect.Type[] { wildcardClass66 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet68 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet68, typeArray67);
        springMvcApiReader54.typesToSkip = typeSet68;
        java.util.Set<java.lang.reflect.Type> typeSet71 = springMvcApiReader54.getTypesToSkip();
        java.util.Map<java.lang.String, java.lang.String> strMap73 = null;
        java.lang.String str74 = springMvcApiReader54.parseOperationPath("/hi!", strMap73);
        java.util.Set<java.lang.reflect.Type> typeSet75 = springMvcApiReader54.getTypesToSkip();
        io.swagger.models.Swagger swagger76 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter77 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader78 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger76, logAdapter77);
        java.lang.reflect.Type[] typeArray79 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet80 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet80, typeArray79);
        springMvcApiReader78.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet80);
        java.lang.annotation.Annotation[] annotationArray83 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList84 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList84, annotationArray83);
        boolean boolean86 = springMvcApiReader78.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList84);
        io.swagger.models.Swagger swagger87 = null;
        springMvcApiReader78.swagger = swagger87;
        io.swagger.annotations.ResponseHeader[] responseHeaderArray89 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap90 = springMvcApiReader78.parseResponseHeaders(responseHeaderArray89);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap91 = springMvcApiReader54.parseResponseHeaders(responseHeaderArray89);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap92 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray89);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter93 = null;
        springMvcApiReader2.LOG = logAdapter93;
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap95 = null;
        io.swagger.annotations.Api api96 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, io.swagger.models.Tag> strMap97 = springMvcApiReader2.updateTagsForApi(strMap95, api96);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(typeArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(typeArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(logAdapter27);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "/hi!" + "'", str36, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(typeSet43);
        org.junit.Assert.assertNotNull(typeSet45);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(swagger49);
        org.junit.Assert.assertNull(swagger50);
        org.junit.Assert.assertNotNull(typeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNull(logAdapter59);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "" + "'", str62, "");
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(typeArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(typeSet71);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "/hi!" + "'", str74, "/hi!");
        org.junit.Assert.assertNotNull(typeSet75);
        org.junit.Assert.assertNotNull(typeArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(annotationArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(responseHeaderArray89);
        org.junit.Assert.assertNull(strMap90);
        org.junit.Assert.assertNull(strMap91);
        org.junit.Assert.assertNull(strMap92);
    }

    @Test
    public void test02997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02997");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.lang.annotation.Annotation[] annotationArray7 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList8 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList8, annotationArray7);
        boolean boolean10 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList8);
        java.util.Set<java.lang.reflect.Type> typeSet11 = springMvcApiReader2.typesToSkip;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Operation operation13 = null;
        io.swagger.annotations.ApiOperation apiOperation14 = null;
        springMvcApiReader2.updateTagsForOperation(operation13, apiOperation14);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.reflect.Type[] typeArray20 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet21 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet21, typeArray20);
        springMvcApiReader19.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet21);
        java.lang.annotation.Annotation[] annotationArray24 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList25 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList25, annotationArray24);
        boolean boolean27 = springMvcApiReader19.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList25);
        io.swagger.models.Swagger swagger28 = null;
        springMvcApiReader19.swagger = swagger28;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter30 = null;
        springMvcApiReader19.LOG = logAdapter30;
        java.util.Set<java.lang.reflect.Type> typeSet32 = springMvcApiReader19.getTypesToSkip();
        java.lang.Class<?> wildcardClass33 = typeSet32.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass33);
        java.util.Map<java.lang.String, java.lang.String> strMap36 = null;
        java.lang.String str37 = springMvcApiReader2.parseOperationPath("/hi!", strMap36);
        com.github.kongchen.swagger.docgen.spring.SpringResource springResource38 = null;
        // The following exception was thrown during execution in test generation
        try {
            io.swagger.models.Swagger swagger39 = springMvcApiReader2.read(springResource38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(annotationArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(typeSet11);
        org.junit.Assert.assertNotNull(typeArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(annotationArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(typeSet32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "/hi!" + "'", str37, "/hi!");
    }

    @Test
    public void test02998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02998");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type[] typeArray18 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet19 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet19, typeArray18);
        springMvcApiReader17.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet19);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = springMvcApiReader17.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap24 = null;
        java.lang.String str25 = springMvcApiReader17.parseOperationPath("", strMap24);
        io.swagger.annotations.Api api27 = null;
        boolean boolean28 = springMvcApiReader17.canReadApi(false, api27);
        java.util.Map<java.lang.String, java.lang.String> strMap30 = null;
        java.lang.String str31 = springMvcApiReader17.parseOperationPath("hi!", strMap30);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.Class<?> wildcardClass35 = springMvcApiReader34.getClass();
        springMvcApiReader17.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        java.lang.reflect.Type type38 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type38);
        io.swagger.models.Swagger swagger40 = null;
        springMvcApiReader2.swagger = swagger40;
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap42 = null;
        io.swagger.annotations.Api api43 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, io.swagger.models.Tag> strMap44 = springMvcApiReader2.updateTagsForApi(strMap42, api43);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(logAdapter22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "/hi!" + "'", str31, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test02999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02999");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.lang.annotation.Annotation[] annotationArray7 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList8 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList8, annotationArray7);
        boolean boolean10 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList8);
        io.swagger.models.Swagger swagger11 = null;
        springMvcApiReader2.swagger = swagger11;
        io.swagger.annotations.ResponseHeader[] responseHeaderArray13 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap14 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray13);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type[] typeArray18 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet19 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet19, typeArray18);
        springMvcApiReader17.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet19);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = springMvcApiReader17.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap24 = null;
        java.lang.String str25 = springMvcApiReader17.parseOperationPath("", strMap24);
        io.swagger.annotations.Api api27 = null;
        boolean boolean28 = springMvcApiReader17.canReadApi(false, api27);
        java.util.Map<java.lang.String, java.lang.String> strMap30 = null;
        java.lang.String str31 = springMvcApiReader17.parseOperationPath("hi!", strMap30);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.Class<?> wildcardClass35 = springMvcApiReader34.getClass();
        springMvcApiReader17.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        io.swagger.models.Swagger swagger37 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter38 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader39 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger37, logAdapter38);
        java.lang.reflect.Type[] typeArray40 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet41 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet41, typeArray40);
        springMvcApiReader39.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet41);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter44 = springMvcApiReader39.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap46 = null;
        java.lang.String str47 = springMvcApiReader39.parseOperationPath("", strMap46);
        io.swagger.annotations.Api api49 = null;
        boolean boolean50 = springMvcApiReader39.canReadApi(false, api49);
        java.util.Map<java.lang.String, java.lang.String> strMap52 = null;
        java.lang.String str53 = springMvcApiReader39.parseOperationPath("hi!", strMap52);
        io.swagger.models.Swagger swagger54 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter55 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader56 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger54, logAdapter55);
        java.lang.Class<?> wildcardClass57 = springMvcApiReader56.getClass();
        springMvcApiReader39.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass57);
        java.util.Map<java.lang.String, java.lang.String> strMap60 = null;
        java.lang.String str61 = springMvcApiReader39.parseOperationPath("/hi!", strMap60);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray62 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap63 = springMvcApiReader39.parseResponseHeaders(responseHeaderArray62);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap64 = springMvcApiReader17.parseResponseHeaders(responseHeaderArray62);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap65 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray62);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass66 = strMap65.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(annotationArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(responseHeaderArray13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(typeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(logAdapter22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "/hi!" + "'", str31, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(typeArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(logAdapter44);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "/hi!" + "'", str53, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "/hi!" + "'", str61, "/hi!");
        org.junit.Assert.assertNotNull(responseHeaderArray62);
        org.junit.Assert.assertNull(strMap63);
        org.junit.Assert.assertNull(strMap64);
        org.junit.Assert.assertNull(strMap65);
    }

    @Test
    public void test03000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test03000");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        java.util.Set<java.lang.reflect.Type> typeSet5 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet6 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger14 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter15 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader16 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger14, logAdapter15);
        java.lang.reflect.Type[] typeArray17 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet18 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet18, typeArray17);
        springMvcApiReader16.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet18);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet18);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet18);
        io.swagger.models.Operation operation23 = null;
        io.swagger.annotations.ApiOperation apiOperation24 = null;
        springMvcApiReader2.updateTagsForOperation(operation23, apiOperation24);
        io.swagger.annotations.Api api27 = null;
        boolean boolean28 = springMvcApiReader2.canReadApi(false, api27);
        io.swagger.models.Swagger swagger29 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter30 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader31 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger29, logAdapter30);
        java.lang.reflect.Type[] typeArray32 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet33 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet33, typeArray32);
        springMvcApiReader31.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet33);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter36 = springMvcApiReader31.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap38 = null;
        java.lang.String str39 = springMvcApiReader31.parseOperationPath("", strMap38);
        java.lang.reflect.Type[] typeArray40 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList41 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList41, typeArray40);
        springMvcApiReader31.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList41);
        io.swagger.models.Swagger swagger44 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter45 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader46 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger44, logAdapter45);
        java.lang.reflect.Type[] typeArray47 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet48 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet48, typeArray47);
        springMvcApiReader46.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet48);
        java.lang.annotation.Annotation[] annotationArray51 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList52 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList52, annotationArray51);
        boolean boolean54 = springMvcApiReader46.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList52);
        boolean boolean55 = springMvcApiReader31.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList52);
        boolean boolean56 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList52);
        java.util.Set<java.lang.reflect.Type> typeSet57 = null;
        springMvcApiReader2.setTypesToSkip(typeSet57);
        org.junit.Assert.assertNotNull(typeSet5);
        org.junit.Assert.assertNotNull(typeSet6);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(typeArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(logAdapter36);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertNotNull(typeArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(typeArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(annotationArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
    }
}

