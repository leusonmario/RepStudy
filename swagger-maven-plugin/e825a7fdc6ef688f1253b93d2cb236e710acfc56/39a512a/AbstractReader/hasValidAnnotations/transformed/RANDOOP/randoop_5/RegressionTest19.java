import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest19 {

    public static boolean debug = false;

    @Test
    public void test9501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9501");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.util.Set<java.lang.reflect.Type> typeSet3 = springMvcApiReader2.typesToSkip;
        java.lang.String[] strArray7 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray10 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap11 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray12 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList13 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList13, securityRequirementArray12);
        io.swagger.models.Operation operation15 = null;
        springMvcApiReader2.updateOperation(strArray7, strArray10, strMap11, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList13, operation15);
        io.swagger.models.Swagger swagger17 = null;
        springMvcApiReader2.swagger = swagger17;
        io.swagger.models.Swagger swagger19 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter20 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader21 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger19, logAdapter20);
        java.lang.reflect.Type type22 = null;
        java.lang.annotation.Annotation[] annotationArray23 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList24 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList24, annotationArray23);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList26 = springMvcApiReader21.getParameters(type22, (java.util.List<java.lang.annotation.Annotation>) annotationList24);
        java.util.Set<java.lang.reflect.Type> typeSet27 = null;
        springMvcApiReader21.typesToSkip = typeSet27;
        java.util.Map<java.lang.String, java.lang.String> strMap30 = null;
        java.lang.String str31 = springMvcApiReader21.parseOperationPath("/hi!", strMap30);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.reflect.Type type35 = null;
        java.lang.annotation.Annotation[] annotationArray36 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList37 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList37, annotationArray36);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList39 = springMvcApiReader34.getParameters(type35, (java.util.List<java.lang.annotation.Annotation>) annotationList37);
        io.swagger.models.Swagger swagger40 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter41 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader42 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger40, logAdapter41);
        java.lang.reflect.Type type43 = null;
        java.lang.annotation.Annotation[] annotationArray44 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList45 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList45, annotationArray44);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList47 = springMvcApiReader42.getParameters(type43, (java.util.List<java.lang.annotation.Annotation>) annotationList45);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray48 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap49 = springMvcApiReader42.parseResponseHeaders(responseHeaderArray48);
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        java.lang.reflect.Type[] typeArray52 = new java.lang.reflect.Type[] { wildcardClass51 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet53 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet53, typeArray52);
        springMvcApiReader42.typesToSkip = typeSet53;
        springMvcApiReader34.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet53);
        java.util.Map<java.lang.String, java.lang.String> strMap58 = null;
        java.lang.String str59 = springMvcApiReader34.parseOperationPath("hi!", strMap58);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray60 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap61 = springMvcApiReader34.parseResponseHeaders(responseHeaderArray60);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap62 = springMvcApiReader21.parseResponseHeaders(responseHeaderArray60);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap63 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray60);
        io.swagger.annotations.Api api65 = null;
        boolean boolean66 = springMvcApiReader2.canReadApi(false, api65);
        io.swagger.models.Swagger swagger67 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter68 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader69 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger67, logAdapter68);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray70 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap71 = springMvcApiReader69.parseResponseHeaders(responseHeaderArray70);
        io.swagger.models.Swagger swagger72 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter73 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader74 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger72, logAdapter73);
        java.lang.reflect.Type type75 = null;
        java.lang.annotation.Annotation[] annotationArray76 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList77 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList77, annotationArray76);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList79 = springMvcApiReader74.getParameters(type75, (java.util.List<java.lang.annotation.Annotation>) annotationList77);
        boolean boolean80 = springMvcApiReader69.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList77);
        java.util.Set<java.lang.reflect.Type> typeSet81 = springMvcApiReader69.getTypesToSkip();
        io.swagger.models.Swagger swagger82 = null;
        springMvcApiReader69.swagger = swagger82;
        java.lang.Class<?> wildcardClass84 = springMvcApiReader69.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass84);
        io.swagger.models.Operation operation86 = null;
        io.swagger.annotations.ApiOperation apiOperation87 = null;
        springMvcApiReader2.updateTagsForOperation(operation86, apiOperation87);
        io.swagger.models.Swagger swagger89 = null;
        springMvcApiReader2.swagger = swagger89;
        java.util.Set<java.lang.reflect.Type> typeSet91 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Operation operation92 = null;
        io.swagger.annotations.ApiOperation apiOperation93 = null;
        springMvcApiReader2.updateTagsForOperation(operation92, apiOperation93);
        java.lang.reflect.Type type95 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type95);
        org.junit.Assert.assertNotNull(typeSet3);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(securityRequirementArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(annotationArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(parameterList26);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "/hi!" + "'", str31, "/hi!");
        org.junit.Assert.assertNotNull(annotationArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(parameterList39);
        org.junit.Assert.assertNotNull(annotationArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(parameterList47);
        org.junit.Assert.assertNotNull(responseHeaderArray48);
        org.junit.Assert.assertNull(strMap49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(typeArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "/hi!" + "'", str59, "/hi!");
        org.junit.Assert.assertNotNull(responseHeaderArray60);
        org.junit.Assert.assertNull(strMap61);
        org.junit.Assert.assertNull(strMap62);
        org.junit.Assert.assertNull(strMap63);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNull(strMap71);
        org.junit.Assert.assertNotNull(annotationArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(parameterList79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(typeSet81);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertNotNull(typeSet91);
    }

    @Test
    public void test9502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9502");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray8 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap9 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass11);
        java.util.Set<java.lang.reflect.Type> typeSet13 = springMvcApiReader2.typesToSkip;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter14 = null;
        springMvcApiReader2.LOG = logAdapter14;
        java.util.Set<java.lang.reflect.Type> typeSet16 = null;
        springMvcApiReader2.typesToSkip = typeSet16;
        java.util.Set<java.lang.reflect.Type> typeSet18 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger19 = null;
        springMvcApiReader2.swagger = swagger19;
        springMvcApiReader2.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet22 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger23 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter24 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader25 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger23, logAdapter24);
        java.lang.reflect.Type type26 = null;
        java.lang.annotation.Annotation[] annotationArray27 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList28 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList28, annotationArray27);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList30 = springMvcApiReader25.getParameters(type26, (java.util.List<java.lang.annotation.Annotation>) annotationList28);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray31 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap32 = springMvcApiReader25.parseResponseHeaders(responseHeaderArray31);
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        springMvcApiReader25.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass34);
        java.util.Set<java.lang.reflect.Type> typeSet36 = springMvcApiReader25.typesToSkip;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter37 = null;
        springMvcApiReader25.LOG = logAdapter37;
        java.util.Set<java.lang.reflect.Type> typeSet39 = null;
        springMvcApiReader25.typesToSkip = typeSet39;
        java.util.Set<java.lang.reflect.Type> typeSet41 = springMvcApiReader25.typesToSkip;
        io.swagger.models.Swagger swagger42 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter43 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader44 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger42, logAdapter43);
        java.util.Set<java.lang.reflect.Type> typeSet45 = springMvcApiReader44.typesToSkip;
        java.lang.String[] strArray49 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray52 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap53 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray54 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList55 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList55, securityRequirementArray54);
        io.swagger.models.Operation operation57 = null;
        springMvcApiReader44.updateOperation(strArray49, strArray52, strMap53, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList55, operation57);
        java.util.Set<java.lang.reflect.Type> typeSet59 = springMvcApiReader44.getTypesToSkip();
        springMvcApiReader25.setTypesToSkip(typeSet59);
        java.util.Map<java.lang.String, java.lang.String> strMap62 = null;
        java.lang.String str63 = springMvcApiReader25.parseOperationPath("/hi!", strMap62);
        java.util.Set<java.lang.reflect.Type> typeSet64 = springMvcApiReader25.getTypesToSkip();
        springMvcApiReader2.setTypesToSkip(typeSet64);
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(responseHeaderArray8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(typeSet13);
        org.junit.Assert.assertNull(typeSet18);
        org.junit.Assert.assertNull(typeSet22);
        org.junit.Assert.assertNotNull(annotationArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(parameterList30);
        org.junit.Assert.assertNotNull(responseHeaderArray31);
        org.junit.Assert.assertNull(strMap32);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(typeSet36);
        org.junit.Assert.assertNull(typeSet41);
        org.junit.Assert.assertNotNull(typeSet45);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNotNull(securityRequirementArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(typeSet59);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "/hi!" + "'", str63, "/hi!");
        org.junit.Assert.assertNotNull(typeSet64);
    }

    @Test
    public void test9503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9503");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.util.Set<java.lang.reflect.Type> typeSet3 = springMvcApiReader2.typesToSkip;
        springMvcApiReader2.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet5 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger6 = null;
        springMvcApiReader2.swagger = swagger6;
        io.swagger.annotations.Api api9 = null;
        boolean boolean10 = springMvcApiReader2.canReadApi(true, api9);
        java.util.Set<java.lang.reflect.Type> typeSet11 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger12 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter13 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader14 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger12, logAdapter13);
        java.lang.reflect.Type type15 = null;
        java.lang.annotation.Annotation[] annotationArray16 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList17 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList17, annotationArray16);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList19 = springMvcApiReader14.getParameters(type15, (java.util.List<java.lang.annotation.Annotation>) annotationList17);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray20 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap21 = springMvcApiReader14.parseResponseHeaders(responseHeaderArray20);
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        java.lang.reflect.Type[] typeArray24 = new java.lang.reflect.Type[] { wildcardClass23 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet25 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet25, typeArray24);
        springMvcApiReader14.typesToSkip = typeSet25;
        java.util.Set<java.lang.reflect.Type> typeSet28 = springMvcApiReader14.typesToSkip;
        io.swagger.models.Swagger swagger29 = springMvcApiReader14.swagger;
        io.swagger.models.Swagger swagger30 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter31 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader32 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger30, logAdapter31);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray33 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap34 = springMvcApiReader32.parseResponseHeaders(responseHeaderArray33);
        io.swagger.models.Swagger swagger35 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter36 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader37 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger35, logAdapter36);
        java.lang.reflect.Type type38 = null;
        java.lang.annotation.Annotation[] annotationArray39 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList40 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList40, annotationArray39);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList42 = springMvcApiReader37.getParameters(type38, (java.util.List<java.lang.annotation.Annotation>) annotationList40);
        boolean boolean43 = springMvcApiReader32.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList40);
        java.util.Set<java.lang.reflect.Type> typeSet44 = springMvcApiReader32.getTypesToSkip();
        io.swagger.models.Swagger swagger45 = null;
        springMvcApiReader32.swagger = swagger45;
        java.util.Map<java.lang.String, java.lang.String> strMap48 = null;
        java.lang.String str49 = springMvcApiReader32.parseOperationPath("hi!", strMap48);
        java.lang.Class<?> wildcardClass50 = springMvcApiReader32.getClass();
        io.swagger.models.Swagger swagger51 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter52 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader53 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger51, logAdapter52);
        java.lang.reflect.Type type54 = null;
        java.lang.annotation.Annotation[] annotationArray55 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList56 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList56, annotationArray55);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList58 = springMvcApiReader53.getParameters(type54, (java.util.List<java.lang.annotation.Annotation>) annotationList56);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray59 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap60 = springMvcApiReader53.parseResponseHeaders(responseHeaderArray59);
        java.lang.Object obj61 = new java.lang.Object();
        java.lang.Class<?> wildcardClass62 = obj61.getClass();
        springMvcApiReader53.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass62);
        java.util.Set<java.lang.reflect.Type> typeSet64 = springMvcApiReader53.typesToSkip;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter65 = null;
        springMvcApiReader53.LOG = logAdapter65;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter67 = springMvcApiReader53.LOG;
        io.swagger.models.Swagger swagger68 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter69 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader70 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger68, logAdapter69);
        java.lang.reflect.Type type71 = null;
        java.lang.annotation.Annotation[] annotationArray72 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList73 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList73, annotationArray72);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList75 = springMvcApiReader70.getParameters(type71, (java.util.List<java.lang.annotation.Annotation>) annotationList73);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray76 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap77 = springMvcApiReader70.parseResponseHeaders(responseHeaderArray76);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter78 = springMvcApiReader70.LOG;
        io.swagger.models.Swagger swagger79 = springMvcApiReader70.swagger;
        springMvcApiReader70.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet81 = springMvcApiReader70.getTypesToSkip();
        springMvcApiReader53.setTypesToSkip(typeSet81);
        java.lang.annotation.Annotation[] annotationArray83 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList84 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList84, annotationArray83);
        boolean boolean86 = springMvcApiReader53.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList84);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList87 = springMvcApiReader14.getParameters((java.lang.reflect.Type) wildcardClass50, (java.util.List<java.lang.annotation.Annotation>) annotationList84);
        java.util.Map<java.lang.String, java.lang.String> strMap88 = null;
        io.swagger.models.Operation operation89 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateOperationParameters(parameterList87, strMap88, operation89);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeSet3);
        org.junit.Assert.assertNotNull(typeSet5);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(typeSet11);
        org.junit.Assert.assertNotNull(annotationArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(parameterList19);
        org.junit.Assert.assertNotNull(responseHeaderArray20);
        org.junit.Assert.assertNull(strMap21);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(typeArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(typeSet28);
        org.junit.Assert.assertNull(swagger29);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNotNull(annotationArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(parameterList42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(typeSet44);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "/hi!" + "'", str49, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(annotationArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(parameterList58);
        org.junit.Assert.assertNotNull(responseHeaderArray59);
        org.junit.Assert.assertNull(strMap60);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(typeSet64);
        org.junit.Assert.assertNull(logAdapter67);
        org.junit.Assert.assertNotNull(annotationArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(parameterList75);
        org.junit.Assert.assertNotNull(responseHeaderArray76);
        org.junit.Assert.assertNull(strMap77);
        org.junit.Assert.assertNull(logAdapter78);
        org.junit.Assert.assertNull(swagger79);
        org.junit.Assert.assertNotNull(typeSet81);
        org.junit.Assert.assertNotNull(annotationArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(parameterList87);
    }

    @Test
    public void test9504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9504");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray3 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap4 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray3);
        io.swagger.models.Swagger swagger5 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter6 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader7 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger5, logAdapter6);
        java.lang.reflect.Type type8 = null;
        java.lang.annotation.Annotation[] annotationArray9 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList10 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList10, annotationArray9);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList12 = springMvcApiReader7.getParameters(type8, (java.util.List<java.lang.annotation.Annotation>) annotationList10);
        boolean boolean13 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList10);
        java.util.Set<java.lang.reflect.Type> typeSet14 = springMvcApiReader2.getTypesToSkip();
        springMvcApiReader2.updateExtensionChain();
        springMvcApiReader2.updateExtensionChain();
        java.util.Map<java.lang.String, java.lang.String> strMap18 = null;
        java.lang.String str19 = springMvcApiReader2.parseOperationPath("", strMap18);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray20 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap21 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray20);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNotNull(annotationArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(parameterList12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(typeSet14);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertNull(strMap21);
    }

    @Test
    public void test9505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9505");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray3 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap4 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray3);
        io.swagger.models.Swagger swagger5 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger6 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader8 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger6, logAdapter7);
        java.lang.reflect.Type type9 = null;
        java.lang.annotation.Annotation[] annotationArray10 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList11 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList11, annotationArray10);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList13 = springMvcApiReader8.getParameters(type9, (java.util.List<java.lang.annotation.Annotation>) annotationList11);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray14 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap15 = springMvcApiReader8.parseResponseHeaders(responseHeaderArray14);
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        springMvcApiReader8.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass17);
        java.util.Set<java.lang.reflect.Type> typeSet19 = springMvcApiReader8.typesToSkip;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter20 = null;
        springMvcApiReader8.LOG = logAdapter20;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = springMvcApiReader8.LOG;
        io.swagger.models.Swagger swagger23 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter24 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader25 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger23, logAdapter24);
        io.swagger.models.Swagger swagger26 = null;
        springMvcApiReader25.swagger = swagger26;
        io.swagger.models.Swagger swagger28 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter29 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader30 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger28, logAdapter29);
        java.lang.reflect.Type type31 = null;
        java.lang.annotation.Annotation[] annotationArray32 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList33 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList33, annotationArray32);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList35 = springMvcApiReader30.getParameters(type31, (java.util.List<java.lang.annotation.Annotation>) annotationList33);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray36 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap37 = springMvcApiReader30.parseResponseHeaders(responseHeaderArray36);
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.reflect.Type[] typeArray40 = new java.lang.reflect.Type[] { wildcardClass39 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet41 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet41, typeArray40);
        springMvcApiReader30.typesToSkip = typeSet41;
        springMvcApiReader25.typesToSkip = typeSet41;
        springMvcApiReader8.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet41);
        springMvcApiReader2.typesToSkip = typeSet41;
        io.swagger.models.Swagger swagger47 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger48 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter49 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader50 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger48, logAdapter49);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray51 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap52 = springMvcApiReader50.parseResponseHeaders(responseHeaderArray51);
        io.swagger.models.Swagger swagger53 = springMvcApiReader50.swagger;
        java.util.Set<java.lang.reflect.Type> typeSet54 = springMvcApiReader50.typesToSkip;
        java.lang.Class<?> wildcardClass55 = typeSet54.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass55);
        io.swagger.models.Operation operation57 = null;
        io.swagger.annotations.ApiOperation apiOperation58 = null;
        springMvcApiReader2.updateTagsForOperation(operation57, apiOperation58);
        java.lang.reflect.Method method60 = null;
        io.swagger.models.Operation operation61 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.readImplicitParameters(method60, operation61);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(swagger5);
        org.junit.Assert.assertNotNull(annotationArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(parameterList13);
        org.junit.Assert.assertNotNull(responseHeaderArray14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(typeSet19);
        org.junit.Assert.assertNull(logAdapter22);
        org.junit.Assert.assertNotNull(annotationArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(parameterList35);
        org.junit.Assert.assertNotNull(responseHeaderArray36);
        org.junit.Assert.assertNull(strMap37);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(typeArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(swagger47);
        org.junit.Assert.assertNull(strMap52);
        org.junit.Assert.assertNull(swagger53);
        org.junit.Assert.assertNotNull(typeSet54);
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test9506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9506");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.models.Swagger swagger8 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader10 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger8, logAdapter9);
        java.lang.reflect.Type type11 = null;
        java.lang.annotation.Annotation[] annotationArray12 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList13 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList13, annotationArray12);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList15 = springMvcApiReader10.getParameters(type11, (java.util.List<java.lang.annotation.Annotation>) annotationList13);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray16 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap17 = springMvcApiReader10.parseResponseHeaders(responseHeaderArray16);
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        java.lang.reflect.Type[] typeArray20 = new java.lang.reflect.Type[] { wildcardClass19 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet21 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet21, typeArray20);
        springMvcApiReader10.typesToSkip = typeSet21;
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet21);
        java.util.Map<java.lang.String, java.lang.String> strMap26 = null;
        java.lang.String str27 = springMvcApiReader2.parseOperationPath("hi!", strMap26);
        io.swagger.models.Operation operation28 = null;
        io.swagger.annotations.ApiOperation apiOperation29 = null;
        springMvcApiReader2.updateTagsForOperation(operation28, apiOperation29);
        springMvcApiReader2.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet32 = springMvcApiReader2.getTypesToSkip();
        io.swagger.annotations.Api api33 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.lang.String> strSet34 = springMvcApiReader2.extractTags(api33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(annotationArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(parameterList15);
        org.junit.Assert.assertNotNull(responseHeaderArray16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(typeArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "/hi!" + "'", str27, "/hi!");
        org.junit.Assert.assertNotNull(typeSet32);
    }

    @Test
    public void test9507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9507");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.util.Set<java.lang.reflect.Type> typeSet3 = springMvcApiReader2.typesToSkip;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger5 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter6 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader7 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger5, logAdapter6);
        java.lang.reflect.Type type8 = null;
        java.lang.annotation.Annotation[] annotationArray9 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList10 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList10, annotationArray9);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList12 = springMvcApiReader7.getParameters(type8, (java.util.List<java.lang.annotation.Annotation>) annotationList10);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray13 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap14 = springMvcApiReader7.parseResponseHeaders(responseHeaderArray13);
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        springMvcApiReader7.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass16);
        io.swagger.models.Swagger swagger18 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter19 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader20 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger18, logAdapter19);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray21 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap22 = springMvcApiReader20.parseResponseHeaders(responseHeaderArray21);
        io.swagger.models.Swagger swagger23 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter24 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader25 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger23, logAdapter24);
        java.lang.reflect.Type type26 = null;
        java.lang.annotation.Annotation[] annotationArray27 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList28 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList28, annotationArray27);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList30 = springMvcApiReader25.getParameters(type26, (java.util.List<java.lang.annotation.Annotation>) annotationList28);
        boolean boolean31 = springMvcApiReader20.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList28);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList32 = springMvcApiReader2.getParameters((java.lang.reflect.Type) wildcardClass16, (java.util.List<java.lang.annotation.Annotation>) annotationList28);
        java.lang.reflect.Type type33 = null;
        java.lang.annotation.Annotation[] annotationArray34 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList35 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList35, annotationArray34);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList37 = springMvcApiReader2.getParameters(type33, (java.util.List<java.lang.annotation.Annotation>) annotationList35);
        io.swagger.models.Swagger swagger38 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger39 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter40 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader41 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger39, logAdapter40);
        java.lang.reflect.Type type42 = null;
        java.lang.annotation.Annotation[] annotationArray43 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList44 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList44, annotationArray43);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList46 = springMvcApiReader41.getParameters(type42, (java.util.List<java.lang.annotation.Annotation>) annotationList44);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray47 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap48 = springMvcApiReader41.parseResponseHeaders(responseHeaderArray47);
        java.lang.Object obj49 = new java.lang.Object();
        java.lang.Class<?> wildcardClass50 = obj49.getClass();
        java.lang.reflect.Type[] typeArray51 = new java.lang.reflect.Type[] { wildcardClass50 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet52 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet52, typeArray51);
        springMvcApiReader41.typesToSkip = typeSet52;
        io.swagger.annotations.Api api56 = null;
        boolean boolean57 = springMvcApiReader41.canReadApi(false, api56);
        java.util.Set<java.lang.reflect.Type> typeSet58 = springMvcApiReader41.getTypesToSkip();
        springMvcApiReader2.setTypesToSkip(typeSet58);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter60 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger61 = springMvcApiReader2.swagger;
        org.junit.Assert.assertNotNull(typeSet3);
        org.junit.Assert.assertNotNull(annotationArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(parameterList12);
        org.junit.Assert.assertNotNull(responseHeaderArray13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertNotNull(annotationArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(parameterList30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(parameterList32);
        org.junit.Assert.assertNotNull(annotationArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(parameterList37);
        org.junit.Assert.assertNull(swagger38);
        org.junit.Assert.assertNotNull(annotationArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(parameterList46);
        org.junit.Assert.assertNotNull(responseHeaderArray47);
        org.junit.Assert.assertNull(strMap48);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(typeArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(typeSet58);
        org.junit.Assert.assertNull(logAdapter60);
        org.junit.Assert.assertNull(swagger61);
    }

    @Test
    public void test9508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9508");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.util.Set<java.lang.reflect.Type> typeSet3 = springMvcApiReader2.typesToSkip;
        java.lang.String[] strArray7 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray10 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap11 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray12 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList13 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList13, securityRequirementArray12);
        io.swagger.models.Operation operation15 = null;
        springMvcApiReader2.updateOperation(strArray7, strArray10, strMap11, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList13, operation15);
        java.util.Set<java.lang.reflect.Type> typeSet17 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Operation operation18 = null;
        io.swagger.annotations.ApiOperation apiOperation19 = null;
        springMvcApiReader2.updateTagsForOperation(operation18, apiOperation19);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter21 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger22 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader24 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger22, logAdapter23);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray25 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap26 = springMvcApiReader24.parseResponseHeaders(responseHeaderArray25);
        io.swagger.models.Swagger swagger27 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter28 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader29 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger27, logAdapter28);
        java.lang.reflect.Type type30 = null;
        java.lang.annotation.Annotation[] annotationArray31 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList32 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList32, annotationArray31);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList34 = springMvcApiReader29.getParameters(type30, (java.util.List<java.lang.annotation.Annotation>) annotationList32);
        boolean boolean35 = springMvcApiReader24.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList32);
        java.util.Set<java.lang.reflect.Type> typeSet36 = springMvcApiReader24.getTypesToSkip();
        springMvcApiReader2.typesToSkip = typeSet36;
        java.util.Set<java.lang.reflect.Type> typeSet38 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger39 = springMvcApiReader2.swagger;
        io.swagger.annotations.Api api41 = null;
        boolean boolean42 = springMvcApiReader2.canReadApi(false, api41);
        io.swagger.models.Operation operation43 = null;
        io.swagger.annotations.ApiOperation apiOperation44 = null;
        springMvcApiReader2.updateTagsForOperation(operation43, apiOperation44);
        org.junit.Assert.assertNotNull(typeSet3);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(securityRequirementArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(typeSet17);
        org.junit.Assert.assertNull(logAdapter21);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertNotNull(annotationArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(parameterList34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(typeSet36);
        org.junit.Assert.assertNotNull(typeSet38);
        org.junit.Assert.assertNull(swagger39);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    }

    @Test
    public void test9509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9509");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.util.Set<java.lang.reflect.Type> typeSet3 = springMvcApiReader2.typesToSkip;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger5 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter6 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader7 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger5, logAdapter6);
        java.lang.reflect.Type type8 = null;
        java.lang.annotation.Annotation[] annotationArray9 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList10 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList10, annotationArray9);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList12 = springMvcApiReader7.getParameters(type8, (java.util.List<java.lang.annotation.Annotation>) annotationList10);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray13 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap14 = springMvcApiReader7.parseResponseHeaders(responseHeaderArray13);
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        springMvcApiReader7.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass16);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass16);
        io.swagger.models.Swagger swagger19 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter20 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader21 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger19, logAdapter20);
        java.lang.reflect.Type type22 = null;
        java.lang.annotation.Annotation[] annotationArray23 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList24 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList24, annotationArray23);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList26 = springMvcApiReader21.getParameters(type22, (java.util.List<java.lang.annotation.Annotation>) annotationList24);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray27 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap28 = springMvcApiReader21.parseResponseHeaders(responseHeaderArray27);
        io.swagger.models.Swagger swagger29 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter30 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader31 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger29, logAdapter30);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray32 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap33 = springMvcApiReader31.parseResponseHeaders(responseHeaderArray32);
        io.swagger.models.Swagger swagger34 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter35 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader36 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger34, logAdapter35);
        java.lang.reflect.Type type37 = null;
        java.lang.annotation.Annotation[] annotationArray38 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList39 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList39, annotationArray38);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList41 = springMvcApiReader36.getParameters(type37, (java.util.List<java.lang.annotation.Annotation>) annotationList39);
        boolean boolean42 = springMvcApiReader31.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList39);
        boolean boolean43 = springMvcApiReader21.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList39);
        io.swagger.models.Swagger swagger44 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter45 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader46 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger44, logAdapter45);
        java.lang.reflect.Type type47 = null;
        java.lang.annotation.Annotation[] annotationArray48 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList49 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList49, annotationArray48);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList51 = springMvcApiReader46.getParameters(type47, (java.util.List<java.lang.annotation.Annotation>) annotationList49);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray52 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap53 = springMvcApiReader46.parseResponseHeaders(responseHeaderArray52);
        io.swagger.models.Swagger swagger54 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter55 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader56 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger54, logAdapter55);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray57 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap58 = springMvcApiReader56.parseResponseHeaders(responseHeaderArray57);
        io.swagger.models.Swagger swagger59 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter60 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader61 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger59, logAdapter60);
        java.lang.reflect.Type type62 = null;
        java.lang.annotation.Annotation[] annotationArray63 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList64 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList64, annotationArray63);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList66 = springMvcApiReader61.getParameters(type62, (java.util.List<java.lang.annotation.Annotation>) annotationList64);
        boolean boolean67 = springMvcApiReader56.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList64);
        boolean boolean68 = springMvcApiReader46.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList64);
        boolean boolean69 = springMvcApiReader21.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList64);
        java.util.Set<java.lang.reflect.Type> typeSet70 = springMvcApiReader21.getTypesToSkip();
        springMvcApiReader2.typesToSkip = typeSet70;
        io.swagger.models.Swagger swagger72 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter73 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader74 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger72, logAdapter73);
        java.util.Set<java.lang.reflect.Type> typeSet75 = springMvcApiReader74.typesToSkip;
        java.lang.String[] strArray79 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray82 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap83 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray84 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList85 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList85, securityRequirementArray84);
        io.swagger.models.Operation operation87 = null;
        springMvcApiReader74.updateOperation(strArray79, strArray82, strMap83, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList85, operation87);
        java.lang.Class<?> wildcardClass89 = strArray79.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass89);
        java.util.Map<java.lang.String, java.lang.String> strMap92 = null;
        java.lang.String str93 = springMvcApiReader2.parseOperationPath("/hi!", strMap92);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter94 = null;
        springMvcApiReader2.LOG = logAdapter94;
        io.swagger.models.Operation operation96 = null;
        io.swagger.annotations.ApiOperation apiOperation97 = null;
        springMvcApiReader2.updateTagsForOperation(operation96, apiOperation97);
        org.junit.Assert.assertNotNull(typeSet3);
        org.junit.Assert.assertNotNull(annotationArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(parameterList12);
        org.junit.Assert.assertNotNull(responseHeaderArray13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(annotationArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(parameterList26);
        org.junit.Assert.assertNotNull(responseHeaderArray27);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNull(strMap33);
        org.junit.Assert.assertNotNull(annotationArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(parameterList41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(annotationArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(parameterList51);
        org.junit.Assert.assertNotNull(responseHeaderArray52);
        org.junit.Assert.assertNull(strMap53);
        org.junit.Assert.assertNull(strMap58);
        org.junit.Assert.assertNotNull(annotationArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(parameterList66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(typeSet70);
        org.junit.Assert.assertNotNull(typeSet75);
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertNotNull(securityRequirementArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "/hi!" + "'", str93, "/hi!");
    }

    @Test
    public void test9510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9510");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.util.Set<java.lang.reflect.Type> typeSet3 = springMvcApiReader2.typesToSkip;
        java.lang.String[] strArray7 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray10 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap11 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray12 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList13 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList13, securityRequirementArray12);
        io.swagger.models.Operation operation15 = null;
        springMvcApiReader2.updateOperation(strArray7, strArray10, strMap11, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList13, operation15);
        io.swagger.models.Swagger swagger17 = null;
        springMvcApiReader2.swagger = swagger17;
        io.swagger.models.Swagger swagger19 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter20 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader21 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger19, logAdapter20);
        java.util.Set<java.lang.reflect.Type> typeSet22 = springMvcApiReader21.typesToSkip;
        springMvcApiReader21.updateExtensionChain();
        io.swagger.models.Swagger swagger24 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter25 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader26 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger24, logAdapter25);
        java.lang.reflect.Type type27 = null;
        java.lang.annotation.Annotation[] annotationArray28 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList29 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList29, annotationArray28);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList31 = springMvcApiReader26.getParameters(type27, (java.util.List<java.lang.annotation.Annotation>) annotationList29);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray32 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap33 = springMvcApiReader26.parseResponseHeaders(responseHeaderArray32);
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        springMvcApiReader26.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        springMvcApiReader21.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        io.swagger.models.Swagger swagger38 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter39 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader40 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger38, logAdapter39);
        java.lang.reflect.Type type41 = null;
        java.lang.annotation.Annotation[] annotationArray42 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList43 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList43, annotationArray42);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList45 = springMvcApiReader40.getParameters(type41, (java.util.List<java.lang.annotation.Annotation>) annotationList43);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList46 = springMvcApiReader2.getParameters((java.lang.reflect.Type) wildcardClass35, (java.util.List<java.lang.annotation.Annotation>) annotationList43);
        springMvcApiReader2.updateExtensionChain();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter48 = springMvcApiReader2.LOG;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.annotations.Api api50 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.lang.String> strSet51 = springMvcApiReader2.extractTags(api50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeSet3);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(securityRequirementArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(typeSet22);
        org.junit.Assert.assertNotNull(annotationArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(parameterList31);
        org.junit.Assert.assertNotNull(responseHeaderArray32);
        org.junit.Assert.assertNull(strMap33);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(annotationArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(parameterList45);
        org.junit.Assert.assertNotNull(parameterList46);
        org.junit.Assert.assertNull(logAdapter48);
    }

    @Test
    public void test9511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9511");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        java.util.Set<java.lang.reflect.Type> typeSet8 = null;
        springMvcApiReader2.typesToSkip = typeSet8;
        java.util.Map<java.lang.String, java.lang.String> strMap11 = null;
        java.lang.String str12 = springMvcApiReader2.parseOperationPath("/hi!", strMap11);
        io.swagger.models.Swagger swagger13 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter14 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader15 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger13, logAdapter14);
        java.lang.reflect.Type type16 = null;
        java.lang.annotation.Annotation[] annotationArray17 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList18 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList18, annotationArray17);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList20 = springMvcApiReader15.getParameters(type16, (java.util.List<java.lang.annotation.Annotation>) annotationList18);
        io.swagger.models.Swagger swagger21 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader23 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger21, logAdapter22);
        java.lang.reflect.Type type24 = null;
        java.lang.annotation.Annotation[] annotationArray25 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList26 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList26, annotationArray25);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList28 = springMvcApiReader23.getParameters(type24, (java.util.List<java.lang.annotation.Annotation>) annotationList26);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray29 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap30 = springMvcApiReader23.parseResponseHeaders(responseHeaderArray29);
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        java.lang.reflect.Type[] typeArray33 = new java.lang.reflect.Type[] { wildcardClass32 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet34 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet34, typeArray33);
        springMvcApiReader23.typesToSkip = typeSet34;
        springMvcApiReader15.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet34);
        java.util.Map<java.lang.String, java.lang.String> strMap39 = null;
        java.lang.String str40 = springMvcApiReader15.parseOperationPath("hi!", strMap39);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray41 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap42 = springMvcApiReader15.parseResponseHeaders(responseHeaderArray41);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap43 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray41);
        java.util.Set<java.lang.reflect.Type> typeSet44 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger45 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter46 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader47 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger45, logAdapter46);
        java.lang.reflect.Type type48 = null;
        java.lang.annotation.Annotation[] annotationArray49 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList50 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList50, annotationArray49);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList52 = springMvcApiReader47.getParameters(type48, (java.util.List<java.lang.annotation.Annotation>) annotationList50);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray53 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap54 = springMvcApiReader47.parseResponseHeaders(responseHeaderArray53);
        java.lang.Object obj55 = new java.lang.Object();
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        springMvcApiReader47.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass56);
        io.swagger.models.Swagger swagger58 = springMvcApiReader47.swagger;
        java.lang.Object obj59 = new java.lang.Object();
        java.lang.Class<?> wildcardClass60 = obj59.getClass();
        java.lang.reflect.Type[] typeArray61 = new java.lang.reflect.Type[] { wildcardClass60 };
        java.util.ArrayList<java.lang.reflect.Type> typeList62 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList62, typeArray61);
        springMvcApiReader47.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList62);
        java.util.Set<java.lang.reflect.Type> typeSet65 = null;
        springMvcApiReader47.setTypesToSkip(typeSet65);
        io.swagger.models.Swagger swagger67 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter68 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader69 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger67, logAdapter68);
        java.lang.reflect.Type type70 = null;
        java.lang.annotation.Annotation[] annotationArray71 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList72 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList72, annotationArray71);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList74 = springMvcApiReader69.getParameters(type70, (java.util.List<java.lang.annotation.Annotation>) annotationList72);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray75 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap76 = springMvcApiReader69.parseResponseHeaders(responseHeaderArray75);
        java.lang.Object obj77 = new java.lang.Object();
        java.lang.Class<?> wildcardClass78 = obj77.getClass();
        java.lang.reflect.Type[] typeArray79 = new java.lang.reflect.Type[] { wildcardClass78 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet80 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet80, typeArray79);
        springMvcApiReader69.typesToSkip = typeSet80;
        java.util.Set<java.lang.reflect.Type> typeSet83 = springMvcApiReader69.typesToSkip;
        springMvcApiReader47.typesToSkip = typeSet83;
        springMvcApiReader2.typesToSkip = typeSet83;
        io.swagger.models.Swagger swagger86 = null;
        springMvcApiReader2.swagger = swagger86;
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap88 = null;
        io.swagger.annotations.Api api89 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, io.swagger.models.Tag> strMap90 = springMvcApiReader2.updateTagsForApi(strMap88, api89);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "/hi!" + "'", str12, "/hi!");
        org.junit.Assert.assertNotNull(annotationArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(parameterList20);
        org.junit.Assert.assertNotNull(annotationArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(parameterList28);
        org.junit.Assert.assertNotNull(responseHeaderArray29);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(typeArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "/hi!" + "'", str40, "/hi!");
        org.junit.Assert.assertNotNull(responseHeaderArray41);
        org.junit.Assert.assertNull(strMap42);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNull(typeSet44);
        org.junit.Assert.assertNotNull(annotationArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(parameterList52);
        org.junit.Assert.assertNotNull(responseHeaderArray53);
        org.junit.Assert.assertNull(strMap54);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNull(swagger58);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(typeArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(annotationArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(parameterList74);
        org.junit.Assert.assertNotNull(responseHeaderArray75);
        org.junit.Assert.assertNull(strMap76);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(typeArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(typeSet83);
    }

    @Test
    public void test9512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9512");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray3 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap4 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray3);
        io.swagger.models.Swagger swagger5 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter6 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader7 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger5, logAdapter6);
        java.lang.reflect.Type type8 = null;
        java.lang.annotation.Annotation[] annotationArray9 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList10 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList10, annotationArray9);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList12 = springMvcApiReader7.getParameters(type8, (java.util.List<java.lang.annotation.Annotation>) annotationList10);
        boolean boolean13 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList10);
        java.util.Set<java.lang.reflect.Type> typeSet14 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger15 = null;
        springMvcApiReader2.swagger = swagger15;
        java.util.Map<java.lang.String, java.lang.String> strMap18 = null;
        java.lang.String str19 = springMvcApiReader2.parseOperationPath("/hi!", strMap18);
        io.swagger.models.Swagger swagger20 = null;
        springMvcApiReader2.swagger = swagger20;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = null;
        springMvcApiReader2.LOG = logAdapter22;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter24 = null;
        springMvcApiReader2.LOG = logAdapter24;
        io.swagger.models.Operation operation26 = null;
        io.swagger.annotations.ApiOperation apiOperation27 = null;
        springMvcApiReader2.updateTagsForOperation(operation26, apiOperation27);
        io.swagger.annotations.Api api30 = null;
        boolean boolean31 = springMvcApiReader2.canReadApi(false, api30);
        java.util.Set<java.lang.reflect.Type> typeSet32 = springMvcApiReader2.getTypesToSkip();
        java.util.Map<java.lang.String, java.lang.String> strMap34 = null;
        java.lang.String str35 = springMvcApiReader2.parseOperationPath("hi!", strMap34);
        io.swagger.models.Swagger swagger36 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter37 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader38 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger36, logAdapter37);
        java.util.Set<java.lang.reflect.Type> typeSet39 = springMvcApiReader38.typesToSkip;
        springMvcApiReader38.updateExtensionChain();
        io.swagger.models.Swagger swagger41 = springMvcApiReader38.swagger;
        io.swagger.models.Swagger swagger42 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter43 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader44 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger42, logAdapter43);
        java.lang.reflect.Type type45 = null;
        java.lang.annotation.Annotation[] annotationArray46 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList47 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList47, annotationArray46);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList49 = springMvcApiReader44.getParameters(type45, (java.util.List<java.lang.annotation.Annotation>) annotationList47);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray50 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap51 = springMvcApiReader44.parseResponseHeaders(responseHeaderArray50);
        java.lang.Object obj52 = new java.lang.Object();
        java.lang.Class<?> wildcardClass53 = obj52.getClass();
        springMvcApiReader44.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass53);
        java.util.Set<java.lang.reflect.Type> typeSet55 = springMvcApiReader44.typesToSkip;
        io.swagger.models.Swagger swagger56 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter57 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader58 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger56, logAdapter57);
        java.util.Set<java.lang.reflect.Type> typeSet59 = springMvcApiReader58.typesToSkip;
        springMvcApiReader44.typesToSkip = typeSet59;
        io.swagger.annotations.Api api62 = null;
        boolean boolean63 = springMvcApiReader44.canReadApi(false, api62);
        io.swagger.models.Swagger swagger64 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter65 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader66 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger64, logAdapter65);
        java.lang.reflect.Type type67 = null;
        java.lang.annotation.Annotation[] annotationArray68 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList69 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList69, annotationArray68);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList71 = springMvcApiReader66.getParameters(type67, (java.util.List<java.lang.annotation.Annotation>) annotationList69);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray72 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap73 = springMvcApiReader66.parseResponseHeaders(responseHeaderArray72);
        java.lang.Object obj74 = new java.lang.Object();
        java.lang.Class<?> wildcardClass75 = obj74.getClass();
        springMvcApiReader66.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass75);
        io.swagger.models.Swagger swagger77 = springMvcApiReader66.swagger;
        java.lang.Object obj78 = new java.lang.Object();
        java.lang.Class<?> wildcardClass79 = obj78.getClass();
        java.lang.reflect.Type[] typeArray80 = new java.lang.reflect.Type[] { wildcardClass79 };
        java.util.ArrayList<java.lang.reflect.Type> typeList81 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList81, typeArray80);
        springMvcApiReader66.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList81);
        springMvcApiReader44.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList81);
        springMvcApiReader38.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList81);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList81);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNotNull(annotationArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(parameterList12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(typeSet14);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "/hi!" + "'", str19, "/hi!");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(typeSet32);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "/hi!" + "'", str35, "/hi!");
        org.junit.Assert.assertNotNull(typeSet39);
        org.junit.Assert.assertNull(swagger41);
        org.junit.Assert.assertNotNull(annotationArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(parameterList49);
        org.junit.Assert.assertNotNull(responseHeaderArray50);
        org.junit.Assert.assertNull(strMap51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(typeSet55);
        org.junit.Assert.assertNotNull(typeSet59);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(annotationArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(parameterList71);
        org.junit.Assert.assertNotNull(responseHeaderArray72);
        org.junit.Assert.assertNull(strMap73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNull(swagger77);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(typeArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
    }

    @Test
    public void test9513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9513");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.util.Set<java.lang.reflect.Type> typeSet3 = springMvcApiReader2.typesToSkip;
        java.lang.String[] strArray7 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray10 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap11 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray12 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList13 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList13, securityRequirementArray12);
        io.swagger.models.Operation operation15 = null;
        springMvcApiReader2.updateOperation(strArray7, strArray10, strMap11, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList13, operation15);
        io.swagger.models.Swagger swagger17 = null;
        springMvcApiReader2.swagger = swagger17;
        io.swagger.models.Swagger swagger19 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter20 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader21 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger19, logAdapter20);
        java.lang.reflect.Type type22 = null;
        java.lang.annotation.Annotation[] annotationArray23 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList24 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList24, annotationArray23);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList26 = springMvcApiReader21.getParameters(type22, (java.util.List<java.lang.annotation.Annotation>) annotationList24);
        io.swagger.models.Swagger swagger27 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter28 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader29 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger27, logAdapter28);
        java.lang.reflect.Type type30 = null;
        java.lang.annotation.Annotation[] annotationArray31 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList32 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList32, annotationArray31);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList34 = springMvcApiReader29.getParameters(type30, (java.util.List<java.lang.annotation.Annotation>) annotationList32);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray35 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap36 = springMvcApiReader29.parseResponseHeaders(responseHeaderArray35);
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        java.lang.reflect.Type[] typeArray39 = new java.lang.reflect.Type[] { wildcardClass38 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet40 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet40, typeArray39);
        springMvcApiReader29.typesToSkip = typeSet40;
        springMvcApiReader21.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet40);
        java.util.Map<java.lang.String, java.lang.String> strMap45 = null;
        java.lang.String str46 = springMvcApiReader21.parseOperationPath("hi!", strMap45);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray47 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap48 = springMvcApiReader21.parseResponseHeaders(responseHeaderArray47);
        io.swagger.models.Swagger swagger49 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter50 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader51 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger49, logAdapter50);
        java.util.Set<java.lang.reflect.Type> typeSet52 = springMvcApiReader51.typesToSkip;
        springMvcApiReader51.updateExtensionChain();
        io.swagger.models.Swagger swagger54 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter55 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader56 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger54, logAdapter55);
        java.lang.reflect.Type type57 = null;
        java.lang.annotation.Annotation[] annotationArray58 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList59 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList59, annotationArray58);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList61 = springMvcApiReader56.getParameters(type57, (java.util.List<java.lang.annotation.Annotation>) annotationList59);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray62 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap63 = springMvcApiReader56.parseResponseHeaders(responseHeaderArray62);
        java.lang.Object obj64 = new java.lang.Object();
        java.lang.Class<?> wildcardClass65 = obj64.getClass();
        springMvcApiReader56.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass65);
        io.swagger.models.Swagger swagger67 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter68 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader69 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger67, logAdapter68);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray70 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap71 = springMvcApiReader69.parseResponseHeaders(responseHeaderArray70);
        io.swagger.models.Swagger swagger72 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter73 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader74 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger72, logAdapter73);
        java.lang.reflect.Type type75 = null;
        java.lang.annotation.Annotation[] annotationArray76 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList77 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList77, annotationArray76);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList79 = springMvcApiReader74.getParameters(type75, (java.util.List<java.lang.annotation.Annotation>) annotationList77);
        boolean boolean80 = springMvcApiReader69.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList77);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList81 = springMvcApiReader51.getParameters((java.lang.reflect.Type) wildcardClass65, (java.util.List<java.lang.annotation.Annotation>) annotationList77);
        boolean boolean82 = springMvcApiReader21.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList77);
        boolean boolean83 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList77);
        io.swagger.models.Operation operation84 = null;
        io.swagger.annotations.ApiOperation apiOperation85 = null;
        springMvcApiReader2.updateTagsForOperation(operation84, apiOperation85);
        io.swagger.models.Swagger swagger87 = springMvcApiReader2.swagger;
        java.util.Map<java.lang.String, java.lang.String> strMap89 = null;
        java.lang.String str90 = springMvcApiReader2.parseOperationPath("", strMap89);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter91 = springMvcApiReader2.LOG;
        org.junit.Assert.assertNotNull(typeSet3);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(securityRequirementArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(annotationArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(parameterList26);
        org.junit.Assert.assertNotNull(annotationArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(parameterList34);
        org.junit.Assert.assertNotNull(responseHeaderArray35);
        org.junit.Assert.assertNull(strMap36);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(typeArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "/hi!" + "'", str46, "/hi!");
        org.junit.Assert.assertNotNull(responseHeaderArray47);
        org.junit.Assert.assertNull(strMap48);
        org.junit.Assert.assertNotNull(typeSet52);
        org.junit.Assert.assertNotNull(annotationArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(parameterList61);
        org.junit.Assert.assertNotNull(responseHeaderArray62);
        org.junit.Assert.assertNull(strMap63);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNull(strMap71);
        org.junit.Assert.assertNotNull(annotationArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(parameterList79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(parameterList81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNull(swagger87);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "" + "'", str90, "");
        org.junit.Assert.assertNull(logAdapter91);
    }

    @Test
    public void test9514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9514");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray3 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap4 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray3);
        java.lang.reflect.Type[] typeArray5 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet6 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet6, typeArray5);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet6);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        springMvcApiReader2.LOG = logAdapter9;
        io.swagger.models.Swagger swagger11 = null;
        springMvcApiReader2.swagger = swagger11;
        io.swagger.models.Swagger swagger13 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter14 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader15 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger13, logAdapter14);
        io.swagger.models.Swagger swagger16 = null;
        springMvcApiReader15.swagger = swagger16;
        io.swagger.models.Swagger swagger18 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter19 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader20 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger18, logAdapter19);
        java.lang.reflect.Type type21 = null;
        java.lang.annotation.Annotation[] annotationArray22 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList23 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList23, annotationArray22);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList25 = springMvcApiReader20.getParameters(type21, (java.util.List<java.lang.annotation.Annotation>) annotationList23);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray26 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap27 = springMvcApiReader20.parseResponseHeaders(responseHeaderArray26);
        java.lang.Object obj28 = new java.lang.Object();
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        java.lang.reflect.Type[] typeArray30 = new java.lang.reflect.Type[] { wildcardClass29 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet31 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet31, typeArray30);
        springMvcApiReader20.typesToSkip = typeSet31;
        springMvcApiReader15.typesToSkip = typeSet31;
        springMvcApiReader2.typesToSkip = typeSet31;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter36 = null;
        springMvcApiReader2.LOG = logAdapter36;
        java.util.Set<java.lang.reflect.Type> typeSet38 = springMvcApiReader2.typesToSkip;
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap39 = null;
        io.swagger.annotations.Api api40 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, io.swagger.models.Tag> strMap41 = springMvcApiReader2.updateTagsForApi(strMap39, api40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNotNull(typeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(annotationArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(parameterList25);
        org.junit.Assert.assertNotNull(responseHeaderArray26);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(typeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(typeSet38);
    }

    @Test
    public void test9515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9515");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray8 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap9 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass11);
        java.util.Set<java.lang.reflect.Type> typeSet13 = springMvcApiReader2.typesToSkip;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter14 = null;
        springMvcApiReader2.LOG = logAdapter14;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        io.swagger.models.Swagger swagger20 = null;
        springMvcApiReader19.swagger = swagger20;
        io.swagger.models.Swagger swagger22 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader24 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger22, logAdapter23);
        java.lang.reflect.Type type25 = null;
        java.lang.annotation.Annotation[] annotationArray26 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList27 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList27, annotationArray26);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList29 = springMvcApiReader24.getParameters(type25, (java.util.List<java.lang.annotation.Annotation>) annotationList27);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray30 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap31 = springMvcApiReader24.parseResponseHeaders(responseHeaderArray30);
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.reflect.Type[] typeArray34 = new java.lang.reflect.Type[] { wildcardClass33 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet35 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet35, typeArray34);
        springMvcApiReader24.typesToSkip = typeSet35;
        springMvcApiReader19.typesToSkip = typeSet35;
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet35);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter40 = springMvcApiReader2.LOG;
        io.swagger.annotations.Api api42 = null;
        boolean boolean43 = springMvcApiReader2.canReadApi(true, api42);
        io.swagger.models.Swagger swagger44 = null;
        springMvcApiReader2.swagger = swagger44;
        io.swagger.annotations.Api api46 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.lang.String> strSet47 = springMvcApiReader2.extractTags(api46);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(responseHeaderArray8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(typeSet13);
        org.junit.Assert.assertNull(logAdapter16);
        org.junit.Assert.assertNotNull(annotationArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(parameterList29);
        org.junit.Assert.assertNotNull(responseHeaderArray30);
        org.junit.Assert.assertNull(strMap31);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(typeArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNull(logAdapter40);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    }

    @Test
    public void test9516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9516");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray8 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap9 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass11);
        java.util.Set<java.lang.reflect.Type> typeSet13 = springMvcApiReader2.typesToSkip;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter14 = null;
        springMvcApiReader2.LOG = logAdapter14;
        io.swagger.annotations.Api api17 = null;
        boolean boolean18 = springMvcApiReader2.canReadApi(true, api17);
        java.util.Set<java.lang.reflect.Type> typeSet19 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet20 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger21 = springMvcApiReader2.swagger;
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap22 = null;
        io.swagger.annotations.Api api23 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, io.swagger.models.Tag> strMap24 = springMvcApiReader2.updateTagsForApi(strMap22, api23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(responseHeaderArray8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(typeSet13);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(typeSet19);
        org.junit.Assert.assertNotNull(typeSet20);
        org.junit.Assert.assertNull(swagger21);
    }

    @Test
    public void test9517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9517");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.util.Set<java.lang.reflect.Type> typeSet3 = springMvcApiReader2.typesToSkip;
        springMvcApiReader2.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet5 = null;
        springMvcApiReader2.setTypesToSkip(typeSet5);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.util.Set<java.lang.reflect.Type> typeSet10 = springMvcApiReader9.typesToSkip;
        java.lang.String[] strArray14 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray17 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap18 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray19 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList20 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList20, securityRequirementArray19);
        io.swagger.models.Operation operation22 = null;
        springMvcApiReader9.updateOperation(strArray14, strArray17, strMap18, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList20, operation22);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter24 = springMvcApiReader9.LOG;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter25 = springMvcApiReader9.LOG;
        java.util.Set<java.lang.reflect.Type> typeSet26 = springMvcApiReader9.getTypesToSkip();
        springMvcApiReader2.typesToSkip = typeSet26;
        io.swagger.models.Operation operation28 = null;
        io.swagger.annotations.ApiOperation apiOperation29 = null;
        springMvcApiReader2.updateTagsForOperation(operation28, apiOperation29);
        io.swagger.annotations.Api api31 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<io.swagger.models.SecurityRequirement> securityRequirementList32 = springMvcApiReader2.getSecurityRequirements(api31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeSet3);
        org.junit.Assert.assertNotNull(typeSet10);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(securityRequirementArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(logAdapter24);
        org.junit.Assert.assertNull(logAdapter25);
        org.junit.Assert.assertNotNull(typeSet26);
    }

    @Test
    public void test9518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9518");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray8 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap9 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray8);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter10 = springMvcApiReader2.LOG;
        java.util.Set<java.lang.reflect.Type> typeSet11 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet12 = springMvcApiReader2.typesToSkip;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter13 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger14 = springMvcApiReader2.swagger;
        com.github.kongchen.swagger.docgen.spring.SpringResource springResource15 = null;
        // The following exception was thrown during execution in test generation
        try {
            io.swagger.models.Swagger swagger16 = springMvcApiReader2.read(springResource15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(responseHeaderArray8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(logAdapter10);
        org.junit.Assert.assertNotNull(typeSet11);
        org.junit.Assert.assertNotNull(typeSet12);
        org.junit.Assert.assertNull(logAdapter13);
        org.junit.Assert.assertNull(swagger14);
    }

    @Test
    public void test9519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9519");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        java.util.Set<java.lang.reflect.Type> typeSet8 = null;
        springMvcApiReader2.typesToSkip = typeSet8;
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader12 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger10, logAdapter11);
        java.util.Set<java.lang.reflect.Type> typeSet13 = springMvcApiReader12.typesToSkip;
        java.lang.String[] strArray17 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray20 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap21 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray22 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList23 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList23, securityRequirementArray22);
        io.swagger.models.Operation operation25 = null;
        springMvcApiReader12.updateOperation(strArray17, strArray20, strMap21, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList23, operation25);
        java.lang.String[] strArray33 = new java.lang.String[] { "/hi!", "", "/hi!", "hi!", "hi!", "hi!" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap34 = null;
        io.swagger.models.Swagger swagger35 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter36 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader37 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger35, logAdapter36);
        java.util.Set<java.lang.reflect.Type> typeSet38 = springMvcApiReader37.typesToSkip;
        java.lang.String[] strArray42 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray45 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap46 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray47 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList48 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList48, securityRequirementArray47);
        io.swagger.models.Operation operation50 = null;
        springMvcApiReader37.updateOperation(strArray42, strArray45, strMap46, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList48, operation50);
        io.swagger.models.Operation operation52 = null;
        springMvcApiReader2.updateOperation(strArray17, strArray33, strMap34, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList48, operation52);
        io.swagger.annotations.Api api55 = null;
        boolean boolean56 = springMvcApiReader2.canReadApi(true, api55);
        java.util.Set<java.lang.reflect.Type> typeSet57 = springMvcApiReader2.typesToSkip;
        io.swagger.annotations.Api api59 = null;
        boolean boolean60 = springMvcApiReader2.canReadApi(false, api59);
        java.util.Set<java.lang.reflect.Type> typeSet61 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger62 = springMvcApiReader2.swagger;
        io.swagger.models.Operation operation63 = null;
        io.swagger.annotations.ApiOperation apiOperation64 = null;
        springMvcApiReader2.updateTagsForOperation(operation63, apiOperation64);
        java.util.Set<java.lang.reflect.Type> typeSet66 = springMvcApiReader2.getTypesToSkip();
        io.swagger.annotations.Api api68 = null;
        boolean boolean69 = springMvcApiReader2.canReadApi(false, api68);
        java.lang.reflect.Method method70 = null;
        io.swagger.models.Operation operation71 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.readImplicitParameters(method70, operation71);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(typeSet13);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(securityRequirementArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(typeSet38);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(securityRequirementArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(typeSet57);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNull(typeSet61);
        org.junit.Assert.assertNull(swagger62);
        org.junit.Assert.assertNull(typeSet66);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
    }

    @Test
    public void test9520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9520");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        java.util.Set<java.lang.reflect.Type> typeSet8 = null;
        springMvcApiReader2.typesToSkip = typeSet8;
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader12 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger10, logAdapter11);
        java.util.Set<java.lang.reflect.Type> typeSet13 = springMvcApiReader12.typesToSkip;
        java.lang.String[] strArray17 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray20 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap21 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray22 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList23 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList23, securityRequirementArray22);
        io.swagger.models.Operation operation25 = null;
        springMvcApiReader12.updateOperation(strArray17, strArray20, strMap21, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList23, operation25);
        java.lang.String[] strArray33 = new java.lang.String[] { "/hi!", "", "/hi!", "hi!", "hi!", "hi!" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap34 = null;
        io.swagger.models.Swagger swagger35 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter36 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader37 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger35, logAdapter36);
        java.util.Set<java.lang.reflect.Type> typeSet38 = springMvcApiReader37.typesToSkip;
        java.lang.String[] strArray42 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray45 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap46 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray47 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList48 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList48, securityRequirementArray47);
        io.swagger.models.Operation operation50 = null;
        springMvcApiReader37.updateOperation(strArray42, strArray45, strMap46, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList48, operation50);
        io.swagger.models.Operation operation52 = null;
        springMvcApiReader2.updateOperation(strArray17, strArray33, strMap34, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList48, operation52);
        io.swagger.annotations.Api api55 = null;
        boolean boolean56 = springMvcApiReader2.canReadApi(true, api55);
        java.util.Set<java.lang.reflect.Type> typeSet57 = springMvcApiReader2.typesToSkip;
        io.swagger.annotations.Api api59 = null;
        boolean boolean60 = springMvcApiReader2.canReadApi(false, api59);
        java.util.Set<java.lang.reflect.Type> typeSet61 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger62 = springMvcApiReader2.swagger;
        io.swagger.models.Operation operation63 = null;
        io.swagger.annotations.ApiOperation apiOperation64 = null;
        springMvcApiReader2.updateTagsForOperation(operation63, apiOperation64);
        java.lang.annotation.Annotation[] annotationArray66 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList67 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList67, annotationArray66);
        boolean boolean69 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList67);
        io.swagger.models.Operation operation70 = null;
        io.swagger.annotations.ApiOperation apiOperation71 = null;
        springMvcApiReader2.updateTagsForOperation(operation70, apiOperation71);
        io.swagger.models.Swagger swagger73 = springMvcApiReader2.swagger;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter74 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger75 = null;
        springMvcApiReader2.swagger = swagger75;
        java.lang.Class<?> wildcardClass77 = springMvcApiReader2.getClass();
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(typeSet13);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(securityRequirementArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(typeSet38);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(securityRequirementArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(typeSet57);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNull(typeSet61);
        org.junit.Assert.assertNull(swagger62);
        org.junit.Assert.assertNotNull(annotationArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNull(swagger73);
        org.junit.Assert.assertNull(logAdapter74);
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test9521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9521");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray3 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap4 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray3);
        java.lang.reflect.Type[] typeArray5 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet6 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet6, typeArray5);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet6);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        springMvcApiReader2.LOG = logAdapter9;
        io.swagger.models.Swagger swagger11 = null;
        springMvcApiReader2.swagger = swagger11;
        io.swagger.models.Swagger swagger13 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter14 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader15 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger13, logAdapter14);
        io.swagger.models.Swagger swagger16 = null;
        springMvcApiReader15.swagger = swagger16;
        io.swagger.models.Swagger swagger18 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter19 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader20 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger18, logAdapter19);
        java.lang.reflect.Type type21 = null;
        java.lang.annotation.Annotation[] annotationArray22 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList23 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList23, annotationArray22);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList25 = springMvcApiReader20.getParameters(type21, (java.util.List<java.lang.annotation.Annotation>) annotationList23);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray26 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap27 = springMvcApiReader20.parseResponseHeaders(responseHeaderArray26);
        java.lang.Object obj28 = new java.lang.Object();
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        java.lang.reflect.Type[] typeArray30 = new java.lang.reflect.Type[] { wildcardClass29 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet31 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet31, typeArray30);
        springMvcApiReader20.typesToSkip = typeSet31;
        springMvcApiReader15.typesToSkip = typeSet31;
        springMvcApiReader2.typesToSkip = typeSet31;
        java.util.Set<java.lang.reflect.Type> typeSet36 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger37 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter38 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader39 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger37, logAdapter38);
        java.lang.reflect.Type type40 = null;
        java.lang.annotation.Annotation[] annotationArray41 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList42 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList42, annotationArray41);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList44 = springMvcApiReader39.getParameters(type40, (java.util.List<java.lang.annotation.Annotation>) annotationList42);
        io.swagger.models.Swagger swagger45 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter46 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader47 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger45, logAdapter46);
        java.lang.reflect.Type type48 = null;
        java.lang.annotation.Annotation[] annotationArray49 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList50 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList50, annotationArray49);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList52 = springMvcApiReader47.getParameters(type48, (java.util.List<java.lang.annotation.Annotation>) annotationList50);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray53 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap54 = springMvcApiReader47.parseResponseHeaders(responseHeaderArray53);
        java.lang.Object obj55 = new java.lang.Object();
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        java.lang.reflect.Type[] typeArray57 = new java.lang.reflect.Type[] { wildcardClass56 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet58 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet58, typeArray57);
        springMvcApiReader47.typesToSkip = typeSet58;
        springMvcApiReader39.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet58);
        java.util.Map<java.lang.String, java.lang.String> strMap63 = null;
        java.lang.String str64 = springMvcApiReader39.parseOperationPath("hi!", strMap63);
        io.swagger.models.Operation operation65 = null;
        io.swagger.annotations.ApiOperation apiOperation66 = null;
        springMvcApiReader39.updateTagsForOperation(operation65, apiOperation66);
        io.swagger.models.Swagger swagger68 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter69 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader70 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger68, logAdapter69);
        java.lang.reflect.Type type71 = null;
        java.lang.annotation.Annotation[] annotationArray72 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList73 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList73, annotationArray72);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList75 = springMvcApiReader70.getParameters(type71, (java.util.List<java.lang.annotation.Annotation>) annotationList73);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray76 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap77 = springMvcApiReader70.parseResponseHeaders(responseHeaderArray76);
        java.lang.Object obj78 = new java.lang.Object();
        java.lang.Class<?> wildcardClass79 = obj78.getClass();
        springMvcApiReader70.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass79);
        springMvcApiReader39.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass79);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass79);
        io.swagger.models.Swagger swagger83 = springMvcApiReader2.swagger;
        io.swagger.annotations.Api api84 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<io.swagger.models.SecurityRequirement> securityRequirementList85 = springMvcApiReader2.getSecurityRequirements(api84);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNotNull(typeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(annotationArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(parameterList25);
        org.junit.Assert.assertNotNull(responseHeaderArray26);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(typeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(typeSet36);
        org.junit.Assert.assertNotNull(annotationArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(parameterList44);
        org.junit.Assert.assertNotNull(annotationArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(parameterList52);
        org.junit.Assert.assertNotNull(responseHeaderArray53);
        org.junit.Assert.assertNull(strMap54);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(typeArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "/hi!" + "'", str64, "/hi!");
        org.junit.Assert.assertNotNull(annotationArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(parameterList75);
        org.junit.Assert.assertNotNull(responseHeaderArray76);
        org.junit.Assert.assertNull(strMap77);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNull(swagger83);
    }

    @Test
    public void test9522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9522");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        java.util.Set<java.lang.reflect.Type> typeSet8 = null;
        springMvcApiReader2.typesToSkip = typeSet8;
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader12 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger10, logAdapter11);
        java.util.Set<java.lang.reflect.Type> typeSet13 = springMvcApiReader12.typesToSkip;
        java.lang.String[] strArray17 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray20 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap21 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray22 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList23 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList23, securityRequirementArray22);
        io.swagger.models.Operation operation25 = null;
        springMvcApiReader12.updateOperation(strArray17, strArray20, strMap21, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList23, operation25);
        java.lang.String[] strArray33 = new java.lang.String[] { "/hi!", "", "/hi!", "hi!", "hi!", "hi!" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap34 = null;
        io.swagger.models.Swagger swagger35 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter36 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader37 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger35, logAdapter36);
        java.util.Set<java.lang.reflect.Type> typeSet38 = springMvcApiReader37.typesToSkip;
        java.lang.String[] strArray42 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray45 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap46 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray47 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList48 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList48, securityRequirementArray47);
        io.swagger.models.Operation operation50 = null;
        springMvcApiReader37.updateOperation(strArray42, strArray45, strMap46, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList48, operation50);
        io.swagger.models.Operation operation52 = null;
        springMvcApiReader2.updateOperation(strArray17, strArray33, strMap34, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList48, operation52);
        io.swagger.annotations.Api api55 = null;
        boolean boolean56 = springMvcApiReader2.canReadApi(true, api55);
        java.util.Set<java.lang.reflect.Type> typeSet57 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet58 = springMvcApiReader2.typesToSkip;
        java.util.Map<java.lang.String, java.lang.String> strMap60 = null;
        java.lang.String str61 = springMvcApiReader2.parseOperationPath("", strMap60);
        java.util.Map<java.lang.String, java.lang.String> strMap63 = null;
        java.lang.String str64 = springMvcApiReader2.parseOperationPath("/hi!", strMap63);
        io.swagger.models.Swagger swagger65 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter66 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader67 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger65, logAdapter66);
        java.lang.reflect.Type type68 = null;
        java.lang.annotation.Annotation[] annotationArray69 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList70 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList70, annotationArray69);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList72 = springMvcApiReader67.getParameters(type68, (java.util.List<java.lang.annotation.Annotation>) annotationList70);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray73 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap74 = springMvcApiReader67.parseResponseHeaders(responseHeaderArray73);
        java.lang.Object obj75 = new java.lang.Object();
        java.lang.Class<?> wildcardClass76 = obj75.getClass();
        springMvcApiReader67.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass76);
        io.swagger.models.Swagger swagger78 = springMvcApiReader67.swagger;
        java.lang.Object obj79 = new java.lang.Object();
        java.lang.Class<?> wildcardClass80 = obj79.getClass();
        java.lang.reflect.Type[] typeArray81 = new java.lang.reflect.Type[] { wildcardClass80 };
        java.util.ArrayList<java.lang.reflect.Type> typeList82 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList82, typeArray81);
        springMvcApiReader67.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList82);
        java.util.Map<java.lang.String, java.lang.String> strMap86 = null;
        java.lang.String str87 = springMvcApiReader67.parseOperationPath("/hi!", strMap86);
        java.util.Set<java.lang.reflect.Type> typeSet88 = springMvcApiReader67.typesToSkip;
        springMvcApiReader2.typesToSkip = typeSet88;
        java.util.Map<java.lang.String, java.lang.String> strMap91 = null;
        java.lang.String str92 = springMvcApiReader2.parseOperationPath("", strMap91);
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(typeSet13);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(securityRequirementArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(typeSet38);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(securityRequirementArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(typeSet57);
        org.junit.Assert.assertNull(typeSet58);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "" + "'", str61, "");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "/hi!" + "'", str64, "/hi!");
        org.junit.Assert.assertNotNull(annotationArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(parameterList72);
        org.junit.Assert.assertNotNull(responseHeaderArray73);
        org.junit.Assert.assertNull(strMap74);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNull(swagger78);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(typeArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "/hi!" + "'", str87, "/hi!");
        org.junit.Assert.assertNotNull(typeSet88);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "" + "'", str92, "");
    }

    @Test
    public void test9523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9523");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.util.Set<java.lang.reflect.Type> typeSet3 = springMvcApiReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet4 = springMvcApiReader2.getTypesToSkip();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter5 = null;
        springMvcApiReader2.LOG = logAdapter5;
        org.junit.Assert.assertNotNull(typeSet3);
        org.junit.Assert.assertNotNull(typeSet4);
    }

    @Test
    public void test9524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9524");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.util.Set<java.lang.reflect.Type> typeSet3 = springMvcApiReader2.typesToSkip;
        java.lang.String[] strArray7 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray10 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap11 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray12 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList13 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList13, securityRequirementArray12);
        io.swagger.models.Operation operation15 = null;
        springMvcApiReader2.updateOperation(strArray7, strArray10, strMap11, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList13, operation15);
        io.swagger.models.Swagger swagger17 = null;
        springMvcApiReader2.swagger = swagger17;
        springMvcApiReader2.updateExtensionChain();
        java.util.Map<java.lang.String, java.lang.String> strMap21 = null;
        java.lang.String str22 = springMvcApiReader2.parseOperationPath("hi!", strMap21);
        io.swagger.models.Operation operation23 = null;
        io.swagger.annotations.ApiOperation apiOperation24 = null;
        springMvcApiReader2.updateTagsForOperation(operation23, apiOperation24);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter26 = null;
        springMvcApiReader2.LOG = logAdapter26;
        io.swagger.models.Swagger swagger28 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter29 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader30 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger28, logAdapter29);
        java.lang.reflect.Type type31 = null;
        java.lang.annotation.Annotation[] annotationArray32 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList33 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList33, annotationArray32);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList35 = springMvcApiReader30.getParameters(type31, (java.util.List<java.lang.annotation.Annotation>) annotationList33);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray36 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap37 = springMvcApiReader30.parseResponseHeaders(responseHeaderArray36);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter38 = springMvcApiReader30.LOG;
        java.util.Set<java.lang.reflect.Type> typeSet39 = springMvcApiReader30.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet40 = springMvcApiReader30.typesToSkip;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter41 = springMvcApiReader30.LOG;
        java.util.Set<java.lang.reflect.Type> typeSet42 = springMvcApiReader30.getTypesToSkip();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter43 = springMvcApiReader30.LOG;
        java.util.Set<java.lang.reflect.Type> typeSet44 = springMvcApiReader30.getTypesToSkip();
        springMvcApiReader2.typesToSkip = typeSet44;
        org.junit.Assert.assertNotNull(typeSet3);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(securityRequirementArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "/hi!" + "'", str22, "/hi!");
        org.junit.Assert.assertNotNull(annotationArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(parameterList35);
        org.junit.Assert.assertNotNull(responseHeaderArray36);
        org.junit.Assert.assertNull(strMap37);
        org.junit.Assert.assertNull(logAdapter38);
        org.junit.Assert.assertNotNull(typeSet39);
        org.junit.Assert.assertNotNull(typeSet40);
        org.junit.Assert.assertNull(logAdapter41);
        org.junit.Assert.assertNotNull(typeSet42);
        org.junit.Assert.assertNull(logAdapter43);
        org.junit.Assert.assertNotNull(typeSet44);
    }

    @Test
    public void test9525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9525");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.util.Set<java.lang.reflect.Type> typeSet3 = springMvcApiReader2.typesToSkip;
        java.lang.String[] strArray7 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray10 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap11 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray12 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList13 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList13, securityRequirementArray12);
        io.swagger.models.Operation operation15 = null;
        springMvcApiReader2.updateOperation(strArray7, strArray10, strMap11, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList13, operation15);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter17 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger18 = null;
        springMvcApiReader2.swagger = swagger18;
        io.swagger.models.Operation operation20 = null;
        io.swagger.annotations.ApiOperation apiOperation21 = null;
        springMvcApiReader2.updateTagsForOperation(operation20, apiOperation21);
        io.swagger.annotations.Api api24 = null;
        boolean boolean25 = springMvcApiReader2.canReadApi(true, api24);
        io.swagger.models.Swagger swagger26 = springMvcApiReader2.swagger;
        java.util.Set<java.lang.reflect.Type> typeSet27 = springMvcApiReader2.getTypesToSkip();
        springMvcApiReader2.updateExtensionChain();
        org.junit.Assert.assertNotNull(typeSet3);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(securityRequirementArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(logAdapter17);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(swagger26);
        org.junit.Assert.assertNotNull(typeSet27);
    }

    @Test
    public void test9526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9526");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray8 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap9 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.reflect.Type[] typeArray12 = new java.lang.reflect.Type[] { wildcardClass11 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet13 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet13, typeArray12);
        springMvcApiReader2.typesToSkip = typeSet13;
        java.util.Set<java.lang.reflect.Type> typeSet16 = springMvcApiReader2.typesToSkip;
        java.util.Map<java.lang.String, java.lang.String> strMap18 = null;
        java.lang.String str19 = springMvcApiReader2.parseOperationPath("hi!", strMap18);
        java.util.Set<java.lang.reflect.Type> typeSet20 = springMvcApiReader2.typesToSkip;
        java.util.Map<java.lang.String, java.lang.String> strMap22 = null;
        java.lang.String str23 = springMvcApiReader2.parseOperationPath("/hi!", strMap22);
        io.swagger.models.Operation operation24 = null;
        io.swagger.annotations.ApiOperation apiOperation25 = null;
        springMvcApiReader2.updateTagsForOperation(operation24, apiOperation25);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger28 = null;
        springMvcApiReader2.swagger = swagger28;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter30 = null;
        springMvcApiReader2.LOG = logAdapter30;
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.util.Set<java.lang.reflect.Type> typeSet35 = springMvcApiReader34.typesToSkip;
        springMvcApiReader34.updateExtensionChain();
        io.swagger.models.Swagger swagger37 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter38 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader39 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger37, logAdapter38);
        java.lang.reflect.Type type40 = null;
        java.lang.annotation.Annotation[] annotationArray41 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList42 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList42, annotationArray41);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList44 = springMvcApiReader39.getParameters(type40, (java.util.List<java.lang.annotation.Annotation>) annotationList42);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray45 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap46 = springMvcApiReader39.parseResponseHeaders(responseHeaderArray45);
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        springMvcApiReader39.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass48);
        springMvcApiReader34.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass48);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter51 = null;
        springMvcApiReader34.LOG = logAdapter51;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter53 = springMvcApiReader34.LOG;
        io.swagger.models.Swagger swagger54 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter55 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader56 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger54, logAdapter55);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray57 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap58 = springMvcApiReader56.parseResponseHeaders(responseHeaderArray57);
        java.lang.reflect.Type[] typeArray59 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet60 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet60, typeArray59);
        springMvcApiReader56.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet60);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter63 = null;
        springMvcApiReader56.LOG = logAdapter63;
        io.swagger.models.Swagger swagger65 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter66 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader67 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger65, logAdapter66);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray68 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap69 = springMvcApiReader67.parseResponseHeaders(responseHeaderArray68);
        io.swagger.models.Swagger swagger70 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter71 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader72 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger70, logAdapter71);
        java.lang.reflect.Type type73 = null;
        java.lang.annotation.Annotation[] annotationArray74 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList75 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList75, annotationArray74);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList77 = springMvcApiReader72.getParameters(type73, (java.util.List<java.lang.annotation.Annotation>) annotationList75);
        boolean boolean78 = springMvcApiReader67.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList75);
        java.util.Set<java.lang.reflect.Type> typeSet79 = springMvcApiReader67.getTypesToSkip();
        springMvcApiReader56.setTypesToSkip(typeSet79);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter81 = springMvcApiReader56.LOG;
        java.lang.String[] strArray82 = null;
        java.lang.String[] strArray83 = null;
        io.swagger.models.Operation operation84 = null;
        java.lang.String[] strArray85 = springMvcApiReader56.updateOperationConsumes(strArray82, strArray83, operation84);
        java.util.Set<java.lang.reflect.Type> typeSet86 = springMvcApiReader56.getTypesToSkip();
        java.lang.Object obj87 = new java.lang.Object();
        java.lang.Class<?> wildcardClass88 = obj87.getClass();
        springMvcApiReader56.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass88);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter90 = null;
        springMvcApiReader56.LOG = logAdapter90;
        io.swagger.annotations.ResponseHeader[] responseHeaderArray92 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap93 = springMvcApiReader56.parseResponseHeaders(responseHeaderArray92);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap94 = springMvcApiReader34.parseResponseHeaders(responseHeaderArray92);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap95 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray92);
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(responseHeaderArray8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(typeArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(typeSet16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "/hi!" + "'", str19, "/hi!");
        org.junit.Assert.assertNotNull(typeSet20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "/hi!" + "'", str23, "/hi!");
        org.junit.Assert.assertNotNull(typeSet35);
        org.junit.Assert.assertNotNull(annotationArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(parameterList44);
        org.junit.Assert.assertNotNull(responseHeaderArray45);
        org.junit.Assert.assertNull(strMap46);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNull(logAdapter53);
        org.junit.Assert.assertNull(strMap58);
        org.junit.Assert.assertNotNull(typeArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNull(strMap69);
        org.junit.Assert.assertNotNull(annotationArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(parameterList77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(typeSet79);
        org.junit.Assert.assertNull(logAdapter81);
        org.junit.Assert.assertNull(strArray85);
        org.junit.Assert.assertNotNull(typeSet86);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertNotNull(responseHeaderArray92);
        org.junit.Assert.assertNull(strMap93);
        org.junit.Assert.assertNull(strMap94);
        org.junit.Assert.assertNull(strMap95);
    }

    @Test
    public void test9527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9527");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray3 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap4 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray3);
        java.lang.reflect.Type[] typeArray5 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet6 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet6, typeArray5);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet6);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        springMvcApiReader2.LOG = logAdapter9;
        io.swagger.models.Operation operation11 = null;
        io.swagger.annotations.ApiOperation apiOperation12 = null;
        springMvcApiReader2.updateTagsForOperation(operation11, apiOperation12);
        io.swagger.models.Operation operation14 = null;
        io.swagger.annotations.ApiOperation apiOperation15 = null;
        springMvcApiReader2.updateTagsForOperation(operation14, apiOperation15);
        java.util.Map<java.lang.String, java.lang.String> strMap18 = null;
        java.lang.String str19 = springMvcApiReader2.parseOperationPath("", strMap18);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter20 = springMvcApiReader2.LOG;
        io.swagger.models.Operation operation21 = null;
        io.swagger.annotations.ApiOperation apiOperation22 = null;
        springMvcApiReader2.updateTagsForOperation(operation21, apiOperation22);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger25 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter26 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader27 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger25, logAdapter26);
        java.lang.reflect.Type type28 = null;
        java.lang.annotation.Annotation[] annotationArray29 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList30 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList30, annotationArray29);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList32 = springMvcApiReader27.getParameters(type28, (java.util.List<java.lang.annotation.Annotation>) annotationList30);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray33 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap34 = springMvcApiReader27.parseResponseHeaders(responseHeaderArray33);
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        java.lang.reflect.Type[] typeArray37 = new java.lang.reflect.Type[] { wildcardClass36 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet38 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet38, typeArray37);
        springMvcApiReader27.typesToSkip = typeSet38;
        io.swagger.annotations.Api api42 = null;
        boolean boolean43 = springMvcApiReader27.canReadApi(false, api42);
        java.util.Map<java.lang.String, java.lang.String> strMap45 = null;
        java.lang.String str46 = springMvcApiReader27.parseOperationPath("/hi!", strMap45);
        java.util.Set<java.lang.reflect.Type> typeSet47 = springMvcApiReader27.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet48 = springMvcApiReader27.typesToSkip;
        io.swagger.models.Swagger swagger49 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter50 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader51 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger49, logAdapter50);
        java.lang.reflect.Type type52 = null;
        java.lang.annotation.Annotation[] annotationArray53 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList54 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList54, annotationArray53);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList56 = springMvcApiReader51.getParameters(type52, (java.util.List<java.lang.annotation.Annotation>) annotationList54);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray57 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap58 = springMvcApiReader51.parseResponseHeaders(responseHeaderArray57);
        java.lang.Object obj59 = new java.lang.Object();
        java.lang.Class<?> wildcardClass60 = obj59.getClass();
        springMvcApiReader51.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass60);
        java.util.Set<java.lang.reflect.Type> typeSet62 = springMvcApiReader51.typesToSkip;
        io.swagger.models.Swagger swagger63 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter64 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader65 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger63, logAdapter64);
        java.util.Set<java.lang.reflect.Type> typeSet66 = springMvcApiReader65.typesToSkip;
        springMvcApiReader51.typesToSkip = typeSet66;
        io.swagger.annotations.Api api69 = null;
        boolean boolean70 = springMvcApiReader51.canReadApi(false, api69);
        io.swagger.models.Swagger swagger71 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter72 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader73 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger71, logAdapter72);
        java.lang.reflect.Type type74 = null;
        java.lang.annotation.Annotation[] annotationArray75 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList76 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList76, annotationArray75);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList78 = springMvcApiReader73.getParameters(type74, (java.util.List<java.lang.annotation.Annotation>) annotationList76);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray79 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap80 = springMvcApiReader73.parseResponseHeaders(responseHeaderArray79);
        java.lang.Object obj81 = new java.lang.Object();
        java.lang.Class<?> wildcardClass82 = obj81.getClass();
        springMvcApiReader73.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass82);
        io.swagger.models.Swagger swagger84 = springMvcApiReader73.swagger;
        java.lang.Object obj85 = new java.lang.Object();
        java.lang.Class<?> wildcardClass86 = obj85.getClass();
        java.lang.reflect.Type[] typeArray87 = new java.lang.reflect.Type[] { wildcardClass86 };
        java.util.ArrayList<java.lang.reflect.Type> typeList88 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean89 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList88, typeArray87);
        springMvcApiReader73.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList88);
        springMvcApiReader51.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList88);
        springMvcApiReader27.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList88);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList88);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNotNull(typeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertNull(logAdapter20);
        org.junit.Assert.assertNotNull(annotationArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(parameterList32);
        org.junit.Assert.assertNotNull(responseHeaderArray33);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(typeArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "/hi!" + "'", str46, "/hi!");
        org.junit.Assert.assertNotNull(typeSet47);
        org.junit.Assert.assertNotNull(typeSet48);
        org.junit.Assert.assertNotNull(annotationArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(parameterList56);
        org.junit.Assert.assertNotNull(responseHeaderArray57);
        org.junit.Assert.assertNull(strMap58);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(typeSet62);
        org.junit.Assert.assertNotNull(typeSet66);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(annotationArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(parameterList78);
        org.junit.Assert.assertNotNull(responseHeaderArray79);
        org.junit.Assert.assertNull(strMap80);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNull(swagger84);
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertNotNull(typeArray87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
    }

    @Test
    public void test9528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9528");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray8 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap9 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass11);
        java.util.Set<java.lang.reflect.Type> typeSet13 = springMvcApiReader2.typesToSkip;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter14 = null;
        springMvcApiReader2.LOG = logAdapter14;
        java.util.Set<java.lang.reflect.Type> typeSet16 = null;
        springMvcApiReader2.typesToSkip = typeSet16;
        java.util.Set<java.lang.reflect.Type> typeSet18 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet19 = springMvcApiReader2.typesToSkip;
        java.util.Map<java.lang.String, java.lang.String> strMap21 = null;
        java.lang.String str22 = springMvcApiReader2.parseOperationPath("/hi!", strMap21);
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(responseHeaderArray8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(typeSet13);
        org.junit.Assert.assertNull(typeSet18);
        org.junit.Assert.assertNull(typeSet19);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "/hi!" + "'", str22, "/hi!");
    }

    @Test
    public void test9529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9529");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray3 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap4 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray3);
        io.swagger.models.Swagger swagger5 = springMvcApiReader2.swagger;
        io.swagger.models.Operation operation6 = null;
        io.swagger.annotations.ApiOperation apiOperation7 = null;
        springMvcApiReader2.updateTagsForOperation(operation6, apiOperation7);
        io.swagger.models.Swagger swagger9 = springMvcApiReader2.swagger;
        java.util.Set<java.lang.reflect.Type> typeSet10 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet11 = springMvcApiReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet12 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger13 = springMvcApiReader2.swagger;
        io.swagger.models.Operation operation14 = null;
        io.swagger.annotations.ApiOperation apiOperation15 = null;
        springMvcApiReader2.updateTagsForOperation(operation14, apiOperation15);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(swagger5);
        org.junit.Assert.assertNull(swagger9);
        org.junit.Assert.assertNotNull(typeSet10);
        org.junit.Assert.assertNotNull(typeSet11);
        org.junit.Assert.assertNotNull(typeSet12);
        org.junit.Assert.assertNull(swagger13);
    }

    @Test
    public void test9530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9530");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray8 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap9 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray8);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter10 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger11 = springMvcApiReader2.swagger;
        springMvcApiReader2.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet13 = springMvcApiReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet14 = springMvcApiReader2.typesToSkip;
        springMvcApiReader2.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet16 = springMvcApiReader2.typesToSkip;
        springMvcApiReader2.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet18 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger19 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter20 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader21 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger19, logAdapter20);
        io.swagger.models.Swagger swagger22 = springMvcApiReader21.swagger;
        io.swagger.models.Swagger swagger23 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter24 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader25 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger23, logAdapter24);
        java.util.Set<java.lang.reflect.Type> typeSet26 = springMvcApiReader25.typesToSkip;
        java.lang.String[] strArray30 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray33 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap34 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray35 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList36 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList36, securityRequirementArray35);
        io.swagger.models.Operation operation38 = null;
        springMvcApiReader25.updateOperation(strArray30, strArray33, strMap34, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList36, operation38);
        java.lang.Class<?> wildcardClass40 = strArray30.getClass();
        springMvcApiReader21.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass40);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray42 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap43 = springMvcApiReader21.parseResponseHeaders(responseHeaderArray42);
        io.swagger.models.Swagger swagger44 = springMvcApiReader21.swagger;
        java.util.Set<java.lang.reflect.Type> typeSet45 = springMvcApiReader21.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet45);
        io.swagger.models.Swagger swagger47 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter48 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader49 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger47, logAdapter48);
        java.util.Set<java.lang.reflect.Type> typeSet50 = springMvcApiReader49.typesToSkip;
        springMvcApiReader49.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet52 = springMvcApiReader49.typesToSkip;
        io.swagger.models.Swagger swagger53 = null;
        springMvcApiReader49.swagger = swagger53;
        io.swagger.models.Swagger swagger55 = springMvcApiReader49.swagger;
        java.util.Set<java.lang.reflect.Type> typeSet56 = springMvcApiReader49.getTypesToSkip();
        springMvcApiReader2.setTypesToSkip(typeSet56);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter58 = springMvcApiReader2.LOG;
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(responseHeaderArray8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(logAdapter10);
        org.junit.Assert.assertNull(swagger11);
        org.junit.Assert.assertNotNull(typeSet13);
        org.junit.Assert.assertNotNull(typeSet14);
        org.junit.Assert.assertNotNull(typeSet16);
        org.junit.Assert.assertNotNull(typeSet18);
        org.junit.Assert.assertNull(swagger22);
        org.junit.Assert.assertNotNull(typeSet26);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(securityRequirementArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNull(swagger44);
        org.junit.Assert.assertNotNull(typeSet45);
        org.junit.Assert.assertNotNull(typeSet50);
        org.junit.Assert.assertNotNull(typeSet52);
        org.junit.Assert.assertNull(swagger55);
        org.junit.Assert.assertNotNull(typeSet56);
        org.junit.Assert.assertNull(logAdapter58);
    }

    @Test
    public void test9531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9531");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        java.util.Set<java.lang.reflect.Type> typeSet8 = null;
        springMvcApiReader2.typesToSkip = typeSet8;
        springMvcApiReader2.updateExtensionChain();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = null;
        java.lang.String str13 = springMvcApiReader2.parseOperationPath("/hi!", strMap12);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter14 = null;
        springMvcApiReader2.LOG = logAdapter14;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        springMvcApiReader2.LOG = logAdapter16;
        java.util.Set<java.lang.reflect.Type> typeSet18 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet19 = null;
        springMvcApiReader2.setTypesToSkip(typeSet19);
        java.util.Set<java.lang.reflect.Type> typeSet21 = springMvcApiReader2.getTypesToSkip();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = springMvcApiReader2.LOG;
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "/hi!" + "'", str13, "/hi!");
        org.junit.Assert.assertNull(typeSet18);
        org.junit.Assert.assertNull(typeSet21);
        org.junit.Assert.assertNull(logAdapter22);
    }

    @Test
    public void test9532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9532");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.models.Swagger swagger8 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader10 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger8, logAdapter9);
        java.lang.reflect.Type type11 = null;
        java.lang.annotation.Annotation[] annotationArray12 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList13 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList13, annotationArray12);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList15 = springMvcApiReader10.getParameters(type11, (java.util.List<java.lang.annotation.Annotation>) annotationList13);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray16 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap17 = springMvcApiReader10.parseResponseHeaders(responseHeaderArray16);
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        java.lang.reflect.Type[] typeArray20 = new java.lang.reflect.Type[] { wildcardClass19 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet21 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet21, typeArray20);
        springMvcApiReader10.typesToSkip = typeSet21;
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet21);
        java.util.Map<java.lang.String, java.lang.String> strMap26 = null;
        java.lang.String str27 = springMvcApiReader2.parseOperationPath("hi!", strMap26);
        io.swagger.models.Operation operation28 = null;
        io.swagger.annotations.ApiOperation apiOperation29 = null;
        springMvcApiReader2.updateTagsForOperation(operation28, apiOperation29);
        io.swagger.models.Swagger swagger31 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter32 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader33 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger31, logAdapter32);
        java.lang.reflect.Type type34 = null;
        java.lang.annotation.Annotation[] annotationArray35 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList36 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList36, annotationArray35);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList38 = springMvcApiReader33.getParameters(type34, (java.util.List<java.lang.annotation.Annotation>) annotationList36);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray39 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap40 = springMvcApiReader33.parseResponseHeaders(responseHeaderArray39);
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        springMvcApiReader33.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass42);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass42);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter45 = null;
        springMvcApiReader2.LOG = logAdapter45;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.annotations.Api api49 = null;
        boolean boolean50 = springMvcApiReader2.canReadApi(false, api49);
        java.util.Set<java.lang.reflect.Type> typeSet51 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger52 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter53 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader54 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger52, logAdapter53);
        java.util.Set<java.lang.reflect.Type> typeSet55 = springMvcApiReader54.typesToSkip;
        springMvcApiReader54.updateExtensionChain();
        io.swagger.models.Swagger swagger57 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter58 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader59 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger57, logAdapter58);
        java.lang.reflect.Type type60 = null;
        java.lang.annotation.Annotation[] annotationArray61 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList62 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList62, annotationArray61);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList64 = springMvcApiReader59.getParameters(type60, (java.util.List<java.lang.annotation.Annotation>) annotationList62);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray65 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap66 = springMvcApiReader59.parseResponseHeaders(responseHeaderArray65);
        java.lang.Object obj67 = new java.lang.Object();
        java.lang.Class<?> wildcardClass68 = obj67.getClass();
        springMvcApiReader59.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass68);
        io.swagger.models.Swagger swagger70 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter71 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader72 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger70, logAdapter71);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray73 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap74 = springMvcApiReader72.parseResponseHeaders(responseHeaderArray73);
        io.swagger.models.Swagger swagger75 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter76 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader77 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger75, logAdapter76);
        java.lang.reflect.Type type78 = null;
        java.lang.annotation.Annotation[] annotationArray79 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList80 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList80, annotationArray79);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList82 = springMvcApiReader77.getParameters(type78, (java.util.List<java.lang.annotation.Annotation>) annotationList80);
        boolean boolean83 = springMvcApiReader72.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList80);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList84 = springMvcApiReader54.getParameters((java.lang.reflect.Type) wildcardClass68, (java.util.List<java.lang.annotation.Annotation>) annotationList80);
        springMvcApiReader54.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet86 = null;
        springMvcApiReader54.typesToSkip = typeSet86;
        java.util.Map<java.lang.String, java.lang.String> strMap89 = null;
        java.lang.String str90 = springMvcApiReader54.parseOperationPath("/hi!", strMap89);
        java.util.Map<java.lang.String, java.lang.String> strMap92 = null;
        java.lang.String str93 = springMvcApiReader54.parseOperationPath("hi!", strMap92);
        java.lang.Class<?> wildcardClass94 = springMvcApiReader54.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass94);
        io.swagger.annotations.Api api96 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.lang.String> strSet97 = springMvcApiReader2.extractTags(api96);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(annotationArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(parameterList15);
        org.junit.Assert.assertNotNull(responseHeaderArray16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(typeArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "/hi!" + "'", str27, "/hi!");
        org.junit.Assert.assertNotNull(annotationArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(parameterList38);
        org.junit.Assert.assertNotNull(responseHeaderArray39);
        org.junit.Assert.assertNull(strMap40);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(typeSet51);
        org.junit.Assert.assertNotNull(typeSet55);
        org.junit.Assert.assertNotNull(annotationArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(parameterList64);
        org.junit.Assert.assertNotNull(responseHeaderArray65);
        org.junit.Assert.assertNull(strMap66);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNull(strMap74);
        org.junit.Assert.assertNotNull(annotationArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(parameterList82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(parameterList84);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "/hi!" + "'", str90, "/hi!");
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "/hi!" + "'", str93, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test9533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9533");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray8 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap9 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray8);
        io.swagger.models.Swagger swagger10 = null;
        springMvcApiReader2.swagger = swagger10;
        io.swagger.models.Operation operation12 = null;
        io.swagger.annotations.ApiResponses apiResponses13 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateApiResponse(operation12, apiResponses13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(responseHeaderArray8);
        org.junit.Assert.assertNull(strMap9);
    }

    @Test
    public void test9534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9534");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        java.util.Set<java.lang.reflect.Type> typeSet8 = null;
        springMvcApiReader2.typesToSkip = typeSet8;
        java.util.Map<java.lang.String, java.lang.String> strMap11 = null;
        java.lang.String str12 = springMvcApiReader2.parseOperationPath("/hi!", strMap11);
        io.swagger.models.Swagger swagger13 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter14 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader15 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger13, logAdapter14);
        java.lang.reflect.Type type16 = null;
        java.lang.annotation.Annotation[] annotationArray17 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList18 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList18, annotationArray17);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList20 = springMvcApiReader15.getParameters(type16, (java.util.List<java.lang.annotation.Annotation>) annotationList18);
        io.swagger.models.Swagger swagger21 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader23 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger21, logAdapter22);
        java.lang.reflect.Type type24 = null;
        java.lang.annotation.Annotation[] annotationArray25 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList26 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList26, annotationArray25);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList28 = springMvcApiReader23.getParameters(type24, (java.util.List<java.lang.annotation.Annotation>) annotationList26);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray29 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap30 = springMvcApiReader23.parseResponseHeaders(responseHeaderArray29);
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        java.lang.reflect.Type[] typeArray33 = new java.lang.reflect.Type[] { wildcardClass32 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet34 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet34, typeArray33);
        springMvcApiReader23.typesToSkip = typeSet34;
        springMvcApiReader15.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet34);
        java.util.Map<java.lang.String, java.lang.String> strMap39 = null;
        java.lang.String str40 = springMvcApiReader15.parseOperationPath("hi!", strMap39);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray41 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap42 = springMvcApiReader15.parseResponseHeaders(responseHeaderArray41);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap43 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray41);
        io.swagger.models.Swagger swagger44 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter45 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader46 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger44, logAdapter45);
        java.util.Set<java.lang.reflect.Type> typeSet47 = springMvcApiReader46.typesToSkip;
        java.lang.String[] strArray51 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray54 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap55 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray56 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList57 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList57, securityRequirementArray56);
        io.swagger.models.Operation operation59 = null;
        springMvcApiReader46.updateOperation(strArray51, strArray54, strMap55, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList57, operation59);
        io.swagger.models.Swagger swagger61 = null;
        springMvcApiReader46.swagger = swagger61;
        io.swagger.models.Swagger swagger63 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter64 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader65 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger63, logAdapter64);
        java.util.Set<java.lang.reflect.Type> typeSet66 = springMvcApiReader65.typesToSkip;
        springMvcApiReader65.updateExtensionChain();
        io.swagger.models.Swagger swagger68 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter69 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader70 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger68, logAdapter69);
        java.lang.reflect.Type type71 = null;
        java.lang.annotation.Annotation[] annotationArray72 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList73 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList73, annotationArray72);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList75 = springMvcApiReader70.getParameters(type71, (java.util.List<java.lang.annotation.Annotation>) annotationList73);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray76 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap77 = springMvcApiReader70.parseResponseHeaders(responseHeaderArray76);
        java.lang.Object obj78 = new java.lang.Object();
        java.lang.Class<?> wildcardClass79 = obj78.getClass();
        springMvcApiReader70.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass79);
        springMvcApiReader65.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass79);
        io.swagger.models.Swagger swagger82 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter83 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader84 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger82, logAdapter83);
        java.lang.reflect.Type type85 = null;
        java.lang.annotation.Annotation[] annotationArray86 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList87 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList87, annotationArray86);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList89 = springMvcApiReader84.getParameters(type85, (java.util.List<java.lang.annotation.Annotation>) annotationList87);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList90 = springMvcApiReader46.getParameters((java.lang.reflect.Type) wildcardClass79, (java.util.List<java.lang.annotation.Annotation>) annotationList87);
        boolean boolean91 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList87);
        io.swagger.models.Swagger swagger92 = springMvcApiReader2.swagger;
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "/hi!" + "'", str12, "/hi!");
        org.junit.Assert.assertNotNull(annotationArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(parameterList20);
        org.junit.Assert.assertNotNull(annotationArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(parameterList28);
        org.junit.Assert.assertNotNull(responseHeaderArray29);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(typeArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "/hi!" + "'", str40, "/hi!");
        org.junit.Assert.assertNotNull(responseHeaderArray41);
        org.junit.Assert.assertNull(strMap42);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNotNull(typeSet47);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(securityRequirementArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(typeSet66);
        org.junit.Assert.assertNotNull(annotationArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(parameterList75);
        org.junit.Assert.assertNotNull(responseHeaderArray76);
        org.junit.Assert.assertNull(strMap77);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(annotationArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(parameterList89);
        org.junit.Assert.assertNotNull(parameterList90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNull(swagger92);
    }

    @Test
    public void test9535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9535");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        java.util.Set<java.lang.reflect.Type> typeSet8 = null;
        springMvcApiReader2.typesToSkip = typeSet8;
        springMvcApiReader2.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet11 = springMvcApiReader2.typesToSkip;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter12 = null;
        springMvcApiReader2.LOG = logAdapter12;
        io.swagger.models.Swagger swagger14 = springMvcApiReader2.swagger;
        java.util.Set<java.lang.reflect.Type> typeSet15 = springMvcApiReader2.typesToSkip;
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNull(typeSet11);
        org.junit.Assert.assertNull(swagger14);
        org.junit.Assert.assertNull(typeSet15);
    }

    @Test
    public void test9536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9536");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        java.util.Set<java.lang.reflect.Type> typeSet8 = null;
        springMvcApiReader2.typesToSkip = typeSet8;
        springMvcApiReader2.updateExtensionChain();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = null;
        java.lang.String str13 = springMvcApiReader2.parseOperationPath("/hi!", strMap12);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter14 = null;
        springMvcApiReader2.LOG = logAdapter14;
        io.swagger.models.Swagger swagger16 = springMvcApiReader2.swagger;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter17 = springMvcApiReader2.LOG;
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "/hi!" + "'", str13, "/hi!");
        org.junit.Assert.assertNull(swagger16);
        org.junit.Assert.assertNull(logAdapter17);
    }

    @Test
    public void test9537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9537");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.util.Set<java.lang.reflect.Type> typeSet3 = springMvcApiReader2.typesToSkip;
        java.lang.String[] strArray7 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray10 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap11 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray12 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList13 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList13, securityRequirementArray12);
        io.swagger.models.Operation operation15 = null;
        springMvcApiReader2.updateOperation(strArray7, strArray10, strMap11, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList13, operation15);
        io.swagger.models.Swagger swagger17 = null;
        springMvcApiReader2.swagger = swagger17;
        io.swagger.models.Swagger swagger19 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter20 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader21 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger19, logAdapter20);
        java.lang.reflect.Type type22 = null;
        java.lang.annotation.Annotation[] annotationArray23 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList24 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList24, annotationArray23);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList26 = springMvcApiReader21.getParameters(type22, (java.util.List<java.lang.annotation.Annotation>) annotationList24);
        java.util.Set<java.lang.reflect.Type> typeSet27 = null;
        springMvcApiReader21.typesToSkip = typeSet27;
        java.util.Map<java.lang.String, java.lang.String> strMap30 = null;
        java.lang.String str31 = springMvcApiReader21.parseOperationPath("/hi!", strMap30);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.reflect.Type type35 = null;
        java.lang.annotation.Annotation[] annotationArray36 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList37 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList37, annotationArray36);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList39 = springMvcApiReader34.getParameters(type35, (java.util.List<java.lang.annotation.Annotation>) annotationList37);
        io.swagger.models.Swagger swagger40 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter41 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader42 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger40, logAdapter41);
        java.lang.reflect.Type type43 = null;
        java.lang.annotation.Annotation[] annotationArray44 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList45 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList45, annotationArray44);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList47 = springMvcApiReader42.getParameters(type43, (java.util.List<java.lang.annotation.Annotation>) annotationList45);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray48 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap49 = springMvcApiReader42.parseResponseHeaders(responseHeaderArray48);
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        java.lang.reflect.Type[] typeArray52 = new java.lang.reflect.Type[] { wildcardClass51 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet53 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet53, typeArray52);
        springMvcApiReader42.typesToSkip = typeSet53;
        springMvcApiReader34.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet53);
        java.util.Map<java.lang.String, java.lang.String> strMap58 = null;
        java.lang.String str59 = springMvcApiReader34.parseOperationPath("hi!", strMap58);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray60 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap61 = springMvcApiReader34.parseResponseHeaders(responseHeaderArray60);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap62 = springMvcApiReader21.parseResponseHeaders(responseHeaderArray60);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap63 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray60);
        io.swagger.models.Swagger swagger64 = null;
        springMvcApiReader2.swagger = swagger64;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter66 = null;
        springMvcApiReader2.LOG = logAdapter66;
        org.junit.Assert.assertNotNull(typeSet3);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(securityRequirementArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(annotationArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(parameterList26);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "/hi!" + "'", str31, "/hi!");
        org.junit.Assert.assertNotNull(annotationArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(parameterList39);
        org.junit.Assert.assertNotNull(annotationArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(parameterList47);
        org.junit.Assert.assertNotNull(responseHeaderArray48);
        org.junit.Assert.assertNull(strMap49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(typeArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "/hi!" + "'", str59, "/hi!");
        org.junit.Assert.assertNotNull(responseHeaderArray60);
        org.junit.Assert.assertNull(strMap61);
        org.junit.Assert.assertNull(strMap62);
        org.junit.Assert.assertNull(strMap63);
    }

    @Test
    public void test9538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9538");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.util.Set<java.lang.reflect.Type> typeSet3 = springMvcApiReader2.typesToSkip;
        java.lang.String[] strArray7 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray10 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap11 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray12 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList13 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList13, securityRequirementArray12);
        io.swagger.models.Operation operation15 = null;
        springMvcApiReader2.updateOperation(strArray7, strArray10, strMap11, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList13, operation15);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter17 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger18 = null;
        springMvcApiReader2.swagger = swagger18;
        io.swagger.models.Operation operation20 = null;
        io.swagger.annotations.ApiOperation apiOperation21 = null;
        springMvcApiReader2.updateTagsForOperation(operation20, apiOperation21);
        io.swagger.annotations.Api api24 = null;
        boolean boolean25 = springMvcApiReader2.canReadApi(true, api24);
        io.swagger.models.Swagger swagger26 = springMvcApiReader2.swagger;
        java.util.Set<java.lang.reflect.Type> typeSet27 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger28 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter29 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader30 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger28, logAdapter29);
        java.util.Set<java.lang.reflect.Type> typeSet31 = springMvcApiReader30.typesToSkip;
        springMvcApiReader30.updateExtensionChain();
        io.swagger.models.Swagger swagger33 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter34 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader35 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger33, logAdapter34);
        java.lang.reflect.Type type36 = null;
        java.lang.annotation.Annotation[] annotationArray37 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList38 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList38, annotationArray37);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList40 = springMvcApiReader35.getParameters(type36, (java.util.List<java.lang.annotation.Annotation>) annotationList38);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray41 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap42 = springMvcApiReader35.parseResponseHeaders(responseHeaderArray41);
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        springMvcApiReader35.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass44);
        springMvcApiReader30.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass44);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter47 = null;
        springMvcApiReader30.LOG = logAdapter47;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter49 = springMvcApiReader30.LOG;
        io.swagger.models.Swagger swagger50 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter51 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader52 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger50, logAdapter51);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray53 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap54 = springMvcApiReader52.parseResponseHeaders(responseHeaderArray53);
        java.lang.reflect.Type[] typeArray55 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet56 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet56, typeArray55);
        springMvcApiReader52.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet56);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter59 = null;
        springMvcApiReader52.LOG = logAdapter59;
        io.swagger.models.Swagger swagger61 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter62 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader63 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger61, logAdapter62);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray64 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap65 = springMvcApiReader63.parseResponseHeaders(responseHeaderArray64);
        io.swagger.models.Swagger swagger66 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter67 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader68 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger66, logAdapter67);
        java.lang.reflect.Type type69 = null;
        java.lang.annotation.Annotation[] annotationArray70 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList71 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList71, annotationArray70);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList73 = springMvcApiReader68.getParameters(type69, (java.util.List<java.lang.annotation.Annotation>) annotationList71);
        boolean boolean74 = springMvcApiReader63.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList71);
        java.util.Set<java.lang.reflect.Type> typeSet75 = springMvcApiReader63.getTypesToSkip();
        springMvcApiReader52.setTypesToSkip(typeSet75);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter77 = springMvcApiReader52.LOG;
        java.lang.String[] strArray78 = null;
        java.lang.String[] strArray79 = null;
        io.swagger.models.Operation operation80 = null;
        java.lang.String[] strArray81 = springMvcApiReader52.updateOperationConsumes(strArray78, strArray79, operation80);
        java.util.Set<java.lang.reflect.Type> typeSet82 = springMvcApiReader52.getTypesToSkip();
        java.lang.Object obj83 = new java.lang.Object();
        java.lang.Class<?> wildcardClass84 = obj83.getClass();
        springMvcApiReader52.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass84);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter86 = null;
        springMvcApiReader52.LOG = logAdapter86;
        io.swagger.annotations.ResponseHeader[] responseHeaderArray88 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap89 = springMvcApiReader52.parseResponseHeaders(responseHeaderArray88);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap90 = springMvcApiReader30.parseResponseHeaders(responseHeaderArray88);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap91 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray88);
        java.lang.reflect.Method method92 = null;
        io.swagger.models.Operation operation93 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.readImplicitParameters(method92, operation93);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeSet3);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(securityRequirementArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(logAdapter17);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(swagger26);
        org.junit.Assert.assertNotNull(typeSet27);
        org.junit.Assert.assertNotNull(typeSet31);
        org.junit.Assert.assertNotNull(annotationArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(parameterList40);
        org.junit.Assert.assertNotNull(responseHeaderArray41);
        org.junit.Assert.assertNull(strMap42);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNull(logAdapter49);
        org.junit.Assert.assertNull(strMap54);
        org.junit.Assert.assertNotNull(typeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNull(strMap65);
        org.junit.Assert.assertNotNull(annotationArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(parameterList73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(typeSet75);
        org.junit.Assert.assertNull(logAdapter77);
        org.junit.Assert.assertNull(strArray81);
        org.junit.Assert.assertNotNull(typeSet82);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertNotNull(responseHeaderArray88);
        org.junit.Assert.assertNull(strMap89);
        org.junit.Assert.assertNull(strMap90);
        org.junit.Assert.assertNull(strMap91);
    }

    @Test
    public void test9539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9539");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.util.Set<java.lang.reflect.Type> typeSet3 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger4 = null;
        springMvcApiReader2.swagger = swagger4;
        io.swagger.models.Swagger swagger6 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader8 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger6, logAdapter7);
        java.lang.reflect.Type type9 = null;
        java.lang.annotation.Annotation[] annotationArray10 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList11 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList11, annotationArray10);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList13 = springMvcApiReader8.getParameters(type9, (java.util.List<java.lang.annotation.Annotation>) annotationList11);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray14 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap15 = springMvcApiReader8.parseResponseHeaders(responseHeaderArray14);
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        springMvcApiReader8.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass17);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass17);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Operation operation21 = null;
        io.swagger.annotations.ApiOperation apiOperation22 = null;
        springMvcApiReader2.updateTagsForOperation(operation21, apiOperation22);
        io.swagger.models.Swagger swagger24 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter25 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader26 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger24, logAdapter25);
        java.util.Set<java.lang.reflect.Type> typeSet27 = springMvcApiReader26.typesToSkip;
        springMvcApiReader26.updateExtensionChain();
        springMvcApiReader26.updateExtensionChain();
        io.swagger.annotations.Api api31 = null;
        boolean boolean32 = springMvcApiReader26.canReadApi(true, api31);
        io.swagger.models.Operation operation33 = null;
        io.swagger.annotations.ApiOperation apiOperation34 = null;
        springMvcApiReader26.updateTagsForOperation(operation33, apiOperation34);
        io.swagger.models.Swagger swagger36 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter37 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader38 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger36, logAdapter37);
        java.lang.reflect.Type type39 = null;
        java.lang.annotation.Annotation[] annotationArray40 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList41 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList41, annotationArray40);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList43 = springMvcApiReader38.getParameters(type39, (java.util.List<java.lang.annotation.Annotation>) annotationList41);
        io.swagger.models.Swagger swagger44 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter45 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader46 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger44, logAdapter45);
        java.lang.reflect.Type type47 = null;
        java.lang.annotation.Annotation[] annotationArray48 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList49 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList49, annotationArray48);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList51 = springMvcApiReader46.getParameters(type47, (java.util.List<java.lang.annotation.Annotation>) annotationList49);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray52 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap53 = springMvcApiReader46.parseResponseHeaders(responseHeaderArray52);
        java.lang.Object obj54 = new java.lang.Object();
        java.lang.Class<?> wildcardClass55 = obj54.getClass();
        java.lang.reflect.Type[] typeArray56 = new java.lang.reflect.Type[] { wildcardClass55 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet57 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet57, typeArray56);
        springMvcApiReader46.typesToSkip = typeSet57;
        springMvcApiReader38.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet57);
        java.util.Map<java.lang.String, java.lang.String> strMap62 = null;
        java.lang.String str63 = springMvcApiReader38.parseOperationPath("hi!", strMap62);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray64 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap65 = springMvcApiReader38.parseResponseHeaders(responseHeaderArray64);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap66 = springMvcApiReader26.parseResponseHeaders(responseHeaderArray64);
        io.swagger.annotations.Api api68 = null;
        boolean boolean69 = springMvcApiReader26.canReadApi(false, api68);
        io.swagger.models.Swagger swagger70 = null;
        springMvcApiReader26.swagger = swagger70;
        java.util.Set<java.lang.reflect.Type> typeSet72 = springMvcApiReader26.typesToSkip;
        springMvcApiReader2.typesToSkip = typeSet72;
        io.swagger.models.Operation operation74 = null;
        io.swagger.annotations.ApiResponses apiResponses75 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateApiResponse(operation74, apiResponses75);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeSet3);
        org.junit.Assert.assertNotNull(annotationArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(parameterList13);
        org.junit.Assert.assertNotNull(responseHeaderArray14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(typeSet27);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(annotationArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(parameterList43);
        org.junit.Assert.assertNotNull(annotationArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(parameterList51);
        org.junit.Assert.assertNotNull(responseHeaderArray52);
        org.junit.Assert.assertNull(strMap53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(typeArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "/hi!" + "'", str63, "/hi!");
        org.junit.Assert.assertNotNull(responseHeaderArray64);
        org.junit.Assert.assertNull(strMap65);
        org.junit.Assert.assertNull(strMap66);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(typeSet72);
    }

    @Test
    public void test9540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9540");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.models.Swagger swagger3 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger4 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter5 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader6 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger4, logAdapter5);
        java.util.Set<java.lang.reflect.Type> typeSet7 = springMvcApiReader6.typesToSkip;
        java.lang.String[] strArray11 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray14 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap15 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray16 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList17 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList17, securityRequirementArray16);
        io.swagger.models.Operation operation19 = null;
        springMvcApiReader6.updateOperation(strArray11, strArray14, strMap15, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList17, operation19);
        java.lang.Class<?> wildcardClass21 = strArray11.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass21);
        io.swagger.models.Swagger swagger23 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter24 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader25 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger23, logAdapter24);
        java.lang.reflect.Type type26 = null;
        java.lang.annotation.Annotation[] annotationArray27 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList28 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList28, annotationArray27);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList30 = springMvcApiReader25.getParameters(type26, (java.util.List<java.lang.annotation.Annotation>) annotationList28);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray31 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap32 = springMvcApiReader25.parseResponseHeaders(responseHeaderArray31);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap33 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray31);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter34 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger35 = springMvcApiReader2.swagger;
        java.util.Map<java.lang.String, java.lang.String> strMap37 = null;
        java.lang.String str38 = springMvcApiReader2.parseOperationPath("hi!", strMap37);
        io.swagger.annotations.Api api40 = null;
        boolean boolean41 = springMvcApiReader2.canReadApi(true, api40);
        java.util.Set<java.lang.reflect.Type> typeSet42 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger43 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter44 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader45 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger43, logAdapter44);
        java.lang.reflect.Type type46 = null;
        java.lang.annotation.Annotation[] annotationArray47 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList48 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList48, annotationArray47);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList50 = springMvcApiReader45.getParameters(type46, (java.util.List<java.lang.annotation.Annotation>) annotationList48);
        java.util.Set<java.lang.reflect.Type> typeSet51 = null;
        springMvcApiReader45.typesToSkip = typeSet51;
        java.util.Map<java.lang.String, java.lang.String> strMap54 = null;
        java.lang.String str55 = springMvcApiReader45.parseOperationPath("/hi!", strMap54);
        java.util.Set<java.lang.reflect.Type> typeSet56 = springMvcApiReader45.typesToSkip;
        io.swagger.models.Swagger swagger57 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter58 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader59 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger57, logAdapter58);
        java.lang.reflect.Type type60 = null;
        java.lang.annotation.Annotation[] annotationArray61 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList62 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList62, annotationArray61);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList64 = springMvcApiReader59.getParameters(type60, (java.util.List<java.lang.annotation.Annotation>) annotationList62);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray65 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap66 = springMvcApiReader59.parseResponseHeaders(responseHeaderArray65);
        java.lang.Object obj67 = new java.lang.Object();
        java.lang.Class<?> wildcardClass68 = obj67.getClass();
        springMvcApiReader59.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass68);
        java.lang.annotation.Annotation[] annotationArray70 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList71 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList71, annotationArray70);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList73 = springMvcApiReader45.getParameters((java.lang.reflect.Type) wildcardClass68, (java.util.List<java.lang.annotation.Annotation>) annotationList71);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter74 = null;
        springMvcApiReader45.LOG = logAdapter74;
        io.swagger.models.Operation operation76 = null;
        io.swagger.annotations.ApiOperation apiOperation77 = null;
        springMvcApiReader45.updateTagsForOperation(operation76, apiOperation77);
        io.swagger.annotations.Api api80 = null;
        boolean boolean81 = springMvcApiReader45.canReadApi(true, api80);
        io.swagger.models.Swagger swagger82 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter83 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader84 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger82, logAdapter83);
        java.lang.reflect.Type type85 = null;
        java.lang.annotation.Annotation[] annotationArray86 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList87 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList87, annotationArray86);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList89 = springMvcApiReader84.getParameters(type85, (java.util.List<java.lang.annotation.Annotation>) annotationList87);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray90 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap91 = springMvcApiReader84.parseResponseHeaders(responseHeaderArray90);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter92 = springMvcApiReader84.LOG;
        io.swagger.models.Swagger swagger93 = springMvcApiReader84.swagger;
        java.util.Set<java.lang.reflect.Type> typeSet94 = springMvcApiReader84.typesToSkip;
        springMvcApiReader45.setTypesToSkip(typeSet94);
        springMvcApiReader2.setTypesToSkip(typeSet94);
        io.swagger.models.Swagger swagger97 = null;
        springMvcApiReader2.swagger = swagger97;
        org.junit.Assert.assertNull(swagger3);
        org.junit.Assert.assertNotNull(typeSet7);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(securityRequirementArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(annotationArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(parameterList30);
        org.junit.Assert.assertNotNull(responseHeaderArray31);
        org.junit.Assert.assertNull(strMap32);
        org.junit.Assert.assertNull(strMap33);
        org.junit.Assert.assertNull(logAdapter34);
        org.junit.Assert.assertNull(swagger35);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "/hi!" + "'", str38, "/hi!");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(typeSet42);
        org.junit.Assert.assertNotNull(annotationArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(parameterList50);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "/hi!" + "'", str55, "/hi!");
        org.junit.Assert.assertNull(typeSet56);
        org.junit.Assert.assertNotNull(annotationArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(parameterList64);
        org.junit.Assert.assertNotNull(responseHeaderArray65);
        org.junit.Assert.assertNull(strMap66);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(annotationArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(parameterList73);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(annotationArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(parameterList89);
        org.junit.Assert.assertNotNull(responseHeaderArray90);
        org.junit.Assert.assertNull(strMap91);
        org.junit.Assert.assertNull(logAdapter92);
        org.junit.Assert.assertNull(swagger93);
        org.junit.Assert.assertNotNull(typeSet94);
    }

    @Test
    public void test9541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9541");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.util.Set<java.lang.reflect.Type> typeSet3 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger4 = null;
        springMvcApiReader2.swagger = swagger4;
        io.swagger.models.Swagger swagger6 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader8 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger6, logAdapter7);
        java.lang.reflect.Type type9 = null;
        java.lang.annotation.Annotation[] annotationArray10 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList11 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList11, annotationArray10);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList13 = springMvcApiReader8.getParameters(type9, (java.util.List<java.lang.annotation.Annotation>) annotationList11);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray14 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap15 = springMvcApiReader8.parseResponseHeaders(responseHeaderArray14);
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        springMvcApiReader8.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass17);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass17);
        java.util.Map<java.lang.String, java.lang.String> strMap21 = null;
        java.lang.String str22 = springMvcApiReader2.parseOperationPath("", strMap21);
        java.lang.String[] strArray23 = null;
        io.swagger.models.Swagger swagger24 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter25 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader26 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger24, logAdapter25);
        java.lang.reflect.Type type27 = null;
        java.lang.annotation.Annotation[] annotationArray28 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList29 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList29, annotationArray28);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList31 = springMvcApiReader26.getParameters(type27, (java.util.List<java.lang.annotation.Annotation>) annotationList29);
        java.util.Set<java.lang.reflect.Type> typeSet32 = null;
        springMvcApiReader26.typesToSkip = typeSet32;
        io.swagger.models.Swagger swagger34 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter35 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader36 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger34, logAdapter35);
        java.util.Set<java.lang.reflect.Type> typeSet37 = springMvcApiReader36.typesToSkip;
        java.lang.String[] strArray41 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray44 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap45 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray46 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList47 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList47, securityRequirementArray46);
        io.swagger.models.Operation operation49 = null;
        springMvcApiReader36.updateOperation(strArray41, strArray44, strMap45, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList47, operation49);
        java.lang.String[] strArray57 = new java.lang.String[] { "/hi!", "", "/hi!", "hi!", "hi!", "hi!" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap58 = null;
        io.swagger.models.Swagger swagger59 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter60 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader61 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger59, logAdapter60);
        java.util.Set<java.lang.reflect.Type> typeSet62 = springMvcApiReader61.typesToSkip;
        java.lang.String[] strArray66 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray69 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap70 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray71 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList72 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList72, securityRequirementArray71);
        io.swagger.models.Operation operation74 = null;
        springMvcApiReader61.updateOperation(strArray66, strArray69, strMap70, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList72, operation74);
        io.swagger.models.Operation operation76 = null;
        springMvcApiReader26.updateOperation(strArray41, strArray57, strMap58, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList72, operation76);
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap78 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray79 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList80 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList80, securityRequirementArray79);
        io.swagger.models.Operation operation82 = null;
        springMvcApiReader2.updateOperation(strArray23, strArray57, strMap78, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList80, operation82);
        java.lang.Class<?> wildcardClass84 = securityRequirementList80.getClass();
        org.junit.Assert.assertNotNull(typeSet3);
        org.junit.Assert.assertNotNull(annotationArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(parameterList13);
        org.junit.Assert.assertNotNull(responseHeaderArray14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(annotationArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(parameterList31);
        org.junit.Assert.assertNotNull(typeSet37);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(securityRequirementArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertNotNull(typeSet62);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertNotNull(securityRequirementArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(securityRequirementArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test9542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9542");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray3 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap4 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray3);
        io.swagger.models.Swagger swagger5 = null;
        springMvcApiReader2.swagger = swagger5;
        io.swagger.annotations.Api api8 = null;
        boolean boolean9 = springMvcApiReader2.canReadApi(true, api8);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter10 = null;
        springMvcApiReader2.LOG = logAdapter10;
        io.swagger.models.Swagger swagger12 = null;
        springMvcApiReader2.swagger = swagger12;
        java.util.Set<java.lang.reflect.Type> typeSet14 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.util.Set<java.lang.reflect.Type> typeSet18 = springMvcApiReader17.typesToSkip;
        springMvcApiReader17.updateExtensionChain();
        io.swagger.models.Swagger swagger20 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter21 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader22 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger20, logAdapter21);
        java.lang.reflect.Type type23 = null;
        java.lang.annotation.Annotation[] annotationArray24 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList25 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList25, annotationArray24);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList27 = springMvcApiReader22.getParameters(type23, (java.util.List<java.lang.annotation.Annotation>) annotationList25);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray28 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap29 = springMvcApiReader22.parseResponseHeaders(responseHeaderArray28);
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        springMvcApiReader22.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass31);
        springMvcApiReader17.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass31);
        java.lang.Class<?> wildcardClass34 = springMvcApiReader17.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass34);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(typeSet14);
        org.junit.Assert.assertNotNull(typeSet18);
        org.junit.Assert.assertNotNull(annotationArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(parameterList27);
        org.junit.Assert.assertNotNull(responseHeaderArray28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test9543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9543");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray3 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap4 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray3);
        java.lang.reflect.Type[] typeArray5 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet6 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet6, typeArray5);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet6);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        springMvcApiReader2.LOG = logAdapter9;
        io.swagger.models.Swagger swagger11 = null;
        springMvcApiReader2.swagger = swagger11;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter13 = springMvcApiReader2.LOG;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter14 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.util.Set<java.lang.reflect.Type> typeSet18 = springMvcApiReader17.typesToSkip;
        io.swagger.models.Swagger swagger19 = null;
        springMvcApiReader17.swagger = swagger19;
        io.swagger.models.Swagger swagger21 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader23 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger21, logAdapter22);
        java.lang.reflect.Type type24 = null;
        java.lang.annotation.Annotation[] annotationArray25 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList26 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList26, annotationArray25);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList28 = springMvcApiReader23.getParameters(type24, (java.util.List<java.lang.annotation.Annotation>) annotationList26);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray29 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap30 = springMvcApiReader23.parseResponseHeaders(responseHeaderArray29);
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        springMvcApiReader23.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass32);
        springMvcApiReader17.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass32);
        java.util.Set<java.lang.reflect.Type> typeSet35 = springMvcApiReader17.getTypesToSkip();
        springMvcApiReader2.setTypesToSkip(typeSet35);
        io.swagger.models.Swagger swagger37 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter38 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader39 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger37, logAdapter38);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray40 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap41 = springMvcApiReader39.parseResponseHeaders(responseHeaderArray40);
        io.swagger.models.Swagger swagger42 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter43 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader44 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger42, logAdapter43);
        java.lang.reflect.Type type45 = null;
        java.lang.annotation.Annotation[] annotationArray46 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList47 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList47, annotationArray46);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList49 = springMvcApiReader44.getParameters(type45, (java.util.List<java.lang.annotation.Annotation>) annotationList47);
        boolean boolean50 = springMvcApiReader39.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList47);
        java.util.Set<java.lang.reflect.Type> typeSet51 = springMvcApiReader39.getTypesToSkip();
        io.swagger.models.Swagger swagger52 = null;
        springMvcApiReader39.swagger = swagger52;
        java.util.Map<java.lang.String, java.lang.String> strMap55 = null;
        java.lang.String str56 = springMvcApiReader39.parseOperationPath("hi!", strMap55);
        io.swagger.models.Swagger swagger57 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter58 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader59 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger57, logAdapter58);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray60 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap61 = springMvcApiReader59.parseResponseHeaders(responseHeaderArray60);
        io.swagger.models.Swagger swagger62 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter63 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader64 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger62, logAdapter63);
        java.lang.reflect.Type type65 = null;
        java.lang.annotation.Annotation[] annotationArray66 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList67 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList67, annotationArray66);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList69 = springMvcApiReader64.getParameters(type65, (java.util.List<java.lang.annotation.Annotation>) annotationList67);
        boolean boolean70 = springMvcApiReader59.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList67);
        java.util.Set<java.lang.reflect.Type> typeSet71 = springMvcApiReader59.getTypesToSkip();
        springMvcApiReader39.setTypesToSkip(typeSet71);
        springMvcApiReader2.setTypesToSkip(typeSet71);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter74 = null;
        springMvcApiReader2.LOG = logAdapter74;
        io.swagger.models.Operation operation76 = null;
        io.swagger.annotations.ApiOperation apiOperation77 = null;
        springMvcApiReader2.updateTagsForOperation(operation76, apiOperation77);
        com.github.kongchen.swagger.docgen.spring.SpringResource springResource79 = null;
        // The following exception was thrown during execution in test generation
        try {
            io.swagger.models.Swagger swagger80 = springMvcApiReader2.read(springResource79);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNotNull(typeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(logAdapter13);
        org.junit.Assert.assertNull(logAdapter14);
        org.junit.Assert.assertNotNull(typeSet18);
        org.junit.Assert.assertNotNull(annotationArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(parameterList28);
        org.junit.Assert.assertNotNull(responseHeaderArray29);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(typeSet35);
        org.junit.Assert.assertNull(strMap41);
        org.junit.Assert.assertNotNull(annotationArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(parameterList49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(typeSet51);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "/hi!" + "'", str56, "/hi!");
        org.junit.Assert.assertNull(strMap61);
        org.junit.Assert.assertNotNull(annotationArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(parameterList69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(typeSet71);
    }

    @Test
    public void test9544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9544");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.models.Swagger swagger3 = null;
        springMvcApiReader2.swagger = swagger3;
        java.util.Set<java.lang.reflect.Type> typeSet5 = springMvcApiReader2.typesToSkip;
        io.swagger.annotations.Api api7 = null;
        boolean boolean8 = springMvcApiReader2.canReadApi(false, api7);
        java.util.Set<java.lang.reflect.Type> typeSet9 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger10 = springMvcApiReader2.swagger;
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        io.swagger.models.Swagger swagger14 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter15 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader16 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger14, logAdapter15);
        java.lang.reflect.Type type17 = null;
        java.lang.annotation.Annotation[] annotationArray18 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList19 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList19, annotationArray18);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList21 = springMvcApiReader16.getParameters(type17, (java.util.List<java.lang.annotation.Annotation>) annotationList19);
        io.swagger.models.Swagger swagger22 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader24 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger22, logAdapter23);
        java.lang.reflect.Type type25 = null;
        java.lang.annotation.Annotation[] annotationArray26 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList27 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList27, annotationArray26);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList29 = springMvcApiReader24.getParameters(type25, (java.util.List<java.lang.annotation.Annotation>) annotationList27);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray30 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap31 = springMvcApiReader24.parseResponseHeaders(responseHeaderArray30);
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.reflect.Type[] typeArray34 = new java.lang.reflect.Type[] { wildcardClass33 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet35 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet35, typeArray34);
        springMvcApiReader24.typesToSkip = typeSet35;
        springMvcApiReader16.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet35);
        java.util.Map<java.lang.String, java.lang.String> strMap40 = null;
        java.lang.String str41 = springMvcApiReader16.parseOperationPath("hi!", strMap40);
        io.swagger.annotations.Api api43 = null;
        boolean boolean44 = springMvcApiReader16.canReadApi(false, api43);
        springMvcApiReader16.updateExtensionChain();
        java.util.Map<java.lang.String, java.lang.String> strMap47 = null;
        java.lang.String str48 = springMvcApiReader16.parseOperationPath("", strMap47);
        io.swagger.models.Swagger swagger49 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter50 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader51 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger49, logAdapter50);
        java.util.Set<java.lang.reflect.Type> typeSet52 = springMvcApiReader51.typesToSkip;
        java.lang.String[] strArray56 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray59 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap60 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray61 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList62 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList62, securityRequirementArray61);
        io.swagger.models.Operation operation64 = null;
        springMvcApiReader51.updateOperation(strArray56, strArray59, strMap60, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList62, operation64);
        io.swagger.models.Swagger swagger66 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter67 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader68 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger66, logAdapter67);
        java.util.Set<java.lang.reflect.Type> typeSet69 = springMvcApiReader68.typesToSkip;
        java.lang.String[] strArray73 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray76 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap77 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray78 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList79 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList79, securityRequirementArray78);
        io.swagger.models.Operation operation81 = null;
        springMvcApiReader68.updateOperation(strArray73, strArray76, strMap77, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList79, operation81);
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap83 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray84 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList85 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList85, securityRequirementArray84);
        io.swagger.models.Operation operation87 = null;
        springMvcApiReader16.updateOperation(strArray59, strArray73, strMap83, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList85, operation87);
        java.util.Set<java.lang.reflect.Type> typeSet89 = springMvcApiReader16.getTypesToSkip();
        springMvcApiReader2.typesToSkip = typeSet89;
        io.swagger.models.Operation operation91 = null;
        io.swagger.annotations.ApiResponses apiResponses92 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateApiResponse(operation91, apiResponses92);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeSet5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(typeSet9);
        org.junit.Assert.assertNull(swagger10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(annotationArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(parameterList21);
        org.junit.Assert.assertNotNull(annotationArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(parameterList29);
        org.junit.Assert.assertNotNull(responseHeaderArray30);
        org.junit.Assert.assertNull(strMap31);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(typeArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "/hi!" + "'", str41, "/hi!");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertNotNull(typeSet52);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertNotNull(securityRequirementArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(typeSet69);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertNotNull(securityRequirementArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(securityRequirementArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(typeSet89);
    }

    @Test
    public void test9545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9545");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray8 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap9 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass11);
        io.swagger.models.Swagger swagger13 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter14 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader15 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger13, logAdapter14);
        java.util.Set<java.lang.reflect.Type> typeSet16 = springMvcApiReader15.typesToSkip;
        java.lang.String[] strArray20 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray23 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap24 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray25 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList26 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList26, securityRequirementArray25);
        io.swagger.models.Operation operation28 = null;
        springMvcApiReader15.updateOperation(strArray20, strArray23, strMap24, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList26, operation28);
        java.lang.String[] strArray35 = new java.lang.String[] { "/hi!", "", "", "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap36 = null;
        io.swagger.models.Swagger swagger37 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter38 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader39 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger37, logAdapter38);
        java.util.Set<java.lang.reflect.Type> typeSet40 = springMvcApiReader39.typesToSkip;
        java.lang.String[] strArray44 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray47 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap48 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray49 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList50 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList50, securityRequirementArray49);
        io.swagger.models.Operation operation52 = null;
        springMvcApiReader39.updateOperation(strArray44, strArray47, strMap48, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList50, operation52);
        io.swagger.models.Operation operation54 = null;
        springMvcApiReader2.updateOperation(strArray23, strArray35, strMap36, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList50, operation54);
        io.swagger.models.Operation operation56 = null;
        io.swagger.annotations.ApiOperation apiOperation57 = null;
        springMvcApiReader2.updateTagsForOperation(operation56, apiOperation57);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter59 = null;
        springMvcApiReader2.LOG = logAdapter59;
        java.util.Set<java.lang.reflect.Type> typeSet61 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger62 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter63 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader64 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger62, logAdapter63);
        java.util.Set<java.lang.reflect.Type> typeSet65 = springMvcApiReader64.typesToSkip;
        springMvcApiReader64.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet67 = springMvcApiReader64.typesToSkip;
        io.swagger.models.Swagger swagger68 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter69 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader70 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger68, logAdapter69);
        java.util.Set<java.lang.reflect.Type> typeSet71 = springMvcApiReader70.typesToSkip;
        java.lang.String[] strArray75 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray78 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap79 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray80 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList81 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList81, securityRequirementArray80);
        io.swagger.models.Operation operation83 = null;
        springMvcApiReader70.updateOperation(strArray75, strArray78, strMap79, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList81, operation83);
        io.swagger.models.Swagger swagger85 = null;
        springMvcApiReader70.swagger = swagger85;
        java.lang.annotation.Annotation[] annotationArray87 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList88 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean89 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList88, annotationArray87);
        boolean boolean90 = springMvcApiReader70.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList88);
        boolean boolean91 = springMvcApiReader64.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList88);
        boolean boolean92 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList88);
        java.util.Set<java.lang.reflect.Type> typeSet93 = springMvcApiReader2.getTypesToSkip();
        com.github.kongchen.swagger.docgen.spring.SpringResource springResource94 = null;
        // The following exception was thrown during execution in test generation
        try {
            io.swagger.models.Swagger swagger95 = springMvcApiReader2.read(springResource94);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(responseHeaderArray8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(typeSet16);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(securityRequirementArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(typeSet40);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNotNull(securityRequirementArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(typeSet61);
        org.junit.Assert.assertNotNull(typeSet65);
        org.junit.Assert.assertNotNull(typeSet67);
        org.junit.Assert.assertNotNull(typeSet71);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertNotNull(securityRequirementArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(annotationArray87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(typeSet93);
    }

    @Test
    public void test9546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9546");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray3 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap4 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray3);
        java.lang.reflect.Type[] typeArray5 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet6 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet6, typeArray5);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet6);
        io.swagger.models.Swagger swagger9 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter10 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader11 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger9, logAdapter10);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray12 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap13 = springMvcApiReader11.parseResponseHeaders(responseHeaderArray12);
        io.swagger.models.Swagger swagger14 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter15 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader16 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger14, logAdapter15);
        java.lang.reflect.Type type17 = null;
        java.lang.annotation.Annotation[] annotationArray18 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList19 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList19, annotationArray18);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList21 = springMvcApiReader16.getParameters(type17, (java.util.List<java.lang.annotation.Annotation>) annotationList19);
        boolean boolean22 = springMvcApiReader11.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList19);
        java.util.Set<java.lang.reflect.Type> typeSet23 = springMvcApiReader11.getTypesToSkip();
        springMvcApiReader2.setTypesToSkip(typeSet23);
        io.swagger.models.Operation operation25 = null;
        io.swagger.annotations.ApiOperation apiOperation26 = null;
        springMvcApiReader2.updateTagsForOperation(operation25, apiOperation26);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter28 = null;
        springMvcApiReader2.LOG = logAdapter28;
        io.swagger.annotations.Api api31 = null;
        boolean boolean32 = springMvcApiReader2.canReadApi(true, api31);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        springMvcApiReader2.LOG = logAdapter33;
        java.util.Map<java.lang.String, java.lang.String> strMap36 = null;
        java.lang.String str37 = springMvcApiReader2.parseOperationPath("/hi!", strMap36);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNotNull(typeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNotNull(annotationArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(parameterList21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(typeSet23);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "/hi!" + "'", str37, "/hi!");
    }

    @Test
    public void test9547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9547");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray3 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap4 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray3);
        io.swagger.models.Swagger swagger5 = null;
        springMvcApiReader2.swagger = swagger5;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.annotations.Api api10 = null;
        boolean boolean11 = springMvcApiReader2.canReadApi(true, api10);
        io.swagger.models.Operation operation12 = null;
        io.swagger.annotations.ApiOperation apiOperation13 = null;
        springMvcApiReader2.updateTagsForOperation(operation12, apiOperation13);
        io.swagger.models.Swagger swagger15 = springMvcApiReader2.swagger;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = springMvcApiReader2.LOG;
        java.lang.reflect.Method method17 = null;
        io.swagger.models.Operation operation18 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.readImplicitParameters(method17, operation18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(swagger15);
        org.junit.Assert.assertNull(logAdapter16);
    }

    @Test
    public void test9548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9548");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.models.Swagger swagger8 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader10 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger8, logAdapter9);
        java.lang.reflect.Type type11 = null;
        java.lang.annotation.Annotation[] annotationArray12 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList13 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList13, annotationArray12);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList15 = springMvcApiReader10.getParameters(type11, (java.util.List<java.lang.annotation.Annotation>) annotationList13);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray16 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap17 = springMvcApiReader10.parseResponseHeaders(responseHeaderArray16);
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        java.lang.reflect.Type[] typeArray20 = new java.lang.reflect.Type[] { wildcardClass19 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet21 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet21, typeArray20);
        springMvcApiReader10.typesToSkip = typeSet21;
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet21);
        java.util.Map<java.lang.String, java.lang.String> strMap26 = null;
        java.lang.String str27 = springMvcApiReader2.parseOperationPath("hi!", strMap26);
        java.lang.annotation.Annotation[] annotationArray28 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList29 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList29, annotationArray28);
        boolean boolean31 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList29);
        java.util.Set<java.lang.reflect.Type> typeSet32 = springMvcApiReader2.getTypesToSkip();
        java.util.Map<java.lang.String, java.lang.String> strMap34 = null;
        java.lang.String str35 = springMvcApiReader2.parseOperationPath("hi!", strMap34);
        java.util.Set<java.lang.reflect.Type> typeSet36 = springMvcApiReader2.getTypesToSkip();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter37 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger38 = null;
        springMvcApiReader2.swagger = swagger38;
        io.swagger.models.Swagger swagger40 = null;
        springMvcApiReader2.swagger = swagger40;
        java.util.Set<java.lang.reflect.Type> typeSet42 = springMvcApiReader2.getTypesToSkip();
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Operation operation44 = null;
        io.swagger.annotations.ApiOperation apiOperation45 = null;
        springMvcApiReader2.updateTagsForOperation(operation44, apiOperation45);
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(annotationArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(parameterList15);
        org.junit.Assert.assertNotNull(responseHeaderArray16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(typeArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "/hi!" + "'", str27, "/hi!");
        org.junit.Assert.assertNotNull(annotationArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(typeSet32);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "/hi!" + "'", str35, "/hi!");
        org.junit.Assert.assertNotNull(typeSet36);
        org.junit.Assert.assertNull(logAdapter37);
        org.junit.Assert.assertNotNull(typeSet42);
    }

    @Test
    public void test9549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9549");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray3 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap4 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray3);
        io.swagger.models.Swagger swagger5 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter6 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader7 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger5, logAdapter6);
        java.lang.reflect.Type type8 = null;
        java.lang.annotation.Annotation[] annotationArray9 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList10 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList10, annotationArray9);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList12 = springMvcApiReader7.getParameters(type8, (java.util.List<java.lang.annotation.Annotation>) annotationList10);
        boolean boolean13 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList10);
        java.util.Set<java.lang.reflect.Type> typeSet14 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger15 = null;
        springMvcApiReader2.swagger = swagger15;
        java.util.Map<java.lang.String, java.lang.String> strMap18 = null;
        java.lang.String str19 = springMvcApiReader2.parseOperationPath("/hi!", strMap18);
        io.swagger.models.Swagger swagger20 = null;
        springMvcApiReader2.swagger = swagger20;
        java.util.Map<java.lang.String, java.lang.String> strMap23 = null;
        java.lang.String str24 = springMvcApiReader2.parseOperationPath("", strMap23);
        io.swagger.annotations.Api api26 = null;
        boolean boolean27 = springMvcApiReader2.canReadApi(false, api26);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter28 = springMvcApiReader2.LOG;
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNotNull(annotationArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(parameterList12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(typeSet14);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "/hi!" + "'", str19, "/hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(logAdapter28);
    }

    @Test
    public void test9550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9550");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.util.Set<java.lang.reflect.Type> typeSet3 = springMvcApiReader2.typesToSkip;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger5 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter6 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader7 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger5, logAdapter6);
        java.lang.reflect.Type type8 = null;
        java.lang.annotation.Annotation[] annotationArray9 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList10 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList10, annotationArray9);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList12 = springMvcApiReader7.getParameters(type8, (java.util.List<java.lang.annotation.Annotation>) annotationList10);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray13 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap14 = springMvcApiReader7.parseResponseHeaders(responseHeaderArray13);
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        springMvcApiReader7.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass16);
        io.swagger.models.Swagger swagger18 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter19 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader20 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger18, logAdapter19);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray21 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap22 = springMvcApiReader20.parseResponseHeaders(responseHeaderArray21);
        io.swagger.models.Swagger swagger23 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter24 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader25 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger23, logAdapter24);
        java.lang.reflect.Type type26 = null;
        java.lang.annotation.Annotation[] annotationArray27 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList28 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList28, annotationArray27);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList30 = springMvcApiReader25.getParameters(type26, (java.util.List<java.lang.annotation.Annotation>) annotationList28);
        boolean boolean31 = springMvcApiReader20.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList28);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList32 = springMvcApiReader2.getParameters((java.lang.reflect.Type) wildcardClass16, (java.util.List<java.lang.annotation.Annotation>) annotationList28);
        java.lang.reflect.Type type33 = null;
        java.lang.annotation.Annotation[] annotationArray34 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList35 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList35, annotationArray34);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList37 = springMvcApiReader2.getParameters(type33, (java.util.List<java.lang.annotation.Annotation>) annotationList35);
        io.swagger.models.Swagger swagger38 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger39 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter40 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader41 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger39, logAdapter40);
        java.lang.reflect.Type type42 = null;
        java.lang.annotation.Annotation[] annotationArray43 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList44 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList44, annotationArray43);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList46 = springMvcApiReader41.getParameters(type42, (java.util.List<java.lang.annotation.Annotation>) annotationList44);
        io.swagger.models.Swagger swagger47 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter48 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader49 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger47, logAdapter48);
        java.lang.reflect.Type type50 = null;
        java.lang.annotation.Annotation[] annotationArray51 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList52 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList52, annotationArray51);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList54 = springMvcApiReader49.getParameters(type50, (java.util.List<java.lang.annotation.Annotation>) annotationList52);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray55 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap56 = springMvcApiReader49.parseResponseHeaders(responseHeaderArray55);
        java.lang.Object obj57 = new java.lang.Object();
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        java.lang.reflect.Type[] typeArray59 = new java.lang.reflect.Type[] { wildcardClass58 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet60 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet60, typeArray59);
        springMvcApiReader49.typesToSkip = typeSet60;
        springMvcApiReader41.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet60);
        java.util.Map<java.lang.String, java.lang.String> strMap65 = null;
        java.lang.String str66 = springMvcApiReader41.parseOperationPath("hi!", strMap65);
        io.swagger.models.Operation operation67 = null;
        io.swagger.annotations.ApiOperation apiOperation68 = null;
        springMvcApiReader41.updateTagsForOperation(operation67, apiOperation68);
        io.swagger.models.Swagger swagger70 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter71 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader72 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger70, logAdapter71);
        java.lang.reflect.Type type73 = null;
        java.lang.annotation.Annotation[] annotationArray74 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList75 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList75, annotationArray74);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList77 = springMvcApiReader72.getParameters(type73, (java.util.List<java.lang.annotation.Annotation>) annotationList75);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray78 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap79 = springMvcApiReader72.parseResponseHeaders(responseHeaderArray78);
        java.lang.Object obj80 = new java.lang.Object();
        java.lang.Class<?> wildcardClass81 = obj80.getClass();
        springMvcApiReader72.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass81);
        springMvcApiReader41.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass81);
        java.util.Set<java.lang.reflect.Type> typeSet84 = springMvcApiReader41.getTypesToSkip();
        springMvcApiReader2.typesToSkip = typeSet84;
        java.util.Set<java.lang.reflect.Type> typeSet86 = springMvcApiReader2.typesToSkip;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter87 = null;
        springMvcApiReader2.LOG = logAdapter87;
        java.lang.Class<?> wildcardClass89 = springMvcApiReader2.getClass();
        org.junit.Assert.assertNotNull(typeSet3);
        org.junit.Assert.assertNotNull(annotationArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(parameterList12);
        org.junit.Assert.assertNotNull(responseHeaderArray13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertNotNull(annotationArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(parameterList30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(parameterList32);
        org.junit.Assert.assertNotNull(annotationArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(parameterList37);
        org.junit.Assert.assertNull(swagger38);
        org.junit.Assert.assertNotNull(annotationArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(parameterList46);
        org.junit.Assert.assertNotNull(annotationArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(parameterList54);
        org.junit.Assert.assertNotNull(responseHeaderArray55);
        org.junit.Assert.assertNull(strMap56);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(typeArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "/hi!" + "'", str66, "/hi!");
        org.junit.Assert.assertNotNull(annotationArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(parameterList77);
        org.junit.Assert.assertNotNull(responseHeaderArray78);
        org.junit.Assert.assertNull(strMap79);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertNotNull(typeSet84);
        org.junit.Assert.assertNotNull(typeSet86);
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test9551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9551");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray3 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap4 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray3);
        io.swagger.models.Swagger swagger5 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter6 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader7 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger5, logAdapter6);
        java.lang.reflect.Type type8 = null;
        java.lang.annotation.Annotation[] annotationArray9 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList10 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList10, annotationArray9);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList12 = springMvcApiReader7.getParameters(type8, (java.util.List<java.lang.annotation.Annotation>) annotationList10);
        boolean boolean13 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList10);
        java.util.Set<java.lang.reflect.Type> typeSet14 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger15 = null;
        springMvcApiReader2.swagger = swagger15;
        java.util.Map<java.lang.String, java.lang.String> strMap18 = null;
        java.lang.String str19 = springMvcApiReader2.parseOperationPath("hi!", strMap18);
        io.swagger.annotations.Api api21 = null;
        boolean boolean22 = springMvcApiReader2.canReadApi(true, api21);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = springMvcApiReader2.LOG;
        java.util.Set<java.lang.reflect.Type> typeSet24 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger25 = null;
        springMvcApiReader2.swagger = swagger25;
        java.util.Set<java.lang.reflect.Type> typeSet27 = springMvcApiReader2.typesToSkip;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter28 = null;
        springMvcApiReader2.LOG = logAdapter28;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter30 = null;
        springMvcApiReader2.LOG = logAdapter30;
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.reflect.Type type35 = null;
        java.lang.annotation.Annotation[] annotationArray36 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList37 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList37, annotationArray36);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList39 = springMvcApiReader34.getParameters(type35, (java.util.List<java.lang.annotation.Annotation>) annotationList37);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray40 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap41 = springMvcApiReader34.parseResponseHeaders(responseHeaderArray40);
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        springMvcApiReader34.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass43);
        java.util.Set<java.lang.reflect.Type> typeSet45 = springMvcApiReader34.typesToSkip;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter46 = null;
        springMvcApiReader34.LOG = logAdapter46;
        java.lang.Class<?> wildcardClass48 = springMvcApiReader34.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass48);
        java.util.Map<java.lang.String, java.lang.String> strMap51 = null;
        java.lang.String str52 = springMvcApiReader2.parseOperationPath("", strMap51);
        io.swagger.models.Swagger swagger53 = springMvcApiReader2.swagger;
        java.util.Map<java.lang.String, java.lang.String> strMap55 = null;
        java.lang.String str56 = springMvcApiReader2.parseOperationPath("hi!", strMap55);
        java.util.Map<java.lang.String, java.lang.String> strMap58 = null;
        java.lang.String str59 = springMvcApiReader2.parseOperationPath("", strMap58);
        io.swagger.annotations.Api api60 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<io.swagger.models.SecurityRequirement> securityRequirementList61 = springMvcApiReader2.getSecurityRequirements(api60);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNotNull(annotationArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(parameterList12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(typeSet14);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "/hi!" + "'", str19, "/hi!");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(logAdapter23);
        org.junit.Assert.assertNotNull(typeSet24);
        org.junit.Assert.assertNotNull(typeSet27);
        org.junit.Assert.assertNotNull(annotationArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(parameterList39);
        org.junit.Assert.assertNotNull(responseHeaderArray40);
        org.junit.Assert.assertNull(strMap41);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(typeSet45);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertNull(swagger53);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "/hi!" + "'", str56, "/hi!");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "" + "'", str59, "");
    }

    @Test
    public void test9552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9552");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.util.Set<java.lang.reflect.Type> typeSet3 = springMvcApiReader2.typesToSkip;
        java.lang.String[] strArray7 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray10 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap11 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray12 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList13 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList13, securityRequirementArray12);
        io.swagger.models.Operation operation15 = null;
        springMvcApiReader2.updateOperation(strArray7, strArray10, strMap11, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList13, operation15);
        java.util.Map<java.lang.String, java.lang.String> strMap18 = null;
        java.lang.String str19 = springMvcApiReader2.parseOperationPath("hi!", strMap18);
        io.swagger.models.Swagger swagger20 = null;
        springMvcApiReader2.swagger = swagger20;
        io.swagger.annotations.Api api23 = null;
        boolean boolean24 = springMvcApiReader2.canReadApi(true, api23);
        org.junit.Assert.assertNotNull(typeSet3);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(securityRequirementArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "/hi!" + "'", str19, "/hi!");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test9553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9553");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray3 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap4 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray3);
        io.swagger.models.Swagger swagger5 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter6 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader7 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger5, logAdapter6);
        java.lang.reflect.Type type8 = null;
        java.lang.annotation.Annotation[] annotationArray9 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList10 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList10, annotationArray9);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList12 = springMvcApiReader7.getParameters(type8, (java.util.List<java.lang.annotation.Annotation>) annotationList10);
        boolean boolean13 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList10);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger15 = null;
        springMvcApiReader2.swagger = swagger15;
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.util.Set<java.lang.reflect.Type> typeSet20 = springMvcApiReader19.typesToSkip;
        java.lang.String[] strArray24 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray27 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap28 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray29 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList30 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList30, securityRequirementArray29);
        io.swagger.models.Operation operation32 = null;
        springMvcApiReader19.updateOperation(strArray24, strArray27, strMap28, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList30, operation32);
        io.swagger.models.Swagger swagger34 = null;
        springMvcApiReader19.swagger = swagger34;
        java.util.Set<java.lang.reflect.Type> typeSet36 = springMvcApiReader19.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet36);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter38 = null;
        springMvcApiReader2.LOG = logAdapter38;
        io.swagger.annotations.Api api40 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.lang.String> strSet41 = springMvcApiReader2.extractTags(api40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNotNull(annotationArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(parameterList12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(typeSet20);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(securityRequirementArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(typeSet36);
    }

    @Test
    public void test9554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9554");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        java.util.Set<java.lang.reflect.Type> typeSet8 = null;
        springMvcApiReader2.typesToSkip = typeSet8;
        java.util.Map<java.lang.String, java.lang.String> strMap11 = null;
        java.lang.String str12 = springMvcApiReader2.parseOperationPath("/hi!", strMap11);
        io.swagger.models.Swagger swagger13 = null;
        springMvcApiReader2.swagger = swagger13;
        io.swagger.models.Operation operation15 = null;
        io.swagger.annotations.ApiResponses apiResponses16 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateApiResponse(operation15, apiResponses16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "/hi!" + "'", str12, "/hi!");
    }

    @Test
    public void test9555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9555");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.util.Set<java.lang.reflect.Type> typeSet3 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger4 = null;
        springMvcApiReader2.swagger = swagger4;
        java.util.Set<java.lang.reflect.Type> typeSet6 = springMvcApiReader2.getTypesToSkip();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = null;
        springMvcApiReader2.LOG = logAdapter7;
        springMvcApiReader2.updateExtensionChain();
        org.junit.Assert.assertNotNull(typeSet3);
        org.junit.Assert.assertNotNull(typeSet6);
    }

    @Test
    public void test9556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9556");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray8 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap9 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.reflect.Type[] typeArray12 = new java.lang.reflect.Type[] { wildcardClass11 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet13 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet13, typeArray12);
        springMvcApiReader2.typesToSkip = typeSet13;
        java.util.Set<java.lang.reflect.Type> typeSet16 = springMvcApiReader2.typesToSkip;
        java.util.Map<java.lang.String, java.lang.String> strMap18 = null;
        java.lang.String str19 = springMvcApiReader2.parseOperationPath("hi!", strMap18);
        java.util.Set<java.lang.reflect.Type> typeSet20 = springMvcApiReader2.typesToSkip;
        java.util.Map<java.lang.String, java.lang.String> strMap22 = null;
        java.lang.String str23 = springMvcApiReader2.parseOperationPath("/hi!", strMap22);
        io.swagger.models.Operation operation24 = null;
        io.swagger.annotations.ApiOperation apiOperation25 = null;
        springMvcApiReader2.updateTagsForOperation(operation24, apiOperation25);
        io.swagger.models.Swagger swagger27 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter28 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader29 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger27, logAdapter28);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray30 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap31 = springMvcApiReader29.parseResponseHeaders(responseHeaderArray30);
        java.lang.reflect.Type[] typeArray32 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet33 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet33, typeArray32);
        springMvcApiReader29.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet33);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter36 = null;
        springMvcApiReader29.LOG = logAdapter36;
        io.swagger.models.Swagger swagger38 = null;
        springMvcApiReader29.swagger = swagger38;
        java.lang.Class<?> wildcardClass40 = springMvcApiReader29.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass40);
        io.swagger.models.Swagger swagger42 = springMvcApiReader2.swagger;
        io.swagger.annotations.Api api43 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<io.swagger.models.SecurityRequirement> securityRequirementList44 = springMvcApiReader2.getSecurityRequirements(api43);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(responseHeaderArray8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(typeArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(typeSet16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "/hi!" + "'", str19, "/hi!");
        org.junit.Assert.assertNotNull(typeSet20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "/hi!" + "'", str23, "/hi!");
        org.junit.Assert.assertNull(strMap31);
        org.junit.Assert.assertNotNull(typeArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNull(swagger42);
    }

    @Test
    public void test9557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9557");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        java.util.Set<java.lang.reflect.Type> typeSet8 = null;
        springMvcApiReader2.typesToSkip = typeSet8;
        io.swagger.annotations.Api api11 = null;
        boolean boolean12 = springMvcApiReader2.canReadApi(true, api11);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter13 = null;
        springMvcApiReader2.LOG = logAdapter13;
        java.util.Set<java.lang.reflect.Type> typeSet15 = springMvcApiReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet16 = springMvcApiReader2.getTypesToSkip();
        java.util.Map<java.lang.String, java.lang.String> strMap18 = null;
        java.lang.String str19 = springMvcApiReader2.parseOperationPath("", strMap18);
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(typeSet15);
        org.junit.Assert.assertNull(typeSet16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
    }

    @Test
    public void test9558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9558");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray3 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap4 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray3);
        io.swagger.models.Swagger swagger5 = null;
        springMvcApiReader2.swagger = swagger5;
        io.swagger.annotations.Api api8 = null;
        boolean boolean9 = springMvcApiReader2.canReadApi(true, api8);
        io.swagger.models.Swagger swagger10 = null;
        springMvcApiReader2.swagger = swagger10;
        io.swagger.models.Swagger swagger12 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter13 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader14 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger12, logAdapter13);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray15 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap16 = springMvcApiReader14.parseResponseHeaders(responseHeaderArray15);
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.reflect.Type type20 = null;
        java.lang.annotation.Annotation[] annotationArray21 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList22 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList22, annotationArray21);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList24 = springMvcApiReader19.getParameters(type20, (java.util.List<java.lang.annotation.Annotation>) annotationList22);
        boolean boolean25 = springMvcApiReader14.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList22);
        java.util.Set<java.lang.reflect.Type> typeSet26 = springMvcApiReader14.getTypesToSkip();
        springMvcApiReader14.updateExtensionChain();
        io.swagger.models.Swagger swagger28 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter29 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader30 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger28, logAdapter29);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray31 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap32 = springMvcApiReader30.parseResponseHeaders(responseHeaderArray31);
        java.lang.reflect.Type[] typeArray33 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet34 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet34, typeArray33);
        springMvcApiReader30.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet34);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter37 = null;
        springMvcApiReader30.LOG = logAdapter37;
        io.swagger.models.Swagger swagger39 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter40 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader41 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger39, logAdapter40);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray42 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap43 = springMvcApiReader41.parseResponseHeaders(responseHeaderArray42);
        io.swagger.models.Swagger swagger44 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter45 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader46 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger44, logAdapter45);
        java.lang.reflect.Type type47 = null;
        java.lang.annotation.Annotation[] annotationArray48 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList49 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList49, annotationArray48);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList51 = springMvcApiReader46.getParameters(type47, (java.util.List<java.lang.annotation.Annotation>) annotationList49);
        boolean boolean52 = springMvcApiReader41.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList49);
        java.util.Set<java.lang.reflect.Type> typeSet53 = springMvcApiReader41.getTypesToSkip();
        springMvcApiReader30.setTypesToSkip(typeSet53);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter55 = springMvcApiReader30.LOG;
        java.lang.String[] strArray56 = null;
        java.lang.String[] strArray57 = null;
        io.swagger.models.Operation operation58 = null;
        java.lang.String[] strArray59 = springMvcApiReader30.updateOperationConsumes(strArray56, strArray57, operation58);
        java.util.Set<java.lang.reflect.Type> typeSet60 = springMvcApiReader30.getTypesToSkip();
        java.lang.Object obj61 = new java.lang.Object();
        java.lang.Class<?> wildcardClass62 = obj61.getClass();
        springMvcApiReader30.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass62);
        io.swagger.models.Swagger swagger64 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter65 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader66 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger64, logAdapter65);
        java.lang.reflect.Type type67 = null;
        java.lang.annotation.Annotation[] annotationArray68 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList69 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList69, annotationArray68);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList71 = springMvcApiReader66.getParameters(type67, (java.util.List<java.lang.annotation.Annotation>) annotationList69);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray72 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap73 = springMvcApiReader66.parseResponseHeaders(responseHeaderArray72);
        io.swagger.models.Swagger swagger74 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter75 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader76 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger74, logAdapter75);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray77 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap78 = springMvcApiReader76.parseResponseHeaders(responseHeaderArray77);
        io.swagger.models.Swagger swagger79 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter80 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader81 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger79, logAdapter80);
        java.lang.reflect.Type type82 = null;
        java.lang.annotation.Annotation[] annotationArray83 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList84 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList84, annotationArray83);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList86 = springMvcApiReader81.getParameters(type82, (java.util.List<java.lang.annotation.Annotation>) annotationList84);
        boolean boolean87 = springMvcApiReader76.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList84);
        boolean boolean88 = springMvcApiReader66.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList84);
        boolean boolean89 = springMvcApiReader30.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList84);
        boolean boolean90 = springMvcApiReader14.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList84);
        boolean boolean91 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList84);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertNotNull(annotationArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(parameterList24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(typeSet26);
        org.junit.Assert.assertNull(strMap32);
        org.junit.Assert.assertNotNull(typeArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNotNull(annotationArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(parameterList51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(typeSet53);
        org.junit.Assert.assertNull(logAdapter55);
        org.junit.Assert.assertNull(strArray59);
        org.junit.Assert.assertNotNull(typeSet60);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(annotationArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(parameterList71);
        org.junit.Assert.assertNotNull(responseHeaderArray72);
        org.junit.Assert.assertNull(strMap73);
        org.junit.Assert.assertNull(strMap78);
        org.junit.Assert.assertNotNull(annotationArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(parameterList86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
    }
}

